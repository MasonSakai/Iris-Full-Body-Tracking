/*! For license information please see main.js.LICENSE.txt */
(()=>{var e={264:function(e,t,n){(function(){"use strict";var e;function t(e){var t=0;return function(){return t<e.length?{done:!1,value:e[t++]}:{done:!0}}}var r="function"==typeof Object.defineProperties?Object.defineProperty:function(e,t,n){return e==Array.prototype||e==Object.prototype||(e[t]=n.value),e},s=function(e){e=["object"==typeof globalThis&&globalThis,e,"object"==typeof window&&window,"object"==typeof self&&self,"object"==typeof n.g&&n.g];for(var t=0;t<e.length;++t){var r=e[t];if(r&&r.Math==Math)return r}throw Error("Cannot find global object")}(this);function a(e,t){if(t)e:{var n=s;e=e.split(".");for(var a=0;a<e.length-1;a++){var o=e[a];if(!(o in n))break e;n=n[o]}(t=t(a=n[e=e[e.length-1]]))!=a&&null!=t&&r(n,e,{configurable:!0,writable:!0,value:t})}}function o(e){return(e={next:e})[Symbol.iterator]=function(){return this},e}function i(e){var n="undefined"!=typeof Symbol&&Symbol.iterator&&e[Symbol.iterator];return n?n.call(e):{next:t(e)}}function u(e){if(!(e instanceof Array)){e=i(e);for(var t,n=[];!(t=e.next()).done;)n.push(t.value);e=n}return e}a("Symbol",(function(e){function t(e,t){this.h=e,r(this,"description",{configurable:!0,writable:!0,value:t})}if(e)return e;t.prototype.toString=function(){return this.h};var n="jscomp_symbol_"+(1e9*Math.random()>>>0)+"_",s=0;return function e(r){if(this instanceof e)throw new TypeError("Symbol is not a constructor");return new t(n+(r||"")+"_"+s++,r)}})),a("Symbol.iterator",(function(e){if(e)return e;e=Symbol("Symbol.iterator");for(var n="Array Int8Array Uint8Array Uint8ClampedArray Int16Array Uint16Array Int32Array Uint32Array Float32Array Float64Array".split(" "),a=0;a<n.length;a++){var i=s[n[a]];"function"==typeof i&&"function"!=typeof i.prototype[e]&&r(i.prototype,e,{configurable:!0,writable:!0,value:function(){return o(t(this))}})}return e}));var l="function"==typeof Object.assign?Object.assign:function(e,t){for(var n=1;n<arguments.length;n++){var r=arguments[n];if(r)for(var s in r)Object.prototype.hasOwnProperty.call(r,s)&&(e[s]=r[s])}return e};a("Object.assign",(function(e){return e||l}));var c,h="function"==typeof Object.create?Object.create:function(e){function t(){}return t.prototype=e,new t};if("function"==typeof Object.setPrototypeOf)c=Object.setPrototypeOf;else{var d;e:{var p={};try{p.__proto__={a:!0},d=p.a;break e}catch(e){}d=!1}c=d?function(e,t){if(e.__proto__=t,e.__proto__!==t)throw new TypeError(e+" is not extensible");return e}:null}var f=c;function m(e,t){if(e.prototype=h(t.prototype),e.prototype.constructor=e,f)f(e,t);else for(var n in t)if("prototype"!=n)if(Object.defineProperties){var r=Object.getOwnPropertyDescriptor(t,n);r&&Object.defineProperty(e,n,r)}else e[n]=t[n];e.za=t.prototype}function g(){this.m=!1,this.j=null,this.i=void 0,this.h=1,this.v=this.s=0,this.l=null}function y(e){if(e.m)throw new TypeError("Generator is already running");e.m=!0}function x(e,t){e.l={ma:t,na:!0},e.h=e.s||e.v}function b(e,t,n){return e.h=n,{value:t}}function v(e){this.h=new g,this.i=e}function w(e,t,n,r){try{var s=t.call(e.h.j,n);if(!(s instanceof Object))throw new TypeError("Iterator result "+s+" is not an object");if(!s.done)return e.h.m=!1,s;var a=s.value}catch(t){return e.h.j=null,x(e.h,t),k(e)}return e.h.j=null,r.call(e.h,a),k(e)}function k(e){for(;e.h.h;)try{var t=e.i(e.h);if(t)return e.h.m=!1,{value:t.value,done:!1}}catch(t){e.h.i=void 0,x(e.h,t)}if(e.h.m=!1,e.h.l){if(t=e.h.l,e.h.l=null,t.na)throw t.ma;return{value:t.return,done:!0}}return{value:void 0,done:!0}}function S(e){this.next=function(t){return y(e.h),e.h.j?t=w(e,e.h.j.next,t,e.h.u):(e.h.u(t),t=k(e)),t},this.throw=function(t){return y(e.h),e.h.j?t=w(e,e.h.j.throw,t,e.h.u):(x(e.h,t),t=k(e)),t},this.return=function(t){return function(e,t){y(e.h);var n=e.h.j;return n?w(e,"return"in n?n.return:function(e){return{value:e,done:!0}},t,e.h.return):(e.h.return(t),k(e))}(e,t)},this[Symbol.iterator]=function(){return this}}function C(e){return function(e){function t(t){return e.next(t)}function n(t){return e.throw(t)}return new Promise((function(r,s){!function e(a){a.done?r(a.value):Promise.resolve(a.value).then(t,n).then(e,s)}(e.next())}))}(new S(new v(e)))}function I(e){return e||Array.prototype.fill}g.prototype.u=function(e){this.i=e},g.prototype.return=function(e){this.l={return:e},this.h=this.v},a("Promise",(function(e){function t(e){this.i=0,this.j=void 0,this.h=[],this.u=!1;var t=this.l();try{e(t.resolve,t.reject)}catch(e){t.reject(e)}}function n(){this.h=null}function r(e){return e instanceof t?e:new t((function(t){t(e)}))}if(e)return e;n.prototype.i=function(e){if(null==this.h){this.h=[];var t=this;this.j((function(){t.m()}))}this.h.push(e)};var a=s.setTimeout;n.prototype.j=function(e){a(e,0)},n.prototype.m=function(){for(;this.h&&this.h.length;){var e=this.h;this.h=[];for(var t=0;t<e.length;++t){var n=e[t];e[t]=null;try{n()}catch(e){this.l(e)}}}this.h=null},n.prototype.l=function(e){this.j((function(){throw e}))},t.prototype.l=function(){function e(e){return function(r){n||(n=!0,e.call(t,r))}}var t=this,n=!1;return{resolve:e(this.I),reject:e(this.m)}},t.prototype.I=function(e){if(e===this)this.m(new TypeError("A Promise cannot resolve to itself"));else if(e instanceof t)this.L(e);else{e:switch(typeof e){case"object":var n=null!=e;break e;case"function":n=!0;break e;default:n=!1}n?this.F(e):this.s(e)}},t.prototype.F=function(e){var t=void 0;try{t=e.then}catch(e){return void this.m(e)}"function"==typeof t?this.M(t,e):this.s(e)},t.prototype.m=function(e){this.v(2,e)},t.prototype.s=function(e){this.v(1,e)},t.prototype.v=function(e,t){if(0!=this.i)throw Error("Cannot settle("+e+", "+t+"): Promise already settled in state"+this.i);this.i=e,this.j=t,2===this.i&&this.K(),this.H()},t.prototype.K=function(){var e=this;a((function(){if(e.D()){var t=s.console;void 0!==t&&t.error(e.j)}}),1)},t.prototype.D=function(){if(this.u)return!1;var e=s.CustomEvent,t=s.Event,n=s.dispatchEvent;return void 0===n||("function"==typeof e?e=new e("unhandledrejection",{cancelable:!0}):"function"==typeof t?e=new t("unhandledrejection",{cancelable:!0}):(e=s.document.createEvent("CustomEvent")).initCustomEvent("unhandledrejection",!1,!0,e),e.promise=this,e.reason=this.j,n(e))},t.prototype.H=function(){if(null!=this.h){for(var e=0;e<this.h.length;++e)o.i(this.h[e]);this.h=null}};var o=new n;return t.prototype.L=function(e){var t=this.l();e.T(t.resolve,t.reject)},t.prototype.M=function(e,t){var n=this.l();try{e.call(t,n.resolve,n.reject)}catch(e){n.reject(e)}},t.prototype.then=function(e,n){function r(e,t){return"function"==typeof e?function(t){try{s(e(t))}catch(e){a(e)}}:t}var s,a,o=new t((function(e,t){s=e,a=t}));return this.T(r(e,s),r(n,a)),o},t.prototype.catch=function(e){return this.then(void 0,e)},t.prototype.T=function(e,t){function n(){switch(r.i){case 1:e(r.j);break;case 2:t(r.j);break;default:throw Error("Unexpected state: "+r.i)}}var r=this;null==this.h?o.i(n):this.h.push(n),this.u=!0},t.resolve=r,t.reject=function(e){return new t((function(t,n){n(e)}))},t.race=function(e){return new t((function(t,n){for(var s=i(e),a=s.next();!a.done;a=s.next())r(a.value).T(t,n)}))},t.all=function(e){var n=i(e),s=n.next();return s.done?r([]):new t((function(e,t){function a(t){return function(n){o[t]=n,0==--i&&e(o)}}var o=[],i=0;do{o.push(void 0),i++,r(s.value).T(a(o.length-1),t),s=n.next()}while(!s.done)}))},t})),a("Array.prototype.keys",(function(e){return e||function(){return function(e,t){e instanceof String&&(e+="");var n=0,r=!1,s={next:function(){if(!r&&n<e.length){var s=n++;return{value:t(s,e[s]),done:!1}}return r=!0,{done:!0,value:void 0}}};return s[Symbol.iterator]=function(){return s},s}(this,(function(e){return e}))}})),a("Array.prototype.fill",(function(e){return e||function(e,t,n){var r=this.length||0;for(0>t&&(t=Math.max(0,r+t)),(null==n||n>r)&&(n=r),0>(n=Number(n))&&(n=Math.max(0,r+n)),t=Number(t||0);t<n;t++)this[t]=e;return this}})),a("Int8Array.prototype.fill",I),a("Uint8Array.prototype.fill",I),a("Uint8ClampedArray.prototype.fill",I),a("Int16Array.prototype.fill",I),a("Uint16Array.prototype.fill",I),a("Int32Array.prototype.fill",I),a("Uint32Array.prototype.fill",I),a("Float32Array.prototype.fill",I),a("Float64Array.prototype.fill",I),a("Object.is",(function(e){return e||function(e,t){return e===t?0!==e||1/e==1/t:e!=e&&t!=t}})),a("Array.prototype.includes",(function(e){return e||function(e,t){var n=this;n instanceof String&&(n=String(n));var r=n.length;for(0>(t=t||0)&&(t=Math.max(t+r,0));t<r;t++){var s=n[t];if(s===e||Object.is(s,e))return!0}return!1}})),a("String.prototype.includes",(function(e){return e||function(e,t){if(null==this)throw new TypeError("The 'this' value for String.prototype.includes must not be null or undefined");if(e instanceof RegExp)throw new TypeError("First argument to String.prototype.includes must not be a regular expression");return-1!==this.indexOf(e,t||0)}}));var T=this||self;function $(e,t){e=e.split(".");var n,r=T;e[0]in r||void 0===r.execScript||r.execScript("var "+e[0]);for(;e.length&&(n=e.shift());)e.length||void 0===t?r=r[n]&&r[n]!==Object.prototype[n]?r[n]:r[n]={}:r[n]=t}function N(e){var t;return(t=T.navigator)&&(t=t.userAgent)||(t=""),-1!=t.indexOf(e)}var E=Array.prototype.map?function(e,t){return Array.prototype.map.call(e,t,void 0)}:function(e,t){for(var n=e.length,r=Array(n),s="string"==typeof e?e.split(""):e,a=0;a<n;a++)a in s&&(r[a]=t.call(void 0,s[a],a,e));return r},R={},_=null;function A(){if(!_){_={};for(var e="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789".split(""),t=["+/=","+/","-_=","-_.","-_"],n=0;5>n;n++){var r=e.concat(t[n].split(""));R[n]=r;for(var s=0;s<r.length;s++){var a=r[s];void 0===_[a]&&(_[a]=s)}}}}var O="undefined"!=typeof Uint8Array,F=!(N("Trident")||N("MSIE"))&&"function"==typeof T.btoa;function P(e){if(!F){var t;void 0===t&&(t=0),A(),t=R[t];for(var n=Array(Math.floor(e.length/3)),r=t[64]||"",s=0,a=0;s<e.length-2;s+=3){var o=e[s],i=e[s+1],u=e[s+2],l=t[o>>2];o=t[(3&o)<<4|i>>4],i=t[(15&i)<<2|u>>6],u=t[63&u],n[a++]=l+o+i+u}switch(l=0,u=r,e.length-s){case 2:u=t[(15&(l=e[s+1]))<<2]||r;case 1:e=e[s],n[a]=t[e>>2]+t[(3&e)<<4|l>>4]+u+r}return n.join("")}for(t="";10240<e.length;)t+=String.fromCharCode.apply(null,e.subarray(0,10240)),e=e.subarray(10240);return t+=String.fromCharCode.apply(null,e),btoa(t)}var D,M=RegExp("[-_.]","g");function L(e){switch(e){case"-":return"+";case"_":return"/";case".":return"=";default:return""}}function B(e){if(!F)return function(e){var t=e.length,n=3*t/4;n%3?n=Math.floor(n):-1!="=.".indexOf(e[t-1])&&(n=-1!="=.".indexOf(e[t-2])?n-2:n-1);var r=new Uint8Array(n),s=0;return function(e,t){function n(t){for(;r<e.length;){var n=e.charAt(r++),s=_[n];if(null!=s)return s;if(!/^[\s\xa0]*$/.test(n))throw Error("Unknown base64 encoding at char: "+n)}return t}A();for(var r=0;;){var s=n(-1),a=n(0),o=n(64),i=n(64);if(64===i&&-1===s)break;t(s<<2|a>>4),64!=o&&(t(a<<4&240|o>>2),64!=i&&t(o<<6&192|i))}}(e,(function(e){r[s++]=e})),s!==n?r.subarray(0,s):r}(e);M.test(e)&&(e=e.replace(M,L)),e=atob(e);for(var t=new Uint8Array(e.length),n=0;n<e.length;n++)t[n]=e.charCodeAt(n);return t}function z(){return D||(D=new Uint8Array(0))}var U={},V="function"==typeof Uint8Array.prototype.slice,W=0,G=0;function H(e){var t=0>e,n=(e=Math.abs(e))>>>0;e=Math.floor((e-n)/4294967296),t&&(t=(n=i(q(n,e))).next().value,e=n.next().value,n=t),W=n>>>0,G=e>>>0}var j,K="function"==typeof BigInt;function q(e,t){return t=~t,e?e=1+~e:t+=1,[e,t]}function X(e,t){this.i=e>>>0,this.h=t>>>0}function Y(e){if(!e)return j||(j=new X(0,0));if(!/^-?\d+$/.test(e))return null;if(16>e.length)H(Number(e));else if(K)e=BigInt(e),W=Number(e&BigInt(4294967295))>>>0,G=Number(e>>BigInt(32)&BigInt(4294967295));else{var t=+("-"===e[0]);G=W=0;for(var n=e.length,r=t,s=(n-t)%6+t;s<=n;r=s,s+=6)r=Number(e.slice(r,s)),G*=1e6,4294967296<=(W=1e6*W+r)&&(G+=W/4294967296|0,W%=4294967296);t&&(e=(t=i(q(W,G))).next().value,t=t.next().value,W=e,G=t)}return new X(W,G)}function Q(e,t){return Error("Invalid wire type: "+e+" (at position "+t+")")}function Z(){return Error("Failed to read varint, encoding is invalid.")}function J(e,t){return Error("Tried to read past the end of the data "+t+" > "+e)}function ee(){throw Error("Invalid UTF8")}function te(e,t){return t=String.fromCharCode.apply(null,t),null==e?t:e+t}var ne,re,se,ae=void 0,oe="undefined"!=typeof TextDecoder,ie="undefined"!=typeof TextEncoder;function ue(e){if(e!==U)throw Error("illegal external caller")}function le(e,t){if(ue(t),this.V=e,null!=e&&0===e.length)throw Error("ByteString should be constructed with non-empty values")}function ce(){return se||(se=new le(null,U))}function he(e){ue(U);var t=e.V;return null==(t=null==t||O&&null!=t&&t instanceof Uint8Array?t:"string"==typeof t?B(t):null)?t:e.V=t}function de(e,t){this.i=null,this.m=!1,this.h=this.j=this.l=0,pe(this,e,t)}function pe(e,t,n){n=void 0===n?{}:n,e.S=void 0!==n.S&&n.S,t&&(t=function(e){if("string"==typeof e)return{buffer:B(e),C:!1};if(Array.isArray(e))return{buffer:new Uint8Array(e),C:!1};if(e.constructor===Uint8Array)return{buffer:e,C:!1};if(e.constructor===ArrayBuffer)return{buffer:new Uint8Array(e),C:!1};if(e.constructor===le)return{buffer:he(e)||z(),C:!0};if(e instanceof Uint8Array)return{buffer:new Uint8Array(e.buffer,e.byteOffset,e.byteLength),C:!1};throw Error("Type not convertible to a Uint8Array, expected a Uint8Array, an ArrayBuffer, a base64 encoded string, a ByteString or an Array of numbers")}(t),e.i=t.buffer,e.m=t.C,e.l=0,e.j=e.i.length,e.h=e.l)}function fe(e,t){if(e.h=t,t>e.j)throw J(e.j,t)}function me(e){var t=e.i,n=e.h,r=t[n++],s=127&r;if(128&r&&(s|=(127&(r=t[n++]))<<7,128&r&&(s|=(127&(r=t[n++]))<<14,128&r&&(s|=(127&(r=t[n++]))<<21,128&r&&(s|=(r=t[n++])<<28,128&r&&128&t[n++]&&128&t[n++]&&128&t[n++]&&128&t[n++]&&128&t[n++])))))throw Z();return fe(e,n),s}function ge(e,t){if(0>t)throw Error("Tried to read a negative byte length: "+t);var n=e.h,r=n+t;if(r>e.j)throw J(t,e.j-n);return e.h=r,n}de.prototype.reset=function(){this.h=this.l};var ye=[];function xe(){this.h=[]}function be(e,t,n){for(;0<n||127<t;)e.h.push(127&t|128),t=(t>>>7|n<<25)>>>0,n>>>=7;e.h.push(t)}function ve(e,t){for(;127<t;)e.h.push(127&t|128),t>>>=7;e.h.push(t)}function we(e,t){if(ye.length){var n=ye.pop();pe(n,e,t),e=n}else e=new de(e,t);this.h=e,this.j=this.h.h,this.i=this.l=-1,this.setOptions(t)}function ke(e){var t=e.h;if(t.h==t.j)return!1;e.j=e.h.h;var n=me(e.h)>>>0;if(t=n>>>3,!(0<=(n&=7)&&5>=n))throw Q(n,e.j);if(1>t)throw Error("Invalid field number: "+t+" (at position "+e.j+")");return e.l=t,e.i=n,!0}function Se(e){switch(e.i){case 0:if(0!=e.i)Se(e);else e:{for(var t=(e=e.h).h,n=t+10,r=e.i;t<n;)if(0==(128&r[t++])){fe(e,t);break e}throw Z()}break;case 1:fe(e=e.h,e.h+8);break;case 2:2!=e.i?Se(e):(t=me(e.h)>>>0,fe(e=e.h,e.h+t));break;case 5:fe(e=e.h,e.h+4);break;case 3:for(t=e.l;;){if(!ke(e))throw Error("Unmatched start-group tag: stream EOF");if(4==e.i){if(e.l!=t)throw Error("Unmatched end-group tag");break}Se(e)}break;default:throw Q(e.i,e.j)}}xe.prototype.length=function(){return this.h.length},xe.prototype.end=function(){var e=this.h;return this.h=[],e},we.prototype.setOptions=function(e){e=void 0===e?{}:e,this.ca=void 0!==e.ca&&e.ca},we.prototype.reset=function(){this.h.reset(),this.j=this.h.h,this.i=this.l=-1};var Ce=[];function Ie(){this.j=[],this.i=0,this.h=new xe}function Te(e,t){0!==t.length&&(e.j.push(t),e.i+=t.length)}var $e="function"==typeof Symbol&&"symbol"==typeof Symbol()?Symbol():void 0;function Ne(e,t){return $e?e[$e]|=t:void 0!==e.A?e.A|=t:(Object.defineProperties(e,{A:{value:t,configurable:!0,writable:!0,enumerable:!1}}),t)}function Ee(e,t){$e?e[$e]&&(e[$e]&=~t):void 0!==e.A&&(e.A&=~t)}function Re(e){var t;return null==(t=$e?e[$e]:e.A)?0:t}function _e(e,t){$e?e[$e]=t:void 0!==e.A?e.A=t:Object.defineProperties(e,{A:{value:t,configurable:!0,writable:!0,enumerable:!1}})}function Ae(e){return Ne(e,1),e}function Oe(e,t){_e(t,-51&(0|e))}function Fe(e,t){_e(t,-41&(18|e))}var Pe={};function De(e){return null!==e&&"object"==typeof e&&!Array.isArray(e)&&e.constructor===Object}var Me,Le,Be=[];function ze(e){if(2&Re(e.o))throw Error("Cannot mutate an immutable Message")}function Ue(e){var t=e.length;(t=t?e[t-1]:void 0)&&De(t)?t.g=1:(t={},e.push((t.g=1,t)))}function Ve(e){var t=e.i+e.G;return e.B||(e.B=e.o[t]={})}function We(e,t){return-1===t?null:t>=e.i?e.B?e.B[t]:void 0:e.o[t+e.G]}function Ge(e,t,n,r){ze(e),He(e,t,n,r)}function He(e,t,n,r){e.j&&(e.j=void 0),t>=e.i||r?Ve(e)[t]=n:(e.o[t+e.G]=n,(e=e.B)&&t in e&&delete e[t])}function je(e,t,n,r){var s=We(e,t);Array.isArray(s)||(s=Me);var a=Re(s);if(1&a||Ae(s),r)2&a||Ne(s,2),1&n||Object.freeze(s);else{r=!(2&n);var o=2&a;1&n||!o?r&&16&a&&!o&&Ee(s,16):He(e,t,s=Ae(Array.prototype.slice.call(s)))}return s}function Ke(e,t){var n=We(e,t),r=null==n?n:"number"==typeof n||"NaN"===n||"Infinity"===n||"-Infinity"===n?Number(n):void 0;return null!=r&&r!==n&&He(e,t,r),r}function qe(e,t,n,r,s){e.h||(e.h={});var a=e.h[n],o=je(e,n,3,s);if(!a){var i=o;a=[];var u=!!(16&Re(e.o));o=!!(2&Re(i));var l=i;!s&&o&&(i=Array.prototype.slice.call(i));for(var c=o,h=0;h<i.length;h++){var d=i[h],p=t,f=!1;if(f=void 0!==f&&f,void 0!==(d=Array.isArray(d)?new p(d):f?new p:void 0)){var m=f=Re(p=d.o);o&&(m|=2),u&&(m|=16),m!=f&&_e(p,m),p=m,c=c||!!(2&p),a.push(d)}}return e.h[n]=a,t=33|(u=Re(i)),u!=(t=c?-9&t:8|t)&&(c=i,Object.isFrozen(c)&&(c=Array.prototype.slice.call(c)),_e(c,t),i=c),l!==i&&He(e,n,i),(s||r&&o)&&Ne(a,2),r&&Object.freeze(a),a}return s||(s=Object.isFrozen(a),r&&!s?Object.freeze(a):!r&&s&&(a=Array.prototype.slice.call(a),e.h[n]=a)),a}function Xe(e,t,n){var r=!!(2&Re(e.o));if(t=qe(e,t,n,r,r),e=je(e,n,3,r),!(r||8&Re(e))){for(r=0;r<t.length;r++){if(2&Re((n=t[r]).o)){var s=it(n,!1);s.j=n}else s=n;n!==s&&(t[r]=s,e[r]=s.o)}Ne(e,8)}return t}function Ye(e,t,n){if(null!=n&&"number"!=typeof n)throw Error("Value of float/double field must be a number|null|undefined, found "+typeof n+": "+n);Ge(e,t,n)}function Qe(e,t,n,r,s){ze(e);var a=qe(e,n,t,!1,!1);return n=null!=r?r:new n,e=je(e,t,2,!1),null!=s?(a.splice(s,0,n),e.splice(s,0,n.o)):(a.push(n),e.push(n.o)),n.C()&&Ee(e,8),n}function Ze(e,t){return null==e?t:e}function Je(e,t,n){return n=void 0===n?0:n,Ze(Ke(e,t),n)}function et(e,t,n,r){if(null!=e){if(Array.isArray(e))e=tt(e,t,n,void 0!==r);else if(De(e)){var s,a={};for(s in e)a[s]=et(e[s],t,n,r);e=a}else e=t(e,r);return e}}function tt(e,t,n,r){var s=Re(e);r=r?!!(16&s):void 0,e=Array.prototype.slice.call(e);for(var a=0;a<e.length;a++)e[a]=et(e[a],t,n,r);return n(s,e),e}function nt(e){return e.ja===Pe?e.toJSON():function(e){switch(typeof e){case"number":return isFinite(e)?e:String(e);case"object":if(e)if(Array.isArray(e)){if(0!=(128&Re(e)))return Ue(e=Array.prototype.slice.call(e)),e}else{if(O&&null!=e&&e instanceof Uint8Array)return P(e);if(e instanceof le){var t=e.V;return null==t?"":"string"==typeof t?t:e.V=P(t)}}}return e}(e)}function rt(e,t){128&e&&Ue(t)}function st(e,t,n){if(n=void 0===n?Fe:n,null!=e){if(O&&e instanceof Uint8Array)return e.length?new le(new Uint8Array(e),U):ce();if(Array.isArray(e)){var r=Re(e);return 2&r?e:!t||32&r||!(16&r||0===r)?(4&(t=Re(e=tt(e,st,4&r?Fe:n,!0)))&&2&t&&Object.freeze(e),e):(_e(e,2|r),e)}return e.ja===Pe?ot(e):e}}function at(e,t,n,r,s,a,o){if(e=e.h&&e.h[n]){if(2&(r=Re(e))?r=e:(Fe(r,a=E(e,ot)),Object.freeze(a),r=a),ze(t),o=null==r?Me:Ae([]),null!=r){for(a=!!r.length,e=0;e<r.length;e++){var i=r[e];a=a&&!(2&Re(i.o)),o[e]=i.o}a=1|(a?8:0),((e=Re(o))&a)!==a&&(Object.isFrozen(o)&&(o=Array.prototype.slice.call(o)),_e(o,e|a)),t.h||(t.h={}),t.h[n]=r}else t.h&&(t.h[n]=void 0);He(t,n,o,s)}else Ge(t,n,st(r,a,o),s)}function ot(e){return 2&Re(e.o)||Ne((e=it(e,!0)).o,2),e}function it(e,t){var n=e.o,r=[];Ne(r,16);var s=e.constructor.h;if(s&&r.push(s),s=e.B){r.length=n.length,r.fill(void 0,r.length,n.length);var a={};r[r.length-1]=a}0!=(128&Re(n))&&Ue(r),t=t||e.C()?Fe:Oe,a=e.constructor,Le=r,r=new a(r),Le=void 0,e.R&&(r.R=e.R.slice()),a=!!(16&Re(n));for(var o=s?n.length-1:n.length,i=0;i<o;i++)at(e,r,i-e.G,n[i],!1,a,t);if(s)for(var u in s)at(e,r,+u,s[u],!0,a,t);return r}function ut(e,t,n){null==e&&(e=Le),Le=void 0;var r,s=this.constructor.i||0,a=0<s,o=this.constructor.h,i=!1;if(null==e){var u=48,l=!0;a&&(s=0,u|=128),_e(e=o?[o]:[],u)}else{if(!Array.isArray(e))throw Error();if(o&&o!==e[0])throw Error();var c=u=Ne(e,0);if((l=0!=(16&c))&&((i=0!=(32&c))||(c|=32)),a){if(128&c)s=0;else if(0<e.length){var h=e[e.length-1];if(De(h)&&"g"in h){s=0,c|=128,delete h.g;var d,p=!0;for(d in h){p=!1;break}p&&e.pop()}}}else if(128&c)throw Error();u!==c&&_e(e,c)}if(this.G=(o?0:-1)-s,this.h=void 0,this.o=e,s=(o=this.o.length)-1,o&&De(o=this.o[s])?(this.B=o,this.i=s-this.G):void 0!==t&&-1<t?(this.i=Math.max(t,s+1-this.G),this.B=void 0):this.i=Number.MAX_VALUE,!a&&this.B&&"g"in this.B)throw Error('Unexpected "g" flag in sparse object of message that is not a group type.');if(n)for(t=l&&!i&&!0,a=this.i,l=0;l<n.length;l++)(i=n[l])<a?(s=e[i+=this.G])?lt(s,t):e[i]=Me:(r||(r=Ve(this)),(s=r[i])?lt(s,t):r[i]=Me)}function lt(e,t){if(Array.isArray(e)){var n=Re(e),r=1;!t||2&n||(r|=16),(n&r)!==r&&_e(e,n|r)}}function ct(e,t,n){if(n){var r,s={};for(r in n){var a=n[r],o=a.ra;o||(s.J=a.xa||a.oa.W,a.ia?(s.aa=xt(a.ia),o=function(e){return function(t,n,r){return e.J(t,n,r,e.aa)}}(s)):a.ka?(s.Z=bt(a.da.P,a.ka),o=function(e){return function(t,n,r){return e.J(t,n,r,e.Z)}}(s)):o=s.J,a.ra=o),o(t,e,a.da),s={J:s.J,aa:s.aa,Z:s.Z}}}!function(e,t){if(t=t.R){Te(e,e.h.end());for(var n=0;n<t.length;n++)Te(e,he(t[n])||z())}}(t,e)}_e(Be,23),Me=Object.freeze(Be),ut.prototype.toJSON=function(){return tt(this.o,nt,rt)},ut.prototype.C=function(){return!!(2&Re(this.o))},ut.prototype.ja=Pe,ut.prototype.toString=function(){return this.o.toString()};var ht=Symbol();function dt(e,t,n){return e[ht]||(e[ht]=function(e,r){return t(e,r,n)})}function pt(e){var t=e[ht];if(!t){var n=_t(e);t=function(e,t){return At(e,t,n)},e[ht]=t}return t}function ft(e){var t=function(e){var t=e.ia;return t?pt(t):(t=e.wa)?dt(e.da.P,t,e.ka):void 0}(e),n=e.da,r=e.oa.U;return t?function(e,s){return r(e,s,n,t)}:function(e,t){return r(e,t,n)}}function mt(e,t){var n=e[t];return"function"==typeof n&&0===n.length&&(n=n(),e[t]=n),Array.isArray(n)&&(Tt in n||vt in n||0<n.length&&"function"==typeof n[0])?n:void 0}function gt(e,t,n,r,s,a){t.P=e[0];var o=1;if(e.length>o&&"number"!=typeof e[o]){var i=e[o++];n(t,i)}for(;o<e.length;){n=e[o++];for(var u=o+1;u<e.length&&"number"!=typeof e[u];)u++;switch(i=e[o++],u-=o){case 0:r(t,n,i);break;case 1:(u=mt(e,o))?(o++,s(t,n,i,u)):r(t,n,i,e[o++]);break;case 2:s(t,n,i,u=mt(e,u=o++),e[o++]);break;case 3:a(t,n,i,e[o++],e[o++],e[o++]);break;case 4:a(t,n,i,e[o++],e[o++],e[o++],e[o++]);break;default:throw Error("unexpected number of binary field arguments: "+u)}}return t}var yt=Symbol();function xt(e){var t=e[yt];if(!t){var n=It(e);t=function(e,t){return Ot(e,t,n)},e[yt]=t}return t}function bt(e,t){var n=e[yt];return n||(n=function(e,n){return ct(e,n,t)},e[yt]=n),n}var vt=Symbol();function wt(e,t){e.push(t)}function kt(e,t,n){e.push(t,n.W)}function St(e,t,n,r){var s=xt(r),a=It(r).P,o=n.W;e.push(t,(function(e,t,n){return o(e,t,n,a,s)}))}function Ct(e,t,n,r,s,a){var o=bt(r,a),i=n.W;e.push(t,(function(e,t,n){return i(e,t,n,r,o)}))}function It(e){var t=e[vt];return t||(t=gt(e,e[vt]=[],wt,kt,St,Ct),Tt in e&&vt in e&&(e.length=0),t)}var Tt=Symbol();function $t(e,t){e[0]=t}function Nt(e,t,n,r){var s=n.U;e[t]=r?function(e,t,n){return s(e,t,n,r)}:s}function Et(e,t,n,r,s){var a=n.U,o=pt(r),i=_t(r).P;e[t]=function(e,t,n){return a(e,t,n,i,o,s)}}function Rt(e,t,n,r,s,a,o){var i=n.U,u=dt(r,s,a);e[t]=function(e,t,n){return i(e,t,n,r,u,o)}}function _t(e){var t=e[Tt];return t||(t=gt(e,e[Tt]={},$t,Nt,Et,Rt),Tt in e&&vt in e&&(e.length=0),t)}function At(e,t,n){for(;ke(t)&&4!=t.i;){var r=t.l,s=n[r];if(!s){var a=n[0];a&&(a=a[r])&&(s=n[r]=ft(a))}if(!s||!s(t,e,r)){r=e,a=(s=t).j,Se(s);var o=s;if(!o.ca){if(s=o.h.h-a,o.h.h=a,o=o.h,0==s)s=ce();else{if(a=ge(o,s),o.S&&o.m)s=o.i.subarray(a,a+s);else{o=o.i;var i=a;s=i===(s=a+s)?z():V?o.slice(i,s):new Uint8Array(o.subarray(i,s))}s=0==s.length?ce():new le(s,U)}(a=r.R)?a.push(s):r.R=[s]}}}return e}function Ot(e,t,n){for(var r=n.length,s=1==r%2,a=s?1:0;a<r;a+=2)(0,n[a+1])(t,e,n[a]);ct(e,t,s?n[0]:void 0)}function Ft(e,t){return{U:e,W:t}}var Pt=Ft((function(e,t,n){if(5!==e.i)return!1;var r=(e=e.h).i,s=e.h,a=r[s],o=r[s+1],i=r[s+2];return r=r[s+3],fe(e,e.h+4),e=2*((o=(a<<0|o<<8|i<<16|r<<24)>>>0)>>31)+1,a=o>>>23&255,o&=8388607,Ge(t,n,255==a?o?NaN:1/0*e:0==a?e*Math.pow(2,-149)*o:e*Math.pow(2,a-150)*(o+Math.pow(2,23))),!0}),(function(e,t,n){if(null!=(t=Ke(t,n))){ve(e.h,8*n+5),e=e.h;var r=+t;0===r?0<1/r?W=G=0:(G=0,W=2147483648):isNaN(r)?(G=0,W=2147483647):34028234663852886e22<(r=(n=0>r?-2147483648:0)?-r:r)?(G=0,W=(2139095040|n)>>>0):11754943508222875e-54>r?(r=Math.round(r/Math.pow(2,-149)),G=0,W=(n|r)>>>0):(t=Math.floor(Math.log(r)/Math.LN2),r*=Math.pow(2,-t),16777216<=(r=Math.round(8388608*r))&&++t,G=0,W=(n|t+127<<23|8388607&r)>>>0),n=W,e.h.push(n>>>0&255),e.h.push(n>>>8&255),e.h.push(n>>>16&255),e.h.push(n>>>24&255)}})),Dt=Ft((function(e,t,n){if(0!==e.i)return!1;var r=e.h,s=0,a=e=0,o=r.i,i=r.h;do{var u=o[i++];s|=(127&u)<<a,a+=7}while(32>a&&128&u);for(32<a&&(e|=(127&u)>>4),a=3;32>a&&128&u;a+=7)e|=(127&(u=o[i++]))<<a;if(fe(r,i),!(128>u))throw Z();return r=s>>>0,(e=2147483648&(u=e>>>0))&&(u=~u>>>0,0==(r=1+~r>>>0)&&(u=u+1>>>0)),r=4294967296*u+(r>>>0),Ge(t,n,e?-r:r),!0}),(function(e,t,n){null!=(t=We(t,n))&&("string"==typeof t&&Y(t),null!=t&&(ve(e.h,8*n),"number"==typeof t?(e=e.h,H(t),be(e,W,G)):(n=Y(t),be(e.h,n.i,n.h))))})),Mt=Ft((function(e,t,n){return 0===e.i&&(Ge(t,n,me(e.h)),!0)}),(function(e,t,n){if(null!=(t=We(t,n))&&null!=t)if(ve(e.h,8*n),e=e.h,0<=(n=t))ve(e,n);else{for(t=0;9>t;t++)e.h.push(127&n|128),n>>=7;e.h.push(1)}})),Lt=Ft((function(e,t,n){if(2!==e.i)return!1;var r=me(e.h)>>>0,s=ge(e=e.h,r);if(e=e.i,oe){var a,o=e;(a=ne)||(a=ne=new TextDecoder("utf-8",{fatal:!0})),e=s+r,o=0===s&&e===o.length?o:o.subarray(s,e);try{var i=a.decode(o)}catch(e){if(void 0===ae){try{a.decode(new Uint8Array([128]))}catch(e){}try{a.decode(new Uint8Array([97])),ae=!0}catch(e){ae=!1}}throw!ae&&(ne=void 0),e}}else{r=(i=s)+r,s=[];for(var u,l,c=null;i<r;)128>(u=e[i++])?s.push(u):224>u?i>=r?ee():(l=e[i++],194>u||128!=(192&l)?(i--,ee()):s.push((31&u)<<6|63&l)):240>u?i>=r-1?ee():128!=(192&(l=e[i++]))||224===u&&160>l||237===u&&160<=l||128!=(192&(o=e[i++]))?(i--,ee()):s.push((15&u)<<12|(63&l)<<6|63&o):244>=u?i>=r-2?ee():128!=(192&(l=e[i++]))||0!=l-144+(u<<28)>>30||128!=(192&(o=e[i++]))||128!=(192&(a=e[i++]))?(i--,ee()):(u=(7&u)<<18|(63&l)<<12|(63&o)<<6|63&a,u-=65536,s.push(55296+(u>>10&1023),56320+(1023&u))):ee(),8192<=s.length&&(c=te(c,s),s.length=0);i=te(c,s)}return Ge(t,n,i),!0}),(function(e,t,n){if(null!=(t=We(t,n))){var r=!1;if(r=void 0!==r&&r,ie){if(r&&/(?:[^\uD800-\uDBFF]|^)[\uDC00-\uDFFF]|[\uD800-\uDBFF](?![\uDC00-\uDFFF])/.test(t))throw Error("Found an unpaired surrogate");t=(re||(re=new TextEncoder)).encode(t)}else{for(var s=0,a=new Uint8Array(3*t.length),o=0;o<t.length;o++){var i=t.charCodeAt(o);if(128>i)a[s++]=i;else{if(2048>i)a[s++]=i>>6|192;else{if(55296<=i&&57343>=i){if(56319>=i&&o<t.length){var u=t.charCodeAt(++o);if(56320<=u&&57343>=u){i=1024*(i-55296)+u-56320+65536,a[s++]=i>>18|240,a[s++]=i>>12&63|128,a[s++]=i>>6&63|128,a[s++]=63&i|128;continue}o--}if(r)throw Error("Found an unpaired surrogate");i=65533}a[s++]=i>>12|224,a[s++]=i>>6&63|128}a[s++]=63&i|128}}t=s===a.length?a:a.subarray(0,s)}ve(e.h,8*n+2),ve(e.h,t.length),Te(e,e.h.end()),Te(e,t)}})),Bt=Ft((function(e,t,n,r,s){if(2!==e.i)return!1;t=Qe(t,n,r),n=e.h.j,r=me(e.h)>>>0;var a=e.h.h+r,o=a-n;if(0>=o&&(e.h.j=a,s(t,e,void 0,void 0,void 0),o=a-e.h.h),o)throw Error("Message parsing ended unexpectedly. Expected to read "+r+" bytes, instead read "+(r-o)+" bytes, either the data ended unexpectedly or the message misreported its own length");return e.h.h=a,e.h.j=n,!0}),(function(e,t,n,r,s){if(null!=(t=Xe(t,r,n)))for(r=0;r<t.length;r++){var a=e;ve(a.h,8*n+2);var o=a.h.end();Te(a,o),o.push(a.i),a=o,s(t[r],e),o=e;var i=a.pop();for(i=o.i+o.h.length()-i;127<i;)a.push(127&i|128),i>>>=7,o.i++;a.push(i),o.i++}}));function zt(e){return function(t,n){e:{if(Ce.length){var r=Ce.pop();r.setOptions(n),pe(r.h,t,n),t=r}else t=new we(t,n);try{var s=_t(e),a=At(new s.P,t,s);break e}finally{(s=t.h).i=null,s.m=!1,s.l=0,s.j=0,s.h=0,s.S=!1,t.l=-1,t.i=-1,100>Ce.length&&Ce.push(t)}a=void 0}return a}}function Ut(e){return function(){var t=new Ie;Ot(this,t,It(e)),Te(t,t.h.end());for(var n=new Uint8Array(t.i),r=t.j,s=r.length,a=0,o=0;o<s;o++){var i=r[o];n.set(i,a),a+=i.length}return t.j=[n],n}}function Vt(e){ut.call(this,e)}m(Vt,ut);var Wt=[Vt,1,Mt,2,Pt,3,Lt,4,Lt];function Gt(e){ut.call(this,e,-1,Ht)}Vt.prototype.l=Ut(Wt),m(Gt,ut),Gt.prototype.addClassification=function(e,t){return Qe(this,1,Vt,e,t),this};var Ht=[1],jt=zt([Gt,1,Bt,Wt]);function Kt(e){ut.call(this,e)}m(Kt,ut);var qt=[Kt,1,Pt,2,Pt,3,Pt,4,Pt,5,Pt];function Xt(e){ut.call(this,e,-1,Yt)}Kt.prototype.l=Ut(qt),m(Xt,ut);var Yt=[1],Qt=zt([Xt,1,Bt,qt]);function Zt(e){ut.call(this,e)}m(Zt,ut);var Jt=[Zt,1,Pt,2,Pt,3,Pt,4,Pt,5,Pt,6,Dt],en=zt(Jt);function tn(e,t,n){if(n=e.createShader(0===n?e.VERTEX_SHADER:e.FRAGMENT_SHADER),e.shaderSource(n,t),e.compileShader(n),!e.getShaderParameter(n,e.COMPILE_STATUS))throw Error("Could not compile WebGL shader.\n\n"+e.getShaderInfoLog(n));return n}function nn(e){return Xe(e,Vt,1).map((function(e){var t=We(e,1);return{index:null==t?0:t,qa:Je(e,2),label:null!=We(e,3)?Ze(We(e,3),""):void 0,displayName:null!=We(e,4)?Ze(We(e,4),""):void 0}}))}function rn(e){return{x:Je(e,1),y:Je(e,2),z:Je(e,3),visibility:null!=Ke(e,4)?Je(e,4):void 0}}function sn(e){return Xe(Qt(e),Kt,1).map(rn)}function an(e,t){this.i=e,this.h=t,this.m=0}function on(e,t,n){return function(e,t){var n=e.h;if(void 0===e.s){var r=tn(n,"\n  attribute vec2 aVertex;\n  attribute vec2 aTex;\n  varying vec2 vTex;\n  void main(void) {\n    gl_Position = vec4(aVertex, 0.0, 1.0);\n    vTex = aTex;\n  }",0),s=tn(n,"\n  precision mediump float;\n  varying vec2 vTex;\n  uniform sampler2D sampler0;\n  void main(){\n    gl_FragColor = texture2D(sampler0, vTex);\n  }",1),a=n.createProgram();if(n.attachShader(a,r),n.attachShader(a,s),n.linkProgram(a),!n.getProgramParameter(a,n.LINK_STATUS))throw Error("Could not compile WebGL program.\n\n"+n.getProgramInfoLog(a));r=e.s=a,n.useProgram(r),s=n.getUniformLocation(r,"sampler0"),e.l={O:n.getAttribLocation(r,"aVertex"),N:n.getAttribLocation(r,"aTex"),ya:s},e.v=n.createBuffer(),n.bindBuffer(n.ARRAY_BUFFER,e.v),n.enableVertexAttribArray(e.l.O),n.vertexAttribPointer(e.l.O,2,n.FLOAT,!1,0,0),n.bufferData(n.ARRAY_BUFFER,new Float32Array([-1,-1,-1,1,1,1,1,-1]),n.STATIC_DRAW),n.bindBuffer(n.ARRAY_BUFFER,null),e.u=n.createBuffer(),n.bindBuffer(n.ARRAY_BUFFER,e.u),n.enableVertexAttribArray(e.l.N),n.vertexAttribPointer(e.l.N,2,n.FLOAT,!1,0,0),n.bufferData(n.ARRAY_BUFFER,new Float32Array([0,1,0,0,1,0,1,1]),n.STATIC_DRAW),n.bindBuffer(n.ARRAY_BUFFER,null),n.uniform1i(s,0)}r=e.l,n.useProgram(e.s),n.canvas.width=t.width,n.canvas.height=t.height,n.viewport(0,0,t.width,t.height),n.activeTexture(n.TEXTURE0),e.i.bindTexture2d(t.glName),n.enableVertexAttribArray(r.O),n.bindBuffer(n.ARRAY_BUFFER,e.v),n.vertexAttribPointer(r.O,2,n.FLOAT,!1,0,0),n.enableVertexAttribArray(r.N),n.bindBuffer(n.ARRAY_BUFFER,e.u),n.vertexAttribPointer(r.N,2,n.FLOAT,!1,0,0),n.bindFramebuffer(n.DRAW_FRAMEBUFFER?n.DRAW_FRAMEBUFFER:n.FRAMEBUFFER,null),n.clearColor(0,0,0,0),n.clear(n.COLOR_BUFFER_BIT),n.colorMask(!0,!0,!0,!0),n.drawArrays(n.TRIANGLE_FAN,0,4),n.disableVertexAttribArray(r.O),n.disableVertexAttribArray(r.N),n.bindBuffer(n.ARRAY_BUFFER,null),e.i.bindTexture2d(0)}(e,t),"function"==typeof e.h.canvas.transferToImageBitmap?Promise.resolve(e.h.canvas.transferToImageBitmap()):n?Promise.resolve(e.h.canvas):"function"==typeof createImageBitmap?createImageBitmap(e.h.canvas):(void 0===e.j&&(e.j=document.createElement("canvas")),new Promise((function(t){e.j.height=e.h.canvas.height,e.j.width=e.h.canvas.width,e.j.getContext("2d",{}).drawImage(e.h.canvas,0,0,e.h.canvas.width,e.h.canvas.height),t(e.j)})))}function un(e){this.h=e}Zt.prototype.l=Ut(Jt);var ln=new Uint8Array([0,97,115,109,1,0,0,0,1,4,1,96,0,0,3,2,1,0,10,9,1,7,0,65,0,253,15,26,11]);function cn(e,t){return t+e}function hn(e,t){window[e]=t}function dn(e){if(this.h=e,this.listeners={},this.l={},this.L={},this.s={},this.v={},this.M=this.u=this.ga=!0,this.I=Promise.resolve(),this.fa="",this.D={},this.locateFile=e&&e.locateFile||cn,"object"==typeof window)var t=window.location.pathname.toString().substring(0,window.location.pathname.toString().lastIndexOf("/"))+"/";else{if("undefined"==typeof location)throw Error("solutions can only be loaded on a web page or in a web worker");t=location.pathname.toString().substring(0,location.pathname.toString().lastIndexOf("/"))+"/"}if(this.ha=t,e.options)for(var n=(t=i(Object.keys(e.options))).next();!n.done;n=t.next()){n=n.value;var r=e.options[n].default;void 0!==r&&(this.l[n]="function"==typeof r?r():r)}}function pn(e,t){var n,r;return C((function(s){return t in e.L?s.return(e.L[t]):(n=e.locateFile(t,""),r=fetch(n).then((function(e){return e.arrayBuffer()})),e.L[t]=r,s.return(r))}))}function fn(e,t){for(var n=t.name||"$",r=[].concat(u(t.wants)),s=new e.i.StringList,a=i(t.wants),o=a.next();!o.done;o=a.next())s.push_back(o.value);a=e.i.PacketListener.implement({onResults:function(s){for(var a={},o=0;o<t.wants.length;++o)a[r[o]]=s.get(o);var u=e.listeners[n];u&&(e.I=function(e,t,n){var r,s,a,o,u,l,c,h,d,p,f,m,g,y;return C((function(x){switch(x.h){case 1:if(!n)return x.return(t);for(r={},s=0,a=i(Object.keys(n)),o=a.next();!o.done;o=a.next())u=o.value,"string"!=typeof(l=n[u])&&"texture"===l.type&&void 0!==t[l.stream]&&++s;1<s&&(e.M=!1),c=i(Object.keys(n)),o=c.next();case 2:if(o.done){x.h=4;break}if(h=o.value,"string"==typeof(d=n[h]))return g=r,y=h,b(x,function(e,t,n){var r;return C((function(s){return"number"==typeof n||n instanceof Uint8Array||n instanceof e.i.Uint8BlobList?s.return(n):n instanceof e.i.Texture2dDataOut?((r=e.v[t])||(r=new an(e.i,e.K),e.v[t]=r),s.return(on(r,n,e.M))):s.return(void 0)}))}(e,h,t[d]),14);if(p=t[d.stream],"detection_list"===d.type){if(p){for(var v=p.getRectList(),w=p.getLandmarksList(),k=p.getClassificationsList(),S=[],I=0;I<v.size();++I){var T=en(v.get(I)),$=void 0;$=void 0===$?0:$,T={la:{sa:Je(T,1),ta:Je(T,2),height:Je(T,3),width:Je(T,4),rotation:Je(T,5,0),pa:Ze(We(T,6),$)},ea:sn(w.get(I)),ba:nn(jt(k.get(I)))},S.push(T)}v=S}else v=[];r[h]=v,x.h=7;break}if("proto_list"===d.type){if(p){for(v=Array(p.size()),w=0;w<p.size();w++)v[w]=p.get(w);p.delete()}else v=[];r[h]=v,x.h=7;break}if(void 0===p){x.h=3;break}if("float_list"===d.type){r[h]=p,x.h=7;break}if("proto"===d.type){r[h]=p,x.h=7;break}if("texture"!==d.type)throw Error("Unknown output config type: '"+d.type+"'");return(f=e.v[h])||(f=new an(e.i,e.K),e.v[h]=f),b(x,on(f,p,e.M),13);case 13:m=x.i,r[h]=m;case 7:d.transform&&r[h]&&(r[h]=d.transform(r[h])),x.h=3;break;case 14:g[y]=x.i;case 3:o=c.next(),x.h=2;break;case 4:return x.return(r)}}))}(e,a,t.outs).then((function(n){n=u(n);for(var s=0;s<t.wants.length;++s){var o=a[r[s]];"object"==typeof o&&o.hasOwnProperty&&o.hasOwnProperty("delete")&&o.delete()}n&&(e.I=n)})))}}),e.j.attachMultiListener(s,a),s.delete()}function mn(e){switch(void 0===e&&(e=0),e){case 1:return"pose_landmark_full.tflite";case 2:return"pose_landmark_heavy.tflite";default:return"pose_landmark_lite.tflite"}}function gn(e){var t=this;e=e||{},this.h=new dn({locateFile:e.locateFile,files:function(e){return[{url:"pose_solution_packed_assets_loader.js"},{simd:!1,url:"pose_solution_wasm_bin.js"},{simd:!0,url:"pose_solution_simd_wasm_bin.js"},{data:!0,url:mn(e.modelComplexity)}]},graph:{url:"pose_web.binarypb"},listeners:[{wants:["pose_landmarks","world_landmarks","segmentation_mask","image_transformed"],outs:{image:{type:"texture",stream:"image_transformed"},poseLandmarks:{type:"proto",stream:"pose_landmarks",transform:sn},poseWorldLandmarks:{type:"proto",stream:"world_landmarks",transform:sn},segmentationMask:{type:"texture",stream:"segmentation_mask"}}}],inputs:{image:{type:"video",stream:"input_frames_gpu"}},options:{useCpuInference:{type:0,graphOptionXref:{calculatorType:"InferenceCalculator",fieldName:"use_cpu_inference"},default:"object"==typeof window&&void 0!==window.navigator&&("iPad Simulator;iPhone Simulator;iPod Simulator;iPad;iPhone;iPod".split(";").includes(navigator.platform)||navigator.userAgent.includes("Mac")&&"ontouchend"in document)},selfieMode:{type:0,graphOptionXref:{calculatorType:"GlScalerCalculator",calculatorIndex:1,fieldName:"flip_horizontal"}},modelComplexity:{type:1,graphOptionXref:{calculatorType:"ConstantSidePacketCalculator",calculatorName:"ConstantSidePacketCalculatorModelComplexity",fieldName:"int_value"},onChange:function(e){var n,r,s;return C((function(a){return 1==a.h?(n=mn(e),r="third_party/mediapipe/modules/pose_landmark/"+n,b(a,pn(t.h,n),2)):(s=a.i,t.h.overrideFile(r,s),a.return(!0))}))}},smoothLandmarks:{type:0,graphOptionXref:{calculatorType:"ConstantSidePacketCalculator",calculatorName:"ConstantSidePacketCalculatorSmoothLandmarks",fieldName:"bool_value"}},enableSegmentation:{type:0,graphOptionXref:{calculatorType:"ConstantSidePacketCalculator",calculatorName:"ConstantSidePacketCalculatorEnableSegmentation",fieldName:"bool_value"}},smoothSegmentation:{type:0,graphOptionXref:{calculatorType:"ConstantSidePacketCalculator",calculatorName:"ConstantSidePacketCalculatorSmoothSegmentation",fieldName:"bool_value"}},minDetectionConfidence:{type:1,graphOptionXref:{calculatorType:"TensorsToDetectionsCalculator",calculatorName:"poselandmarkgpu__posedetectiongpu__TensorsToDetectionsCalculator",fieldName:"min_score_thresh"}},minTrackingConfidence:{type:1,graphOptionXref:{calculatorType:"ThresholdingCalculator",calculatorName:"poselandmarkgpu__poselandmarkbyroigpu__tensorstoposelandmarksandsegmentation__ThresholdingCalculator",fieldName:"threshold"}}}})}(e=dn.prototype).close=function(){return this.j&&this.j.delete(),Promise.resolve()},e.reset=function(){var e=this;return C((function(t){e.j&&(e.j.reset(),e.s={},e.v={}),t.h=0}))},e.setOptions=function(e,t){var n=this;if(t=t||this.h.options){for(var r=[],s=[],a={},o=i(Object.keys(e)),u=o.next();!u.done;a={X:a.X,Y:a.Y},u=o.next())if(!((u=u.value)in this.l)||this.l[u]!==e[u]){this.l[u]=e[u];var l=t[u];void 0!==l&&(l.onChange&&(a.X=l.onChange,a.Y=e[u],r.push(function(e){return function(){return C((function(t){if(1==t.h)return b(t,e.X(e.Y),2);!0===t.i&&(n.u=!0),t.h=0}))}}(a))),l.graphOptionXref&&(u=Object.assign({},{calculatorName:"",calculatorIndex:0},l.graphOptionXref,{valueNumber:1===l.type?e[u]:0,valueBoolean:0===l.type&&e[u],valueString:2===l.type?e[u]:""}),s.push(u)))}0===r.length&&0===s.length||(this.u=!0,this.H=(void 0===this.H?[]:this.H).concat(s),this.F=(void 0===this.F?[]:this.F).concat(r))}},e.initialize=function(){var e=this;return C((function(t){return 1==t.h?b(t,function(e){var t,n,r,s,a,o,i,l,c,h,d;return C((function(p){switch(p.h){case 1:return e.ga?(t=void 0===e.h.files?[]:"function"==typeof e.h.files?e.h.files(e.l):e.h.files,b(p,C((function(e){switch(e.h){case 1:return e.s=2,b(e,WebAssembly.instantiate(ln),4);case 4:e.h=3,e.s=0;break;case 2:return e.s=0,e.l=null,e.return(!1);case 3:return e.return(!0)}})),2)):p.return();case 2:if(n=p.i,"object"==typeof window)return hn("createMediapipeSolutionsWasm",{locateFile:e.locateFile}),hn("createMediapipeSolutionsPackedAssets",{locateFile:e.locateFile}),o=t.filter((function(e){return void 0!==e.data})),i=t.filter((function(e){return void 0===e.data})),l=Promise.all(o.map((function(t){var n=pn(e,t.url);if(void 0!==t.path){var r=t.path;n=n.then((function(t){return e.overrideFile(r,t),Promise.resolve(t)}))}return n}))),c=Promise.all(i.map((function(t){return void 0===t.simd||t.simd&&n||!t.simd&&!n?function(e){var t=document.createElement("script");return t.setAttribute("src",e),t.setAttribute("crossorigin","anonymous"),new Promise((function(e){t.addEventListener("load",(function(){e()}),!1),t.addEventListener("error",(function(){e()}),!1),document.body.appendChild(t)}))}(e.locateFile(t.url,e.ha)):Promise.resolve()}))).then((function(){var t,n,r;return C((function(s){if(1==s.h)return t=window.createMediapipeSolutionsWasm,n=window.createMediapipeSolutionsPackedAssets,r=e,b(s,t(n),2);r.i=s.i,s.h=0}))})),h=C((function(t){return e.h.graph&&e.h.graph.url?t=b(t,pn(e,e.h.graph.url),0):(t.h=0,t=void 0),t})),b(p,Promise.all([c,l,h]),7);if("function"!=typeof importScripts)throw Error("solutions can only be loaded on a web page or in a web worker");return r=t.filter((function(e){return void 0===e.simd||e.simd&&n||!e.simd&&!n})).map((function(t){return e.locateFile(t.url,e.ha)})),importScripts.apply(null,u(r)),s=e,b(p,createMediapipeSolutionsWasm(Module),6);case 6:s.i=p.i,e.m=new OffscreenCanvas(1,1),e.i.canvas=e.m,a=e.i.GL.createContext(e.m,{antialias:!1,alpha:!1,va:"undefined"!=typeof WebGL2RenderingContext?2:1}),e.i.GL.makeContextCurrent(a),p.h=4;break;case 7:if(e.m=document.createElement("canvas"),!(d=e.m.getContext("webgl2",{}))&&!(d=e.m.getContext("webgl",{})))return alert("Failed to create WebGL canvas context when passing video frame."),p.return();e.K=d,e.i.canvas=e.m,e.i.createContext(e.m,!0,!0,{});case 4:e.j=new e.i.SolutionWasm,e.ga=!1,p.h=0}}))}(e),2):3!=t.h?b(t,function(e){var t,n,r,s,a,o,u,l;return C((function(c){if(1==c.h)return e.h.graph&&e.h.graph.url&&e.fa===e.h.graph.url?c.return():(e.u=!0,e.h.graph&&e.h.graph.url?(e.fa=e.h.graph.url,b(c,pn(e,e.h.graph.url),3)):void(c.h=2));for(2!=c.h&&(t=c.i,e.j.loadGraph(t)),n=i(Object.keys(e.D)),r=n.next();!r.done;r=n.next())s=r.value,e.j.overrideFile(s,e.D[s]);if(e.D={},e.h.listeners)for(a=i(e.h.listeners),o=a.next();!o.done;o=a.next())u=o.value,fn(e,u);l=e.l,e.l={},e.setOptions(l),c.h=0}))}(e),3):b(t,function(e){var t,n,r,s,a,o;return C((function(u){switch(u.h){case 1:if(!e.u)return u.return();if(!e.F){u.h=2;break}t=i(e.F),n=t.next();case 3:if(n.done){u.h=5;break}return b(u,(0,n.value)(),4);case 4:n=t.next(),u.h=3;break;case 5:e.F=void 0;case 2:if(e.H){for(r=new e.i.GraphOptionChangeRequestList,s=i(e.H),a=s.next();!a.done;a=s.next())o=a.value,r.push_back(o);e.j.changeOptions(r),r.delete(),e.H=void 0}e.u=!1,u.h=0}}))}(e),0)}))},e.overrideFile=function(e,t){this.j?this.j.overrideFile(e,t):this.D[e]=t},e.clearOverriddenFiles=function(){this.D={},this.j&&this.j.clearOverriddenFiles()},e.send=function(e,t){var n,r,s,a,o,u,l,c,h,d=this;return C((function(p){switch(p.h){case 1:return d.h.inputs?(n=1e3*(null==t?performance.now():t),b(p,d.I,2)):p.return();case 2:return b(p,d.initialize(),3);case 3:for(r=new d.i.PacketDataList,s=i(Object.keys(e)),a=s.next();!a.done;a=s.next())if(o=a.value,u=d.h.inputs[o]){e:{var f=e[o];switch(u.type){case"video":var m=d.s[u.stream];if(m||(m=new an(d.i,d.K),d.s[u.stream]=m),0===m.m&&(m.m=m.i.createTexture()),"undefined"!=typeof HTMLVideoElement&&f instanceof HTMLVideoElement)var g=f.videoWidth,y=f.videoHeight;else"undefined"!=typeof HTMLImageElement&&f instanceof HTMLImageElement?(g=f.naturalWidth,y=f.naturalHeight):(g=f.width,y=f.height);y={glName:m.m,width:g,height:y},(g=m.h).canvas.width=y.width,g.canvas.height=y.height,g.activeTexture(g.TEXTURE0),m.i.bindTexture2d(m.m),g.texImage2D(g.TEXTURE_2D,0,g.RGBA,g.RGBA,g.UNSIGNED_BYTE,f),m.i.bindTexture2d(0),m=y;break e;case"detections":for((m=d.s[u.stream])||(m=new un(d.i),d.s[u.stream]=m),m.data||(m.data=new m.h.DetectionListData),m.data.reset(f.length),y=0;y<f.length;++y){g=f[y];var x=m.data,v=x.setBoundingBox,w=y,k=g.la,S=new Zt;if(Ye(S,1,k.sa),Ye(S,2,k.ta),Ye(S,3,k.height),Ye(S,4,k.width),Ye(S,5,k.rotation),Ge(S,6,k.pa),k=S.l(),v.call(x,w,k),g.ea)for(x=0;x<g.ea.length;++x){S=g.ea[x],w=(v=m.data).addNormalizedLandmark,k=y,S=Object.assign({},S,{visibility:S.visibility?S.visibility:0});var C=new Kt;Ye(C,1,S.x),Ye(C,2,S.y),Ye(C,3,S.z),S.visibility&&Ye(C,4,S.visibility),S=C.l(),w.call(v,k,S)}if(g.ba)for(x=0;x<g.ba.length;++x)w=(v=m.data).addClassification,k=y,S=g.ba[x],Ye(C=new Vt,2,S.qa),S.index&&Ge(C,1,S.index),S.label&&Ge(C,3,S.label),S.displayName&&Ge(C,4,S.displayName),S=C.l(),w.call(v,k,S)}m=m.data;break e;default:m={}}}switch(l=m,c=u.stream,u.type){case"video":r.pushTexture2d(Object.assign({},l,{stream:c,timestamp:n}));break;case"detections":(h=l).stream=c,h.timestamp=n,r.pushDetectionList(h);break;default:throw Error("Unknown input config type: '"+u.type+"'")}}return d.j.send(r),b(p,d.I,4);case 4:r.delete(),p.h=0}}))},e.onResults=function(e,t){this.listeners[t||"$"]=e},$("Solution",dn),$("OptionType",{BOOL:0,NUMBER:1,ua:2,0:"BOOL",1:"NUMBER",2:"STRING"}),(e=gn.prototype).reset=function(){this.h.reset()},e.close=function(){return this.h.close(),Promise.resolve()},e.onResults=function(e){this.h.onResults(e)},e.initialize=function(){var e=this;return C((function(t){return b(t,e.h.initialize(),0)}))},e.send=function(e,t){var n=this;return C((function(r){return b(r,n.h.send(e,t),0)}))},e.setOptions=function(e){this.h.setOptions(e)},$("Pose",gn),$("POSE_CONNECTIONS",[[0,1],[1,2],[2,3],[3,7],[0,4],[4,5],[5,6],[6,8],[9,10],[11,12],[11,13],[13,15],[15,17],[15,19],[15,21],[17,19],[12,14],[14,16],[16,18],[16,20],[16,22],[18,20],[11,23],[12,24],[23,24],[23,25],[24,26],[25,27],[26,28],[27,29],[28,30],[29,31],[30,32],[27,31],[28,32]]),$("POSE_LANDMARKS",{NOSE:0,LEFT_EYE_INNER:1,LEFT_EYE:2,LEFT_EYE_OUTER:3,RIGHT_EYE_INNER:4,RIGHT_EYE:5,RIGHT_EYE_OUTER:6,LEFT_EAR:7,RIGHT_EAR:8,LEFT_RIGHT:9,RIGHT_LEFT:10,LEFT_SHOULDER:11,RIGHT_SHOULDER:12,LEFT_ELBOW:13,RIGHT_ELBOW:14,LEFT_WRIST:15,RIGHT_WRIST:16,LEFT_PINKY:17,RIGHT_PINKY:18,LEFT_INDEX:19,RIGHT_INDEX:20,LEFT_THUMB:21,RIGHT_THUMB:22,LEFT_HIP:23,RIGHT_HIP:24,LEFT_KNEE:25,RIGHT_KNEE:26,LEFT_ANKLE:27,RIGHT_ANKLE:28,LEFT_HEEL:29,RIGHT_HEEL:30,LEFT_FOOT_INDEX:31,RIGHT_FOOT_INDEX:32}),$("POSE_LANDMARKS_LEFT",{LEFT_EYE_INNER:1,LEFT_EYE:2,LEFT_EYE_OUTER:3,LEFT_EAR:7,LEFT_RIGHT:9,LEFT_SHOULDER:11,LEFT_ELBOW:13,LEFT_WRIST:15,LEFT_PINKY:17,LEFT_INDEX:19,LEFT_THUMB:21,LEFT_HIP:23,LEFT_KNEE:25,LEFT_ANKLE:27,LEFT_HEEL:29,LEFT_FOOT_INDEX:31}),$("POSE_LANDMARKS_RIGHT",{RIGHT_EYE_INNER:4,RIGHT_EYE:5,RIGHT_EYE_OUTER:6,RIGHT_EAR:8,RIGHT_LEFT:10,RIGHT_SHOULDER:12,RIGHT_ELBOW:14,RIGHT_WRIST:16,RIGHT_PINKY:18,RIGHT_INDEX:20,RIGHT_THUMB:22,RIGHT_HIP:24,RIGHT_KNEE:26,RIGHT_ANKLE:28,RIGHT_HEEL:30,RIGHT_FOOT_INDEX:32}),$("POSE_LANDMARKS_NEUTRAL",{NOSE:0}),$("VERSION","0.5.1675469404")}).call(this)},227:(e,t,n)=>{t.formatArgs=function(t){if(t[0]=(this.useColors?"%c":"")+this.namespace+(this.useColors?" %c":" ")+t[0]+(this.useColors?"%c ":" ")+"+"+e.exports.humanize(this.diff),!this.useColors)return;const n="color: "+this.color;t.splice(1,0,n,"color: inherit");let r=0,s=0;t[0].replace(/%[a-zA-Z%]/g,(e=>{"%%"!==e&&(r++,"%c"===e&&(s=r))})),t.splice(s,0,n)},t.save=function(e){try{e?t.storage.setItem("debug",e):t.storage.removeItem("debug")}catch(e){}},t.load=function(){let e;try{e=t.storage.getItem("debug")}catch(e){}return!e&&"undefined"!=typeof process&&"env"in process&&(e=process.env.DEBUG),e},t.useColors=function(){return!("undefined"==typeof window||!window.process||"renderer"!==window.process.type&&!window.process.__nwjs)||("undefined"==typeof navigator||!navigator.userAgent||!navigator.userAgent.toLowerCase().match(/(edge|trident)\/(\d+)/))&&("undefined"!=typeof document&&document.documentElement&&document.documentElement.style&&document.documentElement.style.WebkitAppearance||"undefined"!=typeof window&&window.console&&(window.console.firebug||window.console.exception&&window.console.table)||"undefined"!=typeof navigator&&navigator.userAgent&&navigator.userAgent.toLowerCase().match(/firefox\/(\d+)/)&&parseInt(RegExp.$1,10)>=31||"undefined"!=typeof navigator&&navigator.userAgent&&navigator.userAgent.toLowerCase().match(/applewebkit\/(\d+)/))},t.storage=function(){try{return localStorage}catch(e){}}(),t.destroy=(()=>{let e=!1;return()=>{e||(e=!0,console.warn("Instance method `debug.destroy()` is deprecated and no longer does anything. It will be removed in the next major version of `debug`."))}})(),t.colors=["#0000CC","#0000FF","#0033CC","#0033FF","#0066CC","#0066FF","#0099CC","#0099FF","#00CC00","#00CC33","#00CC66","#00CC99","#00CCCC","#00CCFF","#3300CC","#3300FF","#3333CC","#3333FF","#3366CC","#3366FF","#3399CC","#3399FF","#33CC00","#33CC33","#33CC66","#33CC99","#33CCCC","#33CCFF","#6600CC","#6600FF","#6633CC","#6633FF","#66CC00","#66CC33","#9900CC","#9900FF","#9933CC","#9933FF","#99CC00","#99CC33","#CC0000","#CC0033","#CC0066","#CC0099","#CC00CC","#CC00FF","#CC3300","#CC3333","#CC3366","#CC3399","#CC33CC","#CC33FF","#CC6600","#CC6633","#CC9900","#CC9933","#CCCC00","#CCCC33","#FF0000","#FF0033","#FF0066","#FF0099","#FF00CC","#FF00FF","#FF3300","#FF3333","#FF3366","#FF3399","#FF33CC","#FF33FF","#FF6600","#FF6633","#FF9900","#FF9933","#FFCC00","#FFCC33"],t.log=console.debug||console.log||(()=>{}),e.exports=n(447)(t);const{formatters:r}=e.exports;r.j=function(e){try{return JSON.stringify(e)}catch(e){return"[UnexpectedJSONParseError]: "+e.message}}},447:(e,t,n)=>{e.exports=function(e){function t(e){let n,s,a,o=null;function i(...e){if(!i.enabled)return;const r=i,s=Number(new Date),a=s-(n||s);r.diff=a,r.prev=n,r.curr=s,n=s,e[0]=t.coerce(e[0]),"string"!=typeof e[0]&&e.unshift("%O");let o=0;e[0]=e[0].replace(/%([a-zA-Z%])/g,((n,s)=>{if("%%"===n)return"%";o++;const a=t.formatters[s];if("function"==typeof a){const t=e[o];n=a.call(r,t),e.splice(o,1),o--}return n})),t.formatArgs.call(r,e),(r.log||t.log).apply(r,e)}return i.namespace=e,i.useColors=t.useColors(),i.color=t.selectColor(e),i.extend=r,i.destroy=t.destroy,Object.defineProperty(i,"enabled",{enumerable:!0,configurable:!1,get:()=>null!==o?o:(s!==t.namespaces&&(s=t.namespaces,a=t.enabled(e)),a),set:e=>{o=e}}),"function"==typeof t.init&&t.init(i),i}function r(e,n){const r=t(this.namespace+(void 0===n?":":n)+e);return r.log=this.log,r}function s(e){return e.toString().substring(2,e.toString().length-2).replace(/\.\*\?$/,"*")}return t.debug=t,t.default=t,t.coerce=function(e){return e instanceof Error?e.stack||e.message:e},t.disable=function(){const e=[...t.names.map(s),...t.skips.map(s).map((e=>"-"+e))].join(",");return t.enable(""),e},t.enable=function(e){let n;t.save(e),t.namespaces=e,t.names=[],t.skips=[];const r=("string"==typeof e?e:"").split(/[\s,]+/),s=r.length;for(n=0;n<s;n++)r[n]&&("-"===(e=r[n].replace(/\*/g,".*?"))[0]?t.skips.push(new RegExp("^"+e.slice(1)+"$")):t.names.push(new RegExp("^"+e+"$")))},t.enabled=function(e){if("*"===e[e.length-1])return!0;let n,r;for(n=0,r=t.skips.length;n<r;n++)if(t.skips[n].test(e))return!1;for(n=0,r=t.names.length;n<r;n++)if(t.names[n].test(e))return!0;return!1},t.humanize=n(824),t.destroy=function(){console.warn("Instance method `debug.destroy()` is deprecated and no longer does anything. It will be removed in the next major version of `debug`.")},Object.keys(e).forEach((n=>{t[n]=e[n]})),t.names=[],t.skips=[],t.formatters={},t.selectColor=function(e){let n=0;for(let t=0;t<e.length;t++)n=(n<<5)-n+e.charCodeAt(t),n|=0;return t.colors[Math.abs(n)%t.colors.length]},t.enable(t.load()),t}},720:e=>{e.exports=n;var t=null;try{t=new WebAssembly.Instance(new WebAssembly.Module(new Uint8Array([0,97,115,109,1,0,0,0,1,13,2,96,0,1,127,96,4,127,127,127,127,1,127,3,7,6,0,1,1,1,1,1,6,6,1,127,1,65,0,11,7,50,6,3,109,117,108,0,1,5,100,105,118,95,115,0,2,5,100,105,118,95,117,0,3,5,114,101,109,95,115,0,4,5,114,101,109,95,117,0,5,8,103,101,116,95,104,105,103,104,0,0,10,191,1,6,4,0,35,0,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,126,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,127,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,128,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,129,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,130,34,4,66,32,135,167,36,0,32,4,167,11])),{}).exports}catch(e){}function n(e,t,n){this.low=0|e,this.high=0|t,this.unsigned=!!n}function r(e){return!0===(e&&e.__isLong__)}n.prototype.__isLong__,Object.defineProperty(n.prototype,"__isLong__",{value:!0}),n.isLong=r;var s={},a={};function o(e,t){var n,r,o;return t?(o=0<=(e>>>=0)&&e<256)&&(r=a[e])?r:(n=u(e,(0|e)<0?-1:0,!0),o&&(a[e]=n),n):(o=-128<=(e|=0)&&e<128)&&(r=s[e])?r:(n=u(e,e<0?-1:0,!1),o&&(s[e]=n),n)}function i(e,t){if(isNaN(e))return t?y:g;if(t){if(e<0)return y;if(e>=p)return k}else{if(e<=-f)return S;if(e+1>=f)return w}return e<0?i(-e,t).neg():u(e%d|0,e/d|0,t)}function u(e,t,r){return new n(e,t,r)}n.fromInt=o,n.fromNumber=i,n.fromBits=u;var l=Math.pow;function c(e,t,n){if(0===e.length)throw Error("empty string");if("NaN"===e||"Infinity"===e||"+Infinity"===e||"-Infinity"===e)return g;if("number"==typeof t?(n=t,t=!1):t=!!t,(n=n||10)<2||36<n)throw RangeError("radix");var r;if((r=e.indexOf("-"))>0)throw Error("interior hyphen");if(0===r)return c(e.substring(1),t,n).neg();for(var s=i(l(n,8)),a=g,o=0;o<e.length;o+=8){var u=Math.min(8,e.length-o),h=parseInt(e.substring(o,o+u),n);if(u<8){var d=i(l(n,u));a=a.mul(d).add(i(h))}else a=(a=a.mul(s)).add(i(h))}return a.unsigned=t,a}function h(e,t){return"number"==typeof e?i(e,t):"string"==typeof e?c(e,t):u(e.low,e.high,"boolean"==typeof t?t:e.unsigned)}n.fromString=c,n.fromValue=h;var d=4294967296,p=d*d,f=p/2,m=o(1<<24),g=o(0);n.ZERO=g;var y=o(0,!0);n.UZERO=y;var x=o(1);n.ONE=x;var b=o(1,!0);n.UONE=b;var v=o(-1);n.NEG_ONE=v;var w=u(-1,2147483647,!1);n.MAX_VALUE=w;var k=u(-1,-1,!0);n.MAX_UNSIGNED_VALUE=k;var S=u(0,-2147483648,!1);n.MIN_VALUE=S;var C=n.prototype;C.toInt=function(){return this.unsigned?this.low>>>0:this.low},C.toNumber=function(){return this.unsigned?(this.high>>>0)*d+(this.low>>>0):this.high*d+(this.low>>>0)},C.toString=function(e){if((e=e||10)<2||36<e)throw RangeError("radix");if(this.isZero())return"0";if(this.isNegative()){if(this.eq(S)){var t=i(e),n=this.div(t),r=n.mul(t).sub(this);return n.toString(e)+r.toInt().toString(e)}return"-"+this.neg().toString(e)}for(var s=i(l(e,6),this.unsigned),a=this,o="";;){var u=a.div(s),c=(a.sub(u.mul(s)).toInt()>>>0).toString(e);if((a=u).isZero())return c+o;for(;c.length<6;)c="0"+c;o=""+c+o}},C.getHighBits=function(){return this.high},C.getHighBitsUnsigned=function(){return this.high>>>0},C.getLowBits=function(){return this.low},C.getLowBitsUnsigned=function(){return this.low>>>0},C.getNumBitsAbs=function(){if(this.isNegative())return this.eq(S)?64:this.neg().getNumBitsAbs();for(var e=0!=this.high?this.high:this.low,t=31;t>0&&0==(e&1<<t);t--);return 0!=this.high?t+33:t+1},C.isZero=function(){return 0===this.high&&0===this.low},C.eqz=C.isZero,C.isNegative=function(){return!this.unsigned&&this.high<0},C.isPositive=function(){return this.unsigned||this.high>=0},C.isOdd=function(){return 1==(1&this.low)},C.isEven=function(){return 0==(1&this.low)},C.equals=function(e){return r(e)||(e=h(e)),(this.unsigned===e.unsigned||this.high>>>31!=1||e.high>>>31!=1)&&this.high===e.high&&this.low===e.low},C.eq=C.equals,C.notEquals=function(e){return!this.eq(e)},C.neq=C.notEquals,C.ne=C.notEquals,C.lessThan=function(e){return this.comp(e)<0},C.lt=C.lessThan,C.lessThanOrEqual=function(e){return this.comp(e)<=0},C.lte=C.lessThanOrEqual,C.le=C.lessThanOrEqual,C.greaterThan=function(e){return this.comp(e)>0},C.gt=C.greaterThan,C.greaterThanOrEqual=function(e){return this.comp(e)>=0},C.gte=C.greaterThanOrEqual,C.ge=C.greaterThanOrEqual,C.compare=function(e){if(r(e)||(e=h(e)),this.eq(e))return 0;var t=this.isNegative(),n=e.isNegative();return t&&!n?-1:!t&&n?1:this.unsigned?e.high>>>0>this.high>>>0||e.high===this.high&&e.low>>>0>this.low>>>0?-1:1:this.sub(e).isNegative()?-1:1},C.comp=C.compare,C.negate=function(){return!this.unsigned&&this.eq(S)?S:this.not().add(x)},C.neg=C.negate,C.add=function(e){r(e)||(e=h(e));var t=this.high>>>16,n=65535&this.high,s=this.low>>>16,a=65535&this.low,o=e.high>>>16,i=65535&e.high,l=e.low>>>16,c=0,d=0,p=0,f=0;return p+=(f+=a+(65535&e.low))>>>16,d+=(p+=s+l)>>>16,c+=(d+=n+i)>>>16,c+=t+o,u((p&=65535)<<16|(f&=65535),(c&=65535)<<16|(d&=65535),this.unsigned)},C.subtract=function(e){return r(e)||(e=h(e)),this.add(e.neg())},C.sub=C.subtract,C.multiply=function(e){if(this.isZero())return g;if(r(e)||(e=h(e)),t)return u(t.mul(this.low,this.high,e.low,e.high),t.get_high(),this.unsigned);if(e.isZero())return g;if(this.eq(S))return e.isOdd()?S:g;if(e.eq(S))return this.isOdd()?S:g;if(this.isNegative())return e.isNegative()?this.neg().mul(e.neg()):this.neg().mul(e).neg();if(e.isNegative())return this.mul(e.neg()).neg();if(this.lt(m)&&e.lt(m))return i(this.toNumber()*e.toNumber(),this.unsigned);var n=this.high>>>16,s=65535&this.high,a=this.low>>>16,o=65535&this.low,l=e.high>>>16,c=65535&e.high,d=e.low>>>16,p=65535&e.low,f=0,y=0,x=0,b=0;return x+=(b+=o*p)>>>16,y+=(x+=a*p)>>>16,x&=65535,y+=(x+=o*d)>>>16,f+=(y+=s*p)>>>16,y&=65535,f+=(y+=a*d)>>>16,y&=65535,f+=(y+=o*c)>>>16,f+=n*p+s*d+a*c+o*l,u((x&=65535)<<16|(b&=65535),(f&=65535)<<16|(y&=65535),this.unsigned)},C.mul=C.multiply,C.divide=function(e){if(r(e)||(e=h(e)),e.isZero())throw Error("division by zero");var n,s,a;if(t)return this.unsigned||-2147483648!==this.high||-1!==e.low||-1!==e.high?u((this.unsigned?t.div_u:t.div_s)(this.low,this.high,e.low,e.high),t.get_high(),this.unsigned):this;if(this.isZero())return this.unsigned?y:g;if(this.unsigned){if(e.unsigned||(e=e.toUnsigned()),e.gt(this))return y;if(e.gt(this.shru(1)))return b;a=y}else{if(this.eq(S))return e.eq(x)||e.eq(v)?S:e.eq(S)?x:(n=this.shr(1).div(e).shl(1)).eq(g)?e.isNegative()?x:v:(s=this.sub(e.mul(n)),a=n.add(s.div(e)));if(e.eq(S))return this.unsigned?y:g;if(this.isNegative())return e.isNegative()?this.neg().div(e.neg()):this.neg().div(e).neg();if(e.isNegative())return this.div(e.neg()).neg();a=g}for(s=this;s.gte(e);){n=Math.max(1,Math.floor(s.toNumber()/e.toNumber()));for(var o=Math.ceil(Math.log(n)/Math.LN2),c=o<=48?1:l(2,o-48),d=i(n),p=d.mul(e);p.isNegative()||p.gt(s);)p=(d=i(n-=c,this.unsigned)).mul(e);d.isZero()&&(d=x),a=a.add(d),s=s.sub(p)}return a},C.div=C.divide,C.modulo=function(e){return r(e)||(e=h(e)),t?u((this.unsigned?t.rem_u:t.rem_s)(this.low,this.high,e.low,e.high),t.get_high(),this.unsigned):this.sub(this.div(e).mul(e))},C.mod=C.modulo,C.rem=C.modulo,C.not=function(){return u(~this.low,~this.high,this.unsigned)},C.and=function(e){return r(e)||(e=h(e)),u(this.low&e.low,this.high&e.high,this.unsigned)},C.or=function(e){return r(e)||(e=h(e)),u(this.low|e.low,this.high|e.high,this.unsigned)},C.xor=function(e){return r(e)||(e=h(e)),u(this.low^e.low,this.high^e.high,this.unsigned)},C.shiftLeft=function(e){return r(e)&&(e=e.toInt()),0==(e&=63)?this:e<32?u(this.low<<e,this.high<<e|this.low>>>32-e,this.unsigned):u(0,this.low<<e-32,this.unsigned)},C.shl=C.shiftLeft,C.shiftRight=function(e){return r(e)&&(e=e.toInt()),0==(e&=63)?this:e<32?u(this.low>>>e|this.high<<32-e,this.high>>e,this.unsigned):u(this.high>>e-32,this.high>=0?0:-1,this.unsigned)},C.shr=C.shiftRight,C.shiftRightUnsigned=function(e){if(r(e)&&(e=e.toInt()),0==(e&=63))return this;var t=this.high;return e<32?u(this.low>>>e|t<<32-e,t>>>e,this.unsigned):u(32===e?t:t>>>e-32,0,this.unsigned)},C.shru=C.shiftRightUnsigned,C.shr_u=C.shiftRightUnsigned,C.toSigned=function(){return this.unsigned?u(this.low,this.high,!1):this},C.toUnsigned=function(){return this.unsigned?this:u(this.low,this.high,!0)},C.toBytes=function(e){return e?this.toBytesLE():this.toBytesBE()},C.toBytesLE=function(){var e=this.high,t=this.low;return[255&t,t>>>8&255,t>>>16&255,t>>>24,255&e,e>>>8&255,e>>>16&255,e>>>24]},C.toBytesBE=function(){var e=this.high,t=this.low;return[e>>>24,e>>>16&255,e>>>8&255,255&e,t>>>24,t>>>16&255,t>>>8&255,255&t]},n.fromBytes=function(e,t,r){return r?n.fromBytesLE(e,t):n.fromBytesBE(e,t)},n.fromBytesLE=function(e,t){return new n(e[0]|e[1]<<8|e[2]<<16|e[3]<<24,e[4]|e[5]<<8|e[6]<<16|e[7]<<24,t)},n.fromBytesBE=function(e,t){return new n(e[4]<<24|e[5]<<16|e[6]<<8|e[7],e[0]<<24|e[1]<<16|e[2]<<8|e[3],t)}},824:e=>{var t=1e3,n=60*t,r=60*n,s=24*r;function a(e,t,n,r){var s=t>=1.5*n;return Math.round(e/n)+" "+r+(s?"s":"")}e.exports=function(e,o){o=o||{};var i,u,l=typeof e;if("string"===l&&e.length>0)return function(e){if(!((e=String(e)).length>100)){var a=/^(-?(?:\d+)?\.?\d+) *(milliseconds?|msecs?|ms|seconds?|secs?|s|minutes?|mins?|m|hours?|hrs?|h|days?|d|weeks?|w|years?|yrs?|y)?$/i.exec(e);if(a){var o=parseFloat(a[1]);switch((a[2]||"ms").toLowerCase()){case"years":case"year":case"yrs":case"yr":case"y":return 315576e5*o;case"weeks":case"week":case"w":return 6048e5*o;case"days":case"day":case"d":return o*s;case"hours":case"hour":case"hrs":case"hr":case"h":return o*r;case"minutes":case"minute":case"mins":case"min":case"m":return o*n;case"seconds":case"second":case"secs":case"sec":case"s":return o*t;case"milliseconds":case"millisecond":case"msecs":case"msec":case"ms":return o;default:return}}}}(e);if("number"===l&&isFinite(e))return o.long?(i=e,(u=Math.abs(i))>=s?a(i,u,s,"day"):u>=r?a(i,u,r,"hour"):u>=n?a(i,u,n,"minute"):u>=t?a(i,u,t,"second"):i+" ms"):function(e){var a=Math.abs(e);return a>=s?Math.round(e/s)+"d":a>=r?Math.round(e/r)+"h":a>=n?Math.round(e/n)+"m":a>=t?Math.round(e/t)+"s":e+"ms"}(e);throw new Error("val is not a non-empty string or a valid number. val="+JSON.stringify(e))}},377:(e,t,n)=>{var r=n(832),s=n(652),a=n(801),o=n(30),i=n(618),u=n(49),l=n(971);l.alea=r,l.xor128=s,l.xorwow=a,l.xorshift7=o,l.xor4096=i,l.tychei=u,e.exports=l},832:function(e,t,n){var r;!function(e,s,a){function o(e){var t,n=this,r=(t=4022871197,function(e){e=String(e);for(var n=0;n<e.length;n++){var r=.02519603282416938*(t+=e.charCodeAt(n));r-=t=r>>>0,t=(r*=t)>>>0,t+=4294967296*(r-=t)}return 2.3283064365386963e-10*(t>>>0)});n.next=function(){var e=2091639*n.s0+2.3283064365386963e-10*n.c;return n.s0=n.s1,n.s1=n.s2,n.s2=e-(n.c=0|e)},n.c=1,n.s0=r(" "),n.s1=r(" "),n.s2=r(" "),n.s0-=r(e),n.s0<0&&(n.s0+=1),n.s1-=r(e),n.s1<0&&(n.s1+=1),n.s2-=r(e),n.s2<0&&(n.s2+=1),r=null}function i(e,t){return t.c=e.c,t.s0=e.s0,t.s1=e.s1,t.s2=e.s2,t}function u(e,t){var n=new o(e),r=t&&t.state,s=n.next;return s.int32=function(){return 4294967296*n.next()|0},s.double=function(){return s()+11102230246251565e-32*(2097152*s()|0)},s.quick=s,r&&("object"==typeof r&&i(r,n),s.state=function(){return i(n,{})}),s}s&&s.exports?s.exports=u:n.amdD&&n.amdO?void 0===(r=function(){return u}.call(t,n,t,s))||(s.exports=r):this.alea=u}(0,e=n.nmd(e),n.amdD)},49:function(e,t,n){var r;!function(e,s,a){function o(e){var t=this,n="";t.next=function(){var e=t.b,n=t.c,r=t.d,s=t.a;return e=e<<25^e>>>7^n,n=n-r|0,r=r<<24^r>>>8^s,s=s-e|0,t.b=e=e<<20^e>>>12^n,t.c=n=n-r|0,t.d=r<<16^n>>>16^s,t.a=s-e|0},t.a=0,t.b=0,t.c=-1640531527,t.d=1367130551,e===Math.floor(e)?(t.a=e/4294967296|0,t.b=0|e):n+=e;for(var r=0;r<n.length+20;r++)t.b^=0|n.charCodeAt(r),t.next()}function i(e,t){return t.a=e.a,t.b=e.b,t.c=e.c,t.d=e.d,t}function u(e,t){var n=new o(e),r=t&&t.state,s=function(){return(n.next()>>>0)/4294967296};return s.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},s.int32=n.next,s.quick=s,r&&("object"==typeof r&&i(r,n),s.state=function(){return i(n,{})}),s}s&&s.exports?s.exports=u:n.amdD&&n.amdO?void 0===(r=function(){return u}.call(t,n,t,s))||(s.exports=r):this.tychei=u}(0,e=n.nmd(e),n.amdD)},652:function(e,t,n){var r;!function(e,s,a){function o(e){var t=this,n="";t.x=0,t.y=0,t.z=0,t.w=0,t.next=function(){var e=t.x^t.x<<11;return t.x=t.y,t.y=t.z,t.z=t.w,t.w^=t.w>>>19^e^e>>>8},e===(0|e)?t.x=e:n+=e;for(var r=0;r<n.length+64;r++)t.x^=0|n.charCodeAt(r),t.next()}function i(e,t){return t.x=e.x,t.y=e.y,t.z=e.z,t.w=e.w,t}function u(e,t){var n=new o(e),r=t&&t.state,s=function(){return(n.next()>>>0)/4294967296};return s.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},s.int32=n.next,s.quick=s,r&&("object"==typeof r&&i(r,n),s.state=function(){return i(n,{})}),s}s&&s.exports?s.exports=u:n.amdD&&n.amdO?void 0===(r=function(){return u}.call(t,n,t,s))||(s.exports=r):this.xor128=u}(0,e=n.nmd(e),n.amdD)},618:function(e,t,n){var r;!function(e,s,a){function o(e){var t=this;t.next=function(){var e,n,r=t.w,s=t.X,a=t.i;return t.w=r=r+1640531527|0,n=s[a+34&127],e=s[a=a+1&127],n^=n<<13,e^=e<<17,n^=n>>>15,e^=e>>>12,n=s[a]=n^e,t.i=a,n+(r^r>>>16)|0},function(e,t){var n,r,s,a,o,i=[],u=128;for(t===(0|t)?(r=t,t=null):(t+="\0",r=0,u=Math.max(u,t.length)),s=0,a=-32;a<u;++a)t&&(r^=t.charCodeAt((a+32)%t.length)),0===a&&(o=r),r^=r<<10,r^=r>>>15,r^=r<<4,r^=r>>>13,a>=0&&(o=o+1640531527|0,s=0==(n=i[127&a]^=r+o)?s+1:0);for(s>=128&&(i[127&(t&&t.length||0)]=-1),s=127,a=512;a>0;--a)r=i[s+34&127],n=i[s=s+1&127],r^=r<<13,n^=n<<17,r^=r>>>15,n^=n>>>12,i[s]=r^n;e.w=o,e.X=i,e.i=s}(t,e)}function i(e,t){return t.i=e.i,t.w=e.w,t.X=e.X.slice(),t}function u(e,t){null==e&&(e=+new Date);var n=new o(e),r=t&&t.state,s=function(){return(n.next()>>>0)/4294967296};return s.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},s.int32=n.next,s.quick=s,r&&(r.X&&i(r,n),s.state=function(){return i(n,{})}),s}s&&s.exports?s.exports=u:n.amdD&&n.amdO?void 0===(r=function(){return u}.call(t,n,t,s))||(s.exports=r):this.xor4096=u}(0,e=n.nmd(e),n.amdD)},30:function(e,t,n){var r;!function(e,s,a){function o(e){var t=this;t.next=function(){var e,n,r=t.x,s=t.i;return e=r[s],n=(e^=e>>>7)^e<<24,n^=(e=r[s+1&7])^e>>>10,n^=(e=r[s+3&7])^e>>>3,n^=(e=r[s+4&7])^e<<7,e=r[s+7&7],n^=(e^=e<<13)^e<<9,r[s]=n,t.i=s+1&7,n},function(e,t){var n,r=[];if(t===(0|t))r[0]=t;else for(t=""+t,n=0;n<t.length;++n)r[7&n]=r[7&n]<<15^t.charCodeAt(n)+r[n+1&7]<<13;for(;r.length<8;)r.push(0);for(n=0;n<8&&0===r[n];++n);for(8==n?r[7]=-1:r[n],e.x=r,e.i=0,n=256;n>0;--n)e.next()}(t,e)}function i(e,t){return t.x=e.x.slice(),t.i=e.i,t}function u(e,t){null==e&&(e=+new Date);var n=new o(e),r=t&&t.state,s=function(){return(n.next()>>>0)/4294967296};return s.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},s.int32=n.next,s.quick=s,r&&(r.x&&i(r,n),s.state=function(){return i(n,{})}),s}s&&s.exports?s.exports=u:n.amdD&&n.amdO?void 0===(r=function(){return u}.call(t,n,t,s))||(s.exports=r):this.xorshift7=u}(0,e=n.nmd(e),n.amdD)},801:function(e,t,n){var r;!function(e,s,a){function o(e){var t=this,n="";t.next=function(){var e=t.x^t.x>>>2;return t.x=t.y,t.y=t.z,t.z=t.w,t.w=t.v,(t.d=t.d+362437|0)+(t.v=t.v^t.v<<4^e^e<<1)|0},t.x=0,t.y=0,t.z=0,t.w=0,t.v=0,e===(0|e)?t.x=e:n+=e;for(var r=0;r<n.length+64;r++)t.x^=0|n.charCodeAt(r),r==n.length&&(t.d=t.x<<10^t.x>>>4),t.next()}function i(e,t){return t.x=e.x,t.y=e.y,t.z=e.z,t.w=e.w,t.v=e.v,t.d=e.d,t}function u(e,t){var n=new o(e),r=t&&t.state,s=function(){return(n.next()>>>0)/4294967296};return s.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},s.int32=n.next,s.quick=s,r&&("object"==typeof r&&i(r,n),s.state=function(){return i(n,{})}),s}s&&s.exports?s.exports=u:n.amdD&&n.amdO?void 0===(r=function(){return u}.call(t,n,t,s))||(s.exports=r):this.xorwow=u}(0,e=n.nmd(e),n.amdD)},971:function(e,t,n){var r;!function(s,a,o){var i,u=256,l=o.pow(u,6),c=o.pow(2,52),h=2*c,d=u-1;function p(e,t,n){var r=[],d=y(g((t=1==t?{entropy:!0}:t||{}).entropy?[e,x(a)]:null==e?function(){try{var e;return i&&(e=i.randomBytes)?e=e(u):(e=new Uint8Array(u),(s.crypto||s.msCrypto).getRandomValues(e)),x(e)}catch(e){var t=s.navigator,n=t&&t.plugins;return[+new Date,s,n,s.screen,x(a)]}}():e,3),r),p=new f(r),b=function(){for(var e=p.g(6),t=l,n=0;e<c;)e=(e+n)*u,t*=u,n=p.g(1);for(;e>=h;)e/=2,t/=2,n>>>=1;return(e+n)/t};return b.int32=function(){return 0|p.g(4)},b.quick=function(){return p.g(4)/4294967296},b.double=b,y(x(p.S),a),(t.pass||n||function(e,t,n,r){return r&&(r.S&&m(r,p),e.state=function(){return m(p,{})}),n?(o.random=e,t):e})(b,d,"global"in t?t.global:this==o,t.state)}function f(e){var t,n=e.length,r=this,s=0,a=r.i=r.j=0,o=r.S=[];for(n||(e=[n++]);s<u;)o[s]=s++;for(s=0;s<u;s++)o[s]=o[a=d&a+e[s%n]+(t=o[s])],o[a]=t;(r.g=function(e){for(var t,n=0,s=r.i,a=r.j,o=r.S;e--;)t=o[s=d&s+1],n=n*u+o[d&(o[s]=o[a=d&a+t])+(o[a]=t)];return r.i=s,r.j=a,n})(u)}function m(e,t){return t.i=e.i,t.j=e.j,t.S=e.S.slice(),t}function g(e,t){var n,r=[],s=typeof e;if(t&&"object"==s)for(n in e)try{r.push(g(e[n],t-1))}catch(e){}return r.length?r:"string"==s?e:e+"\0"}function y(e,t){for(var n,r=e+"",s=0;s<r.length;)t[d&s]=d&(n^=19*t[d&s])+r.charCodeAt(s++);return x(t)}function x(e){return String.fromCharCode.apply(0,e)}if(y(o.random(),a),e.exports){e.exports=p;try{i=n(42)}catch(e){}}else void 0===(r=function(){return p}.call(t,n,t,e))||(e.exports=r)}("undefined"!=typeof self?self:this,[],Math)},782:(e,t,n)=>{"use strict";n.r(t),n.d(t,{PoseDetector:()=>tP});var r={};n.r(r),n.d(r,{CompositeArrayBuffer:()=>qs,browserFiles:()=>Ao,browserHTTPRequest:()=>Uo,concatenateArrayBuffers:()=>ta,copyModel:()=>Ua,decodeWeights:()=>Qs,encodeWeights:()=>Ys,fromMemory:()=>Ho,fromMemorySync:()=>jo,getLoadHandlers:()=>pa,getModelArtifactsForJSON:()=>aa,getModelArtifactsForJSONSync:()=>sa,getModelArtifactsInfoForJSON:()=>oa,getSaveHandlers:()=>da,getWeightSpecs:()=>ia,http:()=>zo,isHTTPScheme:()=>Lo,listModels:()=>Ba,loadWeights:()=>Po,moveModel:()=>Va,registerLoadRouter:()=>ha,registerSaveRouter:()=>ca,removeModel:()=>za,weightsLoaderFactory:()=>Do,withSaveHandler:()=>Ko,withSaveHandlerSync:()=>qo});var s={};n.r(s),n.d(s,{assertParamsValid:()=>ni,computeFlatOffset:()=>mi,computeOutShape:()=>si,getNormalizedAxes:()=>ui,isSliceContinous:()=>fi,maskToAxes:()=>ri,parseSliceParams:()=>gi,sliceInfo:()=>yi,startForAxis:()=>di,startIndicesWithElidedDims:()=>li,stopForAxis:()=>pi,stopIndicesWithElidedDims:()=>ci,stridesForAxis:()=>hi,stridesWithElidedDims:()=>ai});var a={};n.r(a),n.d(a,{conv2d:()=>Rh,depthwiseConv2d:()=>Oh,matMul:()=>Fh});var o={};n.r(o),n.d(o,{collectGatherOpShapeInfo:()=>Dp,computeOutShape:()=>Pp,segOpComputeOptimalWindowSize:()=>Fp});var i={};n.r(i),n.d(i,{ERF_A1:()=>Zd,ERF_A2:()=>Jd,ERF_A3:()=>ep,ERF_A4:()=>tp,ERF_A5:()=>np,ERF_P:()=>Qd,PARALLELIZE_THRESHOLD:()=>zd,RowPartitionType:()=>Pd,SELU_SCALE:()=>Yd,SELU_SCALEALPHA:()=>Xd,applyActivation:()=>Nh,assertAndGetBroadcastShape:()=>Io,assertAxesAreInnerMostDims:()=>Gu,assertParamsConsistent:()=>Od,assignToTypedArray:()=>up,axesAreInnerMostDims:()=>zu,calculateShapes:()=>sh,checkEinsumDimSizes:()=>yp,checkPadOnDimRoundingMode:()=>Hi,combineLocations:()=>Uu,combineRaggedTensorToTensorShapes:()=>Dd,complexWithEvenIndex:()=>ap,complexWithOddIndex:()=>op,computeConv2DInfo:()=>Fi,computeConv3DInfo:()=>Pi,computeDefaultPad:()=>Di,computeDilation2DInfo:()=>_i,computeOptimalWindowSize:()=>Ud,computeOutAndReduceShapes:()=>Vu,computeOutShape:()=>Fd,computePool2DInfo:()=>Ai,computePool3DInfo:()=>Oi,convertConv2DDataFormat:()=>Gi,decodeEinsumEquation:()=>mp,eitherStridesOrDilationsAreOne:()=>Vi,expandShapeToKeepDim:()=>Wu,exponent:()=>cp,exponents:()=>lp,fromStringArrayToUint8:()=>Lp,fromUint8ToStringArray:()=>Mp,getAxesPermutation:()=>Hu,getBroadcastDims:()=>So,getComplexWithIndex:()=>ip,getEinsumComputePath:()=>xp,getEinsumPermutation:()=>gp,getFusedBiasGradient:()=>$h,getFusedDyActivation:()=>Th,getImageCenter:()=>Vd,getInnerMostAxes:()=>Ku,getPermuted:()=>Gd,getRaggedRank:()=>Ld,getReductionAxes:()=>Co,getReshaped:()=>Wd,getReshapedPermuted:()=>Hd,getRowPartitionTypesHelper:()=>Md,getSliceBeginCoords:()=>jd,getSliceSize:()=>Kd,getSparseFillEmptyRowsIndicesDenseShapeMismatch:()=>kp,getSparseFillEmptyRowsNegativeIndexErrorMessage:()=>Sp,getSparseFillEmptyRowsOutOfRangeIndexErrorMessage:()=>Cp,getSparseReshapeEmptyTensorZeroOutputDimErrorMessage:()=>$p,getSparseReshapeInputOutputMismatchErrorMessage:()=>Ep,getSparseReshapeInputOutputMultipleErrorMessage:()=>Np,getSparseReshapeMultipleNegativeOneOutputDimErrorMessage:()=>Ip,getSparseReshapeNegativeOutputDimErrorMessage:()=>Tp,getSparseSegmentReductionIndicesOutOfRangeErrorMessage:()=>Op,getSparseSegmentReductionNegativeSegmentIdsErrorMessage:()=>Rp,getSparseSegmentReductionNonIncreasingSegmentIdsErrorMessage:()=>_p,getSparseSegmentReductionSegmentIdOutOfRangeErrorMessage:()=>Ap,getUndoAxesPermutation:()=>ju,isIdentityPermutation:()=>bp,log:()=>kr,mergeRealAndImagArrays:()=>rp,prepareAndValidate:()=>qd,prepareSplitSize:()=>wp,segment_util:()=>o,shouldFuse:()=>Eh,slice_util:()=>s,splitRealAndImagArrays:()=>sp,stridesOrDilationsArePositive:()=>Wi,tupleValuesAreOne:()=>Ui,upcastType:()=>ws,validateDefaultValueShape:()=>Bd,validateInput:()=>rh,validateUpdateShape:()=>nh,warn:()=>wr});var u={};n.r(u),n.d(u,{addImpl:()=>dm,bincountImpl:()=>fm,bincountReduceImpl:()=>mm,bitwiseAndImpl:()=>gm,castImpl:()=>um,ceilImpl:()=>vm,concatImpl:()=>wm,equalImpl:()=>km,expImpl:()=>Sm,expm1Impl:()=>Cm,floorImpl:()=>Im,gatherNdImpl:()=>Tm,gatherV2Impl:()=>$m,greaterEqualImpl:()=>Em,greaterImpl:()=>Nm,lessEqualImpl:()=>_m,lessImpl:()=>Rm,linSpaceImpl:()=>Am,logImpl:()=>Om,maxImpl:()=>Fm,maximumImpl:()=>Pm,minimumImpl:()=>Dm,multiplyImpl:()=>Mm,negImpl:()=>Bm,notEqualImpl:()=>zm,prodImpl:()=>Vm,raggedGatherImpl:()=>Gm,raggedRangeImpl:()=>jm,raggedTensorToTensorImpl:()=>Qm,rangeImpl:()=>Zm,rsqrtImpl:()=>Jm,scatterImpl:()=>eg,sigmoidImpl:()=>tg,simpleAbsImpl:()=>rm,sliceImpl:()=>ng,sparseFillEmptyRowsImpl:()=>rg,sparseReshapeImpl:()=>sg,sparseSegmentReductionImpl:()=>ag,sqrtImpl:()=>og,staticRegexReplaceImpl:()=>ig,stridedSliceImpl:()=>ug,stringNGramsImpl:()=>cg,stringSplitImpl:()=>dg,stringToHashBucketFastImpl:()=>pg,subImpl:()=>fg,tileImpl:()=>gg,topKImpl:()=>bg,transposeImpl:()=>Um,uniqueImpl:()=>vg});var l={};n.r(l),n.d(l,{json:()=>qC});var c={};n.r(c),n.d(c,{json:()=>XC});var h={};n.r(h),n.d(h,{json:()=>YC});var d={};n.r(d),n.d(d,{json:()=>QC});var p={};n.r(p),n.d(p,{json:()=>ZC});var f={};n.r(f),n.d(f,{json:()=>JC});var m={};n.r(m),n.d(m,{json:()=>eI});var g={};n.r(g),n.d(g,{json:()=>tI});var y={};n.r(y),n.d(y,{json:()=>nI});var x={};n.r(x),n.d(x,{json:()=>rI});var b={};n.r(b),n.d(b,{json:()=>sI});var v={};n.r(v),n.d(v,{json:()=>aI});var w={};n.r(w),n.d(w,{json:()=>oI});var k={};n.r(k),n.d(k,{json:()=>iI});var S={};n.r(S),n.d(S,{json:()=>uI});var C={};n.r(C),n.d(C,{json:()=>lI});var I={};n.r(I),n.d(I,{json:()=>cI});var T={};n.r(T),n.d(T,{json:()=>hI});var $={};n.r($),n.d($,{json:()=>dI});var N={};n.r(N),n.d(N,{OP_SCOPE_SUFFIX:()=>Vs,abs:()=>ko,acos:()=>bi,acosh:()=>vi,add:()=>ro,addN:()=>wi,all:()=>ki,any:()=>Si,argMax:()=>Ci,argMin:()=>Ii,asin:()=>Ti,asinh:()=>$i,atan:()=>Ni,atan2:()=>Ei,atanh:()=>Ri,avgPool:()=>Ki,avgPool3d:()=>qi,basicLSTMCell:()=>eu,batchNorm:()=>nu,batchNorm2d:()=>ru,batchNorm3d:()=>su,batchNorm4d:()=>au,batchToSpaceND:()=>tu,bincount:()=>ou,bitwiseAnd:()=>iu,booleanMaskAsync:()=>mh,broadcastArgs:()=>uu,broadcastTo:()=>lu,buffer:()=>Ha,cast:()=>ja,ceil:()=>cu,clipByValue:()=>hu,clone:()=>Ka,complex:()=>Gs,concat:()=>Xi,concat1d:()=>du,concat2d:()=>pu,concat3d:()=>fu,concat4d:()=>mu,conv1d:()=>yu,conv2d:()=>gu,conv2dTranspose:()=>bu,conv3d:()=>vu,conv3dTranspose:()=>ku,cos:()=>Su,cosh:()=>Cu,cosineWindow:()=>Sh,cumprod:()=>Iu,cumsum:()=>Tu,denseBincount:()=>$u,depthToSpace:()=>Nu,depthwiseConv2d:()=>Eu,diag:()=>Ru,dilation2d:()=>_u,div:()=>ao,divNoNan:()=>Fu,dot:()=>Pu,dropout:()=>wh,einsum:()=>Du,elu:()=>Mu,enclosingPowerOfTwo:()=>kh,ensureShape:()=>Lu,equal:()=>Au,erf:()=>Bu,euclideanNorm:()=>Ju,exp:()=>el,expandDims:()=>tl,expm1:()=>nl,eye:()=>sl,fft:()=>zc,fill:()=>bo,floor:()=>al,floorDiv:()=>so,fused:()=>a,gather:()=>ol,gatherND:()=>vh,greater:()=>il,greaterEqual:()=>ul,ifft:()=>Uc,imag:()=>ll,image:()=>$d,inTopKAsync:()=>Ch,irfft:()=>Vc,isFinite:()=>cl,isInf:()=>hl,isNaN:()=>dl,leakyRelu:()=>pl,less:()=>fl,lessEqual:()=>ml,linalg:()=>Nd,linspace:()=>gl,localResponseNormalization:()=>yl,log:()=>xl,log1p:()=>bl,logSigmoid:()=>kl,logSoftmax:()=>Sl,logSumExp:()=>Cl,logicalAnd:()=>Il,logicalNot:()=>Tl,logicalOr:()=>$l,logicalXor:()=>Nl,losses:()=>Ed,lowerBound:()=>_l,matMul:()=>Yi,max:()=>qu,maxPool:()=>Al,maxPool3d:()=>Ol,maxPoolWithArgmax:()=>Fl,maximum:()=>To,mean:()=>Pl,meshgrid:()=>Ll,min:()=>Xu,minimum:()=>Bl,mirrorPad:()=>zl,mod:()=>Ul,moments:()=>Vl,movingAverage:()=>yh,mul:()=>oo,multiRNNCell:()=>Wl,multinomial:()=>Gl,neg:()=>vl,norm:()=>Zu,notEqual:()=>Hl,oneHot:()=>jl,ones:()=>Ml,onesLike:()=>Kl,op:()=>Ws,outerProduct:()=>ql,pad:()=>Xl,pad1d:()=>Yl,pad2d:()=>Ql,pad3d:()=>Zl,pad4d:()=>Jl,pool:()=>tc,pow:()=>vo,prelu:()=>nc,print:()=>qa,prod:()=>rc,raggedGather:()=>sc,raggedRange:()=>ac,raggedTensorToTensor:()=>oc,rand:()=>ic,randomGamma:()=>dc,randomNormal:()=>pc,randomStandardNormal:()=>fc,randomUniform:()=>mc,randomUniformInt:()=>gc,range:()=>yc,real:()=>xc,reciprocal:()=>bc,relu:()=>vc,relu6:()=>wc,reshape:()=>ji,reverse:()=>kc,reverse1d:()=>Sc,reverse2d:()=>Cc,reverse3d:()=>Ic,reverse4d:()=>Tc,rfft:()=>Gc,round:()=>$c,rsqrt:()=>Nc,scalar:()=>ho,scatterND:()=>xh,searchSorted:()=>Rl,selu:()=>Ec,separableConv2d:()=>Rc,setdiff1dAsync:()=>_c,sigmoid:()=>Qi,sign:()=>Ac,signal:()=>Td,sin:()=>Oc,sinh:()=>Fc,slice:()=>Zi,slice1d:()=>Pc,slice2d:()=>Dc,slice3d:()=>Mc,slice4d:()=>Lc,softmax:()=>Bc,softplus:()=>wl,spaceToBatchND:()=>ec,sparse:()=>Rd,sparseToDense:()=>bh,spectral:()=>Id,split:()=>Wc,sqrt:()=>io,square:()=>uo,squaredDifference:()=>Hc,squeeze:()=>jc,stack:()=>Kc,step:()=>qc,stridedSlice:()=>Xc,string:()=>_d,sub:()=>wo,sum:()=>Yu,tan:()=>Yc,tanh:()=>Ji,tensor:()=>js,tensor1d:()=>Qc,tensor2d:()=>Zc,tensor3d:()=>Xo,tensor4d:()=>Jc,tensor5d:()=>eh,tensor6d:()=>th,tensorScatterUpdate:()=>ah,tile:()=>rl,topk:()=>oh,transpose:()=>gh,truncatedNormal:()=>ih,unique:()=>uh,unsortedSegmentSum:()=>lh,unstack:()=>ch,upperBound:()=>hh,variable:()=>dh,where:()=>Ou,whereAsync:()=>fh,zeros:()=>Dl,zerosLike:()=>lo});class E{constructor(e,t){this.backend=e,this.dataMover=t,this.data=new WeakMap,this.dataIdsCount=0}get(e){return this.data.has(e)||this.dataMover.moveData(this.backend,e),this.data.get(e)}set(e,t){this.dataIdsCount++,this.data.set(e,t)}has(e){return this.data.has(e)}delete(e){return this.dataIdsCount--,this.data.delete(e)}numDataIds(){return this.dataIdsCount}}class R{refCount(e){return _("refCount")}incRef(e){return _("incRef")}timerAvailable(){return!0}time(e){return _("time")}read(e){return _("read")}readSync(e){return _("readSync")}readToGPU(e,t){return _("readToGPU")}numDataIds(){return _("numDataIds")}disposeData(e,t){return _("disposeData")}write(e,t,n){return _("write")}move(e,t,n,r,s){return _("move")}createTensorFromGPUData(e,t,n){return _("createTensorFromGPUData")}memory(){return _("memory")}floatPrecision(){return _("floatPrecision")}epsilon(){return 32===this.floatPrecision()?1e-7:1e-4}dispose(){return _("dispose")}}function _(e){throw new Error(`'${e}' not yet implemented or not found in the registry. This kernel may not be supported by the tfjs backend you have chosen`)}function A(e,t,n){return Math.max(e,Math.min(t,n))}function O(e){return e%2==0?e:e+1}function F(e,t,n){const r=e[t];e[t]=e[n],e[n]=r}function P(e){let t=0;for(let n=0;n<e.length;n++)t+=e[n];return t}function D(e,t){if(!e)throw new Error("string"==typeof t?t:t())}function M(e,t,n=""){D(z(e,t),(()=>n+` Shapes ${e} and ${t} must match`))}function L(e){D(null!=e,(()=>"The input to the tensor constructor must be a non-null value."))}function B(e){if(0===e.length)return 1;let t=e[0];for(let n=1;n<e.length;n++)t*=e[n];return t}function z(e,t){if(e===t)return!0;if(null==e||null==t)return!1;if(e.length!==t.length)return!1;for(let n=0;n<e.length;n++)if(e[n]!==t[n])return!1;return!0}function U(e){return e%1==0}function V(e){const t=Math.ceil(Math.sqrt(e));return[t,Math.ceil(e/t)]}function W(e,t){return t<=e.length?e:e+" ".repeat(t-e.length)}function G(e,t=(e=>0),n,r){return new Promise(((s,a)=>{let o=0;const i=()=>{if(e())return void s();o++;const u=t(o);null!=n&&o>=n?a():null!=r?r(i,u):setTimeout(i,u)};i()}))}function H(e,t){let n=1,r=-1;for(let t=0;t<e.length;++t)if(e[t]>=0)n*=e[t];else if(-1===e[t]){if(-1!==r)throw Error(`Shapes can only have 1 implicit size. Found -1 at dim ${r} and dim ${t}`);r=t}else if(e[t]<0)throw Error(`Shapes can not be < 0. Found ${e[t]} at dim ${t}`);if(-1===r){if(t>0&&t!==n)throw Error(`Size(${t}) must match the product of shape ${e}`);return e}if(0===n)throw Error(`Cannot infer the missing size in [${e}] when there are 0 elements`);if(t%n!=0)throw Error(`The implicit shape can't be a fractional number. Got ${t} / ${n}`);const s=e.slice();return s[r]=t/n,s}function j(e,t){const n=t.length;return D((e=null==e?t.map(((e,t)=>t)):[].concat(e)).every((e=>e>=-n&&e<n)),(()=>`All values in axis param must be in range [-${n}, ${n}) but got axis ${e}`)),D(e.every((e=>U(e))),(()=>`All values in axis param must be integers but got axis ${e}`)),e.map((e=>e<0?n+e:e))}function K(e,t){const n=[],r=[],s=null!=t&&Array.isArray(t)&&0===t.length,a=null==t||s?null:j(t,e).sort();let o=0;for(let t=0;t<e.length;++t){if(null!=a){if(a[o]===t&&1!==e[t])throw new Error(`Can't squeeze axis ${t} since its dim '${e[t]}' is not 1`);(null==a[o]||a[o]>t)&&1===e[t]&&(n.push(e[t]),r.push(t)),a[o]<=t&&o++}1!==e[t]&&(n.push(e[t]),r.push(t))}return{newShape:n,keptDims:r}}function q(e,t){return X(e,t)}function X(e,t){let n=null;if(null==e||"float32"===e)n=new Float32Array(t);else if("int32"===e)n=new Int32Array(t);else if("bool"===e)n=new Uint8Array(t);else{if("string"!==e)throw new Error(`Unknown data type ${e}`);n=new Array(t)}return n}function Y(e,t){return!("complex64"===t||"float32"===t&&"complex64"!==e||"int32"===t&&"float32"!==e&&"complex64"!==e||"bool"===t&&"bool"===e)}function Q(e){if("float32"===e||"int32"===e)return 4;if("complex64"===e)return 8;if("bool"===e)return 1;throw new Error(`Unknown dtype ${e}`)}function Z(e){return"string"==typeof e||e instanceof String}function J(e){return Array.isArray(e)?J(e[0]):e instanceof Float32Array?"float32":e instanceof Int32Array||e instanceof Uint8Array||e instanceof Uint8ClampedArray?"int32":"number"==typeof e?"float32":Z(e)?"string":"boolean"==typeof e?"bool":"float32"}function ee(e){return!!(e&&e.constructor&&e.call&&e.apply)}function te(e,t){for(let n=t;n<e;++n)if(e%n==0)return n;return e}function ne(e){const t=e.length;if(t<2)return[];const n=new Array(t-1);n[t-2]=e[t-1];for(let r=t-3;r>=0;--r)n[r]=n[r+1]*e[r+1];return n}function re(e,t,n,r=!1){const s=new Array;if(1===t.length){const a=t[0]*(r?2:1);for(let t=0;t<a;t++)s[t]=n[e+t]}else{const a=t[0],o=t.slice(1),i=o.reduce(((e,t)=>e*t))*(r?2:1);for(let t=0;t<a;t++)s[t]=re(e+t*i,o,n,r)}return s}function se(e,t,n=!1){if(0===e.length)return t[0];const r=e.reduce(((e,t)=>e*t))*(n?2:1);if(0===r)return[];if(r!==t.length)throw new Error(`[${e}] does not match the input size ${t.length}${n?" for a complex tensor":""}.`);return re(0,e,t,n)}function ae(e,t){const n=oe(e,t);for(let e=0;e<n.length;e++)n[e]=1;return n}function oe(e,t){if(null==t||"float32"===t||"complex64"===t)return new Float32Array(e);if("int32"===t)return new Int32Array(e);if("bool"===t)return new Uint8Array(e);throw new Error(`Unknown data type ${t}`)}function ie(e){e.forEach((t=>{D(Number.isInteger(t)&&t>=0,(()=>`Tensor must have a shape comprised of positive integers but got shape [${e}].`))}))}function ue(e,t,n){if(0===t)return 0;if(1===t)return e[0];let r=e[e.length-1];for(let t=0;t<e.length-1;++t)r+=n[t]*e[t];return r}function le(e,t,n){if(0===t)return[];if(1===t)return[e];const r=new Array(t);for(let t=0;t<r.length-1;++t)r[t]=Math.floor(e/n[t]),e-=r[t]*n[t];return r[r.length-1]=e,r}function ce(e){return e&&e.then&&"function"==typeof e.then}const he="tfjsflags";class de{constructor(e){this.global=e,this.flags={},this.flagRegistry={},this.urlFlags={},this.getQueryParams=pe,this.populateURLFlags()}setPlatform(e,t){null!=this.platform&&(fe().getBool("IS_TEST")||fe().getBool("PROD")||console.warn(`Platform ${this.platformName} has already been set. Overwriting the platform with ${e}.`)),this.platformName=e,this.platform=t}registerFlag(e,t,n){if(this.flagRegistry[e]={evaluationFn:t,setHook:n},null!=this.urlFlags[e]){const t=this.urlFlags[e];fe().getBool("IS_TEST")||fe().getBool("PROD")||console.warn(`Setting feature override from URL ${e}: ${t}.`),this.set(e,t)}}async getAsync(e){return e in this.flags||(this.flags[e]=await this.evaluateFlag(e)),this.flags[e]}get(e){if(e in this.flags)return this.flags[e];const t=this.evaluateFlag(e);if(ce(t))throw new Error(`Flag ${e} cannot be synchronously evaluated. Please use getAsync() instead.`);return this.flags[e]=t,this.flags[e]}getNumber(e){return this.get(e)}getBool(e){return this.get(e)}getString(e){return this.get(e)}getFlags(){return this.flags}get features(){return this.flags}set(e,t){if(null==this.flagRegistry[e])throw new Error(`Cannot set flag ${e} as it has not been registered.`);this.flags[e]=t,null!=this.flagRegistry[e].setHook&&this.flagRegistry[e].setHook(t)}evaluateFlag(e){if(null==this.flagRegistry[e])throw new Error(`Cannot evaluate flag '${e}': no evaluation function found.`);return this.flagRegistry[e].evaluationFn()}setFlags(e){this.flags=Object.assign({},e)}reset(){this.flags={},this.urlFlags={},this.populateURLFlags()}populateURLFlags(){if(void 0===this.global||void 0===this.global.location||void 0===this.global.location.search)return;const e=this.getQueryParams(this.global.location.search);he in e&&e[he].split(",").forEach((e=>{const[t,n]=e.split(":");this.urlFlags[t]=function(e,t){const n=t.toLowerCase();return"true"===n||"false"===n?"true"===n:""+ +n===n?+n:t}(0,n)}))}}function pe(e){const t={};return e.replace(/[?&]([^=?&]+)(?:=([^&]*))?/g,((e,...n)=>(function(e,t,n){e[decodeURIComponent(t)]=decodeURIComponent(n||"")}(t,n[0],n[1]),n.join("=")))),t}function fe(){return ge}let me,ge=null;function ye(){if(null==me){let e;if("undefined"!=typeof window)e=window;else if(void 0!==n.g)e=n.g;else if("undefined"!=typeof process)e=process;else{if("undefined"==typeof self)throw new Error("Could not find a global object");e=self}me=e}return me}function xe(e,t){const n=function(){const e=ye();return null==e._tfGlobals&&(e._tfGlobals=new Map),e._tfGlobals}();if(n.has(e))return n.get(e);{const r=t();return n.set(e,r),n.get(e)}}const be="Abs",ve="Acos",we="Acosh",ke="Add",Se="AddN",Ce="All",Ie="Any",Te="ArgMax",$e="ArgMin",Ne="Asin",Ee="Asinh",Re="Atan",_e="Atanh",Ae="Atan2",Oe="AvgPool",Fe="AvgPoolGrad",Pe="AvgPool3D",De="BatchMatMul",Me="BatchToSpaceND",Le="Bincount",Be="BitwiseAnd",ze="BroadcastArgs",Ue="Cast",Ve="Ceil",We="ClipByValue",Ge="Complex",He="ComplexAbs",je="Concat",Ke="Conv2D",qe="Conv2DBackpropFilter",Xe="Conv2DBackpropInput",Ye="Conv3D",Qe="Conv3DBackpropInputV2",Ze="Cos",Je="Cosh",et="Cumprod",tt="Cumsum",nt="CropAndResize",rt="DenseBincount",st="DepthToSpace",at="DepthwiseConv2dNative",ot="DepthwiseConv2dNativeBackpropFilter",it="DepthwiseConv2dNativeBackpropInput",ut="Diag",lt="Dilation2D",ct="Draw",ht="RealDiv",dt="Einsum",pt="Elu",ft="Erf",mt="Equal",gt="Exp",yt="ExpandDims",xt="Expm1",bt="FFT",vt="Fill",wt="FlipLeftRight",kt="Floor",St="FloorDiv",Ct="FusedBatchNorm",It="GatherV2",Tt="GatherNd",$t="Greater",Nt="GreaterEqual",Et="Identity",Rt="IFFT",_t="Imag",At="IsFinite",Ot="IsInf",Ft="IsNan",Pt="LeakyRelu",Dt="Less",Mt="LessEqual",Lt="LinSpace",Bt="Log",zt="Log1p",Ut="LogicalAnd",Vt="LogicalNot",Wt="LogicalOr",Gt="LRN",Ht="Max",jt="Maximum",Kt="MaxPool",qt="MaxPool3D",Xt="MaxPoolWithArgmax",Yt="Mean",Qt="Min",Zt="Minimum",Jt="MirrorPad",en="Mod",tn="Multinomial",nn="Multiply",rn="Neg",sn="NotEqual",an="NonMaxSuppressionV3",on="NonMaxSuppressionV4",un="NonMaxSuppressionV5",ln="OnesLike",cn="OneHot",hn="Pack",dn="PadV2",pn="Pow",fn="Prelu",mn="Prod",gn="RaggedGather",yn="RaggedRange",xn="RaggedTensorToTensor",bn="Range",vn="Real",wn="Reciprocal",kn="Relu",Sn="Reshape",Cn="ResizeNearestNeighbor",In="ResizeBilinear",Tn="Relu6",$n="Reverse",Nn="Round",En="Rsqrt",Rn="ScatterNd",_n="TensorScatterUpdate",An="SearchSorted",On="Select",Fn="Selu",Pn="Slice",Dn="Sin",Mn="Sinh",Ln="Sign",Bn="Sigmoid",zn="Softplus",Un="Sqrt",Vn="Sum",Wn="SpaceToBatchND",Gn="SplitV",Hn="Softmax",jn="SparseFillEmptyRows",Kn="SparseReshape",qn="SparseSegmentMean",Xn="SparseSegmentSum",Yn="SparseToDense",Qn="SquaredDifference",Zn="Square",Jn="StaticRegexReplace",er="StridedSlice",tr="StringNGrams",nr="StringSplit",rr="StringToHashBucketFast",sr="Sub",ar="Tan",or="Tanh",ir="Tile",ur="TopK",lr="Transform",cr="Transpose",hr="Unique",dr="Unpack",pr="UnsortedSegmentSum",fr="ZerosLike",mr="Step",gr="FromPixels",yr="RotateWithOffset",xr="_FusedMatMul",br="FusedConv2D",vr="FusedDepthwiseConv2D";function wr(...e){fe().getBool("IS_TEST")||fe().getBool("PROD")||console.warn(...e)}function kr(...e){fe().getBool("IS_TEST")||fe().getBool("PROD")||console.log(...e)}const Sr=xe("kernelRegistry",(()=>new Map)),Cr=xe("gradRegistry",(()=>new Map));function Ir(e,t){const n=Er(e,t);return Sr.get(n)}function Tr(e){return Cr.get(e)}function $r(e){const t=Sr.entries(),n=[];for(;;){const{done:r,value:s}=t.next();if(r)break;const[a,o]=s,[i]=a.split("_");i===e&&n.push(o)}return n}function Nr(e){const{kernelName:t,backendName:n}=e,r=Er(t,n);Sr.has(r)&&wr(`The kernel '${t}' for backend '${n}' is already registered`),Sr.set(r,e)}function Er(e,t){return`${t}_${e}`}function Rr(e){return e instanceof Float32Array||e instanceof Int32Array||e instanceof Uint8Array||e instanceof Uint8ClampedArray}var _r=n(720);const Ar=n.n(_r)()||_r;function Or(e){return Ar.fromString(e,!0,16)}const Fr=Or("c3a5c85c97cb3127"),Pr=Or("b492b66fbe98f273"),Dr=Or("9ae16a3b2f90404f");function Mr(e){return e.xor(e.shru(47))}function Lr(e,t,n){const r=e.slice(t,t+n);return Ar.fromBytes(Array.from(r),!0,!0)}function Br(e,t){return Lr(e,t,8)}function zr(e,t){return Lr(e,t,4)}function Ur(e,t){return 0===t?e:e.shru(t).or(e.shl(64-t))}function Vr(e,t,n=Or("9ddfea08eb382d69")){let r=e.xor(t).mul(n);r=r.xor(r.shru(47));let s=t.xor(r).mul(n);return s=s.xor(s.shru(47)),s=s.mul(n),s}function Wr(e,t,n,r){return function(e,t,n,r,s,a){s=s.add(e),a=Ur(a.add(s).add(r),21);const o=s;return s=(s=s.add(t)).add(n),a=a.add(Ur(s,44)),[s.add(r),a.add(o)]}(Br(e,t),Br(e,t+8),Br(e,t+16),Br(e,t+24),n,r)}function Gr(e,t=e.length){const n=Ar.fromNumber(81,!0);if(t<=32)return t<=16?function(e,t=e.length){if(t>=8){const n=Dr.add(2*t),r=Br(e,0).add(Dr),s=Br(e,t-8);return Vr(Ur(s,37).mul(n).add(r),Ur(r,25).add(s).mul(n),n)}if(t>=4){const n=Dr.add(2*t);return Vr(zr(e,0).shl(3).add(t),zr(e,t-4),n)}if(t>0){const n=e[0]+(e[t>>1]<<8),r=t+(e[t-1]<<2);return Mr(Dr.mul(n).xor(Fr.mul(r))).mul(Dr)}return Dr}(e,t):function(e,t=e.length){const n=Dr.add(2*t),r=Br(e,0).mul(Pr),s=Br(e,8),a=Br(e,t-8).mul(n),o=Br(e,t-16).mul(Dr);return Vr(Ur(r.add(s),43).add(Ur(a,30)).add(o),r.add(Ur(s.add(Dr),18)).add(a),n)}(e,t);if(t<=64)return function(e,t=e.length){const n=Dr.add(2*t),r=Br(e,0).mul(Dr),s=Br(e,8),a=Br(e,t-8).mul(n),o=Br(e,t-16).mul(Dr),i=Ur(r.add(s),43).add(Ur(a,30)).add(o),u=Vr(i,r.add(Ur(s.add(Dr),18)).add(a),n),l=Br(e,16).mul(n),c=Br(e,24),h=i.add(Br(e,t-32)).mul(n),d=u.add(Br(e,t-24)).mul(n);return Vr(Ur(l.add(c),43).add(Ur(h,30)).add(d),l.add(Ur(c.add(r),18)).add(h),n)}(e,t);let r=n,s=n.mul(Pr).add(113),a=Mr(s.mul(Dr).add(113)).mul(Dr),o=[Ar.UZERO,Ar.UZERO],i=[Ar.UZERO,Ar.UZERO];r=r.mul(Dr).add(Br(e,0));let u=0;const l=64*(t-1>>6),c=l+(t-1&63)-63;do{r=Ur(r.add(s).add(o[0]).add(Br(e,u+8)),37).mul(Pr),s=Ur(s.add(o[1]).add(Br(e,u+48)),42).mul(Pr),r=r.xor(i[1]),s=s.add(o[0]).add(Br(e,u+40)),a=Ur(a.add(i[0]),33).mul(Pr),o=Wr(e,u,o[1].mul(Pr),r.add(i[0])),i=Wr(e,u+32,a.add(i[1]),s.add(Br(e,u+16))),[a,r]=[r,a],u+=64}while(u!==l);const h=Pr.add(a.and(255).shl(1));return u=c,i[0]=i[0].add(t-1&63),o[0]=o[0].add(i[0]),i[0]=i[0].add(o[0]),r=Ur(r.add(s).add(o[0]).add(Br(e,u+8)),37).mul(h),s=Ur(s.add(o[1]).add(Br(e,u+48)),42).mul(h),r=r.xor(i[1].mul(9)),s=s.add(o[0].mul(9).add(Br(e,u+40))),a=Ur(a.add(i[0]),33).mul(h),o=Wr(e,u,o[1].mul(h),r.add(i[0])),i=Wr(e,u+32,a.add(i[1]),s.add(Br(e,u+16))),[a,r]=[r,a],Vr(Vr(o[0],i[0],h).add(Mr(s).mul(Fr)).add(a),Vr(o[1],i[1],h).add(r),h)}function Hr(e,t){return"string"===t?qr(e):jr([e],t)}function jr(e,t){if("string"===t)throw new Error("Cannot convert a string[] to a TypedArray");if(Array.isArray(e)&&(e=Qr(e)),fe().getBool("DEBUG")&&function(e,t){for(let n=0;n<e.length;n++){const r=e[n];if(isNaN(r)||!isFinite(r))throw Error(`A tensor of type ${t} being uploaded contains ${r}.`)}}(e,t),function(e,t){return e instanceof Float32Array&&"float32"===t||e instanceof Int32Array&&"int32"===t||e instanceof Uint8Array&&"bool"===t}(e,t))return e;if(null==t||"float32"===t||"complex64"===t)return new Float32Array(e);if("int32"===t)return new Int32Array(e);if("bool"===t){const t=new Uint8Array(e.length);for(let n=0;n<t.length;++n)0!==Math.round(e[n])&&(t[n]=1);return t}throw new Error(`Unknown data type ${t}`)}function Kr(){return fe().platform.now()}function qr(e,t="utf-8"){return t=t||"utf-8",fe().platform.encode(e,t)}function Xr(e,t="utf-8"){return t=t||"utf-8",fe().platform.decode(e,t)}function Yr(e){return null!=fe().platform.isTypedArray?fe().platform.isTypedArray(e):Rr(e)}function Qr(e,t=[],n=!1){if(null==t&&(t=[]),"boolean"==typeof e||"number"==typeof e||"string"==typeof e||ce(e)||null==e||Yr(e)&&n)t.push(e);else if(Array.isArray(e)||Yr(e))for(let r=0;r<e.length;++r)Qr(e[r],t,n);else{let r=-1;for(const t of Object.keys(e))/^([1-9]+[0-9]*|0)$/.test(t)&&(r=Math.max(r,Number(t)));for(let s=0;s<=r;s++)Qr(e[s],t,n)}return t}class Zr{constructor(e,t){this.backendTimer=e,this.logger=t,null==t&&(this.logger=new es)}profileKernel(e,t,n){let r;const s=()=>{r=n()};let a;const o=Kr();if(this.backendTimer.timerAvailable())a=this.backendTimer.time(s);else{s();for(const e of r)e.dataSync();a=Promise.resolve({kernelMs:Kr()-o})}if(fe().getBool("CHECK_COMPUTATION_FOR_ERRORS"))for(let t=0;t<r.length;t++){const n=r[t];n.data().then((t=>{Jr(t,n.dtype,e)}))}return{kernelName:e,outputs:r,inputs:t,timeMs:a.then((e=>e.kernelMs)),extraInfo:a.then((e=>null!=e.getExtraProfileInfo?e.getExtraProfileInfo():""))}}logKernelProfile(e){const{kernelName:t,outputs:n,timeMs:r,inputs:s,extraInfo:a}=e;n.forEach((e=>{Promise.all([e.data(),r,a]).then((n=>{this.logger.logKernelProfile(t,e,n[0],n[1],s,n[2])}))}))}}function Jr(e,t,n){if("float32"!==t)return!1;for(let t=0;t<e.length;t++){const r=e[t];if(isNaN(r)||!isFinite(r))return console.warn(`Found ${r} in the result of '${n}'`),!0}return!1}class es{logKernelProfile(e,t,n,r,s,a){const o="number"==typeof r?W(`${r}ms`,9):r.error,i=W(e,25),u=t.rank,l=t.size,c=W(t.shape.toString(),14);let h="";for(const e in s){const n=s[e];if(null!=n){const r=n.shape||t.shape,s=r.length;h+=`${e}: ${s}D ${s>0?r:""} `}}console.log(`%c${i}\t%c${o}\t%c${u}D ${c}\t%c${l}\t%c${h}\t%c${a}`,"font-weight:bold","color:red","color:blue","color: orange","color: green","color: steelblue")}}const ts=20,ns=3,rs=7;function ss(e,t,n,r){const s=ne(t),a=function(e,t,n,r){const s=B(t),a=r[r.length-1],o=new Array(a).fill(0),i=t.length,u="complex64"===n?us(e):e;if(i>1)for(let e=0;e<s/a;e++){const t=e*a;for(let e=0;e<a;e++)o[e]=Math.max(o[e],as(u[t+e],0,n).length)}return o}(e,t,n,s),o=t.length,i=is(e,t,n,s,a),u=["Tensor"];return r&&(u.push(`  dtype: ${n}`),u.push(`  rank: ${o}`),u.push(`  shape: [${t}]`),u.push("  values:")),u.push(i.map((e=>"    "+e)).join("\n")),u.join("\n")}function as(e,t,n){let r;return r=Array.isArray(e)?`${parseFloat(e[0].toFixed(rs))} + ${parseFloat(e[1].toFixed(rs))}j`:Z(e)?`'${e}'`:"bool"===n?os(e):parseFloat(e.toFixed(rs)).toString(),W(r,t)}function os(e){return 0===e?"false":"true"}function is(e,t,n,r,s,a=!0){const o="complex64"===n?2:1,i=t[0],u=t.length;if(0===u)return"complex64"===n?[as(us(e)[0],0,n)]:"bool"===n?[os(e[0])]:[e[0].toString()];if(1===u){if(i>ts){const t=ns*o;let r=Array.from(e.slice(0,t)),a=Array.from(e.slice((i-ns)*o,i*o));return"complex64"===n&&(r=us(r),a=us(a)),["["+r.map(((e,t)=>as(e,s[t],n))).join(", ")+", ..., "+a.map(((e,t)=>as(e,s[i-ns+t],n))).join(", ")+"]"]}return["["+("complex64"===n?us(e):Array.from(e)).map(((e,t)=>as(e,s[t],n))).join(", ")+"]"]}const l=t.slice(1),c=r.slice(1),h=r[0]*o,d=[];if(i>ts){for(let t=0;t<ns;t++){const r=t*h,a=r+h;d.push(...is(e.slice(r,a),l,n,c,s,!1))}d.push("...");for(let t=i-ns;t<i;t++){const r=t*h,a=r+h;d.push(...is(e.slice(r,a),l,n,c,s,t===i-1))}}else for(let t=0;t<i;t++){const r=t*h,a=r+h;d.push(...is(e.slice(r,a),l,n,c,s,t===i-1))}const p=2===u?",":"";d[0]="["+(i>0?d[0]+p:"");for(let e=1;e<d.length-1;e++)d[e]=" "+d[e]+p;let f=",\n";for(let e=2;e<u;e++)f+="\n";return d[d.length-1]=" "+d[d.length-1]+"]"+(a?"":f),d}function us(e){const t=[];for(let n=0;n<e.length;n+=2)t.push([e[n],e[n+1]]);return t}class ls{constructor(e,t,n){if(this.dtype=t,this.shape=e.slice(),this.size=B(e),null!=n){const e=n.length;D(e===this.size,(()=>`Length of values '${e}' does not match the size inferred by the shape '${this.size}'.`))}if("complex64"===t)throw new Error("complex64 dtype TensorBuffers are not supported. Please create a TensorBuffer for the real and imaginary parts separately and call tf.complex(real, imag).");this.values=n||X(t,this.size),this.strides=ne(e)}set(e,...t){0===t.length&&(t=[0]),D(t.length===this.rank,(()=>`The number of provided coordinates (${t.length}) must match the rank (${this.rank})`));const n=this.locToIndex(t);this.values[n]=e}get(...e){0===e.length&&(e=[0]);let t=0;for(const n of e){if(n<0||n>=this.shape[t]){const t=`Requested out of range element at ${e}.   Buffer shape=${this.shape}`;throw new Error(t)}t++}let n=e[e.length-1];for(let t=0;t<e.length-1;++t)n+=this.strides[t]*e[t];return this.values[n]}locToIndex(e){if(0===this.rank)return 0;if(1===this.rank)return e[0];let t=e[e.length-1];for(let n=0;n<e.length-1;++n)t+=this.strides[n]*e[n];return t}indexToLoc(e){if(0===this.rank)return[];if(1===this.rank)return[e];const t=new Array(this.shape.length);for(let n=0;n<t.length-1;++n)t[n]=Math.floor(e/this.strides[n]),e-=t[n]*this.strides[n];return t[t.length-1]=e,t}get rank(){return this.shape.length}toTensor(){return cs().makeTensor(this.values,this.shape,this.dtype)}}let cs=null,hs=null,ds=null;class ps{constructor(e,t,n,r){this.kept=!1,this.isDisposedInternal=!1,this.shape=e.slice(),this.dtype=t||"float32",this.size=B(e),this.strides=ne(e),this.dataId=n,this.id=r,this.rankType=this.rank<5?this.rank.toString():"higher"}get rank(){return this.shape.length}async buffer(){const e=await this.data();return hs.buffer(this.shape,this.dtype,e)}bufferSync(){return hs.buffer(this.shape,this.dtype,this.dataSync())}async array(){const e=await this.data();return se(this.shape,e,"complex64"===this.dtype)}arraySync(){return se(this.shape,this.dataSync(),"complex64"===this.dtype)}async data(){this.throwIfDisposed();const e=cs().read(this.dataId);if("string"===this.dtype){const t=await e;try{return t.map((e=>Xr(e)))}catch(e){throw new Error("Failed to decode the string bytes into utf-8. To get the original bytes, call tensor.bytes().")}}return e}dataToGPU(e){return this.throwIfDisposed(),cs().readToGPU(this.dataId,e)}dataSync(){this.throwIfDisposed();const e=cs().readSync(this.dataId);if("string"===this.dtype)try{return e.map((e=>Xr(e)))}catch(e){throw new Error("Failed to decode the string bytes into utf-8. To get the original bytes, call tensor.bytes().")}return e}async bytes(){this.throwIfDisposed();const e=await cs().read(this.dataId);return"string"===this.dtype?e:new Uint8Array(e.buffer)}dispose(){this.isDisposed||(cs().disposeTensor(this),this.isDisposedInternal=!0)}get isDisposed(){return this.isDisposedInternal}throwIfDisposed(){if(this.isDisposed)throw new Error("Tensor is disposed.")}print(e=!1){return hs.print(this,e)}clone(){return this.throwIfDisposed(),hs.clone(this)}toString(e=!1){return ss(this.dataSync(),this.shape,this.dtype,e)}cast(e){return this.throwIfDisposed(),hs.cast(this,e)}variable(e=!0,t,n){return this.throwIfDisposed(),cs().makeVariable(this,e,t,n)}}Object.defineProperty(ps,Symbol.hasInstance,{value:e=>!!e&&null!=e.data&&null!=e.dataSync&&null!=e.throwIfDisposed}),xe("Tensor",(()=>ps));class fs extends ps{constructor(e,t,n,r){super(e.shape,e.dtype,e.dataId,r),this.trainable=t,this.name=n}assign(e){if(e.dtype!==this.dtype)throw new Error(`dtype of the new value (${e.dtype}) and previous value (${this.dtype}) must match`);if(!z(e.shape,this.shape))throw new Error(`shape of the new value (${e.shape}) and previous value (${this.shape}) must match`);cs().disposeTensor(this),this.dataId=e.dataId,cs().incRef(this,null)}dispose(){cs().disposeVariable(this),this.isDisposedInternal=!0}}var ms,gs,ys,xs,bs;Object.defineProperty(fs,Symbol.hasInstance,{value:e=>e instanceof ps&&null!=e.assign&&e.assign instanceof Function}),function(e){e.R0="R0",e.R1="R1",e.R2="R2",e.R3="R3",e.R4="R4",e.R5="R5",e.R6="R6"}(ms||(ms={})),function(e){e.float32="float32",e.int32="int32",e.bool="int32",e.complex64="complex64"}(gs||(gs={})),function(e){e.float32="float32",e.int32="int32",e.bool="bool",e.complex64="complex64"}(ys||(ys={})),function(e){e.float32="float32",e.int32="float32",e.bool="float32",e.complex64="complex64"}(xs||(xs={})),function(e){e.float32="complex64",e.int32="complex64",e.bool="complex64",e.complex64="complex64"}(bs||(bs={}));const vs={float32:xs,int32:gs,bool:ys,complex64:bs};function ws(e,t){if("string"===e||"string"===t){if("string"===e&&"string"===t)return"string";throw new Error(`Can not upcast ${e} with ${t}`)}return vs[e][t]}function ks(e){return ws(e,"int32")}function Ss(e){return null!=e&&"object"==typeof e&&"texture"in e&&e.texture instanceof WebGLTexture}function Cs(e){return"undefined"!=typeof GPUBuffer&&null!=e&&"object"==typeof e&&"buffer"in e&&e.buffer instanceof GPUBuffer}function Is(e,t){if(e.dtype===t.dtype)return[e,t];const n=ws(e.dtype,t.dtype);return[e.cast(n),t.cast(n)]}function Ts(e){const t=[];return $s(e,t,new Set),t}function $s(e,t,n){if(null==e)return;if(e instanceof ps)return void t.push(e);if(r=e,!Array.isArray(r)&&"object"!=typeof r)return;var r;const s=e;for(const e in s){const r=s[e];n.has(r)||(n.add(r),$s(r,t,n))}}function Ns(e){return null!=e.kernelName}class Es{constructor(){this.registeredVariables={},this.nextTapeNodeId=0,this.numBytes=0,this.numTensors=0,this.numStringTensors=0,this.numDataBuffers=0,this.gradientDepth=0,this.kernelDepth=0,this.scopeStack=[],this.numDataMovesStack=[],this.nextScopeId=0,this.tensorInfo=new WeakMap,this.profiling=!1,this.activeProfile={newBytes:0,newTensors:0,peakBytes:0,kernels:[],result:null,get kernelNames(){return Array.from(new Set(this.kernels.map((e=>e.name))))}}}dispose(){for(const e in this.registeredVariables)this.registeredVariables[e].dispose()}}class Rs{constructor(e){this.ENV=e,this.registry={},this.registryFactory={},this.pendingBackendInitId=0,this.state=new Es}async ready(){if(null!=this.pendingBackendInit)return this.pendingBackendInit.then((()=>{}));if(null!=this.backendInstance)return;const e=this.getSortedBackends();for(let t=0;t<e.length;t++){const n=e[t];if(await this.initializeBackend(n).success)return void await this.setBackend(n)}throw new Error("Could not initialize any backends, all backend initializations failed.")}get backend(){if(null!=this.pendingBackendInit)throw new Error(`Backend '${this.backendName}' has not yet been initialized. Make sure to await tf.ready() or await tf.setBackend() before calling other methods`);if(null==this.backendInstance){const{name:e,asyncInit:t}=this.initializeBackendsAndReturnBest();if(t)throw new Error(`The highest priority backend '${e}' has not yet been initialized. Make sure to await tf.ready() or await tf.setBackend() before calling other methods`);this.setBackend(e)}return this.backendInstance}backendNames(){return Object.keys(this.registryFactory)}findBackend(e){if(!(e in this.registry)){if(!(e in this.registryFactory))return null;{const{asyncInit:t}=this.initializeBackend(e);if(t)return null}}return this.registry[e]}findBackendFactory(e){return e in this.registryFactory?this.registryFactory[e].factory:null}registerBackend(e,t,n=1){return e in this.registryFactory?(wr(`${e} backend was already registered. Reusing existing backend factory.`),!1):(this.registryFactory[e]={factory:t,priority:n},!0)}async setBackend(e){if(null==this.registryFactory[e])throw new Error(`Backend name '${e}' not found in registry`);if(this.backendName=e,null==this.registry[e]){this.backendInstance=null;const{success:t,asyncInit:n}=this.initializeBackend(e);if(!(n?await t:t))return!1}return this.backendInstance=this.registry[e],this.setupRegisteredKernels(),this.profiler=new Zr(this.backendInstance),!0}setupRegisteredKernels(){$r(this.backendName).forEach((e=>{null!=e.setupFunc&&e.setupFunc(this.backendInstance)}))}disposeRegisteredKernels(e){$r(e).forEach((t=>{null!=t.disposeFunc&&t.disposeFunc(this.registry[e])}))}initializeBackend(e){const t=this.registryFactory[e];if(null==t)throw new Error(`Cannot initialize backend ${e}, no registration found.`);try{const n=t.factory();if(!n||n instanceof R||"function"!=typeof n.then)return this.registry[e]=n,{success:!0,asyncInit:!1};{const t=++this.pendingBackendInitId,r=n.then((n=>!(t<this.pendingBackendInitId||(this.registry[e]=n,this.pendingBackendInit=null,0)))).catch((n=>(t<this.pendingBackendInitId||(this.pendingBackendInit=null,wr(`Initialization of backend ${e} failed`),wr(n.stack||n.message)),!1)));return this.pendingBackendInit=r,{success:r,asyncInit:!0}}}catch(t){return wr(`Initialization of backend ${e} failed`),wr(t.stack||t.message),{success:!1,asyncInit:!1}}}removeBackend(e){if(!(e in this.registryFactory))throw new Error(`${e} backend not found in registry`);this.backendName===e&&null!=this.pendingBackendInit&&this.pendingBackendInitId++,e in this.registry&&(this.disposeRegisteredKernels(e),this.registry[e].dispose(),delete this.registry[e]),delete this.registryFactory[e],this.backendName===e&&(this.pendingBackendInit=null,this.backendName=null,this.backendInstance=null)}getSortedBackends(){if(0===Object.keys(this.registryFactory).length)throw new Error("No backend found in registry.");return Object.keys(this.registryFactory).sort(((e,t)=>this.registryFactory[t].priority-this.registryFactory[e].priority))}initializeBackendsAndReturnBest(){const e=this.getSortedBackends();for(let t=0;t<e.length;t++){const n=e[t],{success:r,asyncInit:s}=this.initializeBackend(n);if(s||r)return{name:n,asyncInit:s}}throw new Error("Could not initialize any backends, all backend initializations failed.")}moveData(e,t){const n=this.state.tensorInfo.get(t),r=n.backend,s=this.readSync(t),a=r.refCount(t);r.disposeData(t,!0),n.backend=e,e.move(t,s,n.shape,n.dtype,a),this.shouldCheckForMemLeaks()&&this.state.numDataMovesStack[this.state.numDataMovesStack.length-1]++}tidy(e,t){let n,r=null;if(null==t){if("function"!=typeof e)throw new Error("Please provide a function to tidy()");t=e}else{if("string"!=typeof e&&!(e instanceof String))throw new Error("When calling with two arguments, the first argument to tidy() must be a string");if("function"!=typeof t)throw new Error("When calling with two arguments, the 2nd argument to tidy() must be a function");r=e}return this.scopedRun((()=>this.startScope(r)),(()=>this.endScope(n)),(()=>(n=t(),n instanceof Promise&&console.error("Cannot return a Promise inside of tidy."),n)))}scopedRun(e,t,n){e();try{const e=n();return t(),e}catch(e){throw t(),e}}nextTensorId(){return Rs.nextTensorId++}nextVariableId(){return Rs.nextVariableId++}clone(e){const t=As.runKernel(Et,{x:e}),n={x:e};return this.addTapeNode(this.state.activeScope.name,n,[t],(e=>({x:()=>{const t={x:e};return As.runKernel(Ue,t,{dtype:"float32"})}})),[],{}),t}runKernel(e,t,n){if(null==this.backendName&&this.backend,null==Ir(e,this.backendName))throw new Error(`Kernel '${e}' not registered for backend '${this.backendName}'`);return this.runKernelFunc({kernelName:e,inputs:t,attrs:n})}shouldCheckForMemLeaks(){return this.ENV.getBool("IS_TEST")}checkKernelForMemLeak(e,t,n){const r=this.backend.numDataIds();let s=0;n.forEach((e=>{s+="complex64"===e.dtype?3:1}));const a=this.state.numDataMovesStack[this.state.numDataMovesStack.length-1],o=r-t-s-a;if(o>0)throw new Error(`Backend '${this.backendName}' has an internal memory leak (${o} data ids) after running '${e}'`)}runKernelFunc(e){let t,n=[];const r=this.isTapeOn(),s=this.state.numBytes,a=this.state.numTensors;let o,i;this.shouldCheckForMemLeaks()&&this.state.numDataMovesStack.push(0),null==this.backendName&&this.backend;const u=Ns(e)?e.kernelName:null!=this.state.activeScope?this.state.activeScope.name:"";if(Ns(e)){const{kernelName:t,inputs:s,attrs:a}=e;null==this.backendName&&this.backend;const u=Ir(t,this.backendName);D(null!=u,(()=>`Cannot find registered kernel '${t}' for backend '${this.backendName}'`)),o=()=>{const e=this.backend.numDataIds();i=u.kernelFunc({inputs:s,attrs:a,backend:this.backend});const o=Array.isArray(i)?i:[i];this.shouldCheckForMemLeaks()&&this.checkKernelForMemLeak(t,e,o);const l=o.map((e=>null!=e.rank?e:this.makeTensorFromTensorInfo(e)));if(r){const e=this.getTensorsForGradient(t,s,l);n=this.saveTensorsForBackwardMode(e)}return l}}else{const{forwardFunc:t}=e,s=e=>{r&&(n=e.map((e=>this.keep(this.clone(e)))))};o=()=>{const e=this.backend.numDataIds();i=this.tidy((()=>t(this.backend,s)));const n=Array.isArray(i)?i:[i];return this.shouldCheckForMemLeaks()&&this.checkKernelForMemLeak(u,e,n),n}}const{inputs:l,attrs:c}=e,h=Ns(e)?null:e.backwardsFunc;let d;return this.scopedRun((()=>this.state.kernelDepth++),(()=>this.state.kernelDepth--),(()=>{this.ENV.getBool("DEBUG")||this.state.profiling?(d=this.profiler.profileKernel(u,l,(()=>o())),this.ENV.getBool("DEBUG")&&this.profiler.logKernelProfile(d),t=d.outputs):t=o()})),r&&this.addTapeNode(u,l,t,h,n,c),this.state.profiling&&this.state.activeProfile.kernels.push({name:u,bytesAdded:this.state.numBytes-s,totalBytesSnapshot:this.state.numBytes,tensorsAdded:this.state.numTensors-a,totalTensorsSnapshot:this.state.numTensors,inputShapes:Object.keys(l).map((e=>null!=l[e]?l[e].shape:null)),outputShapes:t.map((e=>e.shape)),kernelTimeMs:d.timeMs,extraInfo:d.extraInfo}),Array.isArray(i)?t:t[0]}saveTensorsForBackwardMode(e){const t=e.map((e=>this.keep(this.clone(e))));return t}getTensorsForGradient(e,t,n){const r=Tr(e);if(null!=r){const e=r.inputsToSave||[],s=r.outputsToSave||[];let a;r.saveAllInputs?(D(Array.isArray(t),(()=>"saveAllInputs is true, expected inputs to be an array.")),a=Object.keys(t).map((e=>t[e]))):a=e.map((e=>t[e]));const o=n.filter(((e,t)=>s[t]));return a.concat(o)}return[]}makeTensor(e,t,n,r){if(null==e)throw new Error("Values passed to engine.makeTensor() are null");n=n||"float32",r=r||this.backend;let s=e;"string"===n&&Z(e[0])&&(s=e.map((e=>qr(e))));const a=r.write(s,t,n),o=new ps(t,n,a,this.nextTensorId());if(this.trackTensor(o,r),"string"===n){const e=this.state.tensorInfo.get(a),t=function(e){if(null==e)return 0;let t=0;return e.forEach((e=>t+=e.length)),t}(s);this.state.numBytes+=t-e.bytes,e.bytes=t}return o}makeTensorFromDataId(e,t,n,r){const s={dataId:e,shape:t,dtype:n=n||"float32"};return this.makeTensorFromTensorInfo(s,r)}makeTensorFromTensorInfo(e,t){const{dataId:n,shape:r,dtype:s}=e,a=new ps(r,s,n,this.nextTensorId());return this.trackTensor(a,t),a}makeVariable(e,t=!0,n,r){n=n||this.nextVariableId().toString(),null!=r&&r!==e.dtype&&(e=e.cast(r));const s=new fs(e,t,n,this.nextTensorId());if(null!=this.state.registeredVariables[s.name])throw new Error(`Variable with name ${s.name} was already registered`);return this.state.registeredVariables[s.name]=s,this.incRef(s,this.backend),s}trackTensor(e,t){this.state.numTensors++,"string"===e.dtype&&this.state.numStringTensors++;let n=0;"complex64"!==e.dtype&&"string"!==e.dtype&&(n=e.size*Q(e.dtype)),this.state.numBytes+=n,this.state.tensorInfo.has(e.dataId)||(this.state.numDataBuffers++,this.state.tensorInfo.set(e.dataId,{backend:t||this.backend,dtype:e.dtype,shape:e.shape,bytes:n})),e instanceof fs||this.track(e)}incRef(e,t){this.trackTensor(e,t),this.backend.incRef(e.dataId)}removeDataId(e,t){this.state.tensorInfo.has(e)&&this.state.tensorInfo.get(e).backend===t&&(this.state.tensorInfo.delete(e),this.state.numDataBuffers--)}disposeTensor(e){if(!this.state.tensorInfo.has(e.dataId))return;const t=this.state.tensorInfo.get(e.dataId);if(this.state.numTensors--,"string"===e.dtype&&(this.state.numStringTensors--,this.state.numBytes-=t.bytes),"complex64"!==e.dtype&&"string"!==e.dtype){const t=e.size*Q(e.dtype);this.state.numBytes-=t}t.backend.disposeData(e.dataId)&&this.removeDataId(e.dataId,t.backend)}disposeVariables(){for(const e in this.state.registeredVariables){const t=this.state.registeredVariables[e];this.disposeVariable(t)}}disposeVariable(e){this.disposeTensor(e),null!=this.state.registeredVariables[e.name]&&delete this.state.registeredVariables[e.name]}memory(){const e=this.backend.memory();return e.numTensors=this.state.numTensors,e.numDataBuffers=this.state.numDataBuffers,e.numBytes=this.state.numBytes,this.state.numStringTensors>0&&(e.unreliable=!0,null==e.reasons&&(e.reasons=[]),e.reasons.push("Memory usage by string tensors is approximate (2 bytes per character)")),e}async profile(e){this.state.profiling=!0;const t=this.state.numBytes,n=this.state.numTensors;this.state.activeProfile.kernels=[],this.state.activeProfile.result=await e(),this.state.profiling=!1,this.state.activeProfile.peakBytes=Math.max(...this.state.activeProfile.kernels.map((e=>e.totalBytesSnapshot))),this.state.activeProfile.newBytes=this.state.numBytes-t,this.state.activeProfile.newTensors=this.state.numTensors-n;for(const e of this.state.activeProfile.kernels)e.kernelTimeMs=await e.kernelTimeMs,e.extraInfo=await e.extraInfo;return this.state.activeProfile}isTapeOn(){return this.state.gradientDepth>0&&0===this.state.kernelDepth}addTapeNode(e,t,n,r,s,a){const o={id:this.state.nextTapeNodeId++,kernelName:e,inputs:t,outputs:n,saved:s},i=Tr(e);null!=i&&(r=i.gradFunc),null!=r&&(o.gradient=e=>(e=e.map(((e,t)=>{if(null==e){const e=n[t],r=oe(e.size,e.dtype);return this.makeTensor(r,e.shape,e.dtype)}return e})),r(e.length>1?e:e[0],s,a))),this.state.activeTape.push(o)}keep(e){return e.kept=!0,e}startTape(){0===this.state.gradientDepth&&(this.state.activeTape=[]),this.state.gradientDepth++}endTape(){this.state.gradientDepth--}startScope(e){const t={track:[],name:"unnamed scope",id:this.state.nextScopeId++};e&&(t.name=e),this.state.scopeStack.push(t),this.state.activeScope=t}endScope(e){const t=Ts(e),n=new Set(t.map((e=>e.id)));for(let e=0;e<this.state.activeScope.track.length;e++){const t=this.state.activeScope.track[e];t.kept||n.has(t.id)||t.dispose()}const r=this.state.scopeStack.pop();this.state.activeScope=0===this.state.scopeStack.length?null:this.state.scopeStack[this.state.scopeStack.length-1],t.forEach((e=>{e.kept||e.scopeId!==r.id||this.track(e)}))}gradients(e,t,n,r=!1){if(D(t.length>0,(()=>"gradients() received an empty list of xs.")),null!=n&&"float32"!==n.dtype)throw new Error(`dy must have 'float32' dtype, but has '${n.dtype}'`);const s=this.scopedRun((()=>this.startTape()),(()=>this.endTape()),(()=>this.tidy("forward",e)));D(s instanceof ps,(()=>"The result y returned by f() must be a tensor."));const a=function(e,t,n){const r={},s={};for(let e=0;e<t.length;e++)r[t[e].id]=!0;for(let n=0;n<e.length;n++){const a=e[n],o=a.inputs;for(const e in o){const n=o[e];let i=!1;for(let e=0;e<t.length;e++)if(r[n.id]){a.outputs.forEach((e=>r[e.id]=!0)),i=!0,s[a.id]=!0;break}if(i)break}}const a={};a[n.id]=!0;const o={};for(let t=e.length-1;t>=0;t--){const n=e[t],r=n.inputs;for(let e=0;e<n.outputs.length;e++)if(a[n.outputs[e].id]){for(const e in r)a[r[e].id]=!0,o[n.id]=!0;break}}const i=[];for(let t=0;t<e.length;t++){const n=e[t];if(s[n.id]&&o[n.id]){const e={};for(const t in n.inputs){const s=n.inputs[t];r[s.id]&&(e[t]=s)}const t=Object.assign({},n);t.inputs=e,t.outputs=n.outputs,i.push(t)}}return i}(this.state.activeTape,t,s);if(!r&&0===a.length&&t.length>0)throw new Error("Cannot compute gradient of y=f(x) with respect to x. Make sure that the f you passed encloses all operations that lead from x to y.");return this.tidy("backward",(()=>{const e={};e[s.id]=null==n?function(e){const t=ae(B(e),"float32");return As.makeTensor(t,e,"float32")}(s.shape):n,function(e,t,n,r){for(let s=t.length-1;s>=0;s--){const a=t[s],o=[];if(a.outputs.forEach((t=>{const n=e[t.id];null!=n?o.push(n):o.push(null)})),null==a.gradient)throw new Error(`Cannot compute gradient: gradient function not found for ${a.kernelName}.`);const i=a.gradient(o);for(const t in a.inputs){if(!(t in i))throw new Error(`Cannot backprop through input ${t}. Available gradients found: ${Object.keys(i)}.`);const s=n((()=>i[t]()));if("float32"!==s.dtype)throw new Error(`Error in gradient for op ${a.kernelName}. The gradient of input ${t} must have 'float32' dtype, but has '${s.dtype}'`);const o=a.inputs[t];if(!z(s.shape,o.shape))throw new Error(`Error in gradient for op ${a.kernelName}. The gradient of input '${t}' has shape '${s.shape}', which does not match the shape of the input '${o.shape}'`);if(null==e[o.id])e[o.id]=s;else{const t=e[o.id];e[o.id]=r(t,s),t.dispose()}}}}(e,a,(e=>this.tidy(e)),Os);const r=t.map((t=>e[t.id]));return 0===this.state.gradientDepth&&(this.state.activeTape.forEach((e=>{for(const t of e.saved)t.dispose()})),this.state.activeTape=null),{value:s,grads:r}}))}customGrad(e){return D(ee(e),(()=>"The f passed in customGrad(f) must be a function.")),(...t)=>{let n;D(t.every((e=>e instanceof ps)),(()=>"The args passed in customGrad(f)(x1, x2,...) must all be tensors"));const r={};return t.forEach(((e,t)=>{r[t]=e})),this.runKernelFunc({forwardFunc:(r,s)=>(n=e(...t,s),D(n.value instanceof ps,(()=>"The function f passed in customGrad(f) must return an object where `obj.value` is a tensor")),D(ee(n.gradFunc),(()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function.")),n.value),backwardsFunc:(e,r)=>{const s=n.gradFunc(e,r),a=Array.isArray(s)?s:[s];D(a.length===t.length,(()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function that returns the same number of tensors as inputs passed to f(...).")),D(a.every((e=>e instanceof ps)),(()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function that returns a list of only tensors."));const o={};return a.forEach(((e,t)=>{o[t]=()=>e})),o},inputs:r})}}readSync(e){return this.state.tensorInfo.get(e).backend.readSync(e)}read(e){return this.state.tensorInfo.get(e).backend.read(e)}readToGPU(e,t){return this.state.tensorInfo.get(e).backend.readToGPU(e,t)}async time(e){const t=Kr(),n=await this.backend.time(e);return n.wallMs=Kr()-t,n}track(e){return null!=this.state.activeScope&&(e.scopeId=this.state.activeScope.id,this.state.activeScope.track.push(e)),e}get registeredVariables(){return this.state.registeredVariables}reset(){this.pendingBackendInitId++,this.state.dispose(),this.ENV.reset(),this.state=new Es;for(const e in this.registry)this.disposeRegisteredKernels(e),this.registry[e].dispose(),delete this.registry[e];this.backendName=null,this.backendInstance=null,this.pendingBackendInit=null}}function _s(){const e=ye();if(null==e._tfengine){const t=new de(e);e._tfengine=new Rs(t)}var t;return t=e._tfengine.ENV,ge=t,cs=()=>e._tfengine,e._tfengine}Rs.nextTensorId=0,Rs.nextVariableId=0;const As=_s();function Os(e,t){const n={a:e,b:t};return As.runKernel(ke,n)}function Fs(e){if(e||"undefined"!=typeof navigator&&null!=navigator){if(e||(e=navigator),"ReactNative"===e.product)return!0;const t=e.userAgent||e.vendor||("undefined"!=typeof window?window.opera:"");if(!t){const t=e;return t.userAgentData&&t.userAgentData.mobile}return/(android|bb\d+|meego).+mobile|avantgo|bada\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\.(browser|link)|vodafone|wap|windows ce|xda|xiino/i.test(t)||/1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\-(n|u)|c55\/|capi|ccwa|cdm\-|cell|chtm|cldc|cmd\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\-s|devi|dica|dmob|do(c|p)o|ds(12|\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\-|_)|g1 u|g560|gene|gf\-5|g\-mo|go(\.w|od)|gr(ad|un)|haie|hcit|hd\-(m|p|t)|hei\-|hi(pt|ta)|hp( i|ip)|hs\-c|ht(c(\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\-(20|go|ma)|i230|iac( |\-|\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\/)|klon|kpt |kwc\-|kyo(c|k)|le(no|xi)|lg( g|\/(k|l|u)|50|54|\-[a-w])|libw|lynx|m1\-w|m3ga|m50\/|ma(te|ui|xo)|mc(01|21|ca)|m\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\-2|po(ck|rt|se)|prox|psio|pt\-g|qa\-a|qc(07|12|21|32|60|\-[2-7]|i\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\-|oo|p\-)|sdk\/|se(c(\-|0|1)|47|mc|nd|ri)|sgh\-|shar|sie(\-|m)|sk\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\-|v\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\-|tdg\-|tel(i|m)|tim\-|t\-mo|to(pl|sh)|ts(70|m\-|m3|m5)|tx\-9|up(\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\-|your|zeto|zte\-/i.test(t.substr(0,4))}return!1}function Ps(){return"undefined"!=typeof window&&null!=window.document||"undefined"!=typeof WorkerGlobalScope}const Ds=fe();function Ms(e,t){let n=e;if(Yr(e))return"string"===t?[]:[e.length];if(Ss(e)){const t=e.channels||"RGBA";return[e.height,e.width*t.length]}if(Cs(e))return[e.buffer.size/(null==t?4:Q(t))];if(!Array.isArray(e))return[];const r=[];for(;Array.isArray(n)||Yr(n)&&"string"!==t;)r.push(n.length),n=n[0];return Array.isArray(e)&&fe().getBool("TENSORLIKE_CHECK_SHAPE_CONSISTENCY")&&Ls(e,r,[]),r}function Ls(e,t,n){if(n=n||[],!Array.isArray(e)&&!Yr(e))return void D(0===t.length,(()=>`Element arr[${n.join("][")}] is a primitive, but should be an array/TypedArray of ${t[0]} elements`));D(t.length>0,(()=>`Element arr[${n.join("][")}] should be a primitive, but is an array of ${e.length} elements`)),D(e.length===t[0],(()=>`Element arr[${n.join("][")}] should have ${t[0]} elements, but has ${e.length} elements`));const r=t.slice(1);for(let t=0;t<e.length;++t)Ls(e[t],r,n.concat(t))}function Bs(e,t,n,r){if("string_or_numeric"!==e){if(null==e)throw new Error("Expected dtype cannot be null.");if("numeric"!==e&&e!==t||"numeric"===e&&"string"===t)throw new Error(`Argument '${n}' passed to '${r}' must be ${e} tensor, but got ${t} tensor`)}}function zs(e,t,n,r="numeric"){if(e instanceof ps)return Bs(r,e.dtype,t,n),e;let s=J(e);if("string"!==s&&["bool","int32","float32"].indexOf(r)>=0&&(s=r),Bs(r,s,t,n),null==e||!Yr(e)&&!Array.isArray(e)&&"number"!=typeof e&&"boolean"!=typeof e&&"string"!=typeof e){const r=null==e?"null":e.constructor.name;throw new Error(`Argument '${t}' passed to '${n}' must be a Tensor or TensorLike, but got '${r}'`)}const a=Ms(e,s);Yr(e)||Array.isArray(e)||(e=[e]);const o="string"!==s?jr(e,s):Qr(e,[],!0);return As.makeTensor(o,a,s)}function Us(e,t,n,r="numeric"){if(!Array.isArray(e))throw new Error(`Argument ${t} passed to ${n} must be a \`Tensor[]\` or \`TensorLike[]\``);return e.map(((e,s)=>zs(e,`${t}[${s}]`,n,r)))}Ds.registerFlag("DEBUG",(()=>!1),(e=>{e&&console.warn("Debugging mode is ON. The output of every math call will be downloaded to CPU and checked for NaNs. This significantly impacts performance.")})),Ds.registerFlag("IS_BROWSER",(()=>Ps())),Ds.registerFlag("IS_NODE",(()=>"undefined"!=typeof process&&void 0!==process.versions&&void 0!==process.versions.node)),Ds.registerFlag("IS_CHROME",(()=>"undefined"!=typeof navigator&&null!=navigator&&null!=navigator.userAgent&&/Chrome/.test(navigator.userAgent)&&/Google Inc/.test(navigator.vendor))),Ds.registerFlag("IS_SAFARI",(()=>"undefined"!=typeof navigator&&null!=navigator&&null!=navigator.userAgent&&/Safari/.test(navigator.userAgent)&&/Apple/.test(navigator.vendor))),Ds.registerFlag("PROD",(()=>!1)),Ds.registerFlag("TENSORLIKE_CHECK_SHAPE_CONSISTENCY",(()=>Ds.getBool("DEBUG"))),Ds.registerFlag("DEPRECATION_WARNINGS_ENABLED",(()=>!0)),Ds.registerFlag("IS_TEST",(()=>!1)),Ds.registerFlag("CHECK_COMPUTATION_FOR_ERRORS",(()=>Ds.getBool("DEBUG"))),Ds.registerFlag("WRAP_TO_IMAGEBITMAP",(()=>!1)),Ds.registerFlag("CANVAS2D_WILL_READ_FREQUENTLY_FOR_GPU",(()=>!1)),Ds.registerFlag("USE_SETTIMEOUTCUSTOM",(()=>!1));const Vs="__op";function Ws(e){const t=Object.keys(e);if(1!==t.length)throw new Error(`Please provide an object with a single key (operation name) mapping to a function. Got an object with ${t.length} keys.`);let n=t[0];const r=e[n];n.endsWith("_")&&(n=n.substring(0,n.length-1)),n+=Vs;const s=(...e)=>{As.startScope(n);try{const t=r(...e);return ce(t)&&console.error("Cannot return a Promise inside of tidy."),As.endScope(t),t}catch(e){throw As.endScope(null),e}};return Object.defineProperty(s,"name",{value:n,configurable:!0}),s}const Gs=Ws({complex_:function(e,t){const n=zs(e,"real","complex"),r=zs(t,"imag","complex");M(n.shape,r.shape,`real and imag shapes, ${n.shape} and ${r.shape}, must match in call to tf.complex().`);const s={real:n,imag:r};return As.runKernel(Ge,s)}});function Hs(e,t,n,r){if(null==r)r=J(e);else if("complex64"===r)throw new Error("Cannot construct a complex64 tensor directly. Please use tf.complex(real, imag).");if(Cs(e)||Ss(e)){if("float32"!==r&&"int32"!==r)throw new Error(`Creating tensor from GPU data only supports 'float32'|'int32' dtype, while the dtype is ${r}.`);return As.backend.createTensorFromGPUData(e,t||n,r)}if(!Yr(e)&&!Array.isArray(e)&&"number"!=typeof e&&"boolean"!=typeof e&&"string"!=typeof e)throw new Error("values passed to tensor(values) must be a number/boolean/string or an array of numbers/booleans/strings, or a TypedArray");if(null!=t){ie(t);const e=B(t),r=B(n);D(e===r,(()=>`Based on the provided shape, [${t}], the tensor should have ${e} values but has ${r}`));for(let e=0;e<n.length;++e){const r=n[e],s=e!==n.length-1||r!==B(t.slice(e));D(n[e]===t[e]||!s,(()=>`Error creating a new Tensor. Inferred shape (${n}) does not match the provided shape (${t}). `))}}return Yr(e)||Array.isArray(e)||(e=[e]),t=t||n,e="string"!==r?jr(e,r):Qr(e,[],!0),As.makeTensor(e,t,r)}function js(e,t,n){return Hs(e,t,Ms(e,n),n)}const Ks={float32:4,float16:2,int32:4,uint16:2,uint8:1,bool:1,complex64:8};class qs{static join(e){return new qs(e).slice()}constructor(e){if(this.shards=[],this.previousShardIndex=0,null==e)return;if(e instanceof Array||(e=[e]),0===(e=e.map((e=>Yr(e)?e.buffer:e))).length)return;this.bufferUniformSize=e[0].byteLength;let t=0;for(let n=0;n<e.length;n++){const r=e[n];n!==e.length-1&&r.byteLength!==this.bufferUniformSize&&(this.bufferUniformSize=void 0);const s=t+r.byteLength;this.shards.push({buffer:r,start:t,end:s}),t=s}0===this.shards.length&&(this.byteLength=0),this.byteLength=this.shards[this.shards.length-1].end}slice(e=0,t=this.byteLength){if(0===this.shards.length)return new ArrayBuffer(0);if(e=isNaN(Number(e))?0:e,t=isNaN(Number(t))?0:t,e=Math.max(0,e),(t=Math.min(this.byteLength,t))<=e)return new ArrayBuffer(0);const n=this.findShardForByte(e);if(-1===n)throw new Error(`Could not find start shard for byte ${e}`);const r=new ArrayBuffer(t-e),s=new Uint8Array(r);let a=0;for(let r=n;r<this.shards.length;r++){const n=this.shards[r],o=e+a-n.start,i=a,u=Math.min(t,n.end)-n.start,l=new Uint8Array(n.buffer,o,u-o);if(s.set(l,i),a+=l.length,t<n.end)break}return r}findShardForByte(e){if(0===this.shards.length||e<0||e>=this.byteLength)return-1;if(null!=this.bufferUniformSize)return this.previousShardIndex=Math.floor(e/this.bufferUniformSize),this.previousShardIndex;function t(t){return e<t.start?-1:e>=t.end?1:0}if(0===t(this.shards[this.previousShardIndex]))return this.previousShardIndex;const n=function(e,t){let n=0,r=e.length;for(;n<=r;){const s=Math.floor((r-n)/2)+n,a=t(e[s]);if(0===a)return s;a<0?r=s:n=s+1}return-1}(this.shards,t);return-1===n?-1:(this.previousShardIndex=n,this.previousShardIndex)}}const Xs=4;async function Ys(e,t){const n=[],r=[],s=Array.isArray(e)?e.map((e=>e.name)):Object.keys(e);for(let a=0;a<s.length;++a){const o=s[a],i=Array.isArray(e)?e[a].tensor:e[o];if("float32"!==i.dtype&&"int32"!==i.dtype&&"bool"!==i.dtype&&"string"!==i.dtype&&"complex64"!==i.dtype)throw new Error(`Unsupported dtype in weight '${o}': ${i.dtype}`);const u={name:o,shape:i.shape,dtype:i.dtype};if("string"===i.dtype){const e=new Promise((async e=>{const t=await i.bytes(),n=t.reduce(((e,t)=>e+t.length),0)+Xs*t.length,r=new Uint8Array(n);let s=0;for(let e=0;e<t.length;e++){const n=t[e],a=new Uint8Array(new Uint32Array([n.length]).buffer);r.set(a,s),s+=Xs,r.set(n,s),s+=n.length}e(r)}));r.push(e)}else r.push(i.data());null!=t&&(u.group=t),n.push(u)}return{data:Zs(await Promise.all(r)),specs:n}}function Qs(e,t){const n=new qs(e),r={};let s,a=0;for(const e of t){const t=e.name,o=e.dtype,i=e.shape,u=B(i);let l;if("quantization"in e){const r=e.quantization;if("uint8"===r.dtype||"uint16"===r.dtype){if(!("min"in r)||!("scale"in r))throw new Error(`Weight ${e.name} with quantization ${r.dtype} doesn't have corresponding metadata min and scale.`)}else{if("float16"!==r.dtype)throw new Error(`Weight ${e.name} has unknown quantization dtype ${r.dtype}. Supported quantization dtypes are: 'uint8', 'uint16', and 'float16'.`);if("float32"!==o)throw new Error(`Weight ${e.name} is quantized with ${r.dtype} which only supports weights of type float32 not ${o}.`)}const i=Ks[r.dtype],c=n.slice(a,a+u*i),h="uint8"===r.dtype?new Uint8Array(c):new Uint16Array(c);if("float32"===o)if("uint8"===r.dtype||"uint16"===r.dtype){l=new Float32Array(h.length);for(let e=0;e<h.length;e++){const t=h[e];l[e]=t*r.scale+r.min}}else{if("float16"!==r.dtype)throw new Error(`Unsupported quantization type ${r.dtype} for weight type float32.`);void 0===s&&(s=ua()),l=s(h)}else{if("int32"!==o)throw new Error(`Unsupported dtype in weight '${t}': ${o}`);if("uint8"!==r.dtype&&"uint16"!==r.dtype)throw new Error(`Unsupported quantization type ${r.dtype} for weight type int32.`);l=new Int32Array(h.length);for(let e=0;e<h.length;e++){const t=h[e];l[e]=Math.round(t*r.scale+r.min)}}a+=u*i}else if("string"===o){const t=B(e.shape);l=[];for(let e=0;e<t;e++){const e=new Uint32Array(n.slice(a,a+Xs))[0];a+=Xs;const t=new Uint8Array(n.slice(a,a+e));l.push(t),a+=e}}else{const e=Ks[o],s=n.slice(a,a+u*e);if("float32"===o)l=new Float32Array(s);else if("int32"===o)l=new Int32Array(s);else if("bool"===o)l=new Uint8Array(s);else{if("complex64"!==o)throw new Error(`Unsupported dtype in weight '${t}': ${o}`);{l=new Float32Array(s);const e=new Float32Array(l.length/2),n=new Float32Array(l.length/2);for(let t=0;t<e.length;t++)e[t]=l[2*t],n[t]=l[2*t+1];const a=js(e,i,"float32"),o=js(n,i,"float32");r[t]=Gs(a,o),a.dispose(),o.dispose()}}a+=u*e}"complex64"!==o&&(r[t]=js(l,i,o))}return r}function Zs(e){if(null===e)throw new Error(`Invalid input value: ${JSON.stringify(e)}`);let t=0;const n=[];e.forEach((e=>{if(t+=e.byteLength,n.push(e.byteLength===e.buffer.byteLength?e:new e.constructor(e)),!(e instanceof Float32Array||e instanceof Int32Array||e instanceof Uint8Array))throw new Error(`Unsupported TypedArray subtype: ${e.constructor.name}`)}));const r=new Uint8Array(t);let s=0;return n.forEach((e=>{r.set(new Uint8Array(e.buffer),s),s+=e.byteLength})),r.buffer}const Js="undefined"!=typeof Buffer&&("undefined"==typeof Blob||"undefined"==typeof atob||"undefined"==typeof btoa);function ea(e){return Js?Buffer.byteLength(e,"utf8"):new Blob([e]).size}function ta(e){return qs.join(e)}function na(e){for(e=e.trim();e.endsWith("/");)e=e.slice(0,e.length-1);const t=e.split("/");return t[t.length-1]}function ra(e,t){const n={modelTopology:e.modelTopology,format:e.format,generatedBy:e.generatedBy,convertedBy:e.convertedBy,weightsManifest:t};return null!=e.signature&&(n.signature=e.signature),null!=e.userDefinedMetadata&&(n.userDefinedMetadata=e.userDefinedMetadata),null!=e.modelInitializer&&(n.modelInitializer=e.modelInitializer),null!=e.initializerSignature&&(n.initializerSignature=e.initializerSignature),null!=e.trainingConfig&&(n.trainingConfig=e.trainingConfig),n}function sa(e,t,n){const r={modelTopology:e.modelTopology,format:e.format,generatedBy:e.generatedBy,convertedBy:e.convertedBy};if(null!=e.trainingConfig&&(r.trainingConfig=e.trainingConfig),null!=e.weightsManifest){if(!t)throw new Error("modelJSON has weightsManifest but weightSpecs is null");if(!n)throw new Error("modelJSON has weightsManifest but weightData is null");r.weightSpecs=t,r.weightData=n}return null!=e.signature&&(r.signature=e.signature),null!=e.userDefinedMetadata&&(r.userDefinedMetadata=e.userDefinedMetadata),null!=e.modelInitializer&&(r.modelInitializer=e.modelInitializer),null!=e.initializerSignature&&(r.initializerSignature=e.initializerSignature),r}async function aa(e,t){let n,r;return null!=e.weightsManifest&&([n,r]=await t(e.weightsManifest)),sa(e,n,r)}function oa(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("Expected JSON model topology, received ArrayBuffer.");return{dateSaved:new Date,modelTopologyType:"JSON",modelTopologyBytes:null==e.modelTopology?0:ea(JSON.stringify(e.modelTopology)),weightSpecsBytes:null==e.weightSpecs?0:ea(JSON.stringify(e.weightSpecs)),weightDataBytes:null==e.weightData?0:new qs(e.weightData).byteLength}}function ia(e){const t=[];for(const n of e)t.push(...n.weights);return t}function ua(){const e=function(){const e=e=>{let t=e<<13,n=0;for(;0==(8388608&t);)n-=8388608,t<<=1;return t&=-8388609,n+=947912704,t|n},t=new Uint32Array(2048);t[0]=0;for(let n=1;n<1024;n++)t[n]=e(n);for(let e=1024;e<2048;e++)t[e]=939524096+(e-1024<<13);return t}(),t=function(){const e=new Uint32Array(64);e[0]=0,e[31]=1199570944,e[32]=2147483648,e[63]=3347054592;for(let t=1;t<31;t++)e[t]=t<<23;for(let t=33;t<63;t++)e[t]=2147483648+(t-32<<23);return e}(),n=function(){const e=new Uint32Array(64);for(let t=0;t<64;t++)e[t]=1024;return e[0]=e[32]=0,e}();return r=>{const s=new ArrayBuffer(4*r.length),a=new Uint32Array(s);for(let s=0;s<r.length;s++){const o=r[s],i=e[n[o>>10]+(1023&o)]+t[o>>10];a[s]=i}return new Float32Array(s)}}class la{constructor(){this.saveRouters=[],this.loadRouters=[]}static getInstance(){return null==la.instance&&(la.instance=new la),la.instance}static registerSaveRouter(e){la.getInstance().saveRouters.push(e)}static registerLoadRouter(e){la.getInstance().loadRouters.push(e)}static getSaveHandlers(e){return la.getHandlers(e,"save")}static getLoadHandlers(e,t){return la.getHandlers(e,"load",t)}static getHandlers(e,t,n){const r=[];return("load"===t?la.getInstance().loadRouters:la.getInstance().saveRouters).forEach((t=>{const s=t(e,n);null!==s&&r.push(s)})),r}}const ca=e=>la.registerSaveRouter(e),ha=e=>la.registerLoadRouter(e),da=e=>la.getSaveHandlers(e),pa=(e,t)=>la.getLoadHandlers(e,t),fa="tensorflowjs",ma="models_store",ga="model_info_store";function ya(){if(!fe().getBool("IS_BROWSER"))throw new Error("Failed to obtain IndexedDB factory because the current environmentis not a web browser.");const e="undefined"==typeof window?self:window,t=e.indexedDB||e.mozIndexedDB||e.webkitIndexedDB||e.msIndexedDB||e.shimIndexedDB;if(null==t)throw new Error("The current browser does not appear to support IndexedDB.");return t}function xa(e){const t=e.result;t.createObjectStore(ma,{keyPath:"modelPath"}),t.createObjectStore(ga,{keyPath:"modelPath"})}class ba{constructor(e){if(this.indexedDB=ya(),null==e||!e)throw new Error("For IndexedDB, modelPath must not be null, undefined or empty.");this.modelPath=e}async save(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserLocalStorage.save() does not support saving model topology in binary formats yet.");return this.databaseAction(this.modelPath,e)}async load(){return this.databaseAction(this.modelPath)}databaseAction(e,t){return new Promise(((e,n)=>{const r=this.indexedDB.open(fa,1);r.onupgradeneeded=()=>xa(r),r.onsuccess=()=>{const s=r.result;if(null==t){const t=s.transaction(ma,"readonly"),r=t.objectStore(ma).get(this.modelPath);r.onsuccess=()=>{if(null==r.result)return s.close(),n(new Error(`Cannot find model with path '${this.modelPath}' in IndexedDB.`));e(r.result.modelArtifacts)},r.onerror=e=>(s.close(),n(r.error)),t.oncomplete=()=>s.close()}else{t.weightData=qs.join(t.weightData);const r=oa(t),a=s.transaction(ga,"readwrite");let o,i,u=a.objectStore(ga);try{o=u.put({modelPath:this.modelPath,modelArtifactsInfo:r})}catch(e){return n(e)}o.onsuccess=()=>{i=s.transaction(ma,"readwrite");const o=i.objectStore(ma);let l;try{l=o.put({modelPath:this.modelPath,modelArtifacts:t,modelArtifactsInfo:r})}catch(e){return n(e)}l.onsuccess=()=>e({modelArtifactsInfo:r}),l.onerror=e=>{u=a.objectStore(ga);const t=u.delete(this.modelPath);t.onsuccess=()=>(s.close(),n(l.error)),t.onerror=e=>(s.close(),n(l.error))}},o.onerror=e=>(s.close(),n(o.error)),a.oncomplete=()=>{null==i?s.close():i.oncomplete=()=>s.close()}}},r.onerror=e=>n(r.error)}))}}ba.URL_SCHEME="indexeddb://";const va=e=>{return fe().getBool("IS_BROWSER")&&!Array.isArray(e)&&e.startsWith(ba.URL_SCHEME)?(t=e.slice(ba.URL_SCHEME.length),new ba(t)):null;var t};la.registerSaveRouter(va),la.registerLoadRouter(va);class wa{constructor(){this.indexedDB=ya()}async listModels(){return new Promise(((e,t)=>{const n=this.indexedDB.open(fa,1);n.onupgradeneeded=()=>xa(n),n.onsuccess=()=>{const r=n.result,s=r.transaction(ga,"readonly"),a=s.objectStore(ga).getAll();a.onsuccess=()=>{const t={};for(const e of a.result)t[e.modelPath]=e.modelArtifactsInfo;e(t)},a.onerror=e=>(r.close(),t(a.error)),s.oncomplete=()=>r.close()},n.onerror=e=>t(n.error)}))}async removeModel(e){var t;return e=(t=e).startsWith(ba.URL_SCHEME)?t.slice(ba.URL_SCHEME.length):t,new Promise(((t,n)=>{const r=this.indexedDB.open(fa,1);r.onupgradeneeded=()=>xa(r),r.onsuccess=()=>{const s=r.result,a=s.transaction(ga,"readwrite"),o=a.objectStore(ga),i=o.get(e);let u;i.onsuccess=()=>{if(null==i.result)return s.close(),n(new Error(`Cannot find model with path '${e}' in IndexedDB.`));{const r=o.delete(e),a=()=>{u=s.transaction(ma,"readwrite");const r=u.objectStore(ma).delete(e);r.onsuccess=()=>t(i.result.modelArtifactsInfo),r.onerror=e=>n(i.error)};r.onsuccess=a,r.onerror=e=>(a(),s.close(),n(i.error))}},i.onerror=e=>(s.close(),n(i.error)),a.oncomplete=()=>{null==u?s.close():u.oncomplete=()=>s.close()}},r.onerror=e=>n(r.error)}))}}const ka="/",Sa="tensorflowjs_models",Ca="info",Ia="model_topology",Ta="weight_specs",$a="weight_data",Na="model_metadata";function Ea(e){return{info:[Sa,e,Ca].join(ka),topology:[Sa,e,Ia].join(ka),weightSpecs:[Sa,e,Ta].join(ka),weightData:[Sa,e,$a].join(ka),modelMetadata:[Sa,e,Na].join(ka)}}function Ra(e){for(const t of Object.values(e))window.localStorage.removeItem(t)}function _a(e){const t=e.split(ka);if(t.length<3)throw new Error(`Invalid key format: ${e}`);return t.slice(1,t.length-1).join(ka)}class Aa{constructor(e){if(!fe().getBool("IS_BROWSER")||"undefined"==typeof window||void 0===window.localStorage)throw new Error("The current environment does not support local storage.");if(this.LS=window.localStorage,null==e||!e)throw new Error("For local storage, modelPath must not be null, undefined or empty.");this.modelPath=e,this.keys=Ea(this.modelPath)}async save(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserLocalStorage.save() does not support saving model topology in binary formats yet.");{const t=JSON.stringify(e.modelTopology),n=JSON.stringify(e.weightSpecs),r=oa(e),s=qs.join(e.weightData);try{this.LS.setItem(this.keys.info,JSON.stringify(r)),this.LS.setItem(this.keys.topology,t),this.LS.setItem(this.keys.weightSpecs,n),this.LS.setItem(this.keys.weightData,function(e){if(Js)return Buffer.from(e).toString("base64");const t=new Uint8Array(e);let n="";for(let e=0,r=t.length;e<r;e++)n+=String.fromCharCode(t[e]);return btoa(n)}(s));const a={format:e.format,generatedBy:e.generatedBy,convertedBy:e.convertedBy,signature:null!=e.signature?e.signature:void 0,userDefinedMetadata:null!=e.userDefinedMetadata?e.userDefinedMetadata:void 0,modelInitializer:null!=e.modelInitializer?e.modelInitializer:void 0,initializerSignature:null!=e.initializerSignature?e.initializerSignature:void 0,trainingConfig:null!=e.trainingConfig?e.trainingConfig:void 0};return this.LS.setItem(this.keys.modelMetadata,JSON.stringify(a)),{modelArtifactsInfo:r}}catch(e){throw Ra(this.keys),new Error(`Failed to save model '${this.modelPath}' to local storage: size quota being exceeded is a possible cause of this failure: modelTopologyBytes=${r.modelTopologyBytes}, weightSpecsBytes=${r.weightSpecsBytes}, weightDataBytes=${r.weightDataBytes}.`)}}}async load(){const e=JSON.parse(this.LS.getItem(this.keys.info));if(null==e)throw new Error(`In local storage, there is no model with name '${this.modelPath}'`);if("JSON"!==e.modelTopologyType)throw new Error("BrowserLocalStorage does not support loading non-JSON model topology yet.");const t={},n=JSON.parse(this.LS.getItem(this.keys.topology));if(null==n)throw new Error(`In local storage, the topology of model '${this.modelPath}' is missing.`);t.modelTopology=n;const r=JSON.parse(this.LS.getItem(this.keys.weightSpecs));if(null==r)throw new Error(`In local storage, the weight specs of model '${this.modelPath}' are missing.`);t.weightSpecs=r;const s=this.LS.getItem(this.keys.modelMetadata);if(null!=s){const e=JSON.parse(s);t.format=e.format,t.generatedBy=e.generatedBy,t.convertedBy=e.convertedBy,null!=e.signature&&(t.signature=e.signature),null!=e.userDefinedMetadata&&(t.userDefinedMetadata=e.userDefinedMetadata),null!=e.modelInitializer&&(t.modelInitializer=e.modelInitializer),null!=e.initializerSignature&&(t.initializerSignature=e.initializerSignature),null!=e.trainingConfig&&(t.trainingConfig=e.trainingConfig)}const a=this.LS.getItem(this.keys.weightData);if(null==a)throw new Error(`In local storage, the binary weight values of model '${this.modelPath}' are missing.`);return t.weightData=function(e){if(Js){const t=Buffer.from(e,"base64");return t.buffer.slice(t.byteOffset,t.byteOffset+t.byteLength)}const t=atob(e),n=new Uint8Array(t.length);for(let e=0;e<t.length;++e)n.set([t.charCodeAt(e)],e);return n.buffer}(a),t}}Aa.URL_SCHEME="localstorage://";const Oa=e=>{return fe().getBool("IS_BROWSER")&&!Array.isArray(e)&&e.startsWith(Aa.URL_SCHEME)?(t=e.slice(Aa.URL_SCHEME.length),new Aa(t)):null;var t};la.registerSaveRouter(Oa),la.registerLoadRouter(Oa);class Fa{constructor(){D(fe().getBool("IS_BROWSER"),(()=>"Current environment is not a web browser")),D("undefined"==typeof window||void 0!==window.localStorage,(()=>"Current browser does not appear to support localStorage")),this.LS=window.localStorage}async listModels(){const e={},t=Sa+ka,n=ka+Ca;for(let r=0;r<this.LS.length;++r){const s=this.LS.key(r);s.startsWith(t)&&s.endsWith(n)&&(e[_a(s)]=JSON.parse(this.LS.getItem(s)))}return e}async removeModel(e){var t;const n=Ea(e=(t=e).startsWith(Aa.URL_SCHEME)?t.slice(Aa.URL_SCHEME.length):t);if(null==this.LS.getItem(n.info))throw new Error(`Cannot find model at path '${e}'`);const r=JSON.parse(this.LS.getItem(n.info));return Ra(n),r}}const Pa="://";class Da{constructor(){this.managers={}}static getInstance(){return null==Da.instance&&(Da.instance=new Da),Da.instance}static registerManager(e,t){D(null!=e,(()=>"scheme must not be undefined or null.")),e.endsWith(Pa)&&(e=e.slice(0,e.indexOf(Pa))),D(e.length>0,(()=>"scheme must not be an empty string."));const n=Da.getInstance();D(null==n.managers[e],(()=>`A model store manager is already registered for scheme '${e}'.`)),n.managers[e]=t}static getManager(e){const t=Da.getInstance().managers[e];if(null==t)throw new Error(`Cannot find model manager for scheme '${e}'`);return t}static getSchemes(){return Object.keys(Da.getInstance().managers)}}function Ma(e){if(-1===e.indexOf(Pa))throw new Error(`The url string provided does not contain a scheme. Supported schemes are: ${Da.getSchemes().join(",")}`);return{scheme:e.split(Pa)[0],path:e.split(Pa)[1]}}async function La(e,t,n=!1){D(e!==t,(()=>`Old path and new path are the same: '${e}'`));const r=la.getLoadHandlers(e);D(r.length>0,(()=>`Copying failed because no load handler is found for source URL ${e}.`)),D(r.length<2,(()=>`Copying failed because more than one (${r.length}) load handlers for source URL ${e}.`));const s=r[0],a=la.getSaveHandlers(t);D(a.length>0,(()=>`Copying failed because no save handler is found for destination URL ${t}.`)),D(a.length<2,(()=>`Copying failed because more than one (${r.length}) save handlers for destination URL ${t}.`));const o=a[0],i=Ma(e).scheme,u=Ma(e).path,l=i===Ma(e).scheme,c=await s.load();n&&l&&await Da.getManager(i).removeModel(u);const h=await o.save(c);return n&&!l&&await Da.getManager(i).removeModel(u),h.modelArtifactsInfo}async function Ba(){const e=Da.getSchemes(),t={};for(const n of e){const e=await Da.getManager(n).listModels();for(const r in e)t[n+Pa+r]=e[r]}return t}async function za(e){const t=Ma(e);return Da.getManager(t.scheme).removeModel(t.path)}async function Ua(e,t){return La(e,t,!1)}async function Va(e,t){return La(e,t,!0)}class Wa{constructor(){this.messageName="setTimeoutCustom",this.functionRefs=[],this.handledMessageCount=0,this.hasEventListener=!1}fetch(e,t){return fetch(e,t)}now(){return performance.now()}encode(e,t){if("utf-8"!==t&&"utf8"!==t)throw new Error(`Browser's encoder only supports utf-8, but got ${t}`);return null==this.textEncoder&&(this.textEncoder=new TextEncoder),this.textEncoder.encode(e)}decode(e,t){return new TextDecoder(t).decode(e)}setTimeoutCustom(e,t){"undefined"!=typeof window&&fe().getBool("USE_SETTIMEOUTCUSTOM")?(this.functionRefs.push(e),setTimeout((()=>{window.postMessage({name:this.messageName,index:this.functionRefs.length-1},"*")}),t),this.hasEventListener||(this.hasEventListener=!0,window.addEventListener("message",(e=>{e.source===window&&e.data.name===this.messageName&&(e.stopPropagation(),(0,this.functionRefs[e.data.index])(),this.handledMessageCount++,this.handledMessageCount===this.functionRefs.length&&(this.functionRefs=[],this.handledMessageCount=0))}),!0))):setTimeout(e,t)}isTypedArray(e){return Rr(e)}}if(fe().get("IS_BROWSER")){fe().setPlatform("browser",new Wa);try{Da.registerManager(Aa.URL_SCHEME,new Fa)}catch(e){}try{Da.registerManager(ba.URL_SCHEME,new wa)}catch(e){}}let Ga;function Ha(e,t="float32",n){return t=t||"float32",ie(e),new ls(e,t,n)}fe().get("IS_NODE")&&!fe().get("IS_BROWSER")&&fe().setPlatform("node",new class{constructor(){this.util=n(628),this.textEncoder=new this.util.TextEncoder}fetch(e,t){return null!=fe().global.fetch?fe().global.fetch(e,t):(null==Ga&&(Ga=n(410)),Ga(e,t))}now(){const e=process.hrtime();return 1e3*e[0]+e[1]/1e6}encode(e,t){if("utf-8"!==t&&"utf8"!==t)throw new Error(`Node built-in encoder only supports utf-8, but got ${t}`);return this.textEncoder.encode(e)}decode(e,t){return 0===e.length?"":new this.util.TextDecoder(t).decode(e)}isTypedArray(e){return this.util.types.isFloat32Array(e)||this.util.types.isInt32Array(e)||this.util.types.isUint8Array(e)||this.util.types.isUint8ClampedArray(e)}});const ja=Ws({cast_:function(e,t){const n=zs(e,"x","cast");if(!function(e){return"bool"===e||"complex64"===e||"float32"===e||"int32"===e||"string"===e}(t))throw new Error(`Failed to cast to unknown dtype ${t}`);if("string"===t&&"string"!==n.dtype||"string"!==t&&"string"===n.dtype)throw new Error("Only strings can be casted to strings");const r={x:n},s={dtype:t};return As.runKernel(Ue,r,s)}}),Ka=Ws({clone_:function(e){const t={x:zs(e,"x","clone","string_or_numeric")};return As.runKernel(Et,t)}});function qa(e,t=!1){console.log(e.toString(t))}function Xa(){return As}function Ya(e,t){return As.tidy(e,t)}function Qa(e){Ts(e).forEach((e=>e.dispose()))}function Za(e){return As.keep(e)}function Ja(){return As.ready()}function eo(){return As.backendName}function to(e,t,n=1){return As.registerBackend(e,t,n)}function no(){return As.backend}_s(),hs={buffer:Ha,cast:ja,clone:Ka,print:qa},ds=function(e){fe().getBool("DEPRECATION_WARNINGS_ENABLED")&&console.warn(e+" You can disable deprecation warnings with tf.disableDeprecationWarnings().")};const ro=Ws({add_:function(e,t){let n=zs(e,"a","add"),r=zs(t,"b","add");[n,r]=Is(n,r);const s={a:n,b:r};return As.runKernel(ke,s)}}),so=Ws({floorDiv_:function(e,t){let n=zs(e,"a","floorDiv"),r=zs(t,"b","floorDiv");[n,r]=Is(n,r);const s={a:n,b:r};return As.runKernel(St,s)}}),ao=Ws({div_:function(e,t){let n=zs(e,"a","div"),r=zs(t,"b","div");if([n,r]=Is(n,r),"int32"===n.dtype&&"int32"===r.dtype)return so(n,r);const s={a:n,b:r};return As.runKernel(ht,s,{})}}),oo=Ws({mul_:function(e,t){let n=zs(e,"a","mul"),r=zs(t,"b","mul");[n,r]=Is(n,r);const s={a:n,b:r};return As.runKernel(nn,s)}}),io=Ws({sqrt_:function(e){const t={x:zs(e,"x","sqrt","float32")};return As.runKernel(Un,t)}}),uo=Ws({square_:function(e){const t=zs(e,"x","square");return As.runKernel("Square",{x:t},{})}}),lo=Ws({zerosLike_:function(e){const t={x:zs(e,"x","zerosLike")};return As.runKernel(fr,t)}});function co(e){return As.customGrad(e)}function ho(e,t){if((Yr(e)&&"string"!==t||Array.isArray(e))&&"complex64"!==t)throw new Error("Error creating a new Scalar: value must be a primitive (number|boolean|string)");if("string"===t&&Yr(e)&&!(e instanceof Uint8Array))throw new Error("When making a scalar from encoded string, the value must be `Uint8Array`.");return Hs(e,[],[],t)}const po=new Map,fo=new Map;class mo{getClassName(){return this.constructor.className}static fromConfig(e,t){return new e(t)}}class go{constructor(){this.classNameMap={}}static getMap(){return null==go.instance&&(go.instance=new go),go.instance}static register(e){go.getMap().classNameMap[e.className]=[e,e.fromConfig]}}function yo(e,t,n){D(null!=e.className,(()=>"Class being registered does not have the static className property defined.")),D("string"==typeof e.className,(()=>"className is required to be a string, but got type "+typeof e.className)),D(e.className.length>0,(()=>"Class being registered has an empty-string as its className, which is disallowed.")),void 0===t&&(t="Custom"),void 0===n&&(n=e.className);const r=t+">"+n;return go.register(e),po.set(r,e),fo.set(e,r),e}class xo extends mo{minimize(e,t=!1,n){const{value:r,grads:s}=this.computeGradients(e,n);if(null!=n){const e=n.map((e=>({name:e.name,tensor:s[e.name]})));this.applyGradients(e)}else this.applyGradients(s);return Qa(s),t?r:(r.dispose(),null)}get iterations(){return null==this.iterations_&&(this.iterations_=0),this.iterations_}incrementIterations(){this.iterations_=this.iterations+1}computeGradients(e,t){return function(e,t){D(ee(e),(()=>"The f passed in variableGrads(f) must be a function")),D(null==t||Array.isArray(t)&&t.every((e=>e instanceof fs)),(()=>"The varList passed in variableGrads(f, varList) must be an array of variables"));const n=null!=t;if(!n){t=[];for(const e in As.registeredVariables)t.push(As.registeredVariables[e])}const r=n?t.filter((e=>!e.trainable)):null,s=t.length;t=t.filter((e=>e.trainable)),D(t.length>0,(()=>`variableGrads() expects at least one of the input variables to be trainable, but none of the ${s} variables is trainable.`));const{value:a,grads:o}=As.gradients(e,t,null,!0);D(o.some((e=>null!=e)),(()=>"Cannot find a connection between any variable and the result of the loss function y=f(x). Please make sure the operations that use variables are inside the function f passed to minimize().")),D(0===a.rank,(()=>`The f passed in variableGrads(f) must return a scalar, but it returned a rank-${a.rank} tensor`));const i={};return t.forEach(((e,t)=>{null!=o[t]&&(i[e.name]=o[t])})),null!=r&&r.forEach((e=>i[e.name]=null)),{value:a,grads:i}}(e,t)}dispose(){null!=this.iterations_&&Qa(this.iterations_)}async saveIterations(){return null==this.iterations_&&(this.iterations_=0),{name:"iter",tensor:ho(this.iterations_,"int32")}}async getWeights(){throw new Error("getWeights() is not implemented for this optimizer yet.")}async setWeights(e){throw new Error(`setWeights() is not implemented for this optimizer class ${this.getClassName()}`)}async extractIterations(e){return this.iterations_=(await e[0].tensor.data())[0],e.slice(1)}}function bo(e,t,n){ie(e);const r={shape:e,value:t,dtype:n=n||J(t)};return As.runKernel(vt,{},r)}Object.defineProperty(xo,Symbol.hasInstance,{value:e=>null!=e.minimize&&null!=e.computeGradients&&null!=e.applyGradients});const vo=Ws({pow_:function(e,t){let n=zs(e,"base","pow"),r=zs(t,"exp","pow");[n,r]=Is(n,r);const s={a:n,b:r};return As.runKernel(pn,s)}}),wo=Ws({sub_:function(e,t){let n=zs(e,"a","sub"),r=zs(t,"b","sub");[n,r]=Is(n,r);const s={a:n,b:r};return As.runKernel(sr,s)}}),ko=Ws({abs_:function(e){const t=zs(e,"x","abs");if("complex64"===t.dtype){const e={x:t};return As.runKernel(He,e)}{const e={x:t};return As.runKernel(be,e)}}});function So(e,t){const n=e.length,r=[];for(let s=0;s<n;s++){const a=n-1-s,o=e[a]||1;(t[t.length-1-s]||1)>1&&1===o&&r.unshift(a)}return r}function Co(e,t){const n=[];for(let r=0;r<t.length;r++){const s=e[e.length-r-1],a=t.length-r-1,o=t[a];(null==s||1===s&&o>1)&&n.unshift(a)}return n}function Io(e,t){const n=Math.max(e.length,t.length),r=new Array(n);for(let s=0;s<n;s++){let a=e[e.length-s-1];null==a&&(a=1);let o=t[t.length-s-1];if(null==o&&(o=1),1===a)r[n-s-1]=o;else if(1===o)r[n-s-1]=a;else{if(a!==o)throw Error(`Operands could not be broadcast together with shapes ${e} and ${t}.`);r[n-s-1]=a}}return r}const To=Ws({maximum_:function(e,t){let n=zs(e,"a","maximum"),r=zs(t,"b","maximum");[n,r]=Is(n,r),"bool"===n.dtype&&(n=ja(n,"int32"),r=ja(r,"int32")),Io(n.shape,r.shape);const s={a:n,b:r};return As.runKernel(jt,s)}});class $o extends xo{static get className(){return"SGD"}constructor(e){super(),this.learningRate=e,this.setLearningRate(e)}applyGradients(e){(Array.isArray(e)?e.map((e=>e.name)):Object.keys(e)).forEach(((t,n)=>{const r=Array.isArray(e)?e[n].tensor:e[t];if(null==r)return;const s=As.registeredVariables[t];Ya((()=>{const e=ro(oo(this.c,r),s);s.assign(e)}))})),this.incrementIterations()}setLearningRate(e){this.learningRate=e,null!=this.c&&this.c.dispose(),this.c=Za(ho(-e))}dispose(){this.c.dispose()}async getWeights(){return[await this.saveIterations()]}async setWeights(e){if(0!==(e=await this.extractIterations(e)).length)throw new Error("SGD optimizer does not have settable weights.")}getConfig(){return{learningRate:this.learningRate}}static fromConfig(e,t){return new e(t.learningRate)}}const No=[class extends xo{static get className(){return"Adadelta"}constructor(e,t,n=null){super(),this.learningRate=e,this.rho=t,this.epsilon=n,this.accumulatedGrads=[],this.accumulatedUpdates=[],null==n&&(this.epsilon=As.backend.epsilon())}applyGradients(e){(Array.isArray(e)?e.map((e=>e.name)):Object.keys(e)).forEach(((t,n)=>{const r=As.registeredVariables[t];null==this.accumulatedGrads[n]&&(this.accumulatedGrads[n]={originalName:`${t}/accum_grad`,variable:Ya((()=>lo(r).variable(!1)))}),null==this.accumulatedUpdates[n]&&(this.accumulatedUpdates[n]={originalName:`${t}/accum_var`,variable:Ya((()=>lo(r).variable(!1)))});const s=Array.isArray(e)?e[n].tensor:e[t];if(null==s)return;const a=this.accumulatedGrads[n].variable,o=this.accumulatedUpdates[n].variable;Ya((()=>{const e=ro(oo(a,this.rho),oo(uo(s),1-this.rho)),t=oo(ao(io(ro(o,this.epsilon)),io(ro(a,this.epsilon))),s),n=ro(oo(o,this.rho),oo(uo(t),1-this.rho));a.assign(e),o.assign(n);const i=ro(oo(t,-this.learningRate),r);r.assign(i)}))})),this.incrementIterations()}dispose(){null!=this.accumulatedUpdates&&(Qa(this.accumulatedGrads.map((e=>e.variable))),Qa(this.accumulatedUpdates.map((e=>e.variable))))}async getWeights(){const e=[...this.accumulatedGrads,...this.accumulatedUpdates];return[await this.saveIterations()].concat(e.map((e=>({name:e.originalName,tensor:e.variable}))))}async setWeights(e){const t=(e=await this.extractIterations(e)).length/2;this.accumulatedGrads=e.slice(0,t).map((e=>({originalName:e.name,variable:e.tensor.variable(!1)}))),this.accumulatedUpdates=e.slice(t,2*t).map((e=>({originalName:e.name,variable:e.tensor.variable(!1)})))}getConfig(){return{learningRate:this.learningRate,rho:this.rho,epsilon:this.epsilon}}static fromConfig(e,t){return new e(t.learningRate,t.rho,t.epsilon)}},class extends xo{static get className(){return"Adagrad"}constructor(e,t=.1){super(),this.learningRate=e,this.initialAccumulatorValue=t,this.accumulatedGrads=[]}applyGradients(e){(Array.isArray(e)?e.map((e=>e.name)):Object.keys(e)).forEach(((t,n)=>{const r=As.registeredVariables[t];if(null==this.accumulatedGrads[n]){const e=!1;this.accumulatedGrads[n]={originalName:`${t}/accumulator`,variable:Ya((()=>bo(r.shape,this.initialAccumulatorValue).variable(e)))}}const s=Array.isArray(e)?e[n].tensor:e[t];if(null==s)return;const a=this.accumulatedGrads[n].variable;Ya((()=>{const e=ro(a,uo(s));a.assign(e);const t=ro(oo(ao(s,io(ro(e,As.backend.epsilon()))),-this.learningRate),r);r.assign(t)}))})),this.incrementIterations()}dispose(){null!=this.accumulatedGrads&&Qa(this.accumulatedGrads.map((e=>e.variable)))}async getWeights(){return[await this.saveIterations()].concat(this.accumulatedGrads.map((e=>({name:e.originalName,tensor:e.variable}))))}async setWeights(e){e=await this.extractIterations(e),this.accumulatedGrads=e.map((e=>({originalName:e.name,variable:e.tensor.variable(!1)})))}getConfig(){return{learningRate:this.learningRate,initialAccumulatorValue:this.initialAccumulatorValue}}static fromConfig(e,t){return new e(t.learningRate,t.initialAccumulatorValue)}},class extends xo{static get className(){return"Adam"}constructor(e,t,n,r=null){super(),this.learningRate=e,this.beta1=t,this.beta2=n,this.epsilon=r,this.accumulatedFirstMoment=[],this.accumulatedSecondMoment=[],Ya((()=>{this.accBeta1=ho(t).variable(),this.accBeta2=ho(n).variable()})),null==r&&(this.epsilon=As.backend.epsilon())}applyGradients(e){const t=Array.isArray(e)?e.map((e=>e.name)):Object.keys(e);Ya((()=>{const n=wo(1,this.accBeta1),r=wo(1,this.accBeta2);t.forEach(((t,s)=>{const a=As.registeredVariables[t];null==this.accumulatedFirstMoment[s]&&(this.accumulatedFirstMoment[s]={originalName:`${t}/m`,variable:Ya((()=>lo(a).variable(!1)))}),null==this.accumulatedSecondMoment[s]&&(this.accumulatedSecondMoment[s]={originalName:`${t}/v`,variable:Ya((()=>lo(a).variable(!1)))});const o=Array.isArray(e)?e[s].tensor:e[t];if(null==o)return;const i=this.accumulatedFirstMoment[s].variable,u=this.accumulatedSecondMoment[s].variable,l=ro(oo(i,this.beta1),oo(o,1-this.beta1)),c=ro(oo(u,this.beta2),oo(uo(o),1-this.beta2)),h=ao(l,n),d=ao(c,r);i.assign(l),u.assign(c);const p=ro(oo(ao(h,ro(io(d),this.epsilon)),-this.learningRate),a);a.assign(p)})),this.accBeta1.assign(oo(this.accBeta1,this.beta1)),this.accBeta2.assign(oo(this.accBeta2,this.beta2))})),this.incrementIterations()}dispose(){this.accBeta1.dispose(),this.accBeta2.dispose(),null!=this.accumulatedFirstMoment&&Qa(this.accumulatedFirstMoment.map((e=>e.variable))),null!=this.accumulatedSecondMoment&&Qa(this.accumulatedSecondMoment.map((e=>e.variable)))}async getWeights(){const e=[...this.accumulatedFirstMoment,...this.accumulatedSecondMoment];return[await this.saveIterations()].concat(e.map((e=>({name:e.originalName,tensor:e.variable}))))}async setWeights(e){e=await this.extractIterations(e),Ya((()=>{this.accBeta1.assign(vo(this.beta1,this.iterations_+1)),this.accBeta2.assign(vo(this.beta2,this.iterations_+1))}));const t=e.length/2;this.accumulatedFirstMoment=e.slice(0,t).map((e=>({originalName:e.name,variable:e.tensor.variable(!1)}))),this.accumulatedSecondMoment=e.slice(t,2*t).map((e=>({originalName:e.name,variable:e.tensor.variable(!1)})))}getConfig(){return{learningRate:this.learningRate,beta1:this.beta1,beta2:this.beta2,epsilon:this.epsilon}}static fromConfig(e,t){return new e(t.learningRate,t.beta1,t.beta2,t.epsilon)}},class extends xo{static get className(){return"Adamax"}constructor(e,t,n,r=null,s=0){super(),this.learningRate=e,this.beta1=t,this.beta2=n,this.epsilon=r,this.decay=s,this.accumulatedFirstMoment=[],this.accumulatedWeightedInfNorm=[],Ya((()=>{this.iteration=ho(0).variable(),this.accBeta1=ho(t).variable()})),null==r&&(this.epsilon=As.backend.epsilon())}applyGradients(e){const t=Array.isArray(e)?e.map((e=>e.name)):Object.keys(e);Ya((()=>{const n=wo(1,this.accBeta1),r=ao(-this.learningRate,ro(oo(this.iteration,this.decay),1));t.forEach(((t,s)=>{const a=As.registeredVariables[t];null==this.accumulatedFirstMoment[s]&&(this.accumulatedFirstMoment[s]={originalName:`${t}/m`,variable:lo(a).variable(!1)}),null==this.accumulatedWeightedInfNorm[s]&&(this.accumulatedWeightedInfNorm[s]={originalName:`${t}/v`,variable:lo(a).variable(!1)});const o=Array.isArray(e)?e[s].tensor:e[t];if(null==o)return;const i=this.accumulatedFirstMoment[s].variable,u=this.accumulatedWeightedInfNorm[s].variable,l=ro(oo(i,this.beta1),oo(o,1-this.beta1)),c=oo(u,this.beta2),h=ko(o),d=To(c,h);i.assign(l),u.assign(d);const p=ro(oo(ao(r,n),ao(l,ro(d,this.epsilon))),a);a.assign(p)})),this.iteration.assign(ro(this.iteration,1)),this.accBeta1.assign(oo(this.accBeta1,this.beta1))})),this.incrementIterations()}dispose(){this.accBeta1.dispose(),this.iteration.dispose(),null!=this.accumulatedFirstMoment&&Qa(this.accumulatedFirstMoment.map((e=>e.variable))),null!=this.accumulatedWeightedInfNorm&&Qa(this.accumulatedWeightedInfNorm.map((e=>e.variable)))}async getWeights(){throw new Error("getWeights() is not implemented for Adamax yet.")}async setWeights(e){throw new Error("setWeights() is not implemented for Adamax yet.")}getConfig(){return{learningRate:this.learningRate,beta1:this.beta1,beta2:this.beta2,epsilon:this.epsilon,decay:this.decay}}static fromConfig(e,t){return new e(t.learningRate,t.beta1,t.beta2,t.epsilon,t.decay)}},class extends $o{static get className(){return"Momentum"}constructor(e,t,n=!1){super(e),this.learningRate=e,this.momentum=t,this.useNesterov=n,this.accumulations=[],this.m=ho(this.momentum)}applyGradients(e){(Array.isArray(e)?e.map((e=>e.name)):Object.keys(e)).forEach(((t,n)=>{const r=As.registeredVariables[t];if(null==this.accumulations[n]){const e=!1;this.accumulations[n]={originalName:`${t}/momentum`,variable:Ya((()=>lo(r).variable(e)))}}const s=this.accumulations[n].variable,a=Array.isArray(e)?e[n].tensor:e[t];null!=a&&Ya((()=>{let e;const t=ro(oo(this.m,s),a);e=this.useNesterov?ro(oo(this.c,ro(a,oo(t,this.m))),r):ro(oo(this.c,t),r),s.assign(t),r.assign(e)}))})),this.incrementIterations()}dispose(){this.m.dispose(),null!=this.accumulations&&Qa(this.accumulations.map((e=>e.variable)))}setMomentum(e){this.momentum=e}async getWeights(){return[await this.saveIterations()].concat(this.accumulations.map((e=>({name:e.originalName,tensor:e.variable}))))}async setWeights(e){e=await this.extractIterations(e),this.accumulations=e.map((e=>({originalName:e.name,variable:e.tensor.variable(!1)})))}getConfig(){return{learningRate:this.learningRate,momentum:this.momentum,useNesterov:this.useNesterov}}static fromConfig(e,t){return new e(t.learningRate,t.momentum,t.useNesterov)}},class extends xo{static get className(){return"RMSProp"}constructor(e,t=.9,n=0,r=null,s=!1){if(super(),this.learningRate=e,this.decay=t,this.momentum=n,this.epsilon=r,this.accumulatedMeanSquares=[],this.accumulatedMoments=[],this.accumulatedMeanGrads=[],this.centered=s,null==r&&(this.epsilon=As.backend.epsilon()),null==e)throw new Error("learningRate for RMSPropOptimizer must be defined.")}applyGradients(e){(Array.isArray(e)?e.map((e=>e.name)):Object.keys(e)).forEach(((t,n)=>{const r=As.registeredVariables[t],s=!1;null==this.accumulatedMeanSquares[n]&&(this.accumulatedMeanSquares[n]={originalName:`${t}/rms`,variable:Ya((()=>lo(r).variable(s)))}),null==this.accumulatedMoments[n]&&(this.accumulatedMoments[n]={originalName:`${t}/momentum`,variable:Ya((()=>lo(r).variable(s)))}),null==this.accumulatedMeanGrads[n]&&this.centered&&(this.accumulatedMeanGrads[n]={originalName:`${t}/mg`,variable:Ya((()=>lo(r).variable(s)))});const a=Array.isArray(e)?e[n].tensor:e[t];if(null==a)return;const o=this.accumulatedMeanSquares[n].variable,i=this.accumulatedMoments[n].variable;Ya((()=>{const e=ro(oo(o,this.decay),oo(uo(a),1-this.decay));if(this.centered){const t=this.accumulatedMeanGrads[n].variable,s=ro(oo(t,this.decay),oo(a,1-this.decay)),u=ao(oo(a,this.learningRate),io(wo(e,ro(uo(s),this.epsilon)))),l=ro(oo(i,this.momentum),u);o.assign(e),t.assign(s),i.assign(l);const c=wo(r,l);r.assign(c)}else{const e=ro(oo(o,this.decay),oo(uo(a),1-this.decay)),t=ro(oo(i,this.momentum),ao(oo(a,this.learningRate),io(ro(e,this.epsilon))));o.assign(e),i.assign(t);const n=wo(r,t);r.assign(n)}}))})),this.incrementIterations()}dispose(){null!=this.accumulatedMeanSquares&&Qa(this.accumulatedMeanSquares.map((e=>e.variable))),null!=this.accumulatedMeanGrads&&this.centered&&Qa(this.accumulatedMeanGrads.map((e=>e.variable))),null!=this.accumulatedMoments&&Qa(this.accumulatedMoments.map((e=>e.variable)))}async getWeights(){const e=[...this.accumulatedMeanSquares,...this.accumulatedMoments];return this.centered&&e.push(...this.accumulatedMeanGrads),[await this.saveIterations()].concat(e.map((e=>({name:e.originalName,tensor:e.variable}))))}async setWeights(e){e=await this.extractIterations(e);const t=this.centered?e.length/3:e.length/2,n=!1;this.accumulatedMeanSquares=e.slice(0,t).map((e=>({originalName:e.name,variable:e.tensor.variable(n)}))),this.accumulatedMoments=e.slice(t,2*t).map((e=>({originalName:e.name,variable:e.tensor.variable(n)}))),this.centered&&(this.accumulatedMeanGrads=e.slice(2*t,3*t).map((e=>({originalName:e.name,variable:e.tensor.variable(n)}))))}getConfig(){return{learningRate:this.learningRate,decay:this.decay,momentum:this.momentum,epsilon:this.epsilon,centered:this.centered}}static fromConfig(e,t){return new e(t.learningRate,t.decay,t.momentum,t.epsilon,t.centered)}},$o];function Eo(e){return new Promise((e=>setTimeout(e))).then(e)}class Ro{constructor(e){if(!fe().getBool("IS_BROWSER"))throw new Error("browserDownloads() cannot proceed because the current environment is not a browser.");e.startsWith(Ro.URL_SCHEME)&&(e=e.slice(Ro.URL_SCHEME.length)),null!=e&&0!==e.length||(e="model"),this.modelJsonFileName=e+".json",this.weightDataFileName=e+".weights.bin"}async save(e){if("undefined"==typeof document)throw new Error("Browser downloads are not supported in this environment since `document` is not present");const t=qs.join(e.weightData),n=window.URL.createObjectURL(new Blob([t],{type:"application/octet-stream"}));if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserDownloads.save() does not support saving model topology in binary formats yet.");{const t=ra(e,[{paths:["./"+this.weightDataFileName],weights:e.weightSpecs}]),r=window.URL.createObjectURL(new Blob([JSON.stringify(t)],{type:"application/json"})),s=null==this.modelJsonAnchor?document.createElement("a"):this.modelJsonAnchor;if(s.download=this.modelJsonFileName,s.href=r,await Eo((()=>s.dispatchEvent(new MouseEvent("click")))),null!=e.weightData){const e=null==this.weightDataAnchor?document.createElement("a"):this.weightDataAnchor;e.download=this.weightDataFileName,e.href=n,await Eo((()=>e.dispatchEvent(new MouseEvent("click"))))}return{modelArtifactsInfo:oa(e)}}}}Ro.URL_SCHEME="downloads://";class _o{constructor(e){if(null==e||e.length<1)throw new Error(`When calling browserFiles, at least 1 file is required, but received ${e}`);this.jsonFile=e[0],this.weightsFiles=e.slice(1)}async load(){return new Promise(((e,t)=>{const n=new FileReader;n.onload=n=>{const r=JSON.parse(n.target.result),s=r.modelTopology;if(null==s)return void t(new Error(`modelTopology field is missing from file ${this.jsonFile.name}`));if(null==r.weightsManifest)return void t(new Error(`weightManifest field is missing from file ${this.jsonFile.name}`));if(0===this.weightsFiles.length)return void e({modelTopology:s});const a=aa(r,(e=>this.loadWeights(e)));e(a)},n.onerror=e=>t(`Failed to read model topology and weights manifest JSON from file '${this.jsonFile.name}'. BrowserFiles supports loading Keras-style tf.Model artifacts only.`),n.readAsText(this.jsonFile)}))}loadWeights(e){const t=[],n=[];for(const r of e)t.push(...r.weights),n.push(...r.paths);const r=this.checkManifestAndWeightFiles(e),s=n.map((e=>this.loadWeightsFile(e,r[e])));return Promise.all(s).then((e=>[t,e]))}loadWeightsFile(e,t){return new Promise(((n,r)=>{const s=new FileReader;s.onload=e=>{const t=e.target.result;n(t)},s.onerror=t=>r(`Failed to weights data from file of path '${e}'.`),s.readAsArrayBuffer(t)}))}checkManifestAndWeightFiles(e){const t=[],n=this.weightsFiles.map((e=>na(e.name))),r={};for(const s of e)s.paths.forEach((e=>{const s=na(e);if(-1!==t.indexOf(s))throw new Error(`Duplicate file basename found in weights manifest: '${s}'`);if(t.push(s),-1===n.indexOf(s))throw new Error(`Weight file with basename '${s}' is not provided.`);r[e]=this.weightsFiles[n.indexOf(s)]}));if(t.length!==this.weightsFiles.length)throw new Error(`Mismatch in the number of files in weights manifest (${t.length}) and the number of weight files provided (${this.weightsFiles.length}).`);return r}}function Ao(e){return new _o(e)}function Oo(e,t,n,r){!function(e){D(null!=e&&Array.isArray(e)&&e.length>0,(()=>"promises must be a none empty array"))}(e),function(e,t){D(e>=0&&e<=1,(()=>`Progress fraction must be in range [0, 1], but got startFraction ${e}`)),D(t>=0&&t<=1,(()=>`Progress fraction must be in range [0, 1], but got endFraction ${t}`)),D(t>=e,(()=>`startFraction must be no more than endFraction, but got startFraction ${e} and endFraction ${t}`))}(n=null==n?0:n,r=null==r?1:r);let s=0;return Promise.all(e.map((a=>(a.then((a=>{const o=n+ ++s/e.length*(r-n);return t(o),a})),a))))}async function Fo(e,t){null==t&&(t={});const n=null==t.fetchFunc?fe().platform.fetch:t.fetchFunc,r=e.map((e=>n(e,t.requestInit,{isBinary:!0}))),s=(null==t.onProgress?await Promise.all(r):await Oo(r,t.onProgress,0,.5)).map((e=>e.arrayBuffer()));return null==t.onProgress?await Promise.all(s):await Oo(s,t.onProgress,.5,1)}async function Po(e,t="",n,r){return Do((e=>Fo(e,{requestInit:r})))(e,t,n)}function Do(e){return async(t,n="",r)=>{const s=t.map((()=>!1)),a={},o=null!=r?r.map((()=>!1)):[],i=[];if(t.forEach(((e,t)=>{let n=0;e.weights.forEach((e=>{const u="quantization"in e?e.quantization.dtype:e.dtype,l=Ks[u]*B(e.shape),c=()=>{s[t]=!0,null==a[t]&&(a[t]=[]),a[t].push({manifestEntry:e,groupOffset:n,sizeBytes:l})};null!=r?r.forEach(((t,n)=>{t===e.name&&(c(),o[n]=!0)})):c(),i.push(e.name),n+=l}))})),!o.every((e=>e))){const e=r.filter(((e,t)=>!o[t]));throw new Error(`Could not find weights in manifest with names: ${e.join(", ")}. \nManifest JSON has weights with names: ${i.join(", ")}.`)}const u=s.reduce(((e,t,n)=>(t&&e.push(n),e)),[]),l=[];u.forEach((e=>{t[e].paths.forEach((e=>{const t=n+(n.endsWith("/")?"":"/")+e;l.push(t)}))}));const c=await e(l),h={};let d=0;return u.forEach((e=>{const n=t[e].paths.length,r=new qs(c.slice(d,d+n));a[e].forEach((e=>{const t=Qs(r.slice(e.groupOffset,e.groupOffset+e.sizeBytes),[e.manifestEntry]);for(const e in t)h[e]=t[e]})),d+=n})),h}}la.registerSaveRouter((e=>fe().getBool("IS_BROWSER")&&!Array.isArray(e)&&e.startsWith(Ro.URL_SCHEME)?function(e="model"){return new Ro(e)}(e.slice(Ro.URL_SCHEME.length)):null));class Mo{constructor(e,t){if(this.DEFAULT_METHOD="POST",null==t&&(t={}),this.weightPathPrefix=t.weightPathPrefix,this.onProgress=t.onProgress,this.weightUrlConverter=t.weightUrlConverter,null!=t.fetchFunc?(D("function"==typeof t.fetchFunc,(()=>"Must pass a function that matches the signature of `fetch` (see https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API)")),this.fetch=t.fetchFunc):this.fetch=fe().platform.fetch,D(null!=e&&e.length>0,(()=>"URL path for http must not be null, undefined or empty.")),Array.isArray(e)&&D(2===e.length,(()=>`URL paths for http must have a length of 2, (actual length is ${e.length}).`)),this.path=e,null!=t.requestInit&&null!=t.requestInit.body)throw new Error("requestInit is expected to have no pre-existing body, but has one.");this.requestInit=t.requestInit||{}}async save(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserHTTPRequest.save() does not support saving model topology in binary formats yet.");const t=Object.assign({method:this.DEFAULT_METHOD},this.requestInit);t.body=new FormData;const n=ra(e,[{paths:["./model.weights.bin"],weights:e.weightSpecs}]);if(t.body.append("model.json",new Blob([JSON.stringify(n)],{type:"application/json"}),"model.json"),null!=e.weightData){const n=qs.join(e.weightData);t.body.append("model.weights.bin",new Blob([n],{type:"application/octet-stream"}),"model.weights.bin")}const r=await this.fetch(this.path,t);if(r.ok)return{modelArtifactsInfo:oa(e),responses:[r]};throw new Error(`BrowserHTTPRequest.save() failed due to HTTP response status ${r.status}.`)}async load(){const e=await this.fetch(this.path,this.requestInit);if(!e.ok)throw new Error(`Request to ${this.path} failed with status code ${e.status}. Please verify this URL points to the model JSON of the model to load.`);let t;try{t=await e.json()}catch(e){let t=`Failed to parse model JSON of response from ${this.path}.`;throw this.path.endsWith(".pb")?t+=" Your path contains a .pb file extension. Support for .pb models have been removed in TensorFlow.js 1.0 in favor of .json models. You can re-convert your Python TensorFlow model using the TensorFlow.js 1.0 conversion scripts or you can convert your.pb models with the 'pb2json'NPM script in the tensorflow/tfjs-converter repository.":t+=" Please make sure the server is serving valid JSON for this request.",new Error(t)}const n=t.modelTopology,r=t.weightsManifest;if(null==n&&null==r)throw new Error(`The JSON from HTTP path ${this.path} contains neither model topology or manifest for weights.`);return aa(t,(e=>this.loadWeights(e)))}async loadWeights(e){const t=Array.isArray(this.path)?this.path[1]:this.path,[n,r]=function(e){const t=e.lastIndexOf("/"),n=e.lastIndexOf("?");return[e.substring(0,t)+"/",n>t?e.substring(n):""]}(t),s=this.weightPathPrefix||n,a=ia(e),o=[],i=[];for(const t of e)for(const e of t.paths)null!=this.weightUrlConverter?i.push(this.weightUrlConverter(e)):o.push(s+e+r);return this.weightUrlConverter&&o.push(...await Promise.all(i)),[a,await Fo(o,{requestInit:this.requestInit,fetchFunc:this.fetch,onProgress:this.onProgress})]}}function Lo(e){return null!=e.match(Mo.URL_SCHEME_REGEX)}Mo.URL_SCHEME_REGEX=/^https?:\/\//;const Bo=(e,t)=>{if("undefined"==typeof fetch&&(null==t||null==t.fetchFunc))return null;{let n=!0;if(n=Array.isArray(e)?e.every((e=>Lo(e))):Lo(e),n)return zo(e,t)}return null};function zo(e,t){return new Mo(e,t)}function Uo(e,t){return zo(e,t)}la.registerSaveRouter(Bo),la.registerLoadRouter(Bo);class Vo{constructor(e){this.modelArtifacts=e}load(){return this.modelArtifacts}}class Wo{constructor(e){this.saveHandler=e}save(e){return this.saveHandler(e)}}class Go{constructor(e){e.load&&(this.load=()=>Promise.resolve(e.load())),e.save&&(this.save=t=>Promise.resolve(e.save(t)))}}function Ho(e,t,n,r){return new Go(jo(...arguments))}function jo(e,t,n,r){return 1===arguments.length?null!=e.modelTopology||null!=e.weightSpecs?new Vo(e):(console.warn("Please call tf.io.fromMemory() with only one argument. The argument should be of type ModelArtifacts. The multi-argument signature of tf.io.fromMemory() has been deprecated and will be removed in a future release."),new Vo({modelTopology:e})):(console.warn("Please call tf.io.fromMemory() with only one argument. The argument should be of type ModelArtifacts. The multi-argument signature of tf.io.fromMemory() has been deprecated and will be removed in a future release."),new Vo({modelTopology:e,weightSpecs:t,weightData:n,trainingConfig:r}))}function Ko(e){return new Wo(e)}function qo(e){return new Wo(e)}function Xo(e,t,n){if(L(e),null!=t&&3!==t.length)throw new Error("tensor3d() requires shape to have three numbers");const r=Ms(e,n);if(3!==r.length&&1!==r.length)throw new Error("tensor3d() requires values to be number[][][] or flat/TypedArray");if(1===r.length&&null==t)throw new Error("tensor3d() requires shape to be provided when `values` are a flat array");return Hs(e,t,r,n)}let Yo,Qo=!1;async function Zo(e,t){let n=zs(e,"img","toPixels");if(!(e instanceof ps)){const e=n;n=ja(e,"int32"),e.dispose()}!function(e){if(2!==e.rank&&3!==e.rank)throw new Error(`toPixels only supports rank 2 or 3 tensors, got rank ${e.rank}.`);const t=2===e.rank?1:e.shape[2];if(t>4||2===t)throw new Error(`toPixels only supports depth of size 1, 3 or 4 but got ${t}`);if("float32"!==e.dtype&&"int32"!==e.dtype)throw new Error(`Unsupported type for toPixels: ${e.dtype}. Please use float32 or int32 tensors.`)}(n);const[r,s]=n.shape.slice(0,2),a=2===n.rank?1:n.shape[2],o=await n.data(),i="float32"===n.dtype?255:1,u=new Uint8ClampedArray(s*r*4);for(let e=0;e<r*s;++e){const t=[0,0,0,255];for(let r=0;r<a;r++){const s=o[e*a+r];if("float32"===n.dtype){if(s<0||s>1)throw new Error(`Tensor values for a float32 Tensor must be in the range [0 - 1] but encountered ${s}.`)}else if("int32"===n.dtype&&(s<0||s>255))throw new Error(`Tensor values for a int32 Tensor must be in the range [0 - 255] but encountered ${s}.`);1===a?(t[0]=s*i,t[1]=s*i,t[2]=s*i):t[r]=s*i}const r=4*e;u[r+0]=Math.round(t[0]),u[r+1]=Math.round(t[1]),u[r+2]=Math.round(t[2]),u[r+3]=Math.round(t[3])}if(null!=t){Qo||null!=Ir(ct,As.backendName)&&(console.warn("tf.browser.toPixels is not efficient to draw tensor on canvas. Please try tf.browser.draw instead."),Qo=!0),t.width=s,t.height=r;const e=t.getContext("2d"),n=new ImageData(u,s,r);e.putImageData(n,0,0)}return n!==e&&n.dispose(),u}const Jo=Ws({fromPixels_:function(e,t=3){if(t>4)throw new Error("Cannot construct Tensor with more than 4 channels from pixels.");if(null==e)throw new Error("pixels passed to tf.browser.fromPixels() can not be null");let n=!1,r=!1,s=!1,a=!1,o=!1,i=!1;if(e.data instanceof Uint8Array)n=!0;else if("undefined"!=typeof ImageData&&e instanceof ImageData)r=!0;else if("undefined"!=typeof HTMLVideoElement&&e instanceof HTMLVideoElement)s=!0;else if("undefined"!=typeof HTMLImageElement&&e instanceof HTMLImageElement)a=!0;else if(null!=e.getContext)o=!0;else{if(!("undefined"!=typeof ImageBitmap&&e instanceof ImageBitmap))throw new Error(`pixels passed to tf.browser.fromPixels() must be either an HTMLVideoElement, HTMLImageElement, HTMLCanvasElement, ImageData in browser, or OffscreenCanvas, ImageData in webworker or {data: Uint32Array, width: number, height: number}, but was ${e.constructor.name}`);i=!0}if(null!=Ir(gr,As.backendName)){const n={pixels:e},r={numChannels:t};return As.runKernel(gr,n,r)}const[u,l]=s?[e.videoWidth,e.videoHeight]:[e.width,e.height];let c,h;if(o)c=e.getContext("2d").getImageData(0,0,u,l).data;else if(r||n)c=e.data;else if(a||s||i){if(null==Yo)if("undefined"==typeof document){if("undefined"==typeof OffscreenCanvas||"undefined"==typeof OffscreenCanvasRenderingContext2D)throw new Error("Cannot parse input in current context. Reason: OffscreenCanvas Context2D rendering is not supported.");Yo=new OffscreenCanvas(1,1).getContext("2d")}else Yo=document.createElement("canvas").getContext("2d",{willReadFrequently:!0});Yo.canvas.width=u,Yo.canvas.height=l,Yo.drawImage(e,0,0,u,l),c=Yo.getImageData(0,0,u,l).data}if(4===t)h=new Int32Array(c);else{const e=u*l;h=new Int32Array(e*t);for(let n=0;n<e;n++)for(let e=0;e<t;++e)h[n*t+e]=c[4*n+e]}return Xo(h,[l,u,t],"int32")}}),ei=-2,ti=-1;function ni(e,t,n){const r=e.shape.length;D(r===t.length,(()=>`Error in slice${r}D: Length of begin ${t} must match the rank of the array (${r}).`)),D(r===n.length,(()=>`Error in slice${r}D: Length of size ${n} must match the rank of the array (${r}).`));for(let s=0;s<r;++s)D(t[s]+n[s]<=e.shape[s],(()=>`Error in slice${r}D: begin[${s}] + size[${s}] (${t[s]+n[s]}) would overflow input.shape[${s}] (${e.shape[s]})`))}function ri(e){const t=[];let n=0;for(;e>0;)1&e&&t.push(n),e/=2,n++;return t}function si(e,t,n){const r=[];for(let s=0;s<e.length;s++)r[s]=Math.ceil((t[s]-e[s])/n[s]);return r}function ai(e,t,n,r){const s=[...e];for(let e=s.length;e<r.length;e++)s.push(1);for(let e=0;e<n;e++)0===e?s[t]=1:(s.splice(t,0,1),s.pop());return s}function oi(e,t,n){return n<=e?n:n-(t-1)}function ii(e,t){const n=[];for(let r=0;r<e;r++)n.push(t+r);return n}function ui(e,t,n,r,s,a,o,i,u){const l=e.length;let c=new Array(l),h=new Array(l),d=new Array(l);if(t.length&&n>0){const u=t[0],l=n+1;c=li(o,u,l,r,e),h=ci(i,u,l,s,e),d=ai(a,u,l,e)}else for(let t=0;t<l;t++)c[t]=di(o,r,a,e,t,u),h[t]=pi(i,s,a,e,t,u),d[t]=hi(a,t,u);return{begin:c,end:h,strides:d}}function li(e,t,n,r,s){const a=[...s],o=ii(n,t);for(let s=0;s<a.length;s++)if(o.indexOf(s)>-1)a[s]=0;else{const o=oi(t,n,s);let i=r[o];e&1<<o&&(i=0),a[s]=i}return a}function ci(e,t,n,r,s){const a=[...s],o=ii(n,t);for(let s=0;s<a.length;s++)if(o.indexOf(s)>-1)a[s]=Number.MAX_SAFE_INTEGER;else{const o=oi(t,n,s);let i=r[o];e&1<<o&&(i=Number.MAX_SAFE_INTEGER),a[s]=i}for(let e=0;e<a.length;e++){const t=s[e];a[e]<0&&(a[e]+=t),a[e]=A(0,a[e],s[e])}return a}function hi(e,t,n){let r=e[t];return(n&1<<t||null==r)&&(r=1),r}function di(e,t,n,r,s,a){let o=t[s];const i=n[s]||1;(e&1<<s||a&1<<s||null==o)&&(o=i>0?Number.MIN_SAFE_INTEGER:Number.MAX_SAFE_INTEGER);const u=r[s];return o<0&&(o+=u),o=A(0,o,u-1),o}function pi(e,t,n,r,s,a){let o=t[s];const i=n[s]||1;(e&1<<s||a&1<<s||null==o)&&(o=i>0?Number.MAX_SAFE_INTEGER:Number.MIN_SAFE_INTEGER);const u=r[s];return o<0&&(o+=u),o=i>0?A(0,o,u):A(-1,o,u-1),o}function fi(e,t,n){let r=n.length;for(let e=0;e<n.length;e++)if(n[e]>1){r=e;break}for(let s=r+1;s<n.length;s++)if(t[s]>0||n[s]!==e[s])return!1;return!0}function mi(e,t){let n=e.length>0?e[e.length-1]:1;for(let r=0;r<e.length-1;r++)n+=e[r]*t[r];return n}function gi(e,t,n){let r;const s=e.shape.length;let a;return r="number"==typeof t?[t,...new Array(s-1).fill(0)]:t.length<s?t.concat(new Array(s-t.length).fill(0)):t.slice(),r.forEach((e=>{D(-1!==e,(()=>"slice() does not support negative begin indexing."))})),a=null==n?new Array(s).fill(-1):"number"==typeof n?[n,...new Array(s-1).fill(-1)]:n.length<s?n.concat(new Array(s-n.length).fill(-1)):n,a=a.map(((t,n)=>t>=0?t:(D(-1===t,(()=>`Negative size values should be exactly -1 but got ${t} for the slice() size at index ${n}.`)),e.shape[n]-r[n]))),[r,a]}function yi(e,t,n,r,s,a,o,i,u){let l;if(null==r?(l=new Array(t.length),l.fill(1)):l=r,null!=o&&0!=(o&o-1))throw new Error("Multiple ellipses in slice is not allowed.");let c=!1;const h={dims:l.length,numAddAxisAfterEllipsis:0,begin:t.slice(),end:n.slice(),strides:l.slice(),beginMask:s,endMask:a,ellipsisMask:o,newAxisMask:i,shrinkAxisMask:u};for(let e=0;e<h.dims;e++)c&&0!=(1<<e&i)&&h.numAddAxisAfterEllipsis++,1<<e&o&&(c=!0);c||(h.ellipsisMask|=1<<h.dims,h.dims++);const d={dims:e.length,beginMask:0,endMask:0,beginValid:!1,endValid:!1};!function(e,t){t.beginMask=0,t.endMask=0,t.shrinkAxisMask=0;let n=0;t.beginValid=null!=e.begin,t.endValid=null!=e.end,t.begin=new Array(t.dims),t.end=new Array(t.dims),t.strides=new Array(t.dims),t.finalShapeGatherIndices=[],t.finalShapeGatherIndicesSparse=[],t.inputShapeGatherIndicesSparse=new Array(t.dims);for(let r=0;r<e.dims;r++)if(1<<r&e.ellipsisMask){const s=Math.min(t.dims-(e.dims-r)+1+e.numAddAxisAfterEllipsis,t.dims);for(;n<s;n++)t.begin[n]=0,t.end[n]=0,t.strides[n]=1,t.beginMask|=1<<n,t.endMask|=1<<n,t.finalShapeGatherIndices.push(n),t.finalShapeGatherIndicesSparse.push(-1),t.inputShapeGatherIndicesSparse[n]=r}else if(1<<r&e.newAxisMask)t.finalShapeGatherIndices.push(ei),t.finalShapeGatherIndicesSparse.push(-1);else{if(n===t.begin.length)throw Error(`Index out of range using input dim ${n}; input has only ${t.dims} dims, ${t.begin.length}.`);null!=e.begin&&(t.begin[n]=e.begin[r]),null!=e.end&&(t.end[n]=e.end[r]),t.strides[n]=e.strides[r],e.beginMask&1<<r&&(t.beginMask|=1<<n),e.endMask&1<<r&&(t.endMask|=1<<n),e.shrinkAxisMask&1<<r?(t.finalShapeGatherIndices.push(ti),t.finalShapeGatherIndicesSparse.push(-1),t.shrinkAxisMask|=1<<n):(t.finalShapeGatherIndices.push(n),t.finalShapeGatherIndicesSparse.push(r)),t.inputShapeGatherIndicesSparse[n]=r,n++}}(h,d);let p=!0,f=!0,m=!0;const g=[],y=[];for(let t=0;t<e.length;++t){if(0===d.strides[t])throw Error(`strides[${t}] must be non-zero`);const n=!!(d.shrinkAxisMask&1<<t),r=e[t];if(-1===r){g.push(n?1:-1);continue}const s=[d.beginMask&1<<t,d.endMask&1<<t],a=[d.strides[t]>0?0:-1,d.strides[t]>0?r:r-1];if(n&&d.strides[t]<=0)throw Error("only stride 1 allowed on non-range indexing.");m=m&&1===d.strides[t];const o=!!(d.beginMask&1<<t&&d.endMask&1<<t);if(d.beginValid&&d.endValid){if(n){const e=d.begin[t]<0?r+d.begin[t]:d.begin[t];if(d.begin[t]=e,d.end[t]=d.begin[t]+1,e<0||e>=r)throw Error(`slice index ${d.begin[t]} of dimension ${t} out of bounds.`)}else d.begin[t]=xi(d.begin[t],0,d.strides[t],r,s,a),d.end[t]=xi(d.end[t],1,d.strides[t],r,s,a);const e=1===d.strides[t]&&0===d.begin[t]&&d.end[t]===r;p=p&&e,f=f&&(0===t&&1===d.strides[t]||e)}else p=p&&1===d.strides[t]&&o,f=f&&(0===t&&1===d.strides[t]||o);let i,u=!1;if(d.beginValid&&d.endValid?(i=d.end[t]-d.begin[t],u=!0):n?(i=1,u=!0):o&&r>=0&&(i=d.strides[t]<0?-r:r,u=!0),u){let e;e=0===i||i<0!=d.strides[t]<0?0:Math.trunc(i/d.strides[t])+(i%d.strides[t]!=0?1:0),g.push(e)}else g.push(-1)}for(let e=0;e<d.finalShapeGatherIndices.length;++e){const t=d.finalShapeGatherIndices[e];t>=0?y.push(g[t]):t===ei&&y.push(1)}return{finalShapeSparse:y.filter(((e,t)=>d.finalShapeGatherIndices[t]!==ei)),finalShape:y,isIdentity:p,sliceDim0:f,isSimpleSlice:m,begin:d.begin,end:d.end,strides:d.strides}}function xi(e,t,n,r,s,a){if(s[t])return n>0?a[t]:a[t+1&1];{const t=e<0?r+e:e;return t<a[0]?a[0]:t>a[1]?a[1]:t}}const bi=Ws({acos_:function(e){const t={x:zs(e,"x","acos")};return As.runKernel(ve,t)}}),vi=Ws({acosh_:function(e){const t={x:zs(e,"x","acosh")};return As.runKernel(we,t)}}),wi=Ws({addN_:function(e){D(Array.isArray(e),(()=>"The argument passed to tf.addN() must be a list of tensors")),D(e.length>=1,(()=>`Must pass at least one tensor to tf.addN(), but got ${e.length}`));const t=e.map(((e,t)=>zs(e,`tensors${t}`,"addN"))),n=t[0];t.forEach((e=>{if(e.dtype!==n.dtype)throw new Error("All tensors passed to tf.addN() must have the same dtype")})),t.forEach((e=>{if(!z(e.shape,n.shape))throw new Error("All tensors passed to tf.addN() must have the same shape")}));const r=t;return As.runKernel(Se,r)}}),ki=Ws({all_:function(e,t=null,n=!1){const r={x:zs(e,"x","all","bool")},s={axis:t,keepDims:n};return As.runKernel(Ce,r,s)}}),Si=Ws({any_:function(e,t=null,n=!1){const r={x:zs(e,"x","any","bool")},s={axis:t,keepDims:n};return As.runKernel(Ie,r,s)}}),Ci=Ws({argMax_:function(e,t=0){const n={x:zs(e,"x","argMax")},r={axis:t};return As.runKernel(Te,n,r)}}),Ii=Ws({argMin_:function(e,t=0){const n={x:zs(e,"x","argMin")},r={axis:t};return As.runKernel($e,n,r)}}),Ti=Ws({asin_:function(e){const t={x:zs(e,"x","asin")};return As.runKernel(Ne,t)}}),$i=Ws({asinh_:function(e){const t={x:zs(e,"x","asinh")};return As.runKernel(Ee,t)}}),Ni=Ws({atan_:function(e){const t={x:zs(e,"x","atan")};return As.runKernel(Re,t)}}),Ei=Ws({atan2_:function(e,t){let n=zs(e,"a","atan2"),r=zs(t,"b","atan2");[n,r]=Is(n,r);const s={a:n,b:r};return As.runKernel(Ae,s)}}),Ri=Ws({atanh_:function(e){const t={x:zs(e,"x","atanh")};return As.runKernel(_e,t)}});function _i(e,t,n,r,s="NHWC",a){return Fi(e,[...t,e[3]],n,a,r,null,null,Gi(s))}function Ai(e,t,n,r,s,a,o="channelsLast"){const[i,u]=Mi(t);let l;if("channelsLast"===o)l=[i,u,e[3],e[3]];else{if("channelsFirst"!==o)throw new Error(`Unknown dataFormat ${o}`);l=[i,u,e[1],e[1]]}return Fi(e,l,n,r,s,a,!1,o)}function Oi(e,t,n,r,s,a,o="NDHWC"){const[i,u,l]=Li(t);let c,h;if("NDHWC"===o)h="channelsLast",c=[i,u,l,e[4],e[4]];else{if("NCDHW"!==o)throw new Error(`Unknown dataFormat ${o}`);h="channelsFirst",c=[i,u,l,e[1],e[1]]}return Pi(e,c,n,r,s,!1,h,a)}function Fi(e,t,n,r,s,a,o=!1,i="channelsLast"){let[u,l,c,h]=[-1,-1,-1,-1];if("channelsLast"===i)[u,l,c,h]=e;else{if("channelsFirst"!==i)throw new Error(`Unknown dataFormat ${i}`);[u,h,l,c]=e}const[d,p,,f]=t,[m,g]=Mi(n),[y,x]=Mi(r),b=Bi(d,y),v=Bi(p,x),{padInfo:w,outHeight:k,outWidth:S}=function(e,t,n,r,s,a,o,i,u){let l,c,h;if("number"==typeof e){l={top:e,bottom:e,left:e,right:e,type:0===e?"VALID":"NUMBER"};const s=function(e,t,n,r,s){null==r&&(r=Di(e,t,n));const a=e[1];return[zi((e[0]-t+2*r)/n+1,s),zi((a-t+2*r)/n+1,s)]}([t,n],a,r,e,i);c=s[0],h=s[1]}else if("same"===e){c=Math.ceil(t/r),h=Math.ceil(n/s);const e=Math.max(0,(c-1)*r+a-t),i=Math.max(0,(h-1)*s+o-n),u=Math.floor(e/2),d=e-u,p=Math.floor(i/2);l={top:u,bottom:d,left:p,right:i-p,type:"SAME"}}else if("valid"===e)l={top:0,bottom:0,left:0,right:0,type:"VALID"},c=Math.ceil((t-a+1)/r),h=Math.ceil((n-o+1)/s);else{if("object"!=typeof e)throw Error(`Unknown padding parameter: ${e}`);{const d="channelsLast"===u?e[1][0]:e[2][0],p="channelsLast"===u?e[1][1]:e[2][1],f="channelsLast"===u?e[2][0]:e[3][0],m="channelsLast"===u?e[2][1]:e[3][1];l={top:d,bottom:p,left:f,right:m,type:0===d&&0===p&&0===f&&0===m?"VALID":"EXPLICIT"},c=zi((t-a+d+p)/r+1,i),h=zi((n-o+f+m)/s+1,i)}}return{padInfo:l,outHeight:c,outWidth:h}}(s,l,c,m,g,b,v,a,i),C=o?f*h:f;let I;return"channelsFirst"===i?I=[u,C,k,S]:"channelsLast"===i&&(I=[u,k,S,C]),{batchSize:u,dataFormat:i,inHeight:l,inWidth:c,inChannels:h,outHeight:k,outWidth:S,outChannels:C,padInfo:w,strideHeight:m,strideWidth:g,filterHeight:d,filterWidth:p,effectiveFilterHeight:b,effectiveFilterWidth:v,dilationHeight:y,dilationWidth:x,inShape:e,outShape:I,filterShape:t}}function Pi(e,t,n,r,s,a=!1,o="channelsLast",i){let[u,l,c,h,d]=[-1,-1,-1,-1,-1];if("channelsLast"===o)[u,l,c,h,d]=e;else{if("channelsFirst"!==o)throw new Error(`Unknown dataFormat ${o}`);[u,d,l,c,h]=e}const[p,f,m,,g]=t,[y,x,b]=Li(n),[v,w,k]=Li(r),S=Bi(p,v),C=Bi(f,w),I=Bi(m,k),{padInfo:T,outDepth:$,outHeight:N,outWidth:E}=function(e,t,n,r,s,a,o,i,u,l,c){let h,d,p,f;if("valid"===e&&(e=0),"number"==typeof e){h={top:e,bottom:e,left:e,right:e,front:e,back:e,type:0===e?"VALID":"NUMBER"};const m=function(e,t,n,r,s,a){null==s&&(s=Di(e,t[0],r[0]));const o=[0,0,0,1];for(let n=0;n<3;n++)e[n]+2*s>=t[n]&&(o[n]=zi((e[n]-t[n]+2*s)/r[n]+1,a));return o}([t,n,r,1],[i,u,l],0,[s,a,o],e,c);d=m[0],p=m[1],f=m[2]}else{if("same"!==e)throw Error(`Unknown padding parameter: ${e}`);{d=Math.ceil(t/s),p=Math.ceil(n/a),f=Math.ceil(r/o);const e=(d-1)*s+i-t,c=(p-1)*a+u-n,m=(f-1)*o+l-r,g=Math.floor(e/2),y=e-g,x=Math.floor(c/2),b=c-x,v=Math.floor(m/2);h={top:x,bottom:b,left:v,right:m-v,front:g,back:y,type:"SAME"}}}return{padInfo:h,outDepth:d,outHeight:p,outWidth:f}}(s,l,c,h,y,x,b,S,C,I,i),R=a?g*d:g;let _;return"channelsFirst"===o?_=[u,R,$,N,E]:"channelsLast"===o&&(_=[u,$,N,E,R]),{batchSize:u,dataFormat:o,inDepth:l,inHeight:c,inWidth:h,inChannels:d,outDepth:$,outHeight:N,outWidth:E,outChannels:R,padInfo:T,strideDepth:y,strideHeight:x,strideWidth:b,filterDepth:p,filterHeight:f,filterWidth:m,effectiveFilterDepth:S,effectiveFilterHeight:C,effectiveFilterWidth:I,dilationDepth:v,dilationHeight:w,dilationWidth:k,inShape:e,outShape:_,filterShape:t}}function Di(e,t,n,r=1){const s=Bi(t,r);return Math.floor((e[0]*(n-1)-n+s)/2)}function Mi(e){return"number"==typeof e?[e,e,e]:2===e.length?[e[0],e[1],1]:e}function Li(e){return"number"==typeof e?[e,e,e]:e}function Bi(e,t){return t<=1?e:e+(e-1)*(t-1)}function zi(e,t){if(!t)return Math.trunc(e);switch(t){case"round":return Math.round(e);case"ceil":return Math.ceil(e);case"floor":return Math.floor(e);default:throw new Error(`Unknown roundingMode ${t}`)}}function Ui(e){const[t,n,r]=Mi(e);return 1===t&&1===n&&1===r}function Vi(e,t){return Ui(e)||Ui(t)}function Wi(e){return Mi(e).every((e=>e>0))}function Gi(e){if("NHWC"===e)return"channelsLast";if("NCHW"===e)return"channelsFirst";throw new Error(`Unknown dataFormat ${e}`)}function Hi(e,t,n){if(null!=n){if("string"==typeof t)throw Error(`Error in ${e}: pad must be an integer when using dimRoundingMode ${n} but got pad ${t}.`);if("number"==typeof t)D(U(t),(()=>`Error in ${e}: pad must be an integer when using dimRoundingMode ${n} but got pad ${t}.`));else{if("object"!=typeof t)throw Error(`Error in ${e}: Unknown padding parameter: ${t}`);t.forEach((t=>{t.forEach((t=>{D(U(t),(()=>`Error in ${e}: pad must be an integer when using dimRoundingMode ${n} but got pad ${t}.`))}))}))}}}const ji=Ws({reshape_:function(e,t){const n={x:zs(e,"x","reshape","string_or_numeric")},r={shape:t};return As.runKernel(Sn,n,r)}}),Ki=Ws({avgPool_:function(e,t,n,r,s){const a=zs(e,"x","avgPool","float32");D(Vi(n,1),(()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${n} and dilations '1'`));let o=a,i=!1;3===a.rank&&(i=!0,o=ji(a,[1,a.shape[0],a.shape[1],a.shape[2]])),D(4===o.rank,(()=>`Error in avgPool: x must be rank 4 but got rank ${o.rank}.`)),Hi("avgPool",r,s);const u={x:o},l={filterSize:t,strides:n,pad:r,dimRoundingMode:s};let c=As.runKernel(Oe,u,l);return c=ja(c,a.dtype),i?ji(c,[c.shape[1],c.shape[2],c.shape[3]]):c}}),qi=Ws({avgPool3d_:function(e,t,n,r,s,a="NDHWC"){const o=zs(e,"x","avgPool3d","float32");let i=o,u=!1;4===o.rank&&(u=!0,i=ji(o,[1,o.shape[0],o.shape[1],o.shape[2],o.shape[3]])),D(5===i.rank,(()=>`Error in avgPool3d: x must be rank 5 but got rank ${i.rank}.`)),D("NDHWC"===a,(()=>`Error in avgPool3d: Only NDHWC is currently supported, but got dataFormat of ${a}`)),D("number"==typeof n&&n>0||Array.isArray(n)&&n[0]>0&&n[1]>0&&n[2]>0,(()=>`Error in avgPool3d: Stride must be > 0, but got '${n}'`)),Hi("avgPool3d",r,s);const l={x:i},c={filterSize:t,strides:n,pad:r,dimRoundingMode:s,dataFormat:a};let h=As.runKernel(Pe,l,c);return h=ja(h,i.dtype),u?ji(h,[h.shape[1],h.shape[2],h.shape[3],h.shape[4]]):h}}),Xi=Ws({concat_:function(e,t=0){D(e.length>=1,(()=>"Pass at least one tensor to concat"));const n=Us(e,"tensors","concat","string_or_numeric");if("complex64"===n[0].dtype&&n.forEach((e=>{if("complex64"!==e.dtype)throw new Error(`Cannot concatenate complex64 tensors with a tensor\n          with dtype ${e.dtype}. `)})),1===n.length)return Ka(n[0]);const r=n,s={axis:t};return As.runKernel(je,r,s)}}),Yi=Ws({matMul_:function(e,t,n=!1,r=!1){let s=zs(e,"a","matMul"),a=zs(t,"b","matMul");[s,a]=Is(s,a);const o={a:s,b:a},i={transposeA:n,transposeB:r};return As.runKernel(De,o,i)}}),Qi=Ws({sigmoid_:function(e){const t={x:zs(e,"x","sigmoid","float32")};return As.runKernel(Bn,t)}}),Zi=Ws({slice_:function(e,t,n){const r=zs(e,"x","slice","string_or_numeric");if(0===r.rank)throw new Error("Slicing scalar is not possible");const s={x:r},a={begin:t,size:n};return As.runKernel(Pn,s,a)}}),Ji=Ws({tanh_:function(e){const t={x:zs(e,"x","tanh","float32")};return As.runKernel(or,t)}}),eu=Ws({basicLSTMCell_:function(e,t,n,r,s,a){const o=zs(e,"forgetBias","basicLSTMCell"),i=zs(t,"lstmKernel","basicLSTMCell"),u=zs(n,"lstmBias","basicLSTMCell"),l=zs(r,"data","basicLSTMCell"),c=zs(s,"c","basicLSTMCell"),h=zs(a,"h","basicLSTMCell"),d=Xi([l,h],1),p=Yi(d,i),f=ro(p,u),m=f.shape[0],g=f.shape[1]/4,y=[m,g],x=Zi(f,[0,0],y),b=Zi(f,[0,g],y),v=Zi(f,[0,2*g],y),w=Zi(f,[0,3*g],y),k=ro(oo(Qi(x),Ji(b)),oo(c,Qi(ro(o,v))));return[k,oo(Ji(k),Qi(w))]}}),tu=Ws({batchToSpaceND_:function(e,t,n){const r=zs(e,"x","batchToSpaceND"),s=t.reduce(((e,t)=>e*t));D(r.rank>=1+t.length,(()=>`input rank is ${r.rank} but should be > than blockShape.length ${t.length}`)),D(n.length===t.length,(()=>`crops.length is ${n.length} but should be equal to blockShape.length  ${t.length}`)),D(r.shape[0]%s==0,(()=>`input tensor batch is ${r.shape[0]} but is not divisible by the product of the elements of blockShape ${t.join(" * ")} === ${s}`));const a={x:r},o={blockShape:t,crops:n};return As.runKernel(Me,a,o)}}),nu=Ws({batchNorm_:function(e,t,n,r,s,a){null==a&&(a=.001);const o=zs(e,"x","batchNorm"),i=zs(t,"mean","batchNorm"),u=zs(n,"variance","batchNorm");let l,c;null!=s&&(l=zs(s,"scale","batchNorm")),null!=r&&(c=zs(r,"offset","batchNorm")),D(i.rank===u.rank,(()=>"Batch normalization gradient requires mean and variance to have equal ranks.")),D(null==c||i.rank===c.rank,(()=>"Batch normalization gradient requires mean and offset to have equal ranks.")),D(null==l||i.rank===l.rank,(()=>"Batch normalization gradient requires mean and scale to have equal ranks."));const h={x:function(e){let t;return t=0===e.rank||1===e.rank?ji(e,[1,1,1,e.size]):2===e.rank?ji(e,[1,1,e.shape[0],e.shape[1]]):3===e.rank?ji(e,[1,e.shape[0],e.shape[1],e.shape[2]]):e,t}(o),scale:l,offset:c,mean:i,variance:u},d={varianceEpsilon:a},p=As.runKernel(Ct,h,d);return ji(p,o.shape)}}),ru=Ws({batchNorm2d_:function(e,t,n,r,s,a){const o=zs(e,"x","batchNorm"),i=zs(t,"mean","batchNorm"),u=zs(n,"variance","batchNorm");let l,c;return null!=s&&(l=zs(s,"scale","batchNorm")),null!=r&&(c=zs(r,"offset","batchNorm")),D(2===o.rank,(()=>`Error in batchNorm2D: x must be rank 2 but got rank ${o.rank}.`)),D(2===i.rank||1===i.rank,(()=>`Error in batchNorm2D: mean must be rank 2 or rank 1 but got rank ${i.rank}.`)),D(2===u.rank||1===u.rank,(()=>`Error in batchNorm2D: variance must be rank 2 or rank 1 but got rank ${u.rank}.`)),null!=l&&D(2===l.rank||1===l.rank,(()=>`Error in batchNorm2D: scale must be rank 2 or rank 1 but got rank ${l.rank}.`)),null!=c&&D(2===c.rank||1===c.rank,(()=>`Error in batchNorm2D: offset must be rank 2 or rank 1 but got rank ${c.rank}.`)),nu(o,i,u,c,l,a)}}),su=Ws({batchNorm3d_:function(e,t,n,r,s,a){const o=zs(e,"x","batchNorm"),i=zs(t,"mean","batchNorm"),u=zs(n,"variance","batchNorm");let l,c;return null!=s&&(l=zs(s,"scale","batchNorm")),null!=r&&(c=zs(r,"offset","batchNorm")),D(3===o.rank,(()=>`Error in batchNorm3D: x must be rank 3 but got rank ${o.rank}.`)),D(3===i.rank||1===i.rank,(()=>`Error in batchNorm3D: mean must be rank 3 or rank 1 but got rank ${i.rank}.`)),D(3===u.rank||1===u.rank,(()=>`Error in batchNorm3D: variance must be rank 3 or rank 1 but got rank ${u.rank}.`)),null!=l&&D(3===l.rank||1===l.rank,(()=>`Error in batchNorm3D: scale must be rank 3 or rank 1 but got rank ${l.rank}.`)),null!=c&&D(3===c.rank||1===c.rank,(()=>`Error in batchNorm3D: offset must be rank 3 or rank 1 but got rank ${c.rank}.`)),nu(o,i,u,c,l,a)}}),au=Ws({batchNorm4d_:function(e,t,n,r,s,a){const o=zs(e,"x","batchNorm"),i=zs(t,"mean","batchNorm"),u=zs(n,"variance","batchNorm");let l,c;return null!=s&&(l=zs(s,"scale","batchNorm")),null!=r&&(c=zs(r,"offset","batchNorm")),D(4===o.rank,(()=>`Error in batchNorm4D: x must be rank 4 but got rank ${o.rank}.`)),D(4===i.rank||1===i.rank,(()=>`Error in batchNorm4D: mean must be rank 4 or rank 1 but got rank ${i.rank}.`)),D(4===u.rank||1===u.rank,(()=>`Error in batchNorm4D: variance must be rank 4 or rank 1 but got rank ${u.rank}.`)),null!=l&&D(4===l.rank||1===l.rank,(()=>`Error in batchNorm4D: scale must be rank 4 or rank 1 but got rank ${l.rank}.`)),null!=c&&D(4===c.rank||1===c.rank,(()=>`Error in batchNorm4D: offset must be rank 4 or rank 1 but got rank ${c.rank}.`)),nu(o,i,u,c,l,a)}}),ou=Ws({bincount_:function(e,t,n){const r=zs(e,"x","bincount"),s=zs(t,"weights","bincount");D("int32"===r.dtype,(()=>`Error in bincount: input dtype must be int32, but got ${r.dtype}`)),D(n>=0,(()=>`size must be non-negative, but got ${n}.`)),D(s.size===r.size||0===s.size,(()=>`Error in bincount: weights must have the same size as input or0-length, but got input shape: ${r.shape}, weights shape: ${s.shape}.`));const a={x:r,weights:s},o={size:n};return As.runKernel(Le,a,o)}}),iu=Ws({bitwiseAnd_:function(e,t){const n=zs(e,"x","bitwiseAnd"),r=zs(t,"y","bitwiseAnd");if(!z(n.shape,r.shape))throw new Error(`BitwiseAnd: Tensors must have the same shape. x: ${n.shape}, y: ${r.shape}`);if("int32"!==n.dtype||"int32"!==r.dtype)throw new Error(`BitwiseAnd: Only supports 'int32' values in tensor, found type of x: ${n.dtype} and type of y: ${r.dtype}`);const s={a:n,b:r};return As.runKernel(Be,s)}}),uu=Ws({broadcastArgs_:function(e,t){const n=zs(e,"s0","broadcastArgs","int32"),r=zs(t,"s1","broadcastArgs","int32");if(1!==n.rank)throw new Error(`broadcastArgs(): first input must be a vector (rank=1). Has rank ${n.rank}`);if(1!==r.rank)throw new Error(`broadcastArgs(): second input must be a vector (rank=1). Has rank ${r.rank}`);const s={s0:n,s1:r};return As.runKernel(ze,s)}}),lu=Ws({broadcastTo_:function(e,t){let n=zs(e,"broadcastTo","x");const r=n.shape;if(ie(t),t.length<n.rank)throw new Error(`broadcastTo(): shape.length=${t.length} < input.rank=${n.rank}.`);if(t.length>n.rank){const e=n.shape.slice();for(;e.length<t.length;)e.unshift(1);n=ji(n,e)}const s=n.shape,a=Array.from(t);for(let e=t.length-1;e>=0;e--)if(s[e]===t[e])a[e]=1;else if(1!==n.shape[e])throw new Error(`broadcastTo(): [${r}] cannot be broadcast to [${t}].`);if(0===a.map(((e,t)=>e>1?t:-1)).filter((e=>e>=0)).length)return Ka(n);const o={x:n},i={reps:a};return As.runKernel(ir,o,i)}}),cu=Ws({ceil_:function(e){const t={x:zs(e,"x","ceil","float32")};return As.runKernel(Ve,t)}}),hu=Ws({clipByValue_:function(e,t,n){const r=zs(e,"x","clipByValue");if(D(t<=n,(()=>`Error in clip: min (${t}) must be less than or equal to max (${n}).`)),t===n)return bo(r.shape,t,r.dtype);const s={x:r},a={clipValueMin:t,clipValueMax:n};return As.runKernel(We,s,a)}}),du=Ws({concat1d_:function(e){return Xi(e,0)}}),pu=Ws({concat2d_:function(e,t){return Xi(e,t)}}),fu=Ws({concat3d_:function(e,t){return Xi(e,t)}}),mu=Ws({concat4d_:function(e,t){return Xi(e,t)}}),gu=Ws({conv2d_:function(e,t,n,r,s="NHWC",a=[1,1],o){const i=zs(e,"x","conv2d","float32"),u=zs(t,"filter","conv2d","float32");let l=i,c=!1;3===i.rank&&(c=!0,l=ji(i,[1,i.shape[0],i.shape[1],i.shape[2]])),D(4===l.rank,(()=>`Error in conv2d: input must be rank 4, but got rank ${l.rank}.`)),D(4===u.rank,(()=>`Error in conv2d: filter must be rank 4, but got rank ${u.rank}.`)),Hi("conv2d",r,o);const h="NHWC"===s?l.shape[3]:l.shape[1];D(h===u.shape[2],(()=>`Error in conv2d: depth of input (${h}) must match input depth for filter ${u.shape[2]}.`)),D(Vi(n,a),(()=>`Error in conv2D: Either strides or dilations must be 1. Got strides ${n} and dilations '${a}'`)),D(Wi(a),(()=>"Error in conv2D: Dilated rates should be larger than 0.")),D(Wi(n),(()=>"Error in conv2D: Strides should be larger than 0."));const d={x:l,filter:u},p={strides:n,pad:r,dataFormat:s,dilations:a,dimRoundingMode:o},f=As.runKernel(Ke,d,p);return c?ji(f,[f.shape[1],f.shape[2],f.shape[3]]):f}}),yu=Ws({conv1d_:function(e,t,n,r,s="NWC",a=1,o){const i=zs(e,"x","conv1d"),u=zs(t,"filter","conv1d");let l=i,c=!1;2===i.rank&&(c=!0,l=ji(i,[1,i.shape[0],i.shape[1]])),D(3===l.rank,(()=>`Error in conv1d: input must be rank 3, but got rank ${l.rank}.`)),D(3===u.rank,(()=>`Error in conv1d: filter must be rank 3, but got rank ${u.rank}.`)),Hi("conv1d",r,o),D(l.shape[2]===u.shape[1],(()=>`Error in conv1d: depth of input (${l.shape[2]}) must match input depth for filter ${u.shape[1]}.`)),D(Vi(n,a),(()=>`Error in conv1D: Either stride or dilation must be 1. Got stride ${n} and dilation '${a}'`)),D(Wi(a),(()=>"Error in conv1D: Dilated rates should be larger than 0.")),D(Wi(n),(()=>"Error in conv1D: Stride should be larger than 0.")),D("NWC"===s,(()=>`Error in conv1d: got dataFormat of ${s} but only NWC is currently supported.`));const h=ji(u,[1,u.shape[0],u.shape[1],u.shape[2]]),d=ji(l,[l.shape[0],1,l.shape[1],l.shape[2]]),p=gu(d,h,[1,n],r,"NHWC",[1,a],o);return ji(p,c?[p.shape[2],p.shape[3]]:[p.shape[0],p.shape[2],p.shape[3]])}}),xu=Ws({conv2DBackpropInput_:function(e,t,n,r,s,a="NHWC",o){D(e.length===t.rank,(()=>`Length of inShape (${e.length}) and rank of dy (${t.rank}) must match`));let i=e,u=t,l=!1;3===t.rank&&(l=!0,u=ji(t,[1,t.shape[0],t.shape[1],t.shape[2]]),i=[1,e[0],e[1],e[2]]),D(4===i.length,(()=>`Error in conv2dDerInput: inShape must be length 4, but got length ${i.length}.`)),D(4===u.rank,(()=>`Error in conv2dDerInput: dy must be rank 4, but got rank ${u.rank}`)),D(4===n.rank,(()=>`Error in conv2dDerInput: filter must be rank 4, but got rank ${n.rank}`));const c="NHWC"===a?i[3]:i[1],h="NHWC"===a?u.shape[3]:u.shape[1];D(c===n.shape[2],(()=>`Error in conv2dDerInput: depth of input (${c}) must match input depth for filter ${n.shape[2]}.`)),D(h===n.shape[3],(()=>`Error in conv2dDerInput: depth of output (${h}) must match output depth for filter ${n.shape[3]}.`)),Hi("conv2dDerInput",s,o);const d={dy:u,filter:n},p={strides:r,pad:s,dataFormat:a,dimRoundingMode:o,inputShape:i},f=As.runKernel(Xe,d,p);return l?ji(f,[f.shape[1],f.shape[2],f.shape[3]]):f}}),bu=Ws({conv2dTranspose_:function(e,t,n,r,s,a){const o=zs(e,"x","conv2dTranspose"),i=zs(t,"filter","conv2dTranspose");return xu(n,o,i,r,s,"NHWC",a)}}),vu=Ws({conv3d_:function(e,t,n,r,s="NDHWC",a=[1,1,1]){const o=zs(e,"x","conv3d"),i=zs(t,"filter","conv3d");let u=o,l=!1;4===o.rank&&(l=!0,u=ji(o,[1,o.shape[0],o.shape[1],o.shape[2],o.shape[3]])),D(5===u.rank,(()=>`Error in conv3d: input must be rank 5, but got rank ${u.rank}.`)),D(5===i.rank,(()=>`Error in conv3d: filter must be rank 5, but got rank ${i.rank}.`)),D(u.shape[4]===i.shape[3],(()=>`Error in conv3d: depth of input (${u.shape[4]}) must match input depth for filter ${i.shape[3]}.`)),D(Vi(n,a),(()=>`Error in conv3D: Either strides or dilations must be 1. Got strides ${n} and dilations '${a}'`)),D("NDHWC"===s,(()=>`Error in conv3d: got dataFormat of ${s} but only NDHWC is currently supported.`)),D(Wi(a),(()=>"Error in conv3D: Dilated rates should be larger than 0.")),D(Wi(n),(()=>"Error in conv3D: Strides should be larger than 0."));const c={x:u,filter:i},h={strides:n,pad:r,dataFormat:s,dilations:a},d=As.runKernel(Ye,c,h);return l?ji(d,[d.shape[1],d.shape[2],d.shape[3],d.shape[4]]):d}}),wu=Ws({conv3DBackpropInput_:function(e,t,n,r,s){D(e.length===t.rank,(()=>`Length of inShape (${e.length}) and rank of dy (${t.rank}) must match`));let a=e,o=t,i=!1;4===t.rank&&(i=!0,o=ji(t,[1,t.shape[0],t.shape[1],t.shape[2],t.shape[3]]),a=[1,e[0],e[1],e[2],e[3]]);const u=a[4],l=o.shape[4];D(5===a.length,(()=>`Error in conv3dDerInput: inShape must be length 5, but got length ${a.length}.`)),D(5===o.rank,(()=>`Error in conv3dDerInput: dy must be rank 5, but got rank ${o.rank}`)),D(5===n.rank,(()=>`Error in conv3dDerInput: filter must be rank 5, but got rank ${n.rank}`)),D(u===n.shape[3],(()=>`Error in conv3dDerInput: depth of input (${u}) must match input depth for filter ${n.shape[3]}.`)),D(l===n.shape[4],(()=>`Error in conv3dDerInput: depth of output (${l}) must match output depth for filter ${n.shape[4]}.`));const c={dy:o,filter:n},h={pad:s,strides:r,inputShape:a},d=As.runKernel(Qe,c,h);return i?ji(d,[d.shape[1],d.shape[2],d.shape[3],d.shape[4]]):d}}),ku=Ws({conv3dTranspose_:function(e,t,n,r,s){const a=zs(e,"x","conv3dTranspose"),o=zs(t,"filter","conv3dTranspose");return wu(n,a,o,r,s)}}),Su=Ws({cos_:function(e){const t={x:zs(e,"x","cos","float32")};return As.runKernel(Ze,t)}}),Cu=Ws({cosh_:function(e){const t={x:zs(e,"x","cosh","float32")};return As.runKernel(Je,t)}}),Iu=Ws({cumprod_:function(e,t=0,n=!1,r=!1){const s={x:zs(e,"x","cumprod")},a={axis:t,exclusive:n,reverse:r};return As.runKernel(et,s,a)}}),Tu=Ws({cumsum_:function(e,t=0,n=!1,r=!1){const s={x:zs(e,"x","cumsum")},a={axis:t,exclusive:n,reverse:r};return As.runKernel(tt,s,a)}}),$u=Ws({denseBincount_:function(e,t,n,r=!1){const s=zs(e,"x","denseBincount"),a=zs(t,"weights","denseBincount");D("int32"===s.dtype,(()=>`Error in denseBincount: input dtype must be int32, but got ${s.dtype}`)),D(s.rank<=2,(()=>`Error in denseBincount: input must be at most rank 2, but got rank ${s.rank}.`)),D(n>=0,(()=>`size must be non-negative, but got ${n}.`)),D(a.size===s.size||0===a.size,(()=>`Error in denseBincount: weights must have the same shape as x or 0-length, but got x shape: ${s.shape}, weights shape: ${a.shape}.`));const o={x:s,weights:a},i={size:n,binaryOutput:r};return As.runKernel(rt,o,i)}}),Nu=Ws({depthToSpace_:function(e,t,n="NHWC"){const r=zs(e,"x","depthToSpace","float32"),s="NHWC"===n?r.shape[1]:r.shape[2],a="NHWC"===n?r.shape[2]:r.shape[3],o="NHWC"===n?r.shape[3]:r.shape[1];D(t>1,(()=>`blockSize should be > 1 for depthToSpace, but was: ${t}`)),D(s*t>=0,(()=>`Negative dimension size caused by overflow when multiplying\n    ${s} and ${t}  for depthToSpace with input shape\n    ${r.shape}`)),D(a*t>=0,(()=>`Negative dimension size caused by overflow when multiplying\n    ${a} and ${t} for depthToSpace with input shape\n        ${r.shape}`)),D(o%(t*t)==0,(()=>`Dimension size must be evenly divisible by ${t*t} but is ${o} for depthToSpace with input shape ${r.shape}`));const i={x:r},u={blockSize:t,dataFormat:n};return As.runKernel(st,i,u)}}),Eu=Ws({depthwiseConv2d_:function(e,t,n,r,s="NHWC",a=[1,1],o){const i=zs(e,"x","depthwiseConv2d","float32"),u=zs(t,"filter","depthwiseConv2d","float32");let l=i,c=!1;3===i.rank&&(c=!0,l=ji(i,[1,i.shape[0],i.shape[1],i.shape[2]])),D(4===l.rank,(()=>`Error in depthwiseConv2d: input must be rank 4, but got rank ${l.rank}.`)),D(4===u.rank,(()=>`Error in depthwiseConv2d: filter must be rank 4, but got rank ${u.rank}.`));const h="NHWC"===s?l.shape[3]:l.shape[1];D(h===u.shape[2],(()=>`Error in depthwiseConv2d: number of input channels (${h}) must match the inChannels dimension in filter ${u.shape[2]}.`)),Hi("depthwiseConv2d",r,o);const d={x:l,filter:u},p={strides:n,pad:r,dataFormat:s,dilations:a,dimRoundingMode:o},f=As.runKernel(at,d,p);return c?ji(f,[f.shape[1],f.shape[2],f.shape[3]]):f}}),Ru=Ws({diag_:function(e){const t={x:zs(e,"x","diag")};return As.runKernel(ut,t)}}),_u=Ws({dilation2d_:function(e,t,n,r,s=[1,1],a="NHWC"){const o=zs(e,"x","dilation2d"),i=zs(t,"filter","dilation2d");D(3===o.rank||4===o.rank,(()=>`Error in dilation2d: input must be rank 3 or 4, but got rank ${o.rank}.`)),D(3===i.rank,(()=>`Error in dilation2d: filter must be rank 3, but got rank ${i.rank}.`)),D("NHWC"===a,(()=>`Error in dilation2d: Only NHWC is currently supported, but got dataFormat of ${a}`));let u=o,l=!1;3===o.rank&&(u=ji(o,[1,o.shape[0],o.shape[1],o.shape[2]]),l=!0),D(u.shape[3]===i.shape[2],(()=>`Error in dilation2d:  input and filter must have the same depth: ${u.shape[3]} vs ${i.shape[2]}`));const c={x:u,filter:i},h={strides:n,pad:r,dilations:s},d=As.runKernel(lt,c,h);return l?ji(d,[d.shape[1],d.shape[2],d.shape[3]]):d}}),Au=Ws({equal_:function(e,t){let n=zs(e,"a","equal","string_or_numeric"),r=zs(t,"b","equal","string_or_numeric");[n,r]=Is(n,r),Io(n.shape,r.shape);const s={a:n,b:r};return As.runKernel(mt,s)}}),Ou=Ws({where_:function(e,t,n){const r=zs(t,"a","where"),s=zs(n,"b","where"),a=zs(e,"condition","where","bool"),o=Io(Io(a.shape,r.shape),s.shape),i={condition:lu(a,o),t:lu(r,o),e:lu(s,o)};return As.runKernel(On,i)}}),Fu=Ws({divNoNan_:function(e,t){let n=zs(e,"a","div"),r=zs(t,"b","div");[n,r]=Is(n,r);const s=ao(n,r),a=lo(s),o=Au(r,a);return Ou(o,a,s)}}),Pu=Ws({dot_:function(e,t){const n=zs(e,"t1","dot"),r=zs(t,"t2","dot");D(!(1!==n.rank&&2!==n.rank||1!==r.rank&&2!==r.rank),(()=>`Error in dot: inputs must all be rank 1 or 2, but got ranks ${n.rank} and ${r.rank}.`));const s=1===n.rank?n.size:n.shape[1],a=1===r.rank?r.size:r.shape[0];if(D(s===a,(()=>`Error in dot: inner dimensions of inputs must match, but got ${s} and ${a}.`)),1===n.rank&&1===r.rank){const e=ji(n,[1,-1]),t=ji(r,[-1,1]),s=Yi(e,t);return ji(s,[])}if(1===n.rank&&2===r.rank){const e=ji(n,[1,-1]),t=ji(r,[r.shape[0],r.shape[1]]),s=Yi(e,t);return ji(s,[s.size])}if(2===n.rank&&1===r.rank){const e=ji(r,[-1,1]),t=Yi(n,e);return ji(t,[t.size])}{const e=ji(r,[r.shape[0],r.shape[1]]);return Yi(n,e)}}}),Du=Ws({einsum_:function(e,...t){const n=t.map(((e,t)=>zs(e,`tensors${t}`,"einsum"))),r={equation:e};return As.runKernel(dt,n,r)}}),Mu=Ws({elu_:function(e){const t={x:zs(e,"x","elu","float32")};return As.runKernel(pt,t)}}),Lu=Ws({ensureShape_:function(e,t){const n=zs(e,"x","ensureShape","string_or_numeric");if(!function(e,t){if(e===t)return!0;if(null==e||null==t)return!1;if(e.length!==t.length)return!1;for(let n=0;n<e.length;n++)if(null!==e[n]&&null!==t[n]&&e[n]!==t[n])return!1;return!0}(n.shape,t))throw new Error(`EnsureShape: Shape of tensor ${n.shape} is not compatible with expected shape ${t}`);return e}}),Bu=Ws({erf_:function(e){let t=zs(e,"x","erf");D("int32"===t.dtype||"float32"===t.dtype,(()=>"Input dtype must be `int32` or `float32`.")),"int32"===t.dtype&&(t=ja(t,"float32"));const n={x:t};return As.runKernel(ft,n)}});function zu(e,t){for(let n=0;n<e.length;++n)if(e[e.length-n-1]!==t-1-n)return!1;return!0}function Uu(e,t,n){const r=e.length+t.length,s=[];let a=0,o=0;for(let i=0;i<r;i++)-1===n.indexOf(i)?s.push(e[a++]):s.push(t[o++]);return s}function Vu(e,t){const n=[],r=e.length;for(let s=0;s<r;s++)-1===t.indexOf(s)&&n.push(e[s]);return[n,t.map((t=>e[t]))]}function Wu(e,t){return Uu(e,t.map((e=>1)),t)}function Gu(e,t,n){D(zu(t,n),(()=>`${e} supports only inner-most axes for now. Got axes ${t} and rank-${n} input.`))}function Hu(e,t){if(zu(e,t))return null;const n=[];for(let r=0;r<t;++r)-1===e.indexOf(r)&&n.push(r);return e.forEach((e=>n.push(e))),n}function ju(e){return e.map(((e,t)=>[t,e])).sort(((e,t)=>e[1]-t[1])).map((e=>e[0]))}function Ku(e,t){const n=[];for(let r=t-e;r<t;++r)n.push(r);return n}const qu=Ws({max_:function(e,t=null,n=!1){const r={x:zs(e,"x","max")},s={reductionIndices:t,keepDims:n};return As.runKernel(Ht,r,s)}}),Xu=Ws({min_:function(e,t=null,n=!1){const r={x:zs(e,"x","min")},s={axis:t,keepDims:n};return As.runKernel(Qt,r,s)}}),Yu=Ws({sum_:function(e,t=null,n=!1){let r=zs(e,"x","sum");"bool"===r.dtype&&(r=ja(r,"int32"));const s={x:r},a={axis:t,keepDims:n};return As.runKernel(Vn,s,a)}});function Qu(e,t,n=null){if(0===e.rank)return ko(e);if(1!==e.rank&&null===n)return Qu(ji(e,[-1]),t,n);if(1===e.rank||"number"==typeof n||Array.isArray(n)&&1===n.length){if(1===t)return Yu(ko(e),n);if(t===1/0)return qu(ko(e),n);if(t===-1/0)return Xu(ko(e),n);if("euclidean"===t||2===t)return io(Yu(vo(ko(e),ho(2,"int32")),n));throw new Error(`Error in norm: invalid ord value: ${t}`)}if(Array.isArray(n)&&2===n.length){if(1===t)return qu(Yu(ko(e),n[0]),n[1]-1);if(t===1/0)return qu(Yu(ko(e),n[1]),n[0]);if(t===-1/0)return Xu(Yu(ko(e),n[1]),n[0]);if("fro"===t||"euclidean"===t)return io(Yu(uo(e),n));throw new Error(`Error in norm: invalid ord value: ${t}`)}throw new Error(`Error in norm: invalid axis: ${n}`)}const Zu=Ws({norm_:function(e,t="euclidean",n=null,r=!1){const s=Qu(e=zs(e,"x","norm"),t,n);let a=s.shape;if(r){const t=j(n,e.shape);a=Wu(s.shape,t)}return ji(s,a)}}),Ju=Ws({euclideanNorm_:function(e,t=null,n=!1){return Zu(e,"euclidean",t,n)}}),el=Ws({exp_:function(e){const t={x:zs(e,"x","exp")};return As.runKernel(gt,t)}}),tl=Ws({expandDims_:function(e,t=0){const n=zs(e,"x","expandDims","string_or_numeric");D(t<=n.rank,(()=>"Axis must be <= rank of the tensor"));const r={input:n},s={dim:t};return As.runKernel(yt,r,s)}}),nl=Ws({expm1_:function(e){const t={x:zs(e,"x","expm1")};return As.runKernel(xt,t)}}),rl=Ws({tile_:function(e,t){const n=zs(e,"x","tile","string_or_numeric");D(n.rank===t.length,(()=>`Error in transpose: rank of input ${n.rank} must match length of reps ${t}.`));const r={x:n},s={reps:t};return As.runKernel(ir,r,s)}}),sl=Ws({eye_:function(e,t,n,r="float32"){null==t&&(t=e);const s=Ha([e,t],r),a=e<=t?e:t;for(let e=0;e<a;++e)s.set(1,e,e);const o=ji(s.toTensor(),[e,t]);if(null==n)return o;if(1===n.length)return rl(tl(o,0),[n[0],1,1]);if(2===n.length)return rl(tl(tl(o,0),0),[n[0],n[1],1,1]);if(3===n.length)return rl(tl(tl(tl(o,0),0),0),[n[0],n[1],n[2],1,1]);throw new Error(`eye() currently supports only 1D and 2D batchShapes, but received ${n.length}D.`)}}),al=Ws({floor_:function(e){const t={x:zs(e,"x","floor","float32")};return As.runKernel(kt,t)}}),ol=Ws({gather_:function(e,t,n=0,r=0){const s={x:zs(e,"x","gather"),indices:zs(t,"indices","gather","int32")},a={axis:n,batchDims:r};return As.runKernel(It,s,a)}}),il=Ws({greater_:function(e,t){let n=zs(e,"a","greater","string_or_numeric"),r=zs(t,"b","greater","string_or_numeric");[n,r]=Is(n,r),Io(n.shape,r.shape);const s={a:n,b:r};return As.runKernel($t,s)}}),ul=Ws({greaterEqual_:function(e,t){let n=zs(e,"a","greaterEqual","string_or_numeric"),r=zs(t,"b","greaterEqual","string_or_numeric");[n,r]=Is(n,r),Io(n.shape,r.shape);const s={a:n,b:r};return As.runKernel(Nt,s)}}),ll=Ws({imag_:function(e){const t={input:zs(e,"input","imag")};return As.runKernel(_t,t)}}),cl=Ws({isFinite_:function(e){const t={x:zs(e,"x","isFinite")};return As.runKernel(At,t)}}),hl=Ws({isInf_:function(e){const t={x:zs(e,"x","isInf")};return As.runKernel(Ot,t)}}),dl=Ws({isNaN_:function(e){const t={x:zs(e,"x","isNaN")};return As.runKernel(Ft,t)}}),pl=Ws({leakyRelu_:function(e,t=.2){const n={x:zs(e,"x","leakyRelu")},r={alpha:t};return As.runKernel(Pt,n,r)}}),fl=Ws({less_:function(e,t){let n=zs(e,"a","less","string_or_numeric"),r=zs(t,"b","less","string_or_numeric");[n,r]=Is(n,r),Io(n.shape,r.shape);const s={a:n,b:r};return As.runKernel(Dt,s)}}),ml=Ws({lessEqual_:function(e,t){let n=zs(e,"a","lessEqual","string_or_numeric"),r=zs(t,"b","lessEqual","string_or_numeric");[n,r]=Is(n,r),Io(n.shape,r.shape);const s={a:n,b:r};return As.runKernel(Mt,s)}});function gl(e,t,n){if(n<=0)throw new Error("The number of values should be positive.");const r={start:e,stop:t,num:n};return As.runKernel(Lt,{},r)}const yl=Ws({localResponseNormalization_:function(e,t=5,n=1,r=1,s=.5){const a=zs(e,"x","localResponseNormalization");D(4===a.rank||3===a.rank,(()=>`Error in localResponseNormalization: x must be rank 3 or 4 but got\n               rank ${a.rank}.`)),D(U(t),(()=>`Error in localResponseNormalization: depthRadius must be an integer but got depthRadius ${t}.`));let o=a,i=!1;3===a.rank&&(i=!0,o=ji(a,[1,a.shape[0],a.shape[1],a.shape[2]]));const u={x:o},l={depthRadius:t,bias:n,alpha:r,beta:s},c=As.runKernel(Gt,u,l);return i?ji(c,[c.shape[1],c.shape[2],c.shape[3]]):c}}),xl=Ws({log_:function(e){const t={x:zs(e,"x","log","float32")};return As.runKernel(Bt,t)}}),bl=Ws({log1p_:function(e){const t={x:zs(e,"x","log1p")};return As.runKernel(zt,t)}}),vl=Ws({neg_:function(e){const t={x:zs(e,"x","neg")};return As.runKernel(rn,t)}}),wl=Ws({softplus_:function(e){const t={x:zs(e,"x","softplus")};return As.runKernel(zn,t)}}),kl=Ws({logSigmoid_:function(e){const t=zs(e,"x","logSigmoid");return co((e=>({value:vl(wl(vl(e))),gradFunc:t=>oo(t,Qi(vl(e)))})))(t)}}),Sl=Ws({logSoftmax_:function(e,t=-1){const n=zs(e,"logits","logSoftmax");if(-1===t&&(t=n.rank-1),t!==n.rank-1)throw Error(`Log Softmax along a non-last dimension is not yet supported. Logits was rank ${n.rank} and axis was ${t}`);const r=co(((e,n)=>{const r=qu(e,t,!0),s=wo(e,r),a=wo(ja(s,"float32"),xl(Yu(el(s),t,!0)));return n([a]),{value:a,gradFunc:(e,n)=>{const[r]=n,s=el(r);return wo(e,oo(Yu(e,t,!0),s))}}}));return r(n)}}),Cl=Ws({logSumExp_:function(e,t=null,n=!1){const r=zs(e,"x","logSumExp"),s=j(t,r.shape),a=qu(r,s,!0),o=wo(r,a),i=el(o),u=Yu(i,s),l=xl(u),c=ro(ji(a,l.shape),l);if(n){const e=Wu(c.shape,s);return ji(c,e)}return c}}),Il=Ws({logicalAnd_:function(e,t){const n=zs(e,"a","logicalAnd","bool"),r=zs(t,"b","logicalAnd","bool");Io(n.shape,r.shape);const s={a:n,b:r};return As.runKernel(Ut,s)}}),Tl=Ws({logicalNot_:function(e){const t={x:zs(e,"x","logicalNot","bool")};return As.runKernel(Vt,t)}}),$l=Ws({logicalOr_:function(e,t){const n=zs(e,"a","logicalOr","bool"),r=zs(t,"b","logicalOr","bool");Io(n.shape,r.shape);const s={a:n,b:r};return As.runKernel(Wt,s)}}),Nl=Ws({logicalXor_:function(e,t){const n=zs(e,"a","logicalXor","bool"),r=zs(t,"b","logicalXor","bool");return Io(n.shape,r.shape),Il($l(e,t),Tl(Il(e,t)))}}),El=2147483648,Rl=Ws({searchSorted_:function(e,t,n="left"){const r=zs(e,"sortedSequence","searchSorted"),s=zs(t,"values","searchSorted"),a=r.shape[r.shape.length-1],o=s.shape[s.shape.length-1],i=ji(r,[-1,a]),u=ji(s,[-1,o]);if(i.rank<2)throw new Error("Sorted input argument must be at least 2-dimensional");if(i.shape[0]!==u.shape[0])throw new Error("Leading dimension of 'sortedSequence' and 'values' must match.");if(B(u.shape)>=El)throw new Error("values tensor size must less than 2147483648");if(i.shape[1]>=El)throw new Error(`trailing dim_size must less than 2147483648 for int32 output type, was ${i.shape[1]}`);const l={sortedSequence:i,values:u},c={side:n};return As.runKernel(An,l,c)}});function _l(e,t){return Rl(e,t,"left")}const Al=Ws({maxPool_:function(e,t,n,r,s){const a=zs(e,"x","maxPool");let o=a,i=!1;3===a.rank&&(i=!0,o=ji(a,[1,a.shape[0],a.shape[1],a.shape[2]])),D(4===o.rank,(()=>`Error in maxPool: input must be rank 4 but got rank ${o.rank}.`)),D(Vi(n,1),(()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${n} and dilations '1'`)),Hi("maxPool",r,s);const u={x:o},l={filterSize:t,strides:n,pad:r,dimRoundingMode:s},c=As.runKernel(Kt,u,l);return i?ji(c,[c.shape[1],c.shape[2],c.shape[3]]):c}}),Ol=Ws({maxPool3d_:function(e,t=[1,1,1],n,r,s,a="NDHWC"){const o=zs(e,"x","maxPool3d");let i=o,u=!1;4===o.rank&&(u=!0,i=ji(o,[1,o.shape[0],o.shape[1],o.shape[2],o.shape[3]])),D(5===i.rank,(()=>`Error in maxPool3d: x must be rank 5 but got rank ${i.rank}.`)),D("NDHWC"===a,(()=>`Error in maxPool3d: Only NDHWC is currently supported, but got dataFormat of ${a}`)),Hi("maxPool3d",r,s);const l={x:i},c={filterSize:t,strides:n,pad:r,dimRoundingMode:s,dataFormat:a},h=As.runKernel(qt,l,c);return u?ji(h,[h.shape[1],h.shape[2],h.shape[3],h.shape[4]]):h}}),Fl=Ws({maxPoolWithArgmax_:function(e,t,n,r,s=!1){const a={x:zs(e,"x","maxPoolWithArgmax")},o={filterSize:t,strides:n,pad:r,includeBatchInIndex:s},i=As.runKernel(Xt,a,o);return{result:i[0],indexes:i[1]}}}),Pl=Ws({mean_:function(e,t=null,n=!1){const r={x:zs(e,"x","mean")},s={axis:t,keepDims:n};return As.runKernel(Yt,r,s)}});function Dl(e,t="float32"){if(ie(e),"complex64"===t){const t=Dl(e,"float32"),n=Dl(e,"float32");return Gs(t,n)}const n=oe(B(e),t);return As.makeTensor(n,e,t)}function Ml(e,t="float32"){if(ie(e),"complex64"===t){const t=Ml(e,"float32"),n=Dl(e,"float32");return Gs(t,n)}const n=ae(B(e),t);return As.makeTensor(n,e,t)}function Ll(e,t,{indexing:n="xy"}={}){if("xy"!==n&&"ij"!==n)throw new TypeError(`${n} is not a valid third argument to meshgrid`);if(void 0===e)return[];let r=zs(e,"x","meshgrid",e instanceof ps?e.dtype:"float32");if(void 0===t)return[r];let s=zs(t,"y","meshgrid",t instanceof ps?t.dtype:"float32");const a=B(r.shape),o=B(s.shape);return"xy"===n?(r=ji(r,[1,-1]),s=ji(s,[-1,1]),[Yi(Ml([o,1],r.dtype),r),Yi(s,Ml([1,a],s.dtype))]):(r=ji(r,[-1,1]),s=ji(s,[1,-1]),[Yi(r,Ml([1,o],r.dtype)),Yi(Ml([a,1],s.dtype),s)])}const Bl=Ws({minimum_:function(e,t){let n=zs(e,"a","minimum"),r=zs(t,"b","minimum");[n,r]=Is(n,r),"bool"===n.dtype&&(n=ja(n,"int32"),r=ja(r,"int32")),Io(n.shape,r.shape);const s={a:n,b:r};return As.runKernel(Zt,s)}}),zl=Ws({mirrorPad_:function(e,t,n){D("reflect"===n||"symmetric"===n,(()=>`Invalid mode. Mode must be either reflect or symmetric. Got ${n}.`));const r=zs(e,"x","mirrorPad");if(0===r.rank)throw new Error("mirrorPad(scalar) is not defined. Pass non-scalar to mirrorPad");D(t.length===r.rank,(()=>`Padding doesn't match input. Must be ${r.rank}. Got ${t.length}.`));const s="reflect"===n?1:0;for(let e=0;e<r.rank;e++)D(2===t[e].length,(()=>"Invalid number of paddings. Must be length of 2 each.")),D(t[e][0]>=0&&t[e][0]<=r.shape[e]-s&&t[e][1]>=0&&t[e][1]<=r.shape[e]-s,(()=>`Padding in dimension ${e} cannot be greater than or equal to ${r.shape[e]-s} or less than 0 for input of shape ${r.shape}`));const a={paddings:t,mode:n},o={x:r};return As.runKernel(Jt,o,a)}}),Ul=Ws({mod_:function(e,t){let n=zs(e,"a","mod"),r=zs(t,"b","mod");[n,r]=Is(n,r);const s={a:n,b:r};return As.runKernel(en,s)}}),Vl=Ws({moments_:function(e,t=null,n=!1){const r=j(t,(e=zs(e,"x","moments")).shape),s=Pl(e,r,n);let a=s.shape;n||(a=Wu(s.shape,r));const o=uo(wo(ja(e,"float32"),ji(s,a)));return{mean:s,variance:Pl(o,r,n)}}}),Wl=Ws({multiRNNCell_:function(e,t,n,r){const s=zs(t,"data","multiRNNCell"),a=Us(n,"c","multiRNNCell"),o=Us(r,"h","multiRNNCell");let i=s;const u=[];for(let t=0;t<e.length;t++){const n=e[t](i,a[t],o[t]);u.push(n[0]),u.push(n[1]),i=n[1]}const l=[],c=[];for(let e=0;e<u.length;e+=2)l.push(u[e]),c.push(u[e+1]);return[l,c]}}),Gl=Ws({multinomial_:function(e,t,n,r=!1){const s=zs(e,"logits","multinomial"),a=s.size,o=s.rank;if(a<2)throw new Error(`Error in multinomial: you need at least 2 outcomes, but got ${a}.`);if(o>2)throw new Error(`Rank of probabilities must be 1 or 2, but is ${o}`);n=n||Math.random();const i={logits:1===o?ji(s,[1,-1]):s},u={numSamples:t,seed:n,normalized:r},l=As.runKernel(tn,i,u);return 1===o?ji(l,[l.size]):l}}),Hl=Ws({notEqual_:function(e,t){let n=zs(e,"a","notEqual","string_or_numeric"),r=zs(t,"b","notEqual","string_or_numeric");[n,r]=Is(n,r),Io(n.shape,r.shape);const s={a:n,b:r};return As.runKernel(sn,s)}}),jl=Ws({oneHot_:function(e,t,n=1,r=0,s="int32"){if(t<2)throw new Error(`Error in oneHot: depth must be >=2, but it is ${t}`);const a={indices:zs(e,"indices","oneHot","int32")},o={dtype:s,depth:t,onValue:n,offValue:r};return As.runKernel(cn,a,o)}}),Kl=Ws({onesLike_:function(e){const t={x:zs(e,"x","onesLike")};return As.runKernel(ln,t)}}),ql=Ws({outerProduct_:function(e,t){const n=zs(e,"v1","outerProduct"),r=zs(t,"v2","outerProduct");D(1===n.rank&&1===r.rank,(()=>`Error in outerProduct: inputs must be rank 1, but got ranks ${n.rank} and ${r.rank}.`));const s=ji(n,[-1,1]),a=ji(r,[1,-1]);return Yi(s,a)}}),Xl=Ws({pad_:function(e,t,n=0){const r=zs(e,"x","pad");if(0===r.rank)throw new Error("pad(scalar) is not defined. Pass non-scalar to pad");const s={paddings:t,constantValue:n},a={x:r};return As.runKernel(dn,a,s)}}),Yl=Ws({pad1d_:function(e,t,n=0){return D(2===t.length,(()=>"Invalid number of paddings. Must be length of 2.")),Xl(e,[t],n)}}),Ql=Ws({pad2d_:function(e,t,n=0){return D(2===t.length&&2===t[0].length&&2===t[1].length,(()=>"Invalid number of paddings. Must be length of 2 each.")),Xl(e,t,n)}}),Zl=Ws({pad3d_:function(e,t,n=0){return D(3===t.length&&2===t[0].length&&2===t[1].length&&2===t[2].length,(()=>"Invalid number of paddings. Must be length of 2 each.")),Xl(e,t,n)}}),Jl=Ws({pad4d_:function(e,t,n=0){return D(4===t.length&&2===t[0].length&&2===t[1].length&&2===t[2].length&&2===t[3].length,(()=>"Invalid number of paddings. Must be length of 2 each.")),Xl(e,t,n)}}),ec=Ws({spaceToBatchND_:function(e,t,n){const r=zs(e,"x","spaceToBatchND");D(r.rank>=1+t.length,(()=>`input rank ${r.rank} should be > than [blockShape] ${t.length}`)),D(n.length===t.length,(()=>`paddings.shape[0] ${n.length} must be equal to [blockShape] ${t.length}`)),D(r.shape.reduce(((e,r,s)=>s>0&&s<=t.length?e&&(r+n[s-1][0]+n[s-1][1])%t[s-1]==0:e),!0),(()=>`input spatial dimensions ${r.shape.slice(1)} with paddings ${n.toString()} must be divisible by blockShapes ${t.toString()}`));const s={x:r},a={blockShape:t,paddings:n};return As.runKernel(Wn,s,a)}}),tc=Ws({pool_:function(e,t,n,r,s,a,o){null==s&&(s=[1,1]),null==a&&(a=1),0===r&&(r="valid");const i=zs(e,"x","maxPool");let u=i,l=!1;3===i.rank&&(l=!0,u=ji(i,[1,i.shape[0],i.shape[1],i.shape[2]])),D(Vi(a,s),(()=>`Error in pool: Either strides or dilations must be 1. Got strides ${a} and dilations '${s}'`));const c=Ai(u.shape,t,a,s,r),h=[c.dilationHeight,c.dilationWidth];let d;d="same"===r?function(e,t){const n=e.map(((e,n)=>e+(e-1)*(t[n]-1))).map((e=>e-1)),r=n.map((e=>Math.floor(e/2))),s=n.map(((e,t)=>e-r[t]));return n.map(((e,t)=>[r[t],s[t]]))}([c.filterHeight,c.filterWidth],h):[[0,0],[0,0]];const p=1===h[0]&&1===h[1],[f,m]=function(e,t,n){const r=n.map((e=>e[0])),s=n.map((e=>e[1])),a=e.concat(r,s),o=t.map(((e,t)=>(e-a[t]%e)%e)),i=s.map(((e,t)=>e+o[t]));return[t.map(((e,t)=>[r[t],i[t]])),t.map(((e,t)=>[0,o[t]]))]}([c.inHeight,c.inWidth],h,d),g=p?r:"valid",y=p?u:ec(u,h,f),x=("avg"===n?()=>Ki(y,t,a,g,o):()=>Al(y,t,a,g,o))(),b=p?x:tu(x,h,m);return l?ji(b,[b.shape[1],b.shape[2],b.shape[3]]):b}}),nc=Ws({prelu_:function(e,t){const n={x:zs(e,"x","prelu"),alpha:zs(t,"alpha","prelu")};return As.runKernel(fn,n)}}),rc=Ws({prod_:function(e,t=null,n=!1){let r=zs(e,"x","prod");"bool"===r.dtype&&(r=ja(r,"int32"));const s={x:r},a={axis:t,keepDims:n};return As.runKernel(mn,s,a)}}),sc=Ws({raggedGather_:function(e,t,n,r){const s={paramsNestedSplits:e.map(((e,t)=>zs(e,`tensors${t}`,"raggedGather","int32"))),paramsDenseValues:zs(t,"paramsDenseValues","raggedGather"),indices:zs(n,"indices","raggedGather","int32")},a={outputRaggedRank:r},o=As.runKernel(gn,s,a);return{outputNestedSplits:o.slice(0,o.length-1),outputDenseValues:o[o.length-1]}}}),ac=Ws({raggedRange_:function(e,t,n){const r=zs(e,"starts","raggedRange"),s={starts:r,limits:zs(t,"limits","raggedRange",r.dtype),deltas:zs(n,"deltas","raggedRange",r.dtype)},a=As.runKernel(yn,s);return{rtNestedSplits:a[0],rtDenseValues:a[1]}}}),oc=Ws({raggedTensorToTensor_:function(e,t,n,r,s){const a=zs(e,"shape","raggedTensorToTensor","int32"),o=zs(t,"values","raggedTensorToTensor"),i={shape:a,values:o,defaultValue:zs(n,"defaultValue","raggedTensorToTensor",o.dtype),rowPartitionTensors:r.map(((e,t)=>zs(e,`tensors${t}`,"raggedTensorToTensor","int32")))},u={rowPartitionTypes:s};return As.runKernel(xn,i,u)}}),ic=Ws({rand_:function(e,t,n){ie(e);const r=B(e);let s=null;if(null==n||"float32"===n)s=new Float32Array(r);else if("int32"===n)s=new Int32Array(r);else{if("bool"!==n)throw new Error(`Unknown data type ${n}`);s=new Uint8Array(r)}for(let e=0;e<r;e++)s[e]=t();return As.makeTensor(s,e,n)}});var uc=n(377);class lc{constructor(e,t,n,r,s){this.mean=e,this.stdDev=t,this.dtype=n,this.nextVal=NaN,this.truncated=r,this.truncated&&(this.upper=this.mean+2*this.stdDev,this.lower=this.mean-2*this.stdDev);const a=s||Math.random();this.random=uc.alea(a.toString())}nextValue(){if(!isNaN(this.nextVal)){const e=this.nextVal;return this.nextVal=NaN,e}let e,t,n=!1;for(;!n;){let r,s,a;do{r=2*this.random()-1,s=2*this.random()-1,a=r*r+s*s}while(a>=1||0===a);const o=Math.sqrt(-2*Math.log(a)/a);e=this.mean+this.stdDev*r*o,t=this.mean+this.stdDev*s*o,this.truncated&&!this.isValidTruncated(e)||(n=!0)}return this.truncated&&!this.isValidTruncated(t)||(this.nextVal=this.convertValue(t)),this.convertValue(e)}convertValue(e){return null==this.dtype||"float32"===this.dtype?e:Math.round(e)}isValidTruncated(e){return e<=this.upper&&e>=this.lower}}class cc{constructor(e,t,n,r){this.alpha=e,this.beta=1/t,this.dtype=n;const s=r||Math.random();this.randu=uc.alea(s.toString()),this.randn=new lc(0,1,n,!1,this.randu()),this.d=e<1?e+2/3:e-1/3,this.c=1/Math.sqrt(9*this.d)}nextValue(){let e,t,n,r,s,a;for(;;){do{r=this.randn.nextValue(),a=1+this.c*r}while(a<=0);if(a*=a*a,e=r*r,t=1-.331*e*e,n=.5*e+this.d*(1-a+Math.log(a)),s=this.randu(),s<t||Math.log(s)<n)break}return a=1/this.beta*this.d*a,this.alpha<1&&(a*=Math.pow(this.randu(),1/this.alpha)),this.convertValue(a)}convertValue(e){return"float32"===this.dtype?e:Math.round(e)}}class hc{constructor(e=0,t=1,n,r){if(this.canReturnFloat=()=>null==this.dtype||"float32"===this.dtype,this.min=e,this.range=t-e,this.dtype=n,null==r&&(r=Math.random()),"number"==typeof r&&(r=r.toString()),!this.canReturnFloat()&&this.range<=1)throw new Error(`The difference between ${e} - ${t} <= 1 and dtype is not float`);this.random=uc.alea(r)}convertValue(e){return this.canReturnFloat()?e:Math.round(e)}nextValue(){return this.convertValue(this.min+this.range*this.random())}}const dc=Ws({randomGamma_:function(e,t,n=1,r="float32",s){if(ie(e),null==n&&(n=1),null==r&&(r="float32"),"float32"!==r&&"int32"!==r)throw new Error(`Unsupported data type ${r}`);const a=new cc(t,n,r,s),o=Ha(e,r);for(let e=0;e<o.values.length;e++)o.values[e]=a.nextValue();return o.toTensor()}}),pc=Ws({randomNormal_:function(e,t=0,n=1,r,s){if(ie(e),null!=r&&"bool"===r)throw new Error(`Unsupported data type ${r}`);const a=new lc(t,n,r,!1,s),o=Ha(e,r);for(let e=0;e<o.values.length;e++)o.values[e]=a.nextValue();return o.toTensor()}}),fc=Ws({randomStandardNormal_:function(e,t,n){if(null!=t&&"bool"===t)throw new Error(`Unsupported data type ${t}`);return pc(e,0,1,t,n)}}),mc=Ws({randomUniform_:function(e,t=0,n=1,r="float32",s){ie(e);const a=Ha(e,r),o=new hc(t,n,null,s);for(let e=0;e<a.values.length;e++)a.values[e]=o.nextValue();return a.toTensor()}}),gc=Ws({randomUniformInt_:function(e,t,n,r){return mc(e,t,n,"int32",r)}});function yc(e,t,n=1,r="float32"){if(0===n)throw new Error("Cannot have a step of zero");const s={start:e,stop:t,step:n,dtype:r};return As.runKernel(bn,{},s)}const xc=Ws({real_:function(e){const t={input:zs(e,"input","real")};return As.runKernel(vn,t)}}),bc=Ws({reciprocal_:function(e){const t={x:zs(e,"x","reciprocal")};return As.runKernel(wn,t)}}),vc=Ws({relu_:function(e){const t={x:zs(e,"x","relu")};return As.runKernel(kn,t)}}),wc=Ws({relu6_:function(e){const t={x:zs(e,"x","relu6")};return As.runKernel(Tn,t)}}),kc=Ws({reverse_:function(e,t){const n={x:zs(e,"x","reverse")},r={dims:t};return As.runKernel($n,n,r)}}),Sc=Ws({reverse1d_:function(e){const t=zs(e,"x","reverse");return D(1===t.rank,(()=>`Error in reverse1D: x must be rank 1 but got rank ${t.rank}.`)),kc(t,0)}}),Cc=Ws({reverse2d_:function(e,t){const n=zs(e,"x","reverse");return D(2===n.rank,(()=>`Error in reverse2D: x must be rank 2 but got rank ${n.rank}.`)),kc(n,t)}}),Ic=Ws({reverse3d_:function(e,t){const n=zs(e,"x","reverse");return D(3===n.rank,(()=>`Error in reverse3D: x must be rank 3 but got rank ${n.rank}.`)),kc(n,t)}}),Tc=Ws({reverse4d_:function(e,t){const n=zs(e,"x","reverse");return D(4===n.rank,(()=>`Error in reverse4D: x must be rank 4 but got rank ${n.rank}.`)),kc(n,t)}}),$c=Ws({round_:function(e){const t={x:zs(e,"x","round")};return As.runKernel(Nn,t)}}),Nc=Ws({rsqrt_:function(e){const t={x:zs(e,"x","rsqrt","float32")};return As.runKernel(En,t)}}),Ec=Ws({selu_:function(e){const t={x:zs(e,"x","selu")};return As.runKernel(Fn,t)}}),Rc=Ws({separableConv2d_:function(e,t,n,r,s,a=[1,1],o="NHWC"){const i=zs(e,"x","separableConv2d"),u=zs(t,"depthwiseFilter","separableConv2d"),l=zs(n,"pointwiseFilter","separableConv2d");let c=i,h=!1;if(3===i.rank&&(h=!0,c=ji(i,[1,i.shape[0],i.shape[1],i.shape[2]])),"NCHW"===o)throw new Error("separableConv2d currently does not support dataFormat NCHW; only NHWC is supported");D(4===c.rank,(()=>`Error in separableConv2d: input must be rank 4, but got rank ${c.rank}.`)),D(4===u.rank,(()=>`Error in separableConv2d: depthwise filter must be rank 4, but got rank ${u.rank}.`)),D(4===l.rank,(()=>`Error in separableConv2d: pointwise filter must be rank 4, but got rank ${u.rank}.`)),D(1===l.shape[0],(()=>`Error in separableConv2d: the first dimension of pointwise filter  must be 1, but got ${l.shape[0]}.`)),D(1===l.shape[1],(()=>`Error in separableConv2d: the second dimension of pointwise filter must be 1, but got ${l.shape[1]}.`));const d=u.shape[2],p=u.shape[3];D(l.shape[2]===d*p,(()=>`Error in separableConv2d: the third dimension of pointwise filter must be ${d*p}, but got ${l.shape[2]}.`));const f=Eu(c,u,r,s,o,a),m=gu(f,l,1,"valid",o);return h?ji(m,[m.shape[1],m.shape[2],m.shape[3]]):m}}),_c=async function(e,t){const n=zs(e,"x","setdiff1d"),r=zs(t,"y","setdiff1d");D(n.dtype===r.dtype,(()=>`x and y should have the same dtype, but got x (${n.dtype}) and y (${r.dtype}).`)),D(1===n.rank,(()=>`x should be 1D tensor, but got x (${n.shape}).`)),D(1===r.rank,(()=>`y should be 1D tensor, but got y (${r.shape}).`));const s=await n.data(),a=await r.data(),o=new Set(a);let i=0;for(let e=0;e<s.length;e++)o.has(s[e])||i++;const u=new ls([i],n.dtype),l=new ls([i],"int32");for(let e=0,t=0;e<s.length;e++)o.has(s[e])||(u.values[t]=s[e],l.values[t]=e,t++);return[u.toTensor(),l.toTensor()]},Ac=Ws({sign_:function(e){const t={x:zs(e,"x","sign")};return As.runKernel(Ln,t)}}),Oc=Ws({sin_:function(e){const t={x:zs(e,"x","sin","float32")};return As.runKernel(Dn,t)}}),Fc=Ws({sinh_:function(e){const t={x:zs(e,"x","sinh")};return As.runKernel(Mn,t)}}),Pc=Ws({slice1d_:function(e,t,n){const r=zs(e,"x","slice1d");return D(1===r.rank,(()=>`slice1d expects a rank-1 tensor, but got a rank-${r.rank} tensor`)),Zi(r,[t],[n])}}),Dc=Ws({slice2d_:function(e,t,n){const r=zs(e,"x","slice2d");return D(2===r.rank,(()=>`slice2d expects a rank-2 tensor, but got a rank-${r.rank} tensor`)),Zi(r,t,n)}}),Mc=Ws({slice3d_:function(e,t,n){const r=zs(e,"x","slice3d");return D(3===r.rank,(()=>`slice3d expects a rank-3 tensor, but got a rank-${r.rank} tensor`)),Zi(r,t,n)}}),Lc=Ws({slice4d_:function(e,t,n){const r=zs(e,"x","slice4d");return D(4===r.rank,(()=>`slice4d expects a rank-4 tensor, but got a rank-${r.rank} tensor`)),Zi(r,t,n)}}),Bc=Ws({softmax_:function(e,t=-1){const n=zs(e,"logits","softmax","float32");if(-1===t&&(t=n.rank-1),t!==n.rank-1)throw Error(`Softmax along a non-last dimension is not yet supported. Logits was rank ${n.rank} and dim was ${t}`);const r={logits:n},s={dim:t};return As.runKernel(Hn,r,s)}}),zc=Ws({fft_:function(e){D("complex64"===e.dtype,(()=>`The dtype for tf.spectral.fft() must be complex64 but got ${e.dtype}.`));const t={input:e};return As.runKernel(bt,t)}}),Uc=Ws({ifft_:function(e){D("complex64"===e.dtype,(()=>`The dtype for tf.spectral.ifft() must be complex64 but got ${e.dtype}.`));const t={input:e};return As.runKernel(Rt,t)}}),Vc=Ws({irfft_:function(e){const t=e.shape[e.shape.length-1],n=e.size/t;let r;if(t<=2){const s=ji(e,[n,t]);r=Uc(s)}else{const s=[n,2*(t-1)],a=ji(xc(e),[n,t]),o=ji(ll(e),[n,t]),i=kc(Zi(a,[0,1],[n,t-2]),1),u=oo(kc(Zi(o,[0,1],[n,t-2]),1),ho(-1)),l=Xi([a,i],1),c=Xi([o,u],1),h=ji(Gs(l,c),[s[0],s[1]]);r=Uc(h)}if(r=xc(r),3===e.rank&&0!==e.shape[0]){const t=r,n=e.shape[0];r=ji(r,[n,r.shape[0]/n,r.shape[1]]),t.dispose()}return r}}),Wc=Ws({split_:function(e,t,n=0){const r={x:zs(e,"x","split")},s={numOrSizeSplits:t,axis:n};return As.runKernel(Gn,r,s)}}),Gc=Ws({rfft_:function(e,t){D("float32"===e.dtype,(()=>`The dtype for rfft() must be real value but got ${e.dtype}`));let n=e.shape[e.shape.length-1];const r=e.size/n;let s;if(null!=t&&t<n){const r=e.shape.map((e=>0)),a=e.shape.map((e=>e));a[e.shape.length-1]=t,s=Zi(e,r,a),n=t}else if(null!=t&&t>n){const r=e.shape.map((e=>e));r[e.shape.length-1]=t-n,s=Xi([e,Dl(r)],e.shape.length-1),n=t}else s=e;const a=lo(s),o=ji(Gs(s,a),[r,n]),i=zc(o),u=Math.floor(n/2)+1,l=xc(i),c=ll(i),h=Wc(l,[u,n-u],l.shape.length-1),d=Wc(c,[u,n-u],c.shape.length-1),p=s.shape.slice();return p[s.shape.length-1]=u,ji(Gs(h[0],d[0]),p)}}),Hc=Ws({squaredDifference_:function(e,t){let n=zs(e,"a","squaredDifference"),r=zs(t,"b","squaredDifference");[n,r]=Is(n,r),Io(n.shape,r.shape);const s={a:n,b:r};return As.runKernel(Qn,s,{})}}),jc=Ws({squeeze_:function(e,t){const n=zs(e,"x","squeeze","string_or_numeric");return ji(n,K(n.shape,t).newShape)}}),Kc=Ws({stack_:function(e,t=0){const n=Us(e,"tensors","stack","string_or_numeric");D(n.length>=1,(()=>"Pass at least one tensor to tf.stack")),n.length>0&&D(t<=n[0].rank,(()=>"Axis must be <= rank of the tensor"));const r=n,s={axis:t};return As.runKernel(hn,r,s)}}),qc=Ws({step_:function(e,t=0){const n={x:zs(e,"x","step")},r={alpha:t};return As.runKernel(mr,n,r)}}),Xc=Ws({stridedSlice_:function(e,t,n,r,s=0,a=0,o=0,i=0,u=0){const l={x:zs(e,"x","stridedSlice","string_or_numeric")},c={begin:t,end:n,strides:r,beginMask:s,endMask:a,ellipsisMask:o,newAxisMask:i,shrinkAxisMask:u};return As.runKernel(er,l,c)}}),Yc=Ws({tan_:function(e){const t={x:zs(e,"x","tan","float32")};return As.runKernel(ar,t)}});function Qc(e,t){L(e);const n=Ms(e,t);if(1!==n.length)throw new Error("tensor1d() requires values to be a flat/TypedArray");return Hs(e,null,n,t)}function Zc(e,t,n){if(L(e),null!=t&&2!==t.length)throw new Error("tensor2d() requires shape to have two numbers");const r=Ms(e,n);if(2!==r.length&&1!==r.length)throw new Error("tensor2d() requires values to be number[][] or flat/TypedArray");if(1===r.length&&null==t)throw new Error("tensor2d() requires shape to be provided when `values` are a flat/TypedArray");return Hs(e,t,r,n)}function Jc(e,t,n){if(L(e),null!=t&&4!==t.length)throw new Error("tensor4d() requires shape to have four numbers");const r=Ms(e,n);if(4!==r.length&&1!==r.length)throw new Error("tensor4d() requires values to be number[][][][] or flat/TypedArray");if(1===r.length&&null==t)throw new Error("tensor4d() requires shape to be provided when `values` are a flat array");return Hs(e,t,r,n)}function eh(e,t,n){if(L(e),null!=t&&5!==t.length)throw new Error("tensor5d() requires shape to have five numbers");const r=Ms(e,n);if(5!==r.length&&1!==r.length)throw new Error("tensor5d() requires values to be number[][][][][] or flat/TypedArray");if(1===r.length&&null==t)throw new Error("tensor5d() requires shape to be provided when `values` are a flat array");return Hs(e,t,r,n)}function th(e,t,n){if(L(e),null!=t&&6!==t.length)throw new Error("tensor6d() requires shape to have six numbers");const r=Ms(e,n);if(6!==r.length&&1!==r.length)throw new Error("tensor6d() requires values to be number[][][][][][] or flat/TypedArray");if(1===r.length&&null==t)throw new Error("tensor6d() requires shape to be provided when `values` are a flat array");return Hs(e,t=t||r,r,n)}function nh(e,t,n){const r=t.rank>1?t.shape[t.rank-1]:1,s=t.rank>1?t.rank-1:1,a=`Must have updates.shape = indices.shape[:batchDim] + shape[sliceDim:], got updates.shape: ${n.shape}, indices.shape: ${t.shape}, shape: ${e}, sliceDim: ${r}, and batchDim: ${s}.`;if(n.rank<s)throw new Error(a+` update.rank < ${s}. `);if(e.length<r+(n.rank-s))throw new Error(a+` Output shape length < ${r+(n.rank-s)}`);if(n.rank!==s+e.length-r)throw new Error(a+" update.rank != "+(s+e.length-r));for(let e=0;e<s;++e)if(n.shape[e]!==t.shape[e])throw new Error(a+` updates.shape[${e}] (${n.shape[e]}) != indices.shape[${e}] (${t.shape[e]}).`);for(let t=0;t<n.rank-s;++t)if(n.shape[t+s]!==e[t+r])throw new Error(a+` updates.shape[${t+s}] (${n.shape[t+s]}) != shape[${t+s}] (${e[t+s]})`)}function rh(e,t,n){if(t.rank<1)throw new Error(`tf.scatterND() expects the indices to be rank 1 or higher, but the rank was ${t.rank}.`);if(e.rank<1)throw new Error(`tf.scatterND() expects the updates to be rank 1 or higher, but the rank was ${e.rank}.`);if("int32"!==t.dtype)throw new Error(`The dtype of 'indices' should be int32, but got dtype: ${t.dtype}`);if(n.length<1)throw new Error(`Output rank must be greater or equal to 1, but got shape: ${n}`);if(0===n.length){if(0===t.size)throw new Error(`Indices specified for empty output. indices shape: ${t.shape}`);if(0===e.size)throw new Error(`Updates specified for empty output. updates shape: ${e.shape}`)}nh(n,t,e)}function sh(e,t,n){const r=t.shape.length,s=r>1?t.shape[r-1]:1,a=n.length;let o=1;for(let e=s;e<a;++e)o*=n[e];const i=s<1?1:s;return{sliceRank:s,numUpdates:B(t.shape)/i,sliceSize:o,strides:[...ne(n.slice(0,s)),1],outputSize:B(n)}}const ah=Ws({tensorScatterUpdate_:function(e,t,n){const r=zs(e,"tensor","tensorScatterupdate"),s=zs(t,"indices","tensorScatterupdate","int32"),a=zs(n,"updates","tensorScatterupdate");if(rh(a,s,r.shape),r.dtype!==a.dtype)throw new Error(`tensor and updates must have the same dtype, instead they are ${r.dtype} and ${a.dtype}.`);const o={tensor:r,indices:s,updates:a};return As.runKernel(_n,o,{})}}),oh=Ws({topk_:function(e,t=1,n=!0){const r=zs(e,"x","topk");if(0===r.rank)throw new Error("topk() expects the input to be of rank 1 or higher");const s=r.shape[r.shape.length-1];if(t<0)throw new Error(`'k' passed to topk() must be >= 0 but got ${t}`);if(t>s)throw new Error(`'k' passed to topk() must be <= the last dimension (${s}) but got ${t}`);const a={x:r},o={k:t,sorted:n},[i,u]=As.runKernel(ur,a,o);return{values:i,indices:u}}}),ih=Ws({truncatedNormal_:function(e,t=0,n=1,r,s){if(ie(e),null!=r&&"bool"===r)throw new Error("Unsupported data type $ { dtype }");const a=new lc(t,n,r,!0,s),o=Ha(e,r);for(let e=0;e<o.values.length;e++)o.values[e]=a.nextValue();return o.toTensor()}}),uh=Ws({unique_:function(e,t=0){const n=zs(e,"x","unique","string_or_numeric");D(n.rank>0,(()=>"The input tensor must be at least 1D"));const r={x:n},s={axis:t},[a,o]=As.runKernel(hr,r,s);return{values:a,indices:o}}}),lh=Ws({unsortedSegmentSum_:function(e,t,n){const r=zs(e,"x","unsortedSegmentSum"),s=zs(t,"segmentIds","unsortedSegmentSum","int32");D(U(n),(()=>"numSegments must be of dtype int"));const a={x:r,segmentIds:s},o={numSegments:n};return As.runKernel(pr,a,o)}}),ch=Ws({unstack_:function(e,t=0){const n=zs(e,"x","unstack","string_or_numeric");D(t>=-n.shape.length&&t<n.shape.length,(()=>`Axis = ${t} is not in [-${n.shape.length}, ${n.shape.length})`));const r={value:n},s={axis:t};return As.runKernel(dr,r,s)}});function hh(e,t){return Rl(e,t,"right")}function dh(e,t=!0,n,r){return As.makeVariable(e,t,n,r)}function ph(e,t){const n=[];for(let e=0;e<t.length;e++)t[e]&&n.push(e);const r=Ha(e,"int32"),s=Ha([n.length,e.length],"int32");for(let t=0;t<n.length;t++){const a=r.indexToLoc(n[t]),o=t*e.length;s.values.set(a,o)}return s.toTensor()}const fh=async function(e){const t=zs(e,"condition","whereAsync","bool"),n=await t.data(),r=ph(t.shape,n);return e!==t&&t.dispose(),r},mh=async function(e,t,n){const r=zs(e,"tensor","boolMask"),s=zs(t,"mask","boolMask","bool"),a=null==n?0:n,o=s.rank,i=r.shape;D(o>0,(()=>"mask cannot be scalar")),M(i.slice(a,a+o),s.shape,"mask's shape must match the first K dimensions of tensor's shape,");let u=1;for(let e=a;e<a+o;e++)u*=i[e];const l=i.slice(0,a).concat([u],i.slice(a+o)),c=ji(r,l),h=ji(s,[-1]),d=await fh(h),p=jc(d,[1]),f=ol(c,p,a);return e!==r&&r.dispose(),t!==s&&s.dispose(),p.dispose(),c.dispose(),h.dispose(),d.dispose(),f},gh=Ws({transpose_:function(e,t,n){const r=zs(e,"x","transpose");if(null==t&&(t=r.shape.map(((e,t)=>t)).reverse()),D(r.rank===t.length,(()=>`Error in transpose: rank of input ${r.rank} must match length of perm ${t}.`)),t.forEach((e=>{D(e>=0&&e<r.rank,(()=>"All entries in 'perm' must be between 0 and "+(r.rank-1)+` but got ${t}`))})),r.rank<=1)return r.clone();const s={x:r},a={perm:t};return"complex64"===r.dtype?Ya((()=>{let e=xc(r),t=ll(r);return e=As.runKernel(cr,{x:e},a),t=As.runKernel(cr,{x:t},a),n&&(t=vl(t)),Gs(e,t)})):As.runKernel(cr,s,a)}}),yh=Ws({movingAverage_:function(e,t,n,r,s=!0){const a=zs(e,"v","movingAverage"),o=zs(t,"x","movingAverage"),i=zs(n,"decay","movingAverage");var u,l;l=o,D((u=a).dtype===l.dtype,(()=>`The dtypes of the first(${u.dtype}) and second(${l.dtype}) input must match`)),D(z(a.shape,o.shape),(()=>"Shape mismatch in v and x"));const c=ho(1),h=wo(c,i);let d=oo(wo(o,a),h);if(s){D(null!=r,(()=>"When using zeroDebias: true, step is required."));const e=zs(r,"step","movingAverage");d=ao(d,wo(c,vo(i,e)))}return ro(a,d)}}),xh=Ws({scatterND_:function(e,t,n){ie(n);const r=zs(e,"indices","scatterND","int32"),s=zs(t,"updates","scatterND");rh(s,r,n);const a={indices:r,updates:s},o={shape:n};return As.runKernel(Rn,a,o)}}),bh=Ws({sparseToDense_:function(e,t,n,r=0){ie(n);const s=zs(e,"sparseIndices","sparseToDense","int32"),a=zs(t,"sparseValues","sparseToDense","string_or_numeric"),o=zs(r,"defaultValue","sparseToDense",a.dtype);!function(e,t,n,r){if("int32"!==e.dtype)throw new Error(`tf.sparseToDense() expects the indices to be int32 type, but the dtype was ${e.dtype}.`);if(e.rank>2)throw new Error(`sparseIndices should be a scalar, vector, or matrix, but got shape ${e.shape}.`);const s=e.rank>0?e.shape[0]:1,a=e.rank>1?e.shape[1]:1;if(n.length!==a)throw new Error(`outputShape has incorrect number of elements:, ${n.length}, should be: ${a}.`);const o=t.size;if(0!==t.rank&&(1!==t.rank||o!==s))throw new Error(`sparseValues has incorrect shape ${t.shape}, should be [] or [${s}]`);if(t.dtype!==r.dtype)throw new Error("sparseValues.dtype must match defaultValues.dtype")}(s,a,n,o);const i={sparseIndices:s,sparseValues:a,defaultValue:o},u={outputShape:n};return As.runKernel(Yn,i,u)}}),vh=Ws({gatherND_:function(e,t){const n=zs(t,"indices","gatherND","int32"),r={params:zs(e,"x","gatherND","string_or_numeric"),indices:n};return As.runKernel(Tt,r)}}),wh=Ws({dropout_:function(e,t,n,r){const s=zs(e,"x","dropout");if(D("float32"===s.dtype,(()=>`x has to be a floating point tensor since it's going to be scaled, but got a ${s.dtype} tensor instead.`)),D(t>=0&&t<1,(()=>`rate must be a float in the range [0, 1), but got ${t}.`)),0===t)return e instanceof ps?s.clone():s;const a=function(e,t){if(null==t)return e.shape.slice();if(z(e.shape,t))return t;if(e.shape.length===t.length){const n=[];for(let r=0;r<e.shape.length;r++)null==t[r]&&null!=e.shape[r]?n.push(e.shape[r]):n.push(t[r]);return n}return t}(s,n),o=1-t,i=ao(al(ro(mc(a,0,1,"float32",r),o)),o);return oo(s,i)}});function kh(e){return Math.floor(Math.pow(2,Math.ceil(Math.log(e)/Math.log(2))))}function Sh(e,t,n){const r=1-e%2,s=new Float32Array(e);for(let a=0;a<e;++a){const o=2*Math.PI*a/(e+r-1);s[a]=t-n*Math.cos(o)}return Qc(s,"float32")}const Ch=async function(e,t,n=1){const r=zs(e,"predictions","inTopK"),s=zs(t,"targets","inTopK");D(r.rank>1,(()=>`inTopK() expects the predictions to be of rank 2 or higher, but got ${r.rank}`)),D(r.rank-1===s.rank,(()=>`predictions rank should be 1 larger than targets rank, but got predictions rank ${r.rank} and targets rank ${s.rank}`)),M(r.shape.slice(0,r.shape.length-1),s.shape,"predictions's shape should be align with the targets' shape, except the last dimension.");const a=r.shape[r.shape.length-1];D(n>0&&n<=a,(()=>`'k' passed to inTopK() must be > 0 && <= the predictions last dimension (${a}), but got ${n}`));const o=await r.data(),i=await s.data(),[u,l]=[o.length/a,a],c=q("bool",u);for(let e=0;e<u;e++){const t=e*l,r=o.subarray(t,t+l),s=[];for(let e=0;e<r.length;e++)s.push({value:r[e],index:e});s.sort(((e,t)=>t.value-e.value)),c[e]=0;for(let t=0;t<n;t++)if(s[t].index===i[e]){c[e]=1;break}}return e!==r&&r.dispose(),t!==s&&s.dispose(),js(c,s.shape,"bool")},Ih=Ws({conv2DBackpropFilter_:function(e,t,n,r,s,a="NHWC",o){let i=e;3===e.rank&&(i=ji(e,[1,e.shape[0],e.shape[1],e.shape[2]]));let u=t;3===u.rank&&(u=ji(t,[1,t.shape[0],t.shape[1],t.shape[2]])),D(4===i.rank,(()=>`Error in conv2dDerFilter: input must be rank 4, but got shape ${i.shape}.`)),D(4===u.rank,(()=>`Error in conv2dDerFilter: dy must be rank 4, but got shape ${u.shape}.`)),D(4===n.length,(()=>`Error in conv2dDerFilter: filterShape must be length 4, but got ${n}.`));const l="NHWC"===a?i.shape[3]:i.shape[1],c="NHWC"===a?u.shape[3]:u.shape[1];D(l===n[2],(()=>`Error in conv2dDerFilter: depth of input ${l}) must match input depth in filter (${n[2]}.`)),D(c===n[3],(()=>`Error in conv2dDerFilter: depth of dy (${c}) must match output depth for filter (${n[3]}).`)),Hi("conv2dDerFilter",s,o);const h={x:i,dy:u},d={strides:r,pad:s,dataFormat:a,dimRoundingMode:o,filterShape:n};return As.runKernel(qe,h,d)}});function Th(e,t,n){if(null==n||"linear"===n)return e;if("relu"===n)return oo(e,qc(t));throw new Error(`Cannot compute gradient for fused activation ${n}.`)}function $h(e,t){let n=t;const r=Co(e.shape,t.shape);return r.length>0&&(n=Yu(n,r)),ji(n,e.shape)}function Nh(e,t,n,r){if("linear"===t)return e;if("relu"===t)return vc(e);if("elu"===t)return Mu(e);if("relu6"===t)return wc(e);if("prelu"===t)return nc(e,n);if("leakyrelu"===t)return pl(e,r);if("sigmoid"===t)return Qi(e);throw new Error(`Unknown fused activation ${t}.`)}const Eh=(e,t)=>!(e>0)||"linear"===t,Rh=Ws({fusedConv2d_:function({x:e,filter:t,strides:n,pad:r,dataFormat:s="NHWC",dilations:a=[1,1],dimRoundingMode:o,bias:i,activation:u="linear",preluActivationWeights:l,leakyreluAlpha:c}){if(u=u||"linear",!1===Eh(As.state.gradientDepth,u)){D("NHWC"===s,(()=>`Error in fused conv2d: got dataFormat of ${s} but only NHWC is currently supported for the case of gradient depth is 0 and the activation is not linear.`));let h=gu(e,t,n,r,s,a,o);return null!=i&&(h=ro(h,i)),Nh(h,u,l,c)}const h=zs(e,"x","conv2d","float32"),d=zs(t,"filter","conv2d","float32");let p=h,f=!1;3===h.rank&&(f=!0,p=ji(h,[1,h.shape[0],h.shape[1],h.shape[2]])),D(4===p.rank,(()=>`Error in fused conv2d: input must be rank 4, but got rank ${p.rank}.`)),D(4===d.rank,(()=>`Error in fused conv2d: filter must be rank 4, but got rank ${d.rank}.`)),Hi("fused conv2d",r,o);const m="NHWC"===s?p.shape[3]:p.shape[1];D(d.shape[2]===m,(()=>`Error in conv2d: depth of input (${m}) must match input depth for filter ${d.shape[2]}.`)),D(Vi(n,a),(()=>`Error in conv2D: Either strides or dilations must be 1. Got strides ${n} and dilations '${a}'`));const g=Fi(p.shape,d.shape,n,a,r,o);let y,x;if(null!=i&&(y=zs(i,"bias","fused conv2d"),[y]=Is(y,h),"NHWC"===s?Io(g.outShape,y.shape):(D(y.shape.length<=1,(()=>`Error in fused conv2d: only supports scalar or 1-D Tensor bias for NCHW format but got the bias of rank-${y.shape.length}.`)),D(0===y.shape.length||y.shape[0]===g.outChannels||1===y.shape[0],(()=>`Error in fused conv2d: bias shape (${y.shape}) is not compatible with the number of output channels (${g.outChannels})`)))),null!=l){const e=l.shape;if(D(e.length<=1||3===e.length,(()=>`Error in fused conv2d: only supports scalar, 1-D Tensor or 3-D Tensor PReLU activation weights but got a tensor of rank-${e.length}.`)),1===e.length)D(1===e[0]||e[0]===g.outChannels,(()=>`Error in fused conv2d: PReLU activation weights (${e}) is not compatible with the number of output channels (${g.outChannels}).`));else if(3===e.length)try{Io(e,g.outShape)}catch(t){const n=`Error in fused conv2d: PReLU activation weights (${e}) is not compatible with the output shape of the conv2d (${g.outShape}).`;throw Error(n)}x=zs(l,"prelu weights","fused conv2d")}const b=(e,t)=>{D("NHWC"===s,(()=>`Error in gradient of fused conv2D: got dataFormat of ${s} but only NHWC is currently supported.`));const[o,i,l,c]=t,h=Th(e,l,u);D(Ui(a),(()=>`Error in gradient of fused conv2D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${a}'`));const d=[xu(i.shape,h,o,n,r),Ih(i,h,o.shape,n,r)];if(null!=c){const e=$h(c,h);d.push(e)}return d},v={x:p,filter:d,bias:y,preluActivationWeights:x},w={strides:n,pad:r,dataFormat:s,dilations:a,dimRoundingMode:o,activation:u,leakyreluAlpha:c};if(null==i){const e=co(((e,t,n)=>{let r=As.runKernel(br,v,w);return n([t,e,r]),f&&(r=ji(r,[r.shape[1],r.shape[2],r.shape[3]])),{value:r,gradFunc:b}}));return e(p,d)}{const e=co(((e,t,n,r)=>{let s=As.runKernel(br,v,w);return r([t,e,s,n]),f&&(s=ji(s,[s.shape[1],s.shape[2],s.shape[3]])),{value:s,gradFunc:b}}));return e(p,d,y)}}}),_h=Ws({depthwiseConv2dNativeBackpropFilter_:function(e,t,n,r,s,a=[1,1],o){let i=e;3===e.rank&&(i=ji(e,[1,e.shape[0],e.shape[1],e.shape[2]]));let u=t;3===u.rank&&(u=ji(t,[1,t.shape[0],t.shape[1],t.shape[2]]));const l={x:i,dy:u},c={strides:r,pad:s,dimRoundingMode:o,dilations:a,filterShape:n};return As.runKernel(ot,l,c)}}),Ah=Ws({depthwiseConv2dNativeBackpropInput_:function(e,t,n,r,s,a=[1,1],o){let i=t,u=!1;3===t.rank&&(u=!0,i=ji(t,[1,t.shape[0],t.shape[1],t.shape[2]]));const l={dy:i,filter:n},c={strides:r,pad:s,dimRoundingMode:o,dilations:a,inputShape:e},h=As.runKernel(it,l,c);return u?ji(h,[h.shape[1],h.shape[2],h.shape[3]]):h}}),Oh=Ws({fusedDepthwiseConv2d_:function({x:e,filter:t,strides:n,pad:r,dataFormat:s="NHWC",dilations:a=[1,1],dimRoundingMode:o,bias:i,activation:u="linear",preluActivationWeights:l,leakyreluAlpha:c}){if(!1===Eh(As.state.gradientDepth,u)){let h=Eu(e,t,n,r,s,a,o);return null!=i&&(h=ro(h,i)),Nh(h,u,l,c)}const h=zs(e,"x","depthwiseConv2d","float32"),d=zs(t,"filter","depthwiseConv2d","float32");let p=h,f=!1;3===h.rank&&(f=!0,p=ji(h,[1,h.shape[0],h.shape[1],h.shape[2]])),D(4===p.rank,(()=>`Error in fused depthwiseConv2d: input must be rank 4, but got rank ${p.rank}.`)),D(4===d.rank,(()=>`Error in fused depthwiseConv2d: filter must be rank 4, but got rank ${d.rank}.`)),D(p.shape[3]===d.shape[2],(()=>`Error in fused depthwiseConv2d: number of input channels (${p.shape[3]}) must match the inChannels dimension in filter ${d.shape[2]}.`)),null==a&&(a=[1,1]),D(Vi(n,a),(()=>`Error in fused depthwiseConv2d: Either strides or dilations must be 1. Got strides ${n} and dilations '${a}'`)),Hi("fused depthwiseConv2d",r,o);const m=Fi(p.shape,d.shape,n,a,r,o,!0);let g,y;null!=i&&(g=zs(i,"bias","fused conv2d"),[g]=Is(g,h),Io(m.outShape,g.shape)),null!=l&&(y=zs(l,"prelu weights","fused depthwiseConv2d"));const x=(e,t)=>{D(Ui(a),(()=>`Error in gradient of fused depthwiseConv2d: dilation rates greater than 1 are not yet supported. Got dilations '${a}'`));const[s,i,l,c]=t,h=Th(e,l,u),d=Ah(i.shape,h,s,n,r,a,o),p=_h(i,h,s.shape,n,r,a,o);return null!=c?[d,p,$h(g,h)]:[d,p]},b={x:p,filter:d,bias:g,preluActivationWeights:y},v={strides:n,pad:r,dataFormat:s,dilations:a,dimRoundingMode:o,activation:u,leakyreluAlpha:c};if(null==i){const e=co(((e,t,n)=>{let r=As.runKernel(vr,b,v);return n([t,e,r]),f&&(r=ji(r,[r.shape[1],r.shape[2],r.shape[3]])),{value:r,gradFunc:x}}));return e(p,d)}{const e=co(((e,t,n,r)=>{let s=As.runKernel(vr,b,v);return r([t,e,s,n]),f&&(s=ji(s,[s.shape[1],s.shape[2],s.shape[3]])),{value:s,gradFunc:x}}));return e(p,d,g)}}}),Fh=Ws({fusedMatMul_:function({a:e,b:t,transposeA:n=!1,transposeB:r=!1,bias:s,activation:a="linear",preluActivationWeights:o,leakyreluAlpha:i=.2}){if(!1===Eh(As.state.gradientDepth,a)){let u=Yi(e,t,n,r);return null!=s&&(u=ro(u,s)),Nh(u,a,o,i)}let u=zs(e,"a","fused matMul"),l=zs(t,"b","fused matMul");[u,l]=Is(u,l);const c=n?u.shape[u.rank-2]:u.shape[u.rank-1],h=r?l.shape[l.rank-1]:l.shape[l.rank-2],d=n?u.shape[u.rank-1]:u.shape[u.rank-2],p=r?l.shape[l.rank-2]:l.shape[l.rank-1],f=u.shape.slice(0,-2),m=l.shape.slice(0,-2),g=B(f),y=B(m);D(c===h,(()=>`Error in fused matMul: inner shapes (${c}) and (${h}) of Tensors with shapes ${u.shape} and ${l.shape} and transposeA=${n} and transposeB=${r} must match.`));const x=Io(u.shape.slice(0,-2),l.shape.slice(0,-2)).concat([d,p]),b=ji(u,n?[g,c,d]:[g,d,c]),v=ji(l,r?[y,p,h]:[y,h,p]);let w,k;null!=s&&(w=zs(s,"bias","fused matMul"),[w]=Is(w,u),Io(x,w.shape)),null!=o&&(k=zs(o,"prelu weights","fused matMul"));const S=(e,t)=>{const[o,i,u,l]=t,c=Th(ji(e,u.shape),u,a);let h,d;return n||r?!n&&r?(h=Yi(c,i,!1,!1),d=Yi(c,o,!0,!1)):n&&!r?(h=Yi(i,c,!1,!0),d=Yi(o,c,!1,!1)):(h=Yi(i,c,!0,!0),d=Yi(c,o,!0,!0)):(h=Yi(c,i,!1,!0),d=Yi(o,c,!0,!1)),null!=s?[h,d,$h(l,c)]:[h,d]},C={a:b,b:v,bias:w,preluActivationWeights:k},I={transposeA:n,transposeB:r,activation:a,leakyreluAlpha:i};if(null==s){const e=co(((e,t,n)=>{const r=As.runKernel(xr,C,I);return n([e,t,r]),{value:ji(r,x),gradFunc:S}}));return e(b,v)}{const e=co(((e,t,n,r)=>{const s=As.runKernel(xr,C,I);return r([e,t,s,n]),{value:ji(s,x),gradFunc:S}}));return e(b,v,w)}}}),Ph=Ws({hammingWindow_:function(e){return Sh(e,.54,.46)}}),Dh=Ws({hannWindow_:function(e){return Sh(e,.5,.5)}}),Mh=Ws({frame_:function(e,t,n,r=!1,s=0){let a=0;const o=[];for(;a+t<=e.size;)o.push(Zi(e,a,t)),a+=n;if(r)for(;a<e.size;){const r=a+t-e.size,i=Xi([Zi(e,a,t-r),bo([r],s)]);o.push(i),a+=n}return 0===o.length?Zc([],[0,t]):ji(Xi(o),[o.length,t])}}),Lh=Ws({stft_:function(e,t,n,r,s=Dh){null==r&&(r=kh(t));const a=Mh(e,t,n),o=oo(a,s(t));return Gc(o,r)}}),Bh=Ws({cropAndResize_:function(e,t,n,r,s="bilinear",a=0){const o=zs(e,"image","cropAndResize"),i=zs(t,"boxes","cropAndResize","float32"),u=zs(n,"boxInd","cropAndResize","int32"),l=i.shape[0];D(4===o.rank,(()=>`Error in cropAndResize: image must be rank 4,but got rank ${o.rank}.`)),D(2===i.rank&&4===i.shape[1],(()=>`Error in cropAndResize: boxes must be have size [${l},4] but had shape ${i.shape}.`)),D(1===u.rank&&u.shape[0]===l,(()=>`Error in cropAndResize: boxInd must be have size [${l}] but had shape ${i.shape}.`)),D(2===r.length,(()=>`Error in cropAndResize: cropSize must be of length 2, but got length ${r.length}.`)),D(r[0]>=1&&r[1]>=1,(()=>`cropSize must be atleast [1,1], but was ${r}`)),D("bilinear"===s||"nearest"===s,(()=>`method must be bilinear or nearest, but was ${s}`));const c={image:o,boxes:i,boxInd:u},h={method:s,extrapolationValue:a,cropSize:r};return As.runKernel(nt,c,h)}}),zh=Ws({flipLeftRight_:function(e){const t=zs(e,"image","flipLeftRight","float32");D(4===t.rank,(()=>`Error in flipLeftRight: image must be rank 4,but got rank ${t.rank}.`));const n={image:t};return As.runKernel(wt,n,{})}}),Uh=Ws({grayscaleToRGB_:function(e){const t=zs(e,"image","grayscaleToRGB"),n=t.rank-1,r=t.shape[n];D(t.rank>=2,(()=>`Error in grayscaleToRGB: images must be at least rank 2, but got rank ${t.rank}.`)),D(1===r,(()=>`Error in grayscaleToRGB: last dimension of a grayscale image should be size 1, but got size ${r}.`));const s=new Array(t.rank);return s.fill(1,0,n),s[n]=3,rl(t,s)}}),Vh=Ws({rotateWithOffset_:function(e,t,n=0,r=.5){const s=zs(e,"image","rotateWithOffset","float32");D(4===s.rank,(()=>`Error in rotateWithOffset: image must be rank 4,but got rank ${s.rank}.`));const a={image:s},o={radians:t,fillValue:n,center:r};return As.runKernel(yr,a,o)}});function Wh(e,t,n,r,s,a){null==r&&(r=.5),null==s&&(s=Number.NEGATIVE_INFINITY),null==a&&(a=0);const o=e.shape[0];return n=Math.min(n,o),D(0<=r&&r<=1,(()=>`iouThreshold must be in [0, 1], but was '${r}'`)),D(2===e.rank,(()=>`boxes must be a 2D tensor, but was of rank '${e.rank}'`)),D(4===e.shape[1],(()=>`boxes must have 4 columns, but 2nd dimension was ${e.shape[1]}`)),D(1===t.rank,(()=>"scores must be a 1D tensor")),D(t.shape[0]===o,(()=>`scores has incompatible shape with boxes. Expected ${o}, but was ${t.shape[0]}`)),D(0<=a&&a<=1,(()=>`softNmsSigma must be in [0, 1], but was '${a}'`)),{maxOutputSize:n,iouThreshold:r,scoreThreshold:s,softNmsSigma:a}}const Gh=Ws({nonMaxSuppression_:function(e,t,n,r=.5,s=Number.NEGATIVE_INFINITY){const a=zs(e,"boxes","nonMaxSuppression","float32"),o=zs(t,"scores","nonMaxSuppression","float32"),i=Wh(a,o,n,r,s),u={maxOutputSize:n=i.maxOutputSize,iouThreshold:r=i.iouThreshold,scoreThreshold:s=i.scoreThreshold};return As.runKernel(an,{boxes:a,scores:o},u)}});function Hh(e,t,n){const r=function(e,t,n){return function(e,t,n){let r=0,s=e.length,a=0,o=!1;for(;r<s;){a=r+(s-r>>>1);const i=n(t,e[a]);i>0?r=a+1:(s=a,o=!i)}return o?r:-r-1}(e,t,n||jh)}(e,t,n),s=r<0?-(r+1):r;e.splice(s,0,t)}function jh(e,t){return e>t?1:e<t?-1:0}function Kh(e,t,n,r,s){return Yh(e,t,n,r,s,0)}function qh(e,t,n,r,s,a){return Yh(e,t,n,r,s,0,!1,a,!0)}function Xh(e,t,n,r,s,a){return Yh(e,t,n,r,s,a,!0)}function Yh(e,t,n,r,s,a,o=!1,i=!1,u=!1){const l=[];for(let e=0;e<t.length;e++)t[e]>s&&l.push({score:t[e],boxIndex:e,suppressBeginIndex:0});l.sort(Jh);const c=a>0?-.5/a:0,h=[],d=[];for(;h.length<n&&l.length>0;){const t=l.pop(),{score:n,boxIndex:a,suppressBeginIndex:o}=t;if(n<s)break;let i=!1;for(let n=h.length-1;n>=o;--n){const o=Qh(e,a,h[n]);if(o>=r){i=!0;break}if(t.score=t.score*Zh(r,c,o),t.score<=s)break}t.suppressBeginIndex=h.length,i||(t.score===n?(h.push(a),d.push(t.score)):t.score>s&&Hh(l,t,Jh))}const p=h.length,f=n-p;i&&f>0&&(h.push(...new Array(f).fill(0)),d.push(...new Array(f).fill(0)));const m={selectedIndices:h};return o&&(m.selectedScores=d),u&&(m.validOutputs=p),m}function Qh(e,t,n){const r=e.subarray(4*t,4*t+4),s=e.subarray(4*n,4*n+4),a=Math.min(r[0],r[2]),o=Math.min(r[1],r[3]),i=Math.max(r[0],r[2]),u=Math.max(r[1],r[3]),l=Math.min(s[0],s[2]),c=Math.min(s[1],s[3]),h=Math.max(s[0],s[2]),d=Math.max(s[1],s[3]),p=(i-a)*(u-o),f=(h-l)*(d-c);if(p<=0||f<=0)return 0;const m=Math.max(a,l),g=Math.max(o,c),y=Math.min(i,h),x=Math.min(u,d),b=Math.max(y-m,0)*Math.max(x-g,0);return b/(p+f-b)}function Zh(e,t,n){const r=Math.exp(t*n*n);return n<=e?r:0}function Jh(e,t){return e.score-t.score||e.score===t.score&&t.boxIndex-e.boxIndex}const ed=Ws({nonMaxSuppressionWithScore_:function(e,t,n,r=.5,s=Number.NEGATIVE_INFINITY,a=0){const o=zs(e,"boxes","nonMaxSuppression"),i=zs(t,"scores","nonMaxSuppression"),u=Wh(o,i,n,r,s,a),l={boxes:o,scores:i},c={maxOutputSize:n=u.maxOutputSize,iouThreshold:r=u.iouThreshold,scoreThreshold:s=u.scoreThreshold,softNmsSigma:a=u.softNmsSigma},h=As.runKernel(un,l,c);return{selectedIndices:h[0],selectedScores:h[1]}}}),td=Ws({nonMaxSuppressionPadded_:function(e,t,n,r=.5,s=Number.NEGATIVE_INFINITY,a=!1){const o=zs(e,"boxes","nonMaxSuppression"),i=zs(t,"scores","nonMaxSuppression"),u=Wh(o,i,n,r,s,null),l={boxes:o,scores:i},c={maxOutputSize:u.maxOutputSize,iouThreshold:u.iouThreshold,scoreThreshold:u.scoreThreshold,padToMaxOutputSize:a},h=As.runKernel(on,l,c);return{selectedIndices:h[0],validOutputs:h[1]}}}),nd=Ws({resizeBilinear_:function(e,t,n=!1,r=!1){const s=zs(e,"images","resizeBilinear");D(3===s.rank||4===s.rank,(()=>`Error in resizeBilinear: x must be rank 3 or 4, but got rank ${s.rank}.`)),D(2===t.length,(()=>`Error in resizeBilinear: new shape must 2D, but got shape ${t}.`)),D(!1===r||!1===n,(()=>"Error in resizeBilinear: If halfPixelCenters is true, alignCorners must be false."));let a=s,o=!1;3===s.rank&&(o=!0,a=ji(s,[1,s.shape[0],s.shape[1],s.shape[2]]));const[]=t,i={images:a},u={alignCorners:n,halfPixelCenters:r,size:t},l=As.runKernel(In,i,u);return o?ji(l,[l.shape[1],l.shape[2],l.shape[3]]):l}}),rd=Ws({resizeNearestNeighbor_:function(e,t,n=!1,r=!1){const s=zs(e,"images","resizeNearestNeighbor");D(3===s.rank||4===s.rank,(()=>`Error in resizeNearestNeighbor: x must be rank 3 or 4, but got rank ${s.rank}.`)),D(2===t.length,(()=>`Error in resizeNearestNeighbor: new shape must 2D, but got shape ${t}.`)),D("float32"===s.dtype||"int32"===s.dtype,(()=>"`images` must have `int32` or `float32` as dtype")),D(!1===r||!1===n,(()=>"Error in resizeNearestNeighbor: If halfPixelCenters is true, alignCorners must be false."));let a=s,o=!1;3===s.rank&&(o=!0,a=ji(s,[1,s.shape[0],s.shape[1],s.shape[2]]));const[]=t,i={images:a},u={alignCorners:n,halfPixelCenters:r,size:t},l=As.runKernel(Cn,i,u);return o?ji(l,[l.shape[1],l.shape[2],l.shape[3]]):l}}),sd=Ws({threshold_:function(e,t="binary",n=!1,r=.5){const s=zs(e,"image","threshold"),a=s.shape[0]*s.shape[1];let o,i,u,l,c=oo(Qc([r]),255);if(D(3===s.rank,(()=>`Error in threshold: image must be rank 3,but got rank ${s.rank}.`)),D(3===s.shape[2]||1===s.shape[2],(()=>`Error in threshold: image color channel must be equal to 3 or 1but got ${s.shape[2]}.`)),D("int32"===s.dtype||"float32"===s.dtype,(()=>`Error in dtype: image dtype must be int32 or float32,but got dtype ${s.dtype}.`)),D("otsu"===t||"binary"===t,(()=>`Method must be binary or otsu, but was ${t}`)),3===s.shape[2]){[o,i,u]=Wc(s,[1,1,1],-1);const e=oo(o,.2989),t=oo(i,.587),n=oo(u,.114);l=ro(ro(e,t),n)}else l=e;"otsu"===t&&(c=function(e,t){let n,r,s,a,o,i,u=Qc([-1]),l=Qc([0]),c=Qc([0]);for(let h=0;h<e.size-1;h++){n=Zi(e,0,h+1),r=Zi(e,h+1),o=ao(Yu(n),t),i=ao(Yu(r),t);const d=Yu(oo(n,yc(0,n.size)));s=ao(d,Yu(n));const p=bo(r.shape,n.size),f=ro(yc(0,r.size),p),m=oo(r,f);a=ao(Yu(m),Yu(r));const g=wo(s,a),y=wo(s,a),x=oo(o,i);c=oo(oo(x,g),y);const b=il(c,l);l=Ou(b,c,l),u=Ou(b,Qc([h]),u)}return u}(ou(ja($c(l),"int32"),js([]),256),a));const h=n?ml(l,c):il(l,c);return ja(oo(h,255),"int32")}}),ad=Ws({transform_:function(e,t,n="nearest",r="constant",s=0,a){const o=zs(e,"image","transform","float32"),i=zs(t,"transforms","transform","float32");D(4===o.rank,(()=>`Error in transform: image must be rank 4,but got rank ${o.rank}.`)),D(2===i.rank&&(i.shape[0]===o.shape[0]||1===i.shape[0])&&8===i.shape[1],(()=>"Error in transform: Input transform should be batch x 8 or 1 x 8")),D(null==a||2===a.length,(()=>`Error in transform: outputShape must be [height, width] or null, but got ${a}.`));const u={image:o,transforms:i},l={interpolation:n,fillMode:r,fillValue:s,outputShape:a};return As.runKernel(lr,u,l)}}),od=Ws({bandPart_:function(e,t,n){const r=zs(e,"a","bandPart");D(r.rank>=2,(()=>`bandPart(): Rank must be at least 2, got ${r.rank}.`));const s=r.shape,[a,o]=r.shape.slice(-2);let i,u;"number"==typeof t?(D(t%1==0,(()=>`bandPart(): numLower must be an integer, got ${t}.`)),D(t<=a,(()=>`bandPart(): numLower (${t}) must not be greater than the number of rows (${a}).`)),i=zs(t<0?a:t,"numLower","bandPart")):(D("int32"===t.dtype,(()=>"bandPart(): numLower's dtype must be an int32.")),i=Ou(fl(t,0),a,Bl(t,a))),"number"==typeof n?(D(n%1==0,(()=>`bandPart(): numUpper must be an integer, got ${n}.`)),D(n<=o,(()=>`bandPart(): numUpper (${n}) must not be greater than the number of columns (${o}).`)),u=zs(n<0?o:n,"numUpper","bandPart")):(D("int32"===n.dtype,(()=>"bandPart(): numUpper's dtype must be an int32.")),u=Ou(fl(n,0),o,Bl(n,o)));const l=ji(yc(0,a,1,"int32"),[-1,1]),c=yc(0,o,1,"int32"),h=wo(l,c),d=Il(ml(h,i),ul(h,vl(u))),p=Dl([a,o],r.dtype);return ji(Kc(ch(ji(r,[-1,a,o])).map((e=>Ou(d,e,p)))),s)}}),id=Ws({gramSchmidt_:function(e){let t;if(Array.isArray(e)){t=!1,D(null!=e&&e.length>0,(()=>"Gram-Schmidt process: input must not be null, undefined, or empty"));const n=e[0].shape[0];for(let t=1;t<e.length;++t)D(e[t].shape[0]===n,(()=>`Gram-Schmidt: Non-unique lengths found in the input vectors: (${e[t].shape[0]} vs. ${n})`))}else t=!0,e=Wc(e,e.shape[0],0).map((e=>jc(e,[0])));D(e.length<=e[0].shape[0],(()=>`Gram-Schmidt: Number of vectors (${e.length}) exceeds number of dimensions (${e[0].shape[0]}).`));const n=[],r=e;for(let t=0;t<e.length;++t)n.push(As.tidy((()=>{let e=r[t];if(t>0)for(let r=0;r<t;++r){const t=oo(Yu(oo(n[r],e)),n[r]);e=wo(e,t)}return ao(e,Zu(e,"euclidean"))})));return t?Kc(n,0):n}});function ud(e,t=!1){return As.tidy((()=>{D(2===e.shape.length,(()=>`qr2d() requires a 2D Tensor, but got a ${e.shape.length}D Tensor.`));const n=e.shape[0],r=e.shape[1];let s=sl(n),a=Ka(e);const o=Zc([[1]],[1,1]);let i=Ka(o);const u=n>=r?r:n;for(let e=0;e<u;++e){const t=a,u=i,l=s;[i,a,s]=As.tidy((()=>{const t=Zi(a,[e,e],[n-e,1]),u=Zu(t),l=Zi(a,[e,e],[1,1]),c=Ou(il(l,0),Zc([[-1]]),Zc([[1]])),h=wo(l,oo(c,u)),d=ao(t,h);i=1===d.shape[0]?Ka(o):Xi([o,Zi(d,[1,0],[d.shape[0]-1,d.shape[1]])],0);const p=vl(ao(Yi(c,h),u)),f=Zi(a,[e,0],[n-e,r]),m=oo(p,i),g=gh(i);if(0===e)a=wo(f,Yi(m,Yi(g,f)));else{const t=wo(f,Yi(m,Yi(g,f)));a=Xi([Zi(a,[0,0],[e,r]),t],0)}const y=gh(m),x=Zi(s,[0,e],[n,s.shape[1]-e]);if(0===e)s=wo(x,Yi(Yi(x,i),y));else{const t=wo(x,Yi(Yi(x,i),y));s=Xi([Zi(s,[0,0],[n,e]),t],1)}return[i,a,s]})),Qa([t,u,l])}return!t&&n>r&&(s=Zi(s,[0,0],[n,r]),a=Zi(a,[0,0],[r,r])),[s,a]}))}const ld=Ws({qr_:function(e,t=!1){if(D(e.rank>=2,(()=>`qr() requires input tensor to have a rank >= 2, but got rank ${e.rank}`)),2===e.rank)return ud(e,t);{const n=e.shape.slice(0,e.shape.length-2).reduce(((e,t)=>e*t)),r=ch(ji(e,[n,e.shape[e.shape.length-2],e.shape[e.shape.length-1]]),0),s=[],a=[];return r.forEach((e=>{const[n,r]=ud(e,t);s.push(n),a.push(r)})),[ji(Kc(s,0),e.shape),ji(Kc(a,0),e.shape)]}}});var cd;!function(e){e[e.NONE=0]="NONE",e[e.MEAN=1]="MEAN",e[e.SUM=2]="SUM",e[e.SUM_BY_NONZERO_WEIGHTS=3]="SUM_BY_NONZERO_WEIGHTS"}(cd||(cd={}));const hd=Ws({computeWeightedLoss_:function(e,t,n=cd.SUM_BY_NONZERO_WEIGHTS){const r=zs(e,"losses","computeWeightedLoss");let s=null;null!=t&&(s=zs(t,"weights","computeWeightedLoss"));const a=null==s?r:oo(r,s);if(n===cd.NONE)return a;if(n===cd.SUM)return Yu(a);if(n===cd.MEAN){if(null==s)return Pl(a);{const e=r.size/s.size,t=ao(Yu(a),Yu(s));return e>1?ao(t,ho(e)):t}}if(n===cd.SUM_BY_NONZERO_WEIGHTS){if(null==s)return ao(Yu(a),ho(r.size));{const e=oo(s,Ml(r.shape)),t=ja(Yu(Hl(e,ho(0))),"float32");return ao(Yu(a),t)}}throw Error(`Unknown reduction: ${n}`)}}),dd=Ws({absoluteDifference_:function(e,t,n,r=cd.SUM_BY_NONZERO_WEIGHTS){const s=zs(e,"labels","absoluteDifference"),a=zs(t,"predictions","absoluteDifference");let o=null;null!=n&&(o=zs(n,"weights","absoluteDifference")),M(s.shape,a.shape,"Error in absoluteDifference: ");const i=ko(wo(s,a));return hd(i,o,r)}}),pd=Ws({cosineDistance_:function(e,t,n,r,s=cd.SUM_BY_NONZERO_WEIGHTS){const a=zs(e,"labels","cosineDistance"),o=zs(t,"predictions","cosineDistance");let i=null;null!=r&&(i=zs(r,"weights","cosineDistance")),M(a.shape,o.shape,"Error in cosineDistance: ");const u=ho(1),l=wo(u,Yu(oo(a,o),n,!0));return hd(l,i,s)}}),fd=Ws({hingeLoss_:function(e,t,n,r=cd.SUM_BY_NONZERO_WEIGHTS){let s=zs(e,"labels","hingeLoss");const a=zs(t,"predictions","hingeLoss");let o=null;null!=n&&(o=zs(n,"weights","hingeLoss")),M(s.shape,a.shape,"Error in hingeLoss: ");const i=ho(1);s=wo(oo(ho(2),s),i);const u=vc(wo(i,oo(s,a)));return hd(u,o,r)}}),md=Ws({huberLoss_:function(e,t,n,r=1,s=cd.SUM_BY_NONZERO_WEIGHTS){const a=zs(e,"labels","huberLoss"),o=zs(t,"predictions","huberLoss");let i=null;null!=n&&(i=zs(n,"weights","huberLoss")),M(a.shape,o.shape,"Error in huberLoss: ");const u=ho(r),l=ko(wo(o,a)),c=Bl(l,u),h=wo(l,c),d=ro(oo(ho(.5),uo(c)),oo(u,h));return hd(d,i,s)}}),gd=Ws({logLoss_:function(e,t,n,r=1e-7,s=cd.SUM_BY_NONZERO_WEIGHTS){const a=zs(e,"labels","logLoss"),o=zs(t,"predictions","logLoss");let i=null;null!=n&&(i=zs(n,"weights","logLoss")),M(a.shape,o.shape,"Error in logLoss: ");const u=ho(1),l=ho(r),c=vl(oo(a,xl(ro(o,l)))),h=oo(wo(u,a),xl(ro(wo(u,o),l))),d=wo(c,h);return hd(d,i,s)}}),yd=Ws({meanSquaredError_:function(e,t,n,r=cd.SUM_BY_NONZERO_WEIGHTS){const s=zs(e,"labels","meanSquaredError"),a=zs(t,"predictions","meanSquaredError");let o=null;null!=n&&(o=zs(n,"weights","meanSquaredError")),M(s.shape,a.shape,"Error in meanSquaredError: ");const i=Hc(s,a);return hd(i,o,r)}}),xd=Ws({sigmoidCrossEntropy_:function(e,t,n,r=0,s=cd.SUM_BY_NONZERO_WEIGHTS){let a=zs(e,"multiClassLabels","sigmoidCrossEntropy");const o=zs(t,"logits","sigmoidCrossEntropy");let i=null;if(null!=n&&(i=zs(n,"weights","sigmoidCrossEntropy")),M(a.shape,o.shape,"Error in sigmoidCrossEntropy: "),r>0){const e=ho(r),t=ho(1),n=ho(.5);a=ro(oo(a,wo(t,e)),oo(n,e))}const u=function(e,t){const n=zs(e,"labels","sigmoidCrossEntropyWithLogits"),r=zs(t,"logits","sigmoidCrossEntropyWithLogits");M(n.shape,r.shape,"Error in sigmoidCrossEntropyWithLogits: ");const s=vc(r),a=oo(r,n),o=bl(el(vl(ko(r))));return ro(wo(s,a),o)}(a,o);return hd(u,i,s)}}),bd=Ws({softmaxCrossEntropy_:function(e,t,n,r=0,s=cd.SUM_BY_NONZERO_WEIGHTS){let a=zs(e,"onehotLabels","softmaxCrossEntropy");const o=zs(t,"logits","softmaxCrossEntropy");let i=null;if(null!=n&&(i=zs(n,"weights","softmaxCrossEntropy")),M(a.shape,o.shape,"Error in softmaxCrossEntropy: "),r>0){const e=ho(r),t=ho(1),n=ho(a.shape[1]);a=ro(oo(a,wo(t,e)),ao(e,n))}const u=function(e,t,n=-1){if(-1===n&&(n=t.rank-1),n!==t.rank-1)throw Error(`Softmax cross entropy along a non-last dimension is not yet supported. Labels / logits was rank ${t.rank} and dim was ${n}`);const r=co(((e,t,r)=>{const s=Cl(t,[n],!0),a=wo(ja(t,"float32"),s);r([e,a]);const o=vl(oo(a,e));return{value:Yu(o,[n]),gradFunc:(e,t)=>{const[r,s]=t,a=Wu(e.shape,[n]);return[oo(ji(e,a),wo(ja(r,"float32"),el(s))),oo(ji(e,a),wo(el(s),ja(r,"float32")))]}}}));return r(e,t)}(a,o);return hd(u,i,s)}}),vd=Ws({sparseFillEmptyRows_:function(e,t,n,r){const s=zs(e,"indices","sparseFillEmptyRows","int32"),a=zs(t,"values","sparseFillEmptyRows"),o=zs(n,"denseShape","sparseFillEmptyRows","int32"),i=zs(r,"defaultValue","sparseFillEmptyRows",a.dtype);if(2!==s.rank)throw new Error(`Indices should be Tensor2D but received shape\n        ${s.shape}`);if(1!==a.rank)throw new Error(`Values should be Tensor1D but received shape ${a.shape}`);if(1!==o.rank)throw new Error(`Dense shape should be Tensor1D but received shape ${o.shape}`);if(0!==i.rank)throw new Error(`Default value should be a scalar but received shape ${i.shape}`);const u={indices:s,values:a,denseShape:o,defaultValue:i},l=As.runKernel(jn,u);return{outputIndices:l[0],outputValues:l[1],emptyRowIndicator:l[2],reverseIndexMap:l[3]}}}),wd=Ws({sparseReshape_:function(e,t,n){const r=zs(e,"inputIndices","sparseReshape","int32"),s=zs(t,"inputShape","sparseReshape","int32"),a=zs(n,"newShape","sparseReshape","int32");if(2!==r.rank)throw new Error(`Input indices should be Tensor2D but received shape\n        ${r.shape}`);if(1!==s.rank)throw new Error(`Input shape should be Tensor1D but received shape ${s.shape}`);if(1!==a.rank)throw new Error(`New shape should be Tensor1D but received shape ${a.shape}`);const o={inputIndices:r,inputShape:s,newShape:a},i=As.runKernel(Kn,o);return{outputIndices:i[0],outputShape:i[1]}}}),kd=Ws({sparseSegmentMean_:function(e,t,n){const r=zs(e,"data","sparseSegmentMean"),s=zs(t,"indices","sparseSegmentMean","int32"),a=zs(n,"segmentIds","sparseSegmentMean","int32");if(r.rank<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(1!==s.rank)throw new Error(`Indices should be Tensor1D but received shape\n          ${s.shape}`);if(1!==a.rank)throw new Error(`Segment ids should be Tensor1D but received shape\n          ${a.shape}`);const o={data:r,indices:s,segmentIds:a};return As.runKernel(qn,o)}}),Sd=Ws({sparseSegmentSum_:function(e,t,n){const r=zs(e,"data","sparseSegmentSum"),s=zs(t,"indices","sparseSegmentSum","int32"),a=zs(n,"segmentIds","sparseSegmentSum","int32");if(r.rank<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(1!==s.rank)throw new Error(`Indices should be Tensor1D but received shape\n         ${s.shape}`);if(1!==a.rank)throw new Error(`Segment ids should be Tensor1D but received shape\n         ${a.shape}`);const o={data:r,indices:s,segmentIds:a};return As.runKernel(Xn,o)}}),Cd=Ws({stringNGrams_:function(e,t,n,r,s,a,o,i){const u=zs(e,"data","stringNGrams","string");if("string"!==u.dtype)throw new Error("Data must be of datatype string");if(1!==u.shape.length)throw new Error(`Data must be a vector, saw: ${u.shape}`);const l=zs(t,"dataSplits","stringNGrams");if("int32"!==l.dtype)throw new Error("Data splits must be of datatype int32");const c={separator:n,nGramWidths:r,leftPad:s,rightPad:a,padWidth:o,preserveShortSequences:i},h={data:u,dataSplits:l},d=As.runKernel(tr,h,c);return{nGrams:d[0],nGramsSplits:d[1]}}}),Id={fft:zc,ifft:Uc,rfft:Gc,irfft:Vc},Td={hammingWindow:Ph,hannWindow:Dh,frame:Mh,stft:Lh},$d={flipLeftRight:zh,grayscaleToRGB:Uh,resizeNearestNeighbor:rd,resizeBilinear:nd,rotateWithOffset:Vh,cropAndResize:Bh,nonMaxSuppression:Gh,nonMaxSuppressionAsync:async function(e,t,n,r=.5,s=Number.NEGATIVE_INFINITY){const a=zs(e,"boxes","nonMaxSuppressionAsync"),o=zs(t,"scores","nonMaxSuppressionAsync"),i=Wh(a,o,n,r,s);n=i.maxOutputSize,r=i.iouThreshold,s=i.scoreThreshold;const u=await Promise.all([a.data(),o.data()]),l=u[0],c=u[1],{selectedIndices:h}=Kh(l,c,n,r,s);return a!==e&&a.dispose(),o!==t&&o.dispose(),Qc(h,"int32")},nonMaxSuppressionWithScore:ed,nonMaxSuppressionWithScoreAsync:async function(e,t,n,r=.5,s=Number.NEGATIVE_INFINITY,a=0){const o=zs(e,"boxes","nonMaxSuppressionAsync"),i=zs(t,"scores","nonMaxSuppressionAsync"),u=Wh(o,i,n,r,s,a);n=u.maxOutputSize,r=u.iouThreshold,s=u.scoreThreshold,a=u.softNmsSigma;const l=await Promise.all([o.data(),i.data()]),c=l[0],h=l[1],{selectedIndices:d,selectedScores:p}=Xh(c,h,n,r,s,a);return o!==e&&o.dispose(),i!==t&&i.dispose(),{selectedIndices:Qc(d,"int32"),selectedScores:Qc(p)}},nonMaxSuppressionPadded:td,nonMaxSuppressionPaddedAsync:async function(e,t,n,r=.5,s=Number.NEGATIVE_INFINITY,a=!1){const o=zs(e,"boxes","nonMaxSuppressionAsync"),i=zs(t,"scores","nonMaxSuppressionAsync"),u=Wh(o,i,n,r,s,null),l=u.maxOutputSize,c=u.iouThreshold,h=u.scoreThreshold,[d,p]=await Promise.all([o.data(),i.data()]),{selectedIndices:f,validOutputs:m}=qh(d,p,l,c,h,a);return o!==e&&o.dispose(),i!==t&&i.dispose(),{selectedIndices:Qc(f,"int32"),validOutputs:ho(m,"int32")}},threshold:sd,transform:ad},Nd={bandPart:od,gramSchmidt:id,qr:ld},Ed={absoluteDifference:dd,computeWeightedLoss:hd,cosineDistance:pd,hingeLoss:fd,huberLoss:md,logLoss:gd,meanSquaredError:yd,sigmoidCrossEntropy:xd,softmaxCrossEntropy:bd},Rd={sparseFillEmptyRows:vd,sparseReshape:wd,sparseSegmentMean:kd,sparseSegmentSum:Sd},_d={stringNGrams:Cd,stringSplit:Ws({stringSplit_:function(e,t,n=!0){const r=zs(e,"input","stringSplit","string"),s=zs(t,"delimiter","stringSplit","string");if(1!==r.rank)throw new Error(`Input should be Tensor1D but received shape ${r.shape}`);if(0!==s.rank)throw new Error(`Delimiter should be a scalar but received shape ${s.shape}`);const a={skipEmpty:n},o={input:r,delimiter:s},i=As.runKernel(nr,o,a);return{indices:i[0],values:i[1],shape:i[2]}}}),stringToHashBucketFast:Ws({stringToHashBucketFast_:function(e,t){const n=zs(e,"input","stringToHashBucketFast","string"),r={numBuckets:t};if(t<=0)throw new Error("Number of buckets must be at least 1");const s={input:n};return As.runKernel(rr,s,r)}}),staticRegexReplace:Ws({staticRegexReplace_:function(e,t,n,r=!0){const s=zs(e,"input","staticRegexReplace","string"),a={pattern:t,rewrite:n,replaceGlobal:r};return As.runKernel(Jn,{x:s},a)}})},Ad="undefined"!=typeof requestAnimationFrame?requestAnimationFrame:"undefined"!=typeof setImmediate?setImmediate:e=>e();function Od(e,t){const n=e[0].length;e.forEach(((e,t)=>{D(e.length===n,(()=>`Error in concat${n}D: rank of tensors[${t}] must be the same as the rank of the rest (${n})`))})),D(t>=0&&t<n,(()=>`Error in concat${n}D: axis must be between 0 and ${n-1}.`));const r=e[0];e.forEach(((e,s)=>{for(let a=0;a<n;a++)D(a===t||e[a]===r[a],(()=>`Error in concat${n}D: Shape of tensors[${s}] (${e}) does not match the shape of the rest (${r}) along the non-concatenated axis ${s}.`))}))}function Fd(e,t){const n=e[0].slice();for(let r=1;r<e.length;r++)n[t]+=e[r][t];return n}var Pd;function Dd(e,t,n){let r=new Array;if(null==n&&null==t)return r;if(null==t)for(;r.length<e+n.length;)r.push(-1);else r=t.slice();if(null==n)return r;if(e+n.length!==r.length)throw new Error(`rt input.shape and shape=${t} are incompatible: rt input.rank = ${e+n.length}, but shape.rank = ${r.length}`);for(let s=1;s<n.length;++s){const a=n[s],o=r[r.length-n.length+s],i=r[o];if(a>=0)if(i>=0){if(i!==a)throw new Error(`rt input.shape and shape=${t} are incompatible: rt input.shape[${s+e}] = ${a} but shape[${s+e}] = ${i}`)}else r[o]=a}return r}function Md(e){const t={FIRST_DIM_SIZE:Pd.FIRST_DIM_SIZE,VALUE_ROWIDS:Pd.VALUE_ROWIDS,ROW_LENGTHS:Pd.ROW_LENGTHS,ROW_SPLITS:Pd.ROW_SPLITS,ROW_LIMITS:Pd.ROW_LIMITS,ROW_STARTS:Pd.ROW_STARTS},n=[];for(const r of e){if(!(r in t))break;n.push(t[r])}return n}function Ld(e){return 0===e.length?0:e[0]===Pd.FIRST_DIM_SIZE?e.length-1:e.length}function Bd(e,t){if(null==e||null==t)return;const n=e.length,r=t.length;if(n>=r)throw new Error(`defaultValue.shape=${e} and ragged tensor flatValues.shape=${t}, are incompatible: defaultValue.rank = ${n} must be less than ragged tensor input flatValues.rank = ${r})`);for(let s=0;s<Math.min(n,r-1);++s){const n=e[s],r=t[s+1];if(n>=0&&r>=0&&1!==n&&n!==r)throw new Error(`defaultValue.shape=${e}, and ragged tensor input flatValues.shape=${t} are incompatible: defaultValue.shape[${s-e.length}] = ${n} but ragged tensor input.flatValues.shape[${s-e.length}] = ${r}`)}}!function(e){e[e.FIRST_DIM_SIZE=0]="FIRST_DIM_SIZE",e[e.VALUE_ROWIDS=1]="VALUE_ROWIDS",e[e.ROW_LENGTHS=2]="ROW_LENGTHS",e[e.ROW_SPLITS=3]="ROW_SPLITS",e[e.ROW_LIMITS=4]="ROW_LIMITS",e[e.ROW_STARTS=5]="ROW_STARTS"}(Pd||(Pd={}));const zd=30;function Ud(e){return e<=zd?e:te(e,Math.floor(Math.sqrt(e)))}function Vd(e,t,n){return[n*("number"==typeof e?e:e[0]),t*("number"==typeof e?e:e[1])]}function Wd(e,t,n,r=!0){let s=[];if(r)s=s.concat(t.slice(0)),s.push(e[0]/n),s=s.concat(e.slice(1));else{s=s.concat(e[0]);const n=t.length;for(let r=0;r<n;++r)s=s.concat([e[r+1]/t[r],t[r]]);s=s.concat(e.slice(n+1))}return s}function Gd(e,t,n=!0){const r=[];if(n){r.push(t);for(let n=t+1;n<e;++n)n<=2*t?(r.push(n),r.push(n-(t+1))):r.push(n)}else{const n=[],s=[];for(let r=1;r<e;++r)r>=2*t+1||r%2==1?s.push(r):n.push(r);r.push(...n),r.push(0),r.push(...s)}return r}function Hd(e,t,n,r=!0){const s=[];r?s.push(e[0]/n):s.push(e[0]*n);for(let n=1;n<e.length;++n)n<=t.length?r?s.push(t[n-1]*e[n]):s.push(e[n]/t[n-1]):s.push(e[n]);return s}function jd(e,t){const n=[0];for(let r=0;r<t;++r)n.push(e[r][0]);return n}function Kd(e,t,n){const r=e.slice(0,1);for(let s=0;s<n;++s)r.push(e[s+1]-t[s][0]-t[s][1]);return r}function qd(e,t){const n=e.shape.length,r=t.shape.length;if(n<1)throw new Error(`tf.gatherND() expects the input to be rank 1 or higher, but the rank was ${n}.`);if(r<1)throw new Error(`tf.gatherND() expects the indices to be rank 1 or higher, but the rank was ${r}.`);if("int32"!==t.dtype)throw new Error(`tf.gatherND() expects the indices to be int32 type, but the dtype was ${t.dtype}.`);if(t.shape[r-1]>n)throw new Error(`index innermost dimension length must be <= tensor rank; saw: ${t.shape[r-1]} vs. ${n}`);if(0===B(e.shape))throw new Error(`Requested more than 0 entries, but input is empty. Input shape: ${e.shape}.`);const s=t.shape,a=s[s.length-1];let o=1;for(let e=0;e<s.length-1;++e)o*=s[e];const i=e.shape,u=s.slice();u.pop();let l=1;for(let e=a;e<n;++e)l*=i[e],u.push(i[e]);const c=[...ne(e.shape).map((e=>e/l)),1].slice(0,a);return[u,o,l,c]}const Xd=1.7580993408473768,Yd=1.0507009873554805,Qd=.3275911,Zd=.254829592,Jd=-.284496736,ep=1.421413741,tp=-1.453152027,np=1.061405429;function rp(e,t){if(e.length!==t.length)throw new Error(`Cannot merge real and imag arrays of different lengths. real:${e.length}, imag: ${t.length}.`);const n=new Float32Array(2*e.length);for(let r=0;r<n.length;r+=2)n[r]=e[r/2],n[r+1]=t[r/2];return n}function sp(e){const t=new Float32Array(e.length/2),n=new Float32Array(e.length/2);for(let r=0;r<e.length;r+=2)t[r/2]=e[r],n[r/2]=e[r+1];return{real:t,imag:n}}function ap(e){const t=Math.ceil(e.length/4),n=new Float32Array(t),r=new Float32Array(t);for(let t=0;t<e.length;t+=4)n[Math.floor(t/4)]=e[t],r[Math.floor(t/4)]=e[t+1];return{real:n,imag:r}}function op(e){const t=Math.floor(e.length/4),n=new Float32Array(t),r=new Float32Array(t);for(let t=2;t<e.length;t+=4)n[Math.floor(t/4)]=e[t],r[Math.floor(t/4)]=e[t+1];return{real:n,imag:r}}function ip(e,t){return{real:e[2*t],imag:e[2*t+1]}}function up(e,t,n,r){e[2*r]=t,e[2*r+1]=n}function lp(e,t){const n=new Float32Array(e/2),r=new Float32Array(e/2);for(let s=0;s<Math.ceil(e/2);s++){const a=(t?2:-2)*Math.PI*(s/e);n[s]=Math.cos(a),r[s]=Math.sin(a)}return{real:n,imag:r}}function cp(e,t,n){const r=(n?2:-2)*Math.PI*(e/t);return{real:Math.cos(r),imag:Math.sin(r)}}const hp="->",dp=/->/g,pp=",",fp="...";function mp(e,t){const n=((e=e.replace(/\s/g,"")).length-e.replace(dp,"").length)/hp.length;if(n<1)throw new Error("Equations without an arrow are not supported.");if(n>1)throw new Error(`Equation must contain exactly one arrow ("${hp}").`);const[r,s]=e.split(hp);D(-1===r.indexOf(fp),(()=>`The ellipsis notation ("${fp}") is not supported yet.`));const a=r.split(pp),o=a.length;if(t!==o)throw new Error(`Expected ${o} input tensors, received ${t}`);if(o>2)throw new Error("Support for more than 2 input tensors is not implemented yet.");const i=[];for(let e=0;e<s.length;++e){const t=s[e];if(!a.some((e=>-1!==e.indexOf(t))))throw new Error(`Output subscripts contain the label ${t} not present in the input subscripts.`);-1===i.indexOf(t)&&i.push(t)}for(let e=0;e<r.length;++e){const t=r[e];-1===i.indexOf(t)&&t!==pp&&i.push(t)}const u=new Array(a.length);for(let e=0;e<o;++e){if(new Set(a[e].split("")).size!==a[e].length)throw new Error(`Found duplicate axes in input component ${a[e]}. Support for duplicate axes in input is not implemented yet.`);u[e]=[];for(let t=0;t<a[e].length;++t)u[e].push(i.indexOf(a[e][t]))}const l=i.length,c=[];for(let e=s.length;e<l;++e)c.push(e);return{allDims:i,summedDims:c,idDims:u}}function gp(e,t){let n=new Array(e);n.fill(-1);for(let e=0;e<t.length;++e)n[t[e]]=e;const r=[];for(let t=0;t<e;++t)-1===n[t]&&r.push(t);return n=n.filter((e=>-1!==e)),{permutationIndices:n,expandDims:r}}function yp(e,t,n){const r=new Array(e);for(let e=0;e<n.length;++e){const s=n[e].shape;for(let n=0;n<t[e].length;++n)void 0===r[t[e][n]]?r[t[e][n]]=s[n]:D(r[t[e][n]]===s[n],(()=>`Expected dimension ${r[t[e][n]]} at axis ${n} of input shaped ${JSON.stringify(s)}, but got dimension ${s[n]}`))}}function xp(e,t){const n=e,r=[];let s=0;0===e.length&&n.push(-1),s=e.length+1;for(let e=0;e<s;++e)r.push([]);const a=[];for(let e=0;e<n.length;++e){const s=vp(t,n[e]);for(const t of s)-1===a.indexOf(t)&&(r[e].push(t),a.push(t))}return{path:n,steps:r}}function bp(e){return e.every(((e,t)=>e===t))}function vp(e,t){const n=[];for(let r=0;r<e.length;++r)0!==e[r].length&&-1===e[r].indexOf(t)&&-1!==t||n.push(r);return n}function wp(e,t,n=0){let r=[];if("number"==typeof t)D(e.shape[n]%t==0,(()=>"Number of splits must evenly divide the axis.")),r=new Array(t).fill(e.shape[n]/t);else{D(t.reduce(((e,t)=>(-1===t&&(e+=1),e)),0)<=1,(()=>"There should be only one negative value in split array."));const s=t.indexOf(-1);if(-1!==s){const r=t.reduce(((e,t)=>t>0?e+t:e));t[s]=e.shape[n]-r}D(e.shape[n]===t.reduce(((e,t)=>e+t)),(()=>"The sum of sizes must match the size of the axis dimension.")),r=t}return r}function kp(e){return`Received SparseTensor with denseShape[0] = 0 but\n  indices.shape[0] = ${e}`}function Sp(e,t){return`indices(${e}, 0) is invalid: ${t} < 0`}function Cp(e,t,n){return`indices(${e}, 0) is invalid: ${t} >= ${n}`}function Ip(e,t){return`only one output dimension may be -1, not both ${e} and ${t}`}function Tp(e,t){return`size ${e} must be non-negative, not ${t}`}function $p(){return"reshape cannot infer the missing input size for an empty tensor unless all specified input sizes are non-zero"}function Np(e,t){return`Input to reshape is a SparseTensor with ${B(e)}\n  dense values, but the requested shape requires a multiple of ${B(t)}. inputShape=${e} outputShape= ${t}`}function Ep(e,t){return`Input to reshape is a tensor with ${B(e)} dense values, but the requested shape has ${B(t)}. inputShape=${e} outputShape=${t}`}function Rp(){return"segment ids must be >= 0"}function _p(){return"segment ids are not increasing"}function Ap(e,t){return`Segment id ${e} out of range [0, ${t}), possibly because segmentIds input is not sorted.`}function Op(e,t,n){return`Bad: indices[${e}] == ${t} out of range [0, ${n})`}function Fp(e,t){let n,r=!1;for(e<=zd?(n=e,r=!0):n=te(e,Math.floor(Math.sqrt(e)));!r;)n>t||n===e?r=!0:n=te(e,n+1);return n}function Pp(e,t,n){const r=[],s=e.length;for(let a=0;a<s;a++)a!==t?r.push(e[a]):r.push(n);return r}function Dp(e,t,n,r){const s=t.shape.length,a=e.shape.length;if(0!==r&&(r<-s||r>s))throw new Error(`Expect batchDims in the range of [-${s}, ${s}], but got ${r}`);if(r<0&&(r+=s),r>a)throw new Error(`batchDims (${r}) must be less than rank(x) (\n    ${a}).`);if(n<r)throw new Error(`batchDims (${r}) must be less than or equal to axis (${n}).`);for(let n=0;n<r;++n)if(e.shape[n]!==t.shape[n])throw new Error(`x.shape[${n}]: ${e.shape[n]} should be equal to indices.shape[${n}]: ${t.shape[n]}.`);const o=e.shape[n],i=[];let u=1,l=1,c=1;for(let t=0;t<r;++t)i.push(e.shape[t]),u*=e.shape[t];for(let t=r;t<n;t++)i.push(e.shape[t]),l*=e.shape[t];for(let e=r;e<s;e++)i.push(t.shape[e]);for(let t=n+1;t<a;t++)i.push(e.shape[t]),c*=e.shape[t];return{batchSize:u,sliceSize:c,outerSize:l,dimSize:o,outputShape:i}}function Mp(e){try{return e.map((e=>Xr(e)))}catch(e){throw new Error(`Failed to decode encoded string bytes into utf-8, error: ${e}`)}}function Lp(e){return e.map((e=>qr(e)))}!function(){for(const e of No)yo(e)}();const Bp={},zp={alpha:!1,antialias:!1,premultipliedAlpha:!1,preserveDrawingBuffer:!1,depth:!1,stencil:!1,failIfMajorPerformanceCaveat:!0};function Up(e,t){if(!(e in Bp)||null!=t){const n=function(e,t){if(1!==e&&2!==e)throw new Error("Cannot get WebGL rendering context, WebGL is disabled.");const n=null==t?function(e){if(fe().getBool("IS_SAFARI")||"undefined"==typeof OffscreenCanvas||2!==e){if("undefined"!=typeof document)return document.createElement("canvas");throw new Error("Cannot create a canvas in this context")}return new OffscreenCanvas(300,150)}(e):t;return n.addEventListener("webglcontextlost",(t=>{t.preventDefault(),delete Bp[e]}),!1),fe().getBool("SOFTWARE_WEBGL_ENABLED")&&(zp.failIfMajorPerformanceCaveat=!1),1===e?n.getContext("webgl",zp)||n.getContext("experimental-webgl",zp):n.getContext("webgl2",zp)}(e,t);if(null===n)return console.log("Could not get context for WebGL version",e),null;Bp[e]=n}const n=Bp[e];return null==n||n.isContextLost()?(delete Bp[e],Up(e)):(n.disable(n.DEPTH_TEST),n.disable(n.STENCIL_TEST),n.disable(n.BLEND),n.disable(n.DITHER),n.disable(n.POLYGON_OFFSET_FILL),n.disable(n.SAMPLE_COVERAGE),n.enable(n.SCISSOR_TEST),n.enable(n.CULL_FACE),n.cullFace(n.BACK),Bp[e])}var Vp,Wp,Gp;function Hp(e,t){return[t,e]}function jp(e){const t=B(e);return V(Math.ceil(t/4))}function Kp(e,t){return[Math.max(1,Math.ceil(t/2)),Math.max(1,Math.ceil(e/2))]}function qp(e,t){const n=e;let r,s,a,o,i,u,l,c,h,d;return 2===fe().getNumber("WEBGL_VERSION")?(r=n.R32F,s=n.R16F,a=n.RGBA16F,o=n.RGBA32F,i=n.RED,l=4,c=1,h=n.HALF_FLOAT,d=n.FLOAT,u=n.RGBA8):(r=e.RGBA,s=e.RGBA,a=e.RGBA,o=n.RGBA,i=e.RGBA,l=4,c=4,h=null!=t?t.HALF_FLOAT_OES:null,d=e.FLOAT,u=e.RGBA),{internalFormatFloat:r,internalFormatHalfFloat:s,internalFormatPackedHalfFloat:a,internalFormatPackedFloat:o,textureFormatFloat:i,downloadTextureFormat:u,downloadUnpackNumChannels:l,defaultNumChannels:c,textureTypeHalfFloat:h,textureTypeFloat:d}}function Xp(e,t){const n=t();return fe().getBool("DEBUG")&&function(e){const t=e.getError();if(t!==e.NO_ERROR)throw new Error("WebGL Error: "+function(e,t){switch(t){case e.NO_ERROR:return"NO_ERROR";case e.INVALID_ENUM:return"INVALID_ENUM";case e.INVALID_VALUE:return"INVALID_VALUE";case e.INVALID_OPERATION:return"INVALID_OPERATION";case e.INVALID_FRAMEBUFFER_OPERATION:return"INVALID_FRAMEBUFFER_OPERATION";case e.OUT_OF_MEMORY:return"OUT_OF_MEMORY";case e.CONTEXT_LOST_WEBGL:return"CONTEXT_LOST_WEBGL";default:return`Unknown error code ${t}`}}(e,t))}(e),n}function Yp(e){return!!(fe().getBool("WEBGL_RENDER_FLOAT32_ENABLED")||0===e||5.96e-8<Math.abs(e)&&Math.abs(e)<65504)}function Qp(e,t){return of(e,(()=>e.getExtension(t)),'Extension "'+t+'" not supported on this browser.')}!function(e){e[e.DENSE=0]="DENSE",e[e.SHARED_BATCH=1]="SHARED_BATCH"}(Vp||(Vp={})),function(e){e[e.RENDER=0]="RENDER",e[e.UPLOAD=1]="UPLOAD",e[e.PIXELS=2]="PIXELS",e[e.DOWNLOAD=3]="DOWNLOAD"}(Wp||(Wp={})),function(e){e[e.UNPACKED_FLOAT16=0]="UNPACKED_FLOAT16",e[e.UNPACKED_FLOAT32=1]="UNPACKED_FLOAT32",e[e.PACKED_4X1_UNSIGNED_BYTE=2]="PACKED_4X1_UNSIGNED_BYTE",e[e.PACKED_2X2_FLOAT32=3]="PACKED_2X2_FLOAT32",e[e.PACKED_2X2_FLOAT16=4]="PACKED_2X2_FLOAT16"}(Gp||(Gp={}));const Zp=/ERROR: [0-9]+:([0-9]+):/g;function Jp(e,t){const n=Zp.exec(t);if(null==n)return console.log(`Couldn't parse line number in error: ${t}`),void console.log(e);const r=+n[1],s=e.split("\n"),a=s.length.toString().length+2,o=s.map(((e,t)=>W((t+1).toString(),a)+e));let i=0;for(let e=0;e<o.length;e++)i=Math.max(o[e].length,i);const u=o.slice(0,r-1),l=o.slice(r-1,r),c=o.slice(r);console.log(u.join("\n")),console.log(t.split("\n")[0]),console.log(`%c ${W(l[0],i)}`,"border:1px solid red; background-color:#e3d2d2; color:#a61717"),console.log(c.join("\n"))}function ef(e,t){if(Xp(e,(()=>e.validateProgram(t))),!1===e.getProgramParameter(t,e.VALIDATE_STATUS))throw console.log(e.getProgramInfoLog(t)),new Error("Shader program validation failed.")}function tf(e,t,n,r,s,a,o){const i=e.getAttribLocation(t,n);return-1!==i&&(Xp(e,(()=>e.bindBuffer(e.ARRAY_BUFFER,r))),Xp(e,(()=>e.vertexAttribPointer(i,s,e.FLOAT,!1,a,o))),Xp(e,(()=>e.enableVertexAttribArray(i))),!0)}function nf(e,t,n,r){Xp(e,(()=>function(e,t,n){(function(e,t){const n=e.MAX_COMBINED_TEXTURE_IMAGE_UNITS-1,r=t+e.TEXTURE0;if(r<e.TEXTURE0||r>n)throw new Error(`textureUnit must be in [gl.TEXTURE0, gl.TEXTURE${n}].`)})(e,n),Xp(e,(()=>e.activeTexture(e.TEXTURE0+n))),Xp(e,(()=>e.bindTexture(e.TEXTURE_2D,t)))}(e,t,r))),Xp(e,(()=>e.uniform1i(n,r)))}function rf(e,t,n){Xp(e,(()=>e.bindFramebuffer(e.FRAMEBUFFER,n))),Xp(e,(()=>e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,t,0)))}function sf(e,t){Xp(e,(()=>e.bindFramebuffer(e.FRAMEBUFFER,t))),Xp(e,(()=>e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,null,0)))}function af(e){const t=e.checkFramebufferStatus(e.FRAMEBUFFER);if(t!==e.FRAMEBUFFER_COMPLETE)throw new Error("Error binding framebuffer: "+function(e,t){switch(t){case e.FRAMEBUFFER_INCOMPLETE_ATTACHMENT:return"FRAMEBUFFER_INCOMPLETE_ATTACHMENT";case e.FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT:return"FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT";case e.FRAMEBUFFER_INCOMPLETE_DIMENSIONS:return"FRAMEBUFFER_INCOMPLETE_DIMENSIONS";case e.FRAMEBUFFER_UNSUPPORTED:return"FRAMEBUFFER_UNSUPPORTED";default:return`unknown error ${t}`}}(e,t))}function of(e,t,n){const r=Xp(e,(()=>t()));if(null==r)throw new Error(n);return r}function uf(e,t=2){return B(e.slice(0,e.length-t))}function lf(e){if(0===e.length)throw Error("Cannot get rows and columns of an empty shape array.");return[e.length>1?e[e.length-2]:1,e[e.length-1]]}function cf(e){let t=[1,1,1];return 0===e.length||1===e.length&&1===e[0]||(t=[uf(e),...lf(e)]),t}function hf(e){return e%2==0}function df(e,t){if(z(e=e.slice(-2),t=t.slice(-2)))return!0;if(!e.length||!t.length)return!0;if(0===e[0]||0===e[1]||0===t[0]||0===t[1])return!0;if(e.length!==t.length){const n=e[e.length-1],r=t[t.length-1];if(n===r)return!0;if(hf(n)&&hf(r)&&(1===e[0]||1===t[0]))return!0}return e[1]===t[1]&&hf(e[0])&&hf(t[0])}let pf,ff;function mf(e,t){return null!=e.getExtension(t)}function gf(e){try{if(null!=Up(e))return!0}catch(e){return console.log("Error when getting WebGL context: ",e),!1}return!1}function yf(e){const t=qp(e),n=e.createTexture();e.bindTexture(e.TEXTURE_2D,n),e.texImage2D(e.TEXTURE_2D,0,t.internalFormatFloat,1,1,0,t.textureFormatFloat,t.textureTypeFloat,null);const r=e.createFramebuffer();e.bindFramebuffer(e.FRAMEBUFFER,r),e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,n,0);const s=e.checkFramebufferStatus(e.FRAMEBUFFER)===e.FRAMEBUFFER_COMPLETE;return e.bindTexture(e.TEXTURE_2D,null),e.bindFramebuffer(e.FRAMEBUFFER,null),e.deleteTexture(n),e.deleteFramebuffer(r),s}function xf(e,t){Array.isArray(e)||(e=[e]),e.forEach((e=>{null!=e&&D("complex64"!==e.dtype,(()=>`${t} does not support complex64 tensors in the WebGL backend.`))}))}const bf=fe();function vf(){let e,t,n,r,s,a,o,i,u,l;return 2===fe().getNumber("WEBGL_VERSION")?(e="#version 300 es",t="in",n="out",r="in",s="texture",a="outputColor",o="out vec4 outputColor;",i=fe().getBool("WEBGL2_ISNAN_CUSTOM")?"\n      bool isnan_custom(float val) {\n        uint floatToUint = floatBitsToUint(val);\n        return (floatToUint & 0x7fffffffu) > 0x7f800000u;\n      }\n\n      bvec4 isnan_custom(vec4 val) {\n        return bvec4(isnan_custom(val.x),\n          isnan_custom(val.y), isnan_custom(val.z), isnan_custom(val.w));\n      }\n\n      #define isnan(value) isnan_custom(value)\n    ":"",u="",l="\n      #define round(value) newRound(value)\n      int newRound(float value) {\n        return int(floor(value + 0.5));\n      }\n\n      ivec4 newRound(vec4 value) {\n        return ivec4(floor(value + vec4(0.5)));\n      }\n    "):(e="",t="attribute",n="varying",r="varying",s="texture2D",a="gl_FragColor",o="",i="\n      #define isnan(value) isnan_custom(value)\n      bool isnan_custom(float val) {\n        return (val > 0. || val < 1. || val == 0.) ? false : true;\n      }\n      bvec4 isnan_custom(vec4 val) {\n        return bvec4(isnan(val.x), isnan(val.y), isnan(val.z), isnan(val.w));\n      }\n    ",u="\n      uniform float INFINITY;\n\n      bool isinf(float val) {\n        return abs(val) == INFINITY;\n      }\n      bvec4 isinf(vec4 val) {\n        return equal(abs(val), vec4(INFINITY));\n      }\n    ",l="\n      int round(float value) {\n        return int(floor(value + 0.5));\n      }\n\n      ivec4 round(vec4 value) {\n        return ivec4(floor(value + vec4(0.5)));\n      }\n    "),{version:e,attribute:t,varyingVs:n,varyingFs:r,texture2D:s,output:a,defineOutput:o,defineSpecialNaN:i,defineSpecialInf:u,defineRound:l}}function wf(e,t,n="index"){const r=ne(t);return r.map(((t,s)=>`int ${e[s]} = ${n} / ${t}; ${s===r.length-1?`int ${e[s+1]} = ${n} - ${e[s]} * ${t}`:`index -= ${e[s]} * ${t}`};`)).join("")}function kf(e,t,n="index"){const r=ne(t);return r.map(((t,s)=>`int ${e[s]} = ${n} / outShapeStrides[${s}]; ${s===r.length-1?`int ${e[s+1]} = ${n} - ${e[s]} * outShapeStrides[${s}]`:`index -= ${e[s]} * outShapeStrides[${s}]`};`)).join("")}function Sf(e){const t=ne(e).map((e=>e.toString()));return`\n  int getFlatIndex(ivec3 coords) {\n    return coords.x * ${t[0]} + coords.y * ${t[1]} + coords.z;\n  }\n`}bf.registerFlag("HAS_WEBGL",(()=>bf.getNumber("WEBGL_VERSION")>0)),bf.registerFlag("WEBGL_VERSION",(()=>gf(2)?2:gf(1)?1:0)),bf.registerFlag("WEBGL_CHECK_NUMERICAL_PROBLEMS",(()=>!1)),bf.registerFlag("WEBGL_BUFFER_SUPPORTED",(()=>2===bf.get("WEBGL_VERSION"))),bf.registerFlag("WEBGL_CPU_FORWARD",(()=>!0)),bf.registerFlag("WEBGL_FORCE_F16_TEXTURES",(()=>!1)),bf.registerFlag("WEBGL_PACK",(()=>bf.getBool("HAS_WEBGL"))),bf.registerFlag("WEBGL_PACK_NORMALIZATION",(()=>bf.getBool("WEBGL_PACK"))),bf.registerFlag("WEBGL_PACK_CLIP",(()=>bf.getBool("WEBGL_PACK"))),bf.registerFlag("WEBGL_PACK_DEPTHWISECONV",(()=>bf.getBool("WEBGL_PACK"))),bf.registerFlag("WEBGL_PACK_BINARY_OPERATIONS",(()=>bf.getBool("WEBGL_PACK"))),bf.registerFlag("WEBGL_PACK_UNARY_OPERATIONS",(()=>bf.getBool("WEBGL_PACK"))),bf.registerFlag("WEBGL_PACK_ARRAY_OPERATIONS",(()=>bf.getBool("WEBGL_PACK"))),bf.registerFlag("WEBGL_PACK_IMAGE_OPERATIONS",(()=>bf.getBool("WEBGL_PACK"))),bf.registerFlag("WEBGL_PACK_REDUCE",(()=>bf.getBool("WEBGL_PACK"))),bf.registerFlag("WEBGL_LAZILY_UNPACK",(()=>bf.getBool("WEBGL_PACK"))),bf.registerFlag("WEBGL_CONV_IM2COL",(()=>bf.getBool("WEBGL_PACK"))),bf.registerFlag("WEBGL_MAX_TEXTURE_SIZE",(()=>function(e){if(null==pf){const t=Up(e);pf=t.getParameter(t.MAX_TEXTURE_SIZE)}return pf}(bf.getNumber("WEBGL_VERSION")))),bf.registerFlag("WEBGL_MAX_TEXTURES_IN_SHADER",(()=>function(e){if(null==ff){const t=Up(e);ff=t.getParameter(t.MAX_TEXTURE_IMAGE_UNITS)}return Math.min(16,ff)}(bf.getNumber("WEBGL_VERSION")))),bf.registerFlag("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION",(()=>{const e=bf.getNumber("WEBGL_VERSION");return 0===e?0:function(e){if(0===e)return 0;let t;const n=Up(e);return t=mf(n,"EXT_disjoint_timer_query_webgl2")&&2===e?2:mf(n,"EXT_disjoint_timer_query")?1:0,t}(e)})),bf.registerFlag("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE",(()=>bf.getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")>0&&!Fs())),bf.registerFlag("WEBGL_RENDER_FLOAT32_CAPABLE",(()=>function(e){if(0===e)return!1;const t=Up(e);if(1===e){if(!mf(t,"OES_texture_float"))return!1}else if(!mf(t,"EXT_color_buffer_float"))return!1;return yf(t)}(bf.getNumber("WEBGL_VERSION")))),bf.registerFlag("WEBGL_RENDER_FLOAT32_ENABLED",(()=>!bf.getBool("WEBGL_FORCE_F16_TEXTURES")&&bf.getBool("WEBGL_RENDER_FLOAT32_CAPABLE"))),bf.registerFlag("WEBGL_DOWNLOAD_FLOAT_ENABLED",(()=>function(e){if(0===e)return!1;const t=Up(e);if(1!==e){if(mf(t,"EXT_color_buffer_float"))return yf(t);const e="EXT_color_buffer_half_float";if(mf(t,e)){const n=t.getExtension(e);return function(e,t){const n=qp(e,t),r=e.createTexture();e.bindTexture(e.TEXTURE_2D,r),e.texImage2D(e.TEXTURE_2D,0,n.internalFormatHalfFloat,1,1,0,n.textureFormatFloat,n.textureTypeHalfFloat,null);const s=e.createFramebuffer();e.bindFramebuffer(e.FRAMEBUFFER,s),e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,r,0);const a=e.checkFramebufferStatus(e.FRAMEBUFFER)===e.FRAMEBUFFER_COMPLETE;return e.bindTexture(e.TEXTURE_2D,null),e.bindFramebuffer(e.FRAMEBUFFER,null),e.deleteTexture(r),e.deleteFramebuffer(s),a}(t,n)}return!1}return!!mf(t,"OES_texture_float")&&!!mf(t,"WEBGL_color_buffer_float")&&yf(t)}(bf.getNumber("WEBGL_VERSION")))),bf.registerFlag("WEBGL_FENCE_API_ENABLED",(()=>{return 2===(e=bf.getNumber("WEBGL_VERSION"))&&null!=Up(e).fenceSync;var e})),bf.registerFlag("WEBGL_SIZE_UPLOAD_UNIFORM",(()=>bf.getBool("WEBGL_RENDER_FLOAT32_ENABLED")?4:0)),bf.registerFlag("WEBGL_DELETE_TEXTURE_THRESHOLD",(()=>-1),(e=>{if(e<0&&-1!==e)throw new Error(`WEBGL_DELETE_TEXTURE_THRESHOLD must be -1 (indicating never delete) or at least 0, but got ${e}.`)})),bf.registerFlag("WEBGL_FLUSH_THRESHOLD",(()=>Fs()?1:-1),(e=>{if(e<0&&-1!==e)throw new Error(`WEBGL_FLUSH_THRESHOLD must be -1 (indicating never manual flush) or at least 0, but got ${e}.`)})),bf.registerFlag("CPU_HANDOFF_SIZE_THRESHOLD",(()=>128)),bf.registerFlag("WEBGL_USE_SHAPES_UNIFORMS",(()=>!1)),bf.registerFlag("TOPK_LAST_DIM_CPU_HANDOFF_SIZE_THRESHOLD",(()=>1e5)),bf.registerFlag("TOPK_K_CPU_HANDOFF_THRESHOLD",(()=>128)),bf.registerFlag("WEBGL_EXP_CONV",(()=>!1)),bf.registerFlag("SOFTWARE_WEBGL_ENABLED",(()=>bf.getBool("IS_TEST"))),bf.registerFlag("WEBGL_MAX_SIZE_FOR_NARROW_TEXTURE",(()=>1/0)),bf.registerFlag("WEBGL_AUTO_SQUARIFY_NARROW_TEXTURE_SHAPE",(()=>!1)),bf.registerFlag("WEBGL2_ISNAN_CUSTOM",(()=>!1)),bf.registerFlag("ENGINE_COMPILE_ONLY",(()=>!1));const Cf="\n  const float FLOAT_MAX = 1.70141184e38;\n  const float FLOAT_MIN = 1.17549435e-38;\n\n  lowp vec4 encode_float(highp float v) {\n    if (isnan(v)) {\n      return vec4(255, 255, 255, 255);\n    }\n\n    highp float av = abs(v);\n\n    if(av < FLOAT_MIN) {\n      return vec4(0.0, 0.0, 0.0, 0.0);\n    } else if(v > FLOAT_MAX) {\n      return vec4(0.0, 0.0, 128.0, 127.0) / 255.0;\n    } else if(v < -FLOAT_MAX) {\n      return vec4(0.0, 0.0,  128.0, 255.0) / 255.0;\n    }\n\n    highp vec4 c = vec4(0,0,0,0);\n\n    highp float e = floor(log2(av));\n    highp float m = exp2(fract(log2(av))) - 1.0;\n\n    c[2] = floor(128.0 * m);\n    m -= c[2] / 128.0;\n    c[1] = floor(32768.0 * m);\n    m -= c[1] / 32768.0;\n    c[0] = floor(8388608.0 * m);\n\n    highp float ebias = e + 127.0;\n    c[3] = floor(ebias / 2.0);\n    ebias -= c[3] * 2.0;\n    c[2] += floor(ebias) * 128.0;\n\n    c[3] += 128.0 * step(0.0, -v);\n\n    return c / 255.0;\n  }\n",{getBroadcastDims:If}=i;function Tf(e,t,n){const r=[];if(e.forEach((e=>{const t=B(e.shapeInfo.logicalShape);if(e.shapeInfo.isUniform?r.push(`uniform float ${e.name}${t>1?`[${t}]`:""};`):(r.push(`uniform sampler2D ${e.name};`),r.push(`uniform int offset${e.name};`)),n.enableShapeUniforms){const{uniformShape:t}=Df(n.packedInputs,e.shapeInfo.logicalShape,e.shapeInfo.texShape);switch(t.length){case 1:r.push(`uniform int ${e.name}Shape;`);break;case 2:r.push(`uniform ivec2 ${e.name}Shape;`);break;case 3:r.push(`uniform ivec3 ${e.name}Shape;`);break;case 4:r.push(`uniform ivec4 ${e.name}Shape;`)}r.push(`uniform ivec2 ${e.name}TexShape;`)}})),n.enableShapeUniforms){switch(t.logicalShape.length){case 1:r.push("uniform int outShape;");break;case 2:r.push("uniform ivec2 outShape;"),r.push("uniform int outShapeStrides;");break;case 3:r.push("uniform ivec3 outShape;"),r.push("uniform ivec2 outShapeStrides;");break;case 4:r.push("uniform ivec4 outShape;"),r.push("uniform ivec3 outShapeStrides;")}r.push("uniform ivec2 outTexShape;")}n.customUniforms&&n.customUniforms.forEach((e=>{r.push(`uniform ${e.type} ${e.name}${e.arrayIndex?`[${e.arrayIndex}]`:""};`)}));const s=r.join("\n"),a=e.map((e=>function(e,t,n=!1,r){let s="";s+=n?Nf(e,r):$f(e,r);const a=e.shapeInfo.logicalShape,o=t.logicalShape;return a.length<=o.length&&(s+=n?function(e,t){const n=e.name,r=n.charAt(0).toUpperCase()+n.slice(1),s="get"+r+"AtOutCoords",a=e.shapeInfo.logicalShape.length,o=t.logicalShape.length,i=If(e.shapeInfo.logicalShape,t.logicalShape),u=Pf(o),l=o-a;let c;const h=["x","y","z","w","u","v"];c=0===a?"":o<2&&i.length>=1?"coords = 0;":i.map((e=>`coords.${h[e+l]} = 0;`)).join("\n");let d="";d=o<2&&a>0?"coords":e.shapeInfo.logicalShape.map(((e,t)=>`coords.${h[t+l]}`)).join(", ");let p="return outputValue;";const f=1===B(e.shapeInfo.logicalShape),m=1===B(t.logicalShape);if(1!==a||f||m){if(f&&!m)p=1===o?"\n        return vec4(outputValue.x, outputValue.x, 0., 0.);\n      ":"\n        return vec4(outputValue.x);\n      ";else if(i.length){const e=a-2,t=a-1;i.indexOf(e)>-1&&i.indexOf(t)>-1?p="return vec4(outputValue.x);":i.indexOf(e)>-1?p="return vec4(outputValue.x, outputValue.y, outputValue.x, outputValue.y);":i.indexOf(t)>-1&&(p="return vec4(outputValue.xx, outputValue.zz);")}}else p="\n      return vec4(outputValue.xy, outputValue.xy);\n    ";return`\n    vec4 ${s}() {\n      ${u} coords = getOutputCoords();\n      ${c}\n      vec4 outputValue = get${r}(${d});\n      ${p}\n    }\n  `}(e,t):function(e,t){const n=e.name,r=n.charAt(0).toUpperCase()+n.slice(1),s="get"+r+"AtOutCoords",a=t.texShape,o=e.shapeInfo.texShape,i=e.shapeInfo.logicalShape.length,u=t.logicalShape.length;if(!e.shapeInfo.isUniform&&i===u&&null==e.shapeInfo.flatOffset&&z(o,a))return`\n      float ${s}() {\n        return sampleTexture(${n}, resultUV);\n      }\n    `;const l=Pf(u),c=If(e.shapeInfo.logicalShape,t.logicalShape),h=u-i;let d;const p=["x","y","z","w","u","v"];d=0===i?"":u<2&&c.length>=1?"coords = 0;":c.map((e=>`coords.${p[e+h]} = 0;`)).join("\n");let f="";return f=u<2&&i>0?"coords":e.shapeInfo.logicalShape.map(((e,t)=>`coords.${p[t+h]}`)).join(", "),`\n    float ${s}() {\n      ${l} coords = getOutputCoords();\n      ${d}\n      return get${r}(${f});\n    }\n  `}(e,t)),s}(e,t,n.packedInputs,n.enableShapeUniforms))).join("\n"),o=t.texShape,i=vf(),u=function(e){return`\n    float sampleTexture(sampler2D textureSampler, vec2 uv) {\n      return ${e.texture2D}(textureSampler, uv).r;\n    }\n  `}(i);let l,c,h=function(e){return`${e.version}\n    precision highp float;\n    precision highp int;\n    precision highp sampler2D;\n    ${e.varyingFs} vec2 resultUV;\n    ${e.defineOutput}\n    const vec2 halfCR = vec2(0.5, 0.5);\n\n    struct ivec5\n    {\n      int x;\n      int y;\n      int z;\n      int w;\n      int u;\n    };\n\n    struct ivec6\n    {\n      int x;\n      int y;\n      int z;\n      int w;\n      int u;\n      int v;\n    };\n\n    uniform float NAN;\n    ${e.defineSpecialNaN}\n    ${e.defineSpecialInf}\n    ${e.defineRound}\n\n    int imod(int x, int y) {\n      return x - y * (x / y);\n    }\n\n    int idiv(int a, int b, float sign) {\n      int res = a / b;\n      int mod = imod(a, b);\n      if (sign < 0. && mod != 0) {\n        res -= 1;\n      }\n      return res;\n    }\n\n    //Based on the work of Dave Hoskins\n    //https://www.shadertoy.com/view/4djSRW\n    #define HASHSCALE1 443.8975\n    float random(float seed){\n      vec2 p = resultUV * seed;\n      vec3 p3  = fract(vec3(p.xyx) * HASHSCALE1);\n      p3 += dot(p3, p3.yzx + 19.19);\n      return fract((p3.x + p3.y) * p3.z);\n    }\n\n    ${Ef}\n    ${Rf}\n    ${_f}\n  `}(i);return t.isPacked?(l=function(e,t,n){switch(e.length){case 0:return"\n    int getOutputCoords() {\n      return 0;\n    }\n  ";case 1:return function(e,t,n){const r=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)];return 1===r[0]?n?"\n      int getOutputCoords() {\n        return 2 * int(resultUV.x * ceil(float(outTexShape[1]) / 2.0));\n      }\n    ":`\n      int getOutputCoords() {\n        return 2 * int(resultUV.x * ${r[1]}.0);\n      }\n    `:1===r[1]?n?"\n      int getOutputCoords() {\n        return 2 * int(resultUV.y * ceil(float(outTexShape[0]) / 2.0));\n      }\n    ":`\n      int getOutputCoords() {\n        return 2 * int(resultUV.y * ${r[0]}.0);\n      }\n    `:n?"\n    int getOutputCoords() {\n      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(packedTexShape[0], packedTexShape[1]));\n      return 2 * (resTexRC.x * packedTexShape[1] + resTexRC.y);\n    }\n  ":`\n    int getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${r[0]}, ${r[1]}));\n      return 2 * (resTexRC.x * ${r[1]} + resTexRC.y);\n    }\n  `}(0,t,n);case 2:return function(e,t,n){const r=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)];if(z(e,t))return n?"\n      ivec2 getOutputCoords() {\n        ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));\n        return 2 * ivec2(resultUV.yx * vec2(packedTexShape[0], packedTexShape[1]));\n      }\n    ":`\n      ivec2 getOutputCoords() {\n        return 2 * ivec2(resultUV.yx * vec2(${r[0]}, ${r[1]}));\n      }\n    `;const s=Math.ceil(e[1]/2);return n?"\n    ivec2 getOutputCoords() {\n      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));\n      int texelsInLogicalRow = int(ceil(float(outShape[1]) / 2.0));\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(packedTexShape[0], packedTexShape[1]));\n\n      int index = resTexRC.x * packedTexShape[1] + resTexRC.y;\n      int r = 2 * (index / texelsInLogicalRow);\n      int c = imod(index, texelsInLogicalRow) * 2;\n\n      return ivec2(r, c);\n    }\n  ":`\n    ivec2 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${r[0]}, ${r[1]}));\n\n      int index = resTexRC.x * ${r[1]} + resTexRC.y;\n      int r = 2 * (index / ${s});\n      int c = imod(index, ${s}) * 2;\n\n      return ivec2(r, c);\n    }\n  `}(e,t,n);case 3:return function(e,t,n){if(n)return"\n    ivec3 getOutputCoords() {\n      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));\n      int texelsInLogicalRow = int(ceil(float(outShape[2]) / 2.0));\n      int texelsInBatch = texelsInLogicalRow * int(ceil(float(outShape[1]) / 2.0));\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(packedTexShape[0], packedTexShape[1]));\n      int index = resTexRC.x * packedTexShape[1] + resTexRC.y;\n\n      int b = index / texelsInBatch;\n      index -= b * texelsInBatch;\n\n      int r = 2 * (index / texelsInLogicalRow);\n      int c = imod(index, texelsInLogicalRow) * 2;\n\n      return ivec3(b, r, c);\n    }\n  ";const r=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)],s=Math.ceil(e[2]/2),a=s*Math.ceil(e[1]/2);return`\n    ivec3 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${r[0]}, ${r[1]}));\n      int index = resTexRC.x * ${r[1]} + resTexRC.y;\n\n      int b = index / ${a};\n      index -= b * ${a};\n\n      int r = 2 * (index / ${s});\n      int c = imod(index, ${s}) * 2;\n\n      return ivec3(b, r, c);\n    }\n  `}(e,t,n);default:return function(e,t,n){if(n)return"\n    ivec4 getOutputCoords() {\n      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(packedTexShape[0], packedTexShape[1]));\n      int index = resTexRC.x * packedTexShape[1] + resTexRC.y;\n\n      int texelsInLogicalRow = int(ceil(float(outShape[3]) / 2.0));\n      int texelsInBatch = texelsInLogicalRow * int(ceil(float(outShape[2]) / 2.0));\n      int texelsInBatchN = texelsInBatch * outShape[1];\n\n      int b2 = index / texelsInBatchN;\n      index -= b2 * texelsInBatchN;\n\n      int b = index / texelsInBatch;\n      index -= b * texelsInBatch;\n\n      int r = 2 * (index / texelsInLogicalRow);\n      int c = imod(index, texelsInLogicalRow) * 2;\n\n      return ivec4(b2, b, r, c);\n    }\n  ";const r=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)],s=Math.ceil(e[e.length-1]/2),a=s*Math.ceil(e[e.length-2]/2);let o=a,i="",u="b, r, c";for(let t=2;t<e.length-1;t++)o*=e[e.length-t-1],i=`\n      int b${t} = index / ${o};\n      index -= b${t} * ${o};\n    `+i,u=`b${t}, `+u;return`\n    ivec${e.length} getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${r[0]}, ${r[1]}));\n      int index = resTexRC.x * ${r[1]} + resTexRC.y;\n\n      ${i}\n\n      int b = index / ${a};\n      index -= b * ${a};\n\n      int r = 2 * (index / ${s});\n      int c = imod(index, ${s}) * 2;\n\n      return ivec${e.length}(${u});\n    }\n  `}(e,t,n)}}(t.logicalShape,o,n.enableShapeUniforms),c=function(e){return`\n    void setOutput(vec4 val) {\n      ${e.output} = val;\n    }\n  `}(i)):(l=function(e,t,n){switch(e.length){case 0:return"\n    int getOutputCoords() {\n      return 0;\n    }\n  ";case 1:return function(e,t,n){return 1===t[0]?n?"\n      int getOutputCoords() {\n        return int(resultUV.x * float(outTexShape[1]));\n      }\n    ":`\n      int getOutputCoords() {\n        return int(resultUV.x * ${t[1]}.0);\n      }\n    `:1===t[1]?n?"\n      int getOutputCoords() {\n        return int(resultUV.y * float(outTexShape[0]));\n      }\n    ":`\n      int getOutputCoords() {\n        return int(resultUV.y * ${t[0]}.0);\n      }\n    `:n?"\n    int getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(outTexShape[0], outTexShape[1]));\n      return resTexRC.x * outTexShape[1] + resTexRC.y;\n    }\n  ":`\n    int getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${t[0]}, ${t[1]}));\n      return resTexRC.x * ${t[1]} + resTexRC.y;\n    }\n  `}(0,t,n);case 2:return function(e,t,n){return z(e,t)?n?"\n      ivec2 getOutputCoords() {\n        return ivec2(resultUV.yx * vec2(outTexShape[0], outTexShape[1]));\n      }\n    ":`\n      ivec2 getOutputCoords() {\n        return ivec2(resultUV.yx * vec2(${t[0]}, ${t[1]}));\n      }\n    `:1===e[1]?n?"\n      ivec2 getOutputCoords() {\n        ivec2 resTexRC = ivec2(resultUV.yx *\n                               vec2(outTexShape[0], outTexShape[1]));\n        int index = resTexRC.x * outTexShape[1] + resTexRC.y;\n        return ivec2(index, 0);\n      }\n    ":`\n      ivec2 getOutputCoords() {\n        ivec2 resTexRC = ivec2(resultUV.yx *\n                               vec2(${t[0]}, ${t[1]}));\n        int index = resTexRC.x * ${t[1]} + resTexRC.y;\n        return ivec2(index, 0);\n      }\n    `:1===e[0]?n?"\n      ivec2 getOutputCoords() {\n        ivec2 resTexRC = ivec2(resultUV.yx *\n                               vec2(outTexShape[0], outTexShape[1]));\n        int index = resTexRC.x * outTexShape[1] + resTexRC.y;\n        return ivec2(0, index);\n      }\n    ":`\n      ivec2 getOutputCoords() {\n        ivec2 resTexRC = ivec2(resultUV.yx *\n                               vec2(${t[0]}, ${t[1]}));\n        int index = resTexRC.x * ${t[1]} + resTexRC.y;\n        return ivec2(0, index);\n      }\n    `:n?"\n    ivec2 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(outTexShape[0], outTexShape[1]));\n      int index = resTexRC.x * outTexShape[1] + resTexRC.y;\n      int r = index / outShape[1];\n      int c = index - r * outShape[1];\n      return ivec2(r, c);\n    }\n  ":`\n    ivec2 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${t[0]}, ${t[1]}));\n      int index = resTexRC.x * ${t[1]} + resTexRC.y;\n      int r = index / ${e[1]};\n      int c = index - r * ${e[1]};\n      return ivec2(r, c);\n    }\n  `}(e,t,n);case 3:return function(e,t,n){if(n)return`\n  ivec3 getOutputCoords() {\n    ivec2 resTexRC = ivec2(resultUV.yx *\n                           vec2(outTexShape[0], outTexShape[1]));\n    int index = resTexRC.x * outTexShape[1] + resTexRC.y;\n    ${kf(["r","c","d"],e)}\n    return ivec3(r, c, d);\n  }\n`;const r=wf(["r","c","d"],e);return`\n    ivec3 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${t[0]}, ${t[1]}));\n      int index = resTexRC.x * ${t[1]} + resTexRC.y;\n      ${r}\n      return ivec3(r, c, d);\n    }\n  `}(e,t,n);case 4:return function(e,t,n){if(n)return`\n    ivec4 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n        vec2(outTexShape[0], outTexShape[1]));\n      int index = resTexRC.x * outTexShape[1] + resTexRC.y;\n      ${kf(["r","c","d","d2"],e)}\n      return ivec4(r, c, d, d2);\n    }\n  `;const r=wf(["r","c","d","d2"],e);return`\n    ivec4 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n        vec2(${t[0]}, ${t[1]}));\n      int index = resTexRC.x * ${t[1]} + resTexRC.y;\n      ${r}\n      return ivec4(r, c, d, d2);\n    }\n  `}(e,t,n);case 5:return function(e,t){const n=wf(["r","c","d","d2","d3"],e);return`\n    ivec5 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx * vec2(${t[0]},\n                             ${t[1]}));\n\n      int index = resTexRC.x * ${t[1]} + resTexRC.y;\n\n      ${n}\n\n      ivec5 outShape = ivec5(r, c, d, d2, d3);\n      return outShape;\n    }\n  `}(e,t);case 6:return function(e,t){const n=wf(["r","c","d","d2","d3","d4"],e);return`\n    ivec6 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n        vec2(${t[0]}, ${t[1]}));\n      int index = resTexRC.x * ${t[1]} + resTexRC.y;\n\n      ${n}\n\n      ivec6 result = ivec6(r, c, d, d2, d3, d4);\n      return result;\n    }\n  `}(e,t);default:throw new Error(`${e.length}-D output sampling is not yet supported`)}}(t.logicalShape,o,n.enableShapeUniforms),c=function(e){return`\n    void setOutput(float val) {\n      ${e.output} = vec4(val, 0, 0, 0);\n    }\n  `}(i)),n.packedInputs&&(h+=Af),[h,u,c,s,l,a,n.userCode].join("\n")}function $f(e,t=!1){const n=e.shapeInfo.logicalShape;switch(n.length){case 0:return function(e,t){const n=e.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1);if(e.shapeInfo.isUniform)return`float ${r}() {return ${n};}`;const[s,a]=e.shapeInfo.texShape;if(1===s&&1===a)return`\n      float ${r}() {\n        return sampleTexture(${n}, halfCR);\n      }\n    `;const o=Of(n);if(t)return`\n    float ${r}() {\n      vec2 uv = uvFromFlat(${n}TexShape[0], ${n}TexShape[1], ${o});\n      return sampleTexture(${n}, uv);\n    }\n  `;const[i,u]=e.shapeInfo.texShape;return`\n    float ${r}() {\n      vec2 uv = uvFromFlat(${i}, ${u}, ${o});\n      return sampleTexture(${n}, uv);\n    }\n  `}(e,t);case 1:return function(e,t){const n=e.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1);if(e.shapeInfo.isUniform)return`\n      float ${r}(int index) {\n        ${Ff(e)}\n      }\n    `;const s=e.shapeInfo.texShape,a=s[0],o=s[1];if(1===o&&1===a)return`\n      float ${r}(int index) {\n        return sampleTexture(${n}, halfCR);\n      }\n    `;const i=Of(n);return 1===o?t?`\n      float ${r}(int index) {\n        vec2 uv = vec2(0.5, (float(index + ${i}) + 0.5) / float(${n}TexShape[0]));\n        return sampleTexture(${n}, uv);\n      }\n    `:`\n      float ${r}(int index) {\n        vec2 uv = vec2(0.5, (float(index + ${i}) + 0.5) / ${a}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `:1===a?t?`\n      float ${r}(int index) {\n        vec2 uv = vec2((float(index + ${i}) + 0.5) / float(${n}TexShape[1]), 0.5);\n        return sampleTexture(${n}, uv);\n      }\n    `:`\n      float ${r}(int index) {\n        vec2 uv = vec2((float(index + ${i}) + 0.5) / ${o}.0, 0.5);\n        return sampleTexture(${n}, uv);\n      }\n    `:t?`\n    float ${r}(int index) {\n      vec2 uv = uvFromFlat(${n}TexShape[0], ${n}TexShape[1], index + ${i});\n      return sampleTexture(${n}, uv);\n    }\n  `:`\n    float ${r}(int index) {\n      vec2 uv = uvFromFlat(${a}, ${o}, index + ${i});\n      return sampleTexture(${n}, uv);\n    }\n  `}(e,t);case 2:return function(e,t){const n=e.shapeInfo.logicalShape,r=e.name,s="get"+r.charAt(0).toUpperCase()+r.slice(1),a=e.shapeInfo.texShape;if(null!=a&&z(n,a)){if(t)return`\n      float ${s}(int row, int col) {\n        vec2 uv = (vec2(col, row) + halfCR) / vec2(${r}TexShape[1], ${r}TexShape[0]);\n        return sampleTexture(${r}, uv);\n      }\n    `;const e=a[0];return`\n    float ${s}(int row, int col) {\n      vec2 uv = (vec2(col, row) + halfCR) / vec2(${a[1]}.0, ${e}.0);\n      return sampleTexture(${r}, uv);\n    }\n  `}const{newShape:o,keptDims:i}=K(n),u=o;if(u.length<n.length){const n=["row","col"];return`\n      ${$f(Mf(e,u),t)}\n      float ${s}(int row, int col) {\n        return ${s}(${Lf(n,i)});\n      }\n    `}if(e.shapeInfo.isUniform)return`\n      float ${s}(int row, int col) {\n        int index = round(dot(vec2(row, col), vec2(${n[1]}, 1)));\n        ${Ff(e)}\n      }\n    `;const l=a[0],c=a[1],h=Of(r);return 1===c?t?`\n      float ${s}(int row, int col) {\n        float index = dot(vec3(row, col, ${h}), vec3(${r}Shape[1], 1, 1));\n        vec2 uv = vec2(0.5, (index + 0.5) / float(${r}TexShape[0]));\n        return sampleTexture(${r}, uv);\n      }\n    `:`\n    float ${s}(int row, int col) {\n      float index = dot(vec3(row, col, ${h}), vec3(${n[1]}, 1, 1));\n      vec2 uv = vec2(0.5, (index + 0.5) / ${l}.0);\n      return sampleTexture(${r}, uv);\n    }\n  `:1===l?t?`\n      float ${s}(int row, int col) {\n        float index = dot(vec3(row, col, ${h}), vec3(${r}Shape[1], 1, 1));\n        vec2 uv = vec2((index + 0.5) / float(${r}TexShape[1]), 0.5);\n        return sampleTexture(${r}, uv);\n      }\n    `:`\n    float ${s}(int row, int col) {\n      float index = dot(vec3(row, col, ${h}), vec3(${n[1]}, 1, 1));\n      vec2 uv = vec2((index + 0.5) / ${c}.0, 0.5);\n      return sampleTexture(${r}, uv);\n    }\n  `:t?`\n      float ${s}(int row, int col) {\n        // Explicitly use integer operations as dot() only works on floats.\n        int index = row * ${r}Shape[1] + col + ${h};\n        vec2 uv = uvFromFlat(${r}TexShape[0], ${r}TexShape[1], index);\n        return sampleTexture(${r}, uv);\n      }\n    `:`\n  float ${s}(int row, int col) {\n    // Explicitly use integer operations as dot() only works on floats.\n    int index = row * ${n[1]} + col + ${h};\n    vec2 uv = uvFromFlat(${l}, ${c}, index);\n    return sampleTexture(${r}, uv);\n  }\n`}(e,t);case 3:return function(e,t){const n=e.shapeInfo.logicalShape,r=e.name,s="get"+r.charAt(0).toUpperCase()+r.slice(1),a=n[1]*n[2],o=n[2],{newShape:i,keptDims:u}=K(n),l=i;if(l.length<n.length){const n=["row","col","depth"];return`\n        ${$f(Mf(e,l),t)}\n        float ${s}(int row, int col, int depth) {\n          return ${s}(${Lf(n,u)});\n        }\n      `}if(e.shapeInfo.isUniform)return`\n      float ${s}(int row, int col, int depth) {\n        int index = round(dot(vec3(row, col, depth),\n                          vec3(${a}, ${o}, 1)));\n        ${Ff(e)}\n      }\n    `;const c=e.shapeInfo.texShape,h=c[0],d=c[1],p=e.shapeInfo.flatOffset;if(d===a&&null==p)return t?`\n      float ${s}(int row, int col, int depth) {\n        int stride1 = ${r}Shape[2];\n        float texR = float(row);\n        float texC = dot(vec2(col, depth), vec2(stride1, 1));\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(${r}TexShape[1], ${r}TexShape[0]);\n        return sampleTexture(${r}, uv);\n      }\n    `:`\n        float ${s}(int row, int col, int depth) {\n          float texR = float(row);\n          float texC = dot(vec2(col, depth), vec2(${o}, 1));\n          vec2 uv = (vec2(texC, texR) + halfCR) /\n                     vec2(${d}.0, ${h}.0);\n          return sampleTexture(${r}, uv);\n        }\n      `;if(d===o&&null==p)return t?`\n      float ${s}(int row, int col, int depth) {\n        float texR = dot(vec2(row, col), vec2(${r}Shape[1], 1));\n        float texC = float(depth);\n        vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${r}TexShape[1], ${r}TexShape[0]);\n        return sampleTexture(${r}, uv);\n      }\n    `:`\n    float ${s}(int row, int col, int depth) {\n      float texR = dot(vec2(row, col), vec2(${n[1]}, 1));\n      float texC = float(depth);\n      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${d}.0, ${h}.0);\n      return sampleTexture(${r}, uv);\n    }\n  `;const f=Of(r);return t?`\n    float ${s}(int row, int col, int depth) {\n      // Explicitly use integer operations as dot() only works on floats.\n      int stride0 = ${r}Shape[1] * ${r}Shape[2];\n      int stride1 = ${r}Shape[2];\n      int index = row * stride0 + col * stride1 + depth + ${f};\n      vec2 uv = uvFromFlat(${r}TexShape[0], ${r}TexShape[1], index);\n      return sampleTexture(${r}, uv);\n    }\n    `:`\n      float ${s}(int row, int col, int depth) {\n        // Explicitly use integer operations as dot() only works on floats.\n        int index = row * ${a} + col * ${o} + depth + ${f};\n        vec2 uv = uvFromFlat(${h}, ${d}, index);\n        return sampleTexture(${r}, uv);\n      }\n  `}(e,t);case 4:return function(e,t){const n=e.shapeInfo.logicalShape,r=e.name,s="get"+r.charAt(0).toUpperCase()+r.slice(1),a=n[3],o=n[2]*a,i=n[1]*o,{newShape:u,keptDims:l}=K(n);if(u.length<n.length){const n=["row","col","depth","depth2"];return`\n      ${$f(Mf(e,u),t)}\n      float ${s}(int row, int col, int depth, int depth2) {\n        return ${s}(${Lf(n,l)});\n      }\n    `}if(e.shapeInfo.isUniform)return`\n      float ${s}(int row, int col, int depth, int depth2) {\n        int index = round(dot(vec4(row, col, depth, depth2),\n                          vec4(${i}, ${o}, ${a}, 1)));\n        ${Ff(e)}\n      }\n    `;const c=e.shapeInfo.flatOffset,h=e.shapeInfo.texShape,d=h[0],p=h[1],f=`int stride2 = ${r}Shape[3];`,m=`int stride1 = ${r}Shape[2] * stride2;`,g=`int stride0 = ${r}Shape[1] * stride1;`;if(p===i&&null==c)return t?`\n      float ${s}(int row, int col, int depth, int depth2) {\n        ${f}\n        ${m}\n        float texR = float(row);\n        float texC =\n            dot(vec3(col, depth, depth2),\n                vec3(stride1, stride2, 1));\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(${r}TexShape[1], ${r}TexShape[0]);\n        return sampleTexture(${r}, uv);\n      }\n    `:`\n      float ${s}(int row, int col, int depth, int depth2) {\n        float texR = float(row);\n        float texC =\n            dot(vec3(col, depth, depth2),\n                vec3(${o}, ${a}, 1));\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(${p}.0, ${d}.0);\n        return sampleTexture(${r}, uv);\n      }\n    `;if(p===a&&null==c)return t?`\n      float ${s}(int row, int col, int depth, int depth2) {\n        float texR = dot(vec3(row, col, depth),\n                         vec3(${r}Shape[1] * ${r}Shape[2], ${r}Shape[2], 1));\n        float texC = float(depth2);\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                  vec2(${r}TexShape[1], ${r}TexShape[0]);\n        return sampleTexture(${r}, uv);\n      }\n    `:`\n      float ${s}(int row, int col, int depth, int depth2) {\n        float texR = dot(vec3(row, col, depth),\n                         vec3(${n[1]*n[2]}, ${n[2]}, 1));\n        float texC = float(depth2);\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                  vec2(${p}.0, ${d}.0);\n        return sampleTexture(${r}, uv);\n      }\n    `;const y=Of(r);return t?`\n    float ${s}(int row, int col, int depth, int depth2) {\n      // Explicitly use integer operations as dot() only works on floats.\n      ${f}\n      ${m}\n      ${g}\n      int index = row * stride0 + col * stride1 +\n          depth * stride2 + depth2;\n      vec2 uv = uvFromFlat(${r}TexShape[0], ${r}TexShape[1], index + ${y});\n      return sampleTexture(${r}, uv);\n    }\n  `:`\n    float ${s}(int row, int col, int depth, int depth2) {\n      // Explicitly use integer operations as dot() only works on floats.\n      int index = row * ${i} + col * ${o} +\n          depth * ${a} + depth2;\n      vec2 uv = uvFromFlat(${d}, ${p}, index + ${y});\n      return sampleTexture(${r}, uv);\n    }\n  `}(e,t);case 5:return function(e){const t=e.shapeInfo.logicalShape,n=e.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1),s=t[4],a=t[3]*s,o=t[2]*a,i=t[1]*o,{newShape:u,keptDims:l}=K(t);if(u.length<t.length){const t=["row","col","depth","depth2","depth3"];return`\n      ${$f(Mf(e,u))}\n      float ${r}(int row, int col, int depth, int depth2, int depth3) {\n        return ${r}(${Lf(t,l)});\n      }\n    `}if(e.shapeInfo.isUniform)return`\n      float ${r}(int row, int col, int depth, int depth2, int depth3) {\n        float index = dot(\n          vec4(row, col, depth, depth2),\n          vec4(${i}, ${o}, ${a}, ${s})) +\n          depth3;\n        ${Ff(e)}\n      }\n    `;const c=e.shapeInfo.flatOffset,h=e.shapeInfo.texShape,d=h[0],p=h[1];if(p===i&&null==c)return`\n      float ${r}(int row, int col, int depth, int depth2, int depth3) {\n        int texR = row;\n        float texC = dot(vec4(col, depth, depth2, depth3),\n                         vec4(${o}, ${a}, ${s}, 1));\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(${p}.0, ${d}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `;if(p===s&&null==c)return`\n      float ${r}(int row, int col, int depth, int depth2, int depth3) {\n        float texR = dot(\n          vec4(row, col, depth, depth2),\n          vec4(${t[1]*t[2]*t[3]},\n               ${t[2]*t[3]}, ${t[3]}, 1));\n        int texC = depth3;\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                  vec2(${p}.0, ${d}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `;return`\n    float ${r}(int row, int col, int depth, int depth2, int depth3) {\n      // Explicitly use integer operations as dot() only works on floats.\n      int index = row * ${i} + col * ${o} + depth * ${a} +\n          depth2 * ${s} + depth3 + ${Of(n)};\n      vec2 uv = uvFromFlat(${d}, ${p}, index);\n      return sampleTexture(${n}, uv);\n    }\n  `}(e);case 6:return function(e){const t=e.shapeInfo.logicalShape,n=e.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1),{newShape:s,keptDims:a}=K(t);if(s.length<t.length){const t=["row","col","depth","depth2","depth3","depth4"];return`\n      ${$f(Mf(e,s))}\n      float ${r}(int row, int col, int depth,\n                    int depth2, int depth3, int depth4) {\n        return ${r}(${Lf(t,a)});\n      }\n    `}const o=t[5],i=t[4]*o,u=t[3]*i,l=t[2]*u,c=t[1]*l;if(e.shapeInfo.isUniform)return`\n      float ${r}(int row, int col, int depth,\n                  int depth2, int depth3, int depth4) {\n        int index = round(dot(\n          vec4(row, col, depth, depth2),\n          vec4(${c}, ${l}, ${u}, ${i})) +\n          dot(\n            vec2(depth3, depth4),\n            vec2(${o}, 1)));\n        ${Ff(e)}\n      }\n    `;const h=e.shapeInfo.flatOffset,d=e.shapeInfo.texShape,p=d[0],f=d[1];if(f===c&&null==h)return`\n      float ${r}(int row, int col, int depth,\n                    int depth2, int depth3, int depth4) {\n        int texR = row;\n        float texC = dot(vec4(col, depth, depth2, depth3),\n          vec4(${l}, ${u}, ${i}, ${o})) +\n               float(depth4);\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(${f}.0, ${p}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `;if(f===o&&null==h)return`\n      float ${r}(int row, int col, int depth,\n                    int depth2, int depth3, int depth4) {\n        float texR = dot(vec4(row, col, depth, depth2),\n          vec4(${t[1]*t[2]*t[3]*t[4]},\n               ${t[2]*t[3]*t[4]},\n               ${t[3]*t[4]},\n               ${t[4]})) + float(depth3);\n        int texC = depth4;\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                  vec2(${f}.0, ${p}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `;return`\n    float ${r}(int row, int col, int depth,\n                  int depth2, int depth3, int depth4) {\n      // Explicitly use integer operations as dot() only works on floats.\n      int index = row * ${c} + col * ${l} + depth * ${u} +\n          depth2 * ${i} + depth3 * ${o} + depth4 + ${Of(n)};\n      vec2 uv = uvFromFlat(${p}, ${f}, index);\n      return sampleTexture(${n}, uv);\n    }\n  `}(e);default:throw new Error(`${n.length}-D input sampling is not yet supported`)}}function Nf(e,t){switch(e.shapeInfo.logicalShape.length){case 0:return function(e){const t=e.name;return`\n    vec4 ${"get"+t.charAt(0).toUpperCase()+t.slice(1)}() {\n      return ${vf().texture2D}(${t}, halfCR);\n    }\n  `}(e);case 1:return function(e,t){const n=e.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1),s=e.shapeInfo.texShape,a=vf();if(t)return`\n    vec4 ${r}(int index) {\n      ivec2 packedTexShape = ivec2(ceil(float(${n}TexShape[0]) / 2.0), ceil(float(${n}TexShape[1]) / 2.0));\n      vec2 uv = packedUVfrom1D(\n        packedTexShape[0], packedTexShape[1], index);\n      return ${a.texture2D}(${n}, uv);\n    }\n  `;const o=[Math.ceil(s[0]/2),Math.ceil(s[1]/2)];return`\n    vec4 ${r}(int index) {\n      vec2 uv = packedUVfrom1D(\n        ${o[0]}, ${o[1]}, index);\n      return ${a.texture2D}(${n}, uv);\n    }\n  `}(e,t);case 2:return function(e,t){const n=e.shapeInfo.logicalShape,r=e.name,s="get"+r.charAt(0).toUpperCase()+r.slice(1),a=e.shapeInfo.texShape,o=a[0],i=a[1],u=vf();if(null!=a&&z(n,a))return t?`\n      vec4 ${s}(int row, int col) {\n        vec2 uv = (vec2(col, row) + halfCR) / vec2(${r}TexShape[1], ${r}TexShape[0]);\n\n        return ${u.texture2D}(${r}, uv);\n      }\n    `:`\n      vec4 ${s}(int row, int col) {\n        vec2 uv = (vec2(col, row) + halfCR) / vec2(${i}.0, ${o}.0);\n\n        return ${u.texture2D}(${r}, uv);\n      }\n    `;if(t)return`\n    vec4 ${s}(int row, int col) {\n      ivec2 packedTexShape = ivec2(ceil(float(${r}TexShape[0]) / 2.0), ceil(float(${r}TexShape[1]) / 2.0));\n      int valuesPerRow = int(ceil(float(${r}Shape[1]) / 2.0));\n      vec2 uv = packedUVfrom2D(valuesPerRow, packedTexShape[0], packedTexShape[1], row, col);\n      return ${u.texture2D}(${r}, uv);\n    }\n  `;const l=[Math.ceil(a[0]/2),Math.ceil(a[1]/2)];return`\n    vec4 ${s}(int row, int col) {\n      vec2 uv = packedUVfrom2D(${Math.ceil(n[1]/2)}, ${l[0]}, ${l[1]}, row, col);\n      return ${u.texture2D}(${r}, uv);\n    }\n  `}(e,t);case 3:return function(e,t){const n=e.shapeInfo.logicalShape,r=e.name,s="get"+r.charAt(0).toUpperCase()+r.slice(1),a=e.shapeInfo.texShape,o=[Math.ceil(a[0]/2),Math.ceil(a[1]/2)];if(1===n[0]){const r=[1,2],a=["b","row","col"];return`\n        ${Nf(Mf(e,n.slice(1)),t)}\n        vec4 ${s}(int b, int row, int col) {\n          return ${s}(${Lf(a,r)});\n        }\n      `}const i=vf();if(t)return`\n    vec4 ${s}(int b, int row, int col) {\n      ivec2 packedTexShape = ivec2(ceil(float(${r}TexShape[0]) / 2.0), ceil(float(${r}TexShape[1]) / 2.0));\n      int valuesPerRow = int(ceil(float(${r}Shape[2]) / 2.0));\n      int texelsInBatch = valuesPerRow * int(ceil(float(${r}Shape[1]) / 2.0));\n      vec2 uv = packedUVfrom3D(\n        packedTexShape[0], packedTexShape[1], texelsInBatch, valuesPerRow, b, row, col);\n      return ${i.texture2D}(${r}, uv);\n    }\n  `;const u=o[0],l=o[1],c=Math.ceil(n[2]/2);return`\n    vec4 ${s}(int b, int row, int col) {\n      vec2 uv = packedUVfrom3D(\n        ${u}, ${l}, ${c*Math.ceil(n[1]/2)}, ${c}, b, row, col);\n      return ${i.texture2D}(${r}, uv);\n    }\n  `}(e,t);default:return function(e,t){const n=e.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1),s=vf();if(t)return`\n    vec4 ${r}(int b2, int b, int row, int col) {\n      int valuesPerRow = int(ceil(float(${n}Shape[3]) / 2.0));\n      int texelsInBatch = valuesPerRow * int(ceil(float(${n}Shape[2]) / 2.0));\n      int index = b * texelsInBatch + (row / 2) * valuesPerRow + (col / 2);\n      texelsInBatch *= ${n}Shape[1];\n      index = b2 * texelsInBatch + index;\n      ivec2 packedTexShape = ivec2(ceil(float(${n}TexShape[0]) / 2.0), ceil(float(${n}TexShape[1]) / 2.0));\n      int texR = index / packedTexShape[1];\n      int texC = index - texR * packedTexShape[1];\n      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(packedTexShape[1], packedTexShape[0]); return ${s.texture2D}(${n}, uv);\n    }\n  `;const a=e.shapeInfo.logicalShape,o=a.length,i=e.shapeInfo.texShape,u=[Math.ceil(i[0]/2),Math.ceil(i[1]/2)],l=u[0],c=u[1],h=Math.ceil(a[o-1]/2);let d=h*Math.ceil(a[o-2]/2),p="int b, int row, int col",f=`b * ${d} + (row / 2) * ${h} + (col / 2)`;for(let e=2;e<o-1;e++)p=`int b${e}, `+p,d*=a[o-e-1],f=`b${e} * ${d} + `+f;return`\n    vec4 ${r}(${p}) {\n      int index = ${f};\n      int texR = index / ${c};\n      int texC = index - texR * ${c};\n      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${c}, ${l});\n      return ${s.texture2D}(${n}, uv);\n    }\n  `}(e,t)}}const Ef="\nvec2 uvFromFlat(int texNumR, int texNumC, int index) {\n  int texR = index / texNumC;\n  int texC = index - texR * texNumC;\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n}\nvec2 packedUVfrom1D(int texNumR, int texNumC, int index) {\n  int texelIndex = index / 2;\n  int texR = texelIndex / texNumC;\n  int texC = texelIndex - texR * texNumC;\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n}\n",Rf="\nvec2 packedUVfrom2D(int texelsInLogicalRow, int texNumR,\n  int texNumC, int row, int col) {\n  int texelIndex = (row / 2) * texelsInLogicalRow + (col / 2);\n  int texR = texelIndex / texNumC;\n  int texC = texelIndex - texR * texNumC;\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n}\n",_f="\nvec2 packedUVfrom3D(int texNumR, int texNumC,\n    int texelsInBatch, int texelsInLogicalRow, int b,\n    int row, int col) {\n  int index = b * texelsInBatch + (row / 2) * texelsInLogicalRow + (col / 2);\n  int texR = index / texNumC;\n  int texC = index - texR * texNumC;\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n}\n",Af="\n  float getChannel(vec4 frag, vec2 innerDims) {\n    vec2 modCoord = mod(innerDims, 2.);\n    return modCoord.x == 0. ?\n      (modCoord.y == 0. ? frag.r : frag.g) :\n      (modCoord.y == 0. ? frag.b : frag.a);\n  }\n  float getChannel(vec4 frag, int dim) {\n    float modCoord = mod(float(dim), 2.);\n    return modCoord == 0. ? frag.r : frag.g;\n  }\n";function Of(e){return`offset${e}`}function Ff(e){const t=e.name,n=B(e.shapeInfo.logicalShape);return n<2?`return ${t};`:`\n    for (int i = 0; i < ${n}; i++) {\n      if (i == index) {\n        return ${t}[i];\n      }\n    }\n  `}function Pf(e){if(e<=1)return"int";if(2===e)return"ivec2";if(3===e)return"ivec3";if(4===e)return"ivec4";if(5===e)return"ivec5";if(6===e)return"ivec6";throw Error(`GPU for rank ${e} is not yet supported`)}function Df(e,t,n){const{newShape:r,keptDims:s}=K(t),a=t.length,o=e&&3===a&&1===t[0],i=o?t.slice(1):r,u=!e&&a>1&&!z(t,n)&&r.length<a||o;return{useSqueezeShape:u,uniformShape:u?i:t,keptDims:s}}function Mf(e,t){const n=JSON.parse(JSON.stringify(e));return n.shapeInfo.logicalShape=t,n}function Lf(e,t){return t.map((t=>e[t])).join(", ")}function Bf(e,t,n){const r=[],s=[];let a,o,i,u=null,l=null;l=e.getUniformLocation(n,"NAN",!1),1===fe().getNumber("WEBGL_VERSION")&&(u=e.getUniformLocation(n,"INFINITY",!1));const c=!1;for(const s of t.variableNames){const a={name:s,uniform:e.getUniformLocation(n,s,c),offset:e.getUniformLocation(n,`offset${s}`,c)};t.enableShapeUniforms&&(a.shape=e.getUniformLocation(n,`${s}Shape`,c),a.texShape=e.getUniformLocation(n,`${s}TexShape`,c)),r.push(a)}if(t.enableShapeUniforms&&(a=e.getUniformLocation(n,"outShape",c),i=e.getUniformLocation(n,"outShapeStrides",c),o=e.getUniformLocation(n,"outTexShape",c)),t.customUniforms)for(const r of t.customUniforms)s.push(e.getUniformLocation(n,r.name,c));return{variablesLocations:r,customUniformLocations:s,infLoc:u,nanLoc:l,outShapeLocation:a,outShapeStridesLocation:i,outTexShapeLocation:o}}function zf(e,t){if(e.length!==t.length)throw Error(`Binary was compiled with ${e.length} inputs, but was executed with ${t.length} inputs`);e.forEach(((e,n)=>{const r=e.logicalShape,s=t[n],a=s.shape;if(!z(r,a))throw Error(`Binary was compiled with different shapes than the current args. Shapes ${r} and ${a} must match`);if(e.isUniform&&s.isUniform)return;const o=e.texShape,i=s.isUniform?null:s.texData.texShape;if(!z(o,i))throw Error(`Binary was compiled with different texture shapes than the current args. Shape ${o} and ${i} must match`)}))}function Uf(e){return fe().getBool("WEBGL_USE_SHAPES_UNIFORMS")&&e<=4}class Vf{constructor(e){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.outPackingScheme=Vp.DENSE,this.customUniforms=[{name:"texShape",type:"ivec2"}];const t=vf();this.outputShape=e,this.enableShapeUniforms=Uf(this.outputShape.length),this.userCode=`\n      ivec3 outCoordsFromFlatIndex(int index) {\n        ${this.enableShapeUniforms?kf(["r","c","d"],e):wf(["r","c","d"],e)}\n        return ivec3(r, c, d);\n      }\n\n      void main() {\n        ivec2 resTexRC = ivec2(resultUV.yx * vec2(texShape[0], texShape[1]));\n        int index = 4 * (resTexRC.x * texShape[1] + resTexRC.y);\n\n        vec4 result = vec4(0.);\n\n        for (int i=0; i<4; i++) {\n          int flatIndex = index + i;\n          ivec3 rc = outCoordsFromFlatIndex(flatIndex);\n          result[i] = getA(rc.x, rc.y, rc.z);\n        }\n\n        ${t.output} = result;\n      }\n    `}}class Wf{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outPackingScheme=Vp.DENSE,this.customUniforms=[{name:"texShape",type:"ivec2"}];const t=vf();this.outputShape=e,this.enableShapeUniforms=Uf(this.outputShape.length),this.userCode=`\n      ivec3 outCoordsFromFlatIndex(int index) {\n        ${this.enableShapeUniforms?kf(["r","c","d"],e):wf(["r","c","d"],e)}\n        return ivec3(r, c, d);\n      }\n\n      void main() {\n        ivec2 resTexRC = ivec2(resultUV.yx * vec2(texShape[0], texShape[1]));\n        int index = 4 * (resTexRC.x * texShape[1] + resTexRC.y);\n\n        vec4 result = vec4(0.);\n\n        for (int i=0; i<4; i++) {\n          int flatIndex = index + i;\n          ivec3 rc = outCoordsFromFlatIndex(flatIndex);\n          result[i] = getChannel(getA(rc.x, rc.y, rc.z), vec2(rc.y, rc.z));\n        }\n\n        ${t.output} = result;\n      }\n    `}}class Gf{constructor(e){this.variableNames=["A"],this.outTexUsage=Wp.DOWNLOAD;const t=vf();this.outputShape=e,this.userCode=`\n      ${Cf}\n\n      void main() {\n        float x = getAAtOutCoords();\n        ${t.output} = encode_float(x);\n      }\n    `}}class Hf{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!1,this.outTexUsage=Wp.DOWNLOAD;const t=vf();this.outputShape=e,this.userCode=`\n      ${Cf}\n\n      void main() {\n        ivec3 coords = getOutputCoords();\n        float x = getChannel(getAAtOutCoords(), vec2(coords.y, coords.z));\n        ${t.output} = encode_float(x);\n      }\n    `}}const jf={R:0,G:1,B:2,A:3};class Kf{constructor(e,t=!1,n="RGBA"){this.variableNames=["A"],this.customUniforms=[{name:"texShape",type:"ivec2"}];const r=vf();this.outputShape=e,this.enableShapeUniforms=Uf(this.outputShape.length);let s="result";t&&(s="floor(result * 255. + 0.5)");let a="";for(let e=0;e<n.length;e++){const t=n[e];a+=`\n          if(offset == ${e}) {\n            result = values[${jf[t]}];\n          }`}this.userCode=`\n      ${this.enableShapeUniforms?"\n  int getFlatIndex(ivec3 coords) {\n    return coords.x * outShapeStrides[0] + coords.y * outShapeStrides[1] + coords.z;\n  }\n":Sf(e)}\n\n      void main() {\n        ivec3 coords = getOutputCoords();\n        int flatIndex = getFlatIndex(coords);\n        float result = 0.;\n        int offset = imod(flatIndex, ${n.length});\n\n        flatIndex = idiv(flatIndex, ${n.length}, 1.);\n\n        int r = flatIndex / texShape[1];\n        if (r < texShape[0]) {\n          int c = imod(flatIndex, texShape[1]);\n          vec2 uv = (vec2(c, r) + halfCR) / vec2(texShape[1], texShape[0]);\n          vec4 values = ${r.texture2D}(A, uv);\n          ${a}\n        }\n        ${r.output} = vec4(${s}, 0., 0., 0.);\n      }\n    `}}class qf{constructor(e,t=!1){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.customUniforms=[{name:"texShape",type:"ivec2"}];const n=vf();this.outputShape=e,this.enableShapeUniforms=Uf(this.outputShape.length);let r="",s="result";t&&(s="floor(result * 255. + 0.5)");for(let t=0;t<=1;t++)for(let s=0;s<=1;s++){const a=2*t+s;r+=`\n          localCoords = coords;\n          if(localCoords[2] + ${s} < ${this.enableShapeUniforms?"outShape[2]":`${e[2]}`}) {\n          localCoords[2] += ${s};\n          if (localCoords[1] + ${t} < ${this.enableShapeUniforms?"outShape[1]":`${e[1]}`}) {\n            localCoords[1] += ${t};\n\n            flatIndex = getFlatIndex(localCoords);\n            offset = imod(flatIndex, 4);\n\n            flatIndex = idiv(flatIndex, 4, 1.);\n\n            int r = flatIndex / texShape[1];\n            int c = imod(flatIndex, texShape[1]);\n            vec2 uv = (vec2(c, r) + halfCR) / vec2(texShape[1], texShape[0]);\n            values = ${n.texture2D}(A, uv);\n\n            if (offset == 0) {\n              result[${a}] = values[0];\n            } else if (offset == 1) {\n              result[${a}] = values[1];\n            } else if (offset == 2) {\n              result[${a}] = values[2];\n            } else {\n              result[${a}] = values[3];\n            }\n          }\n        }\n        `}this.userCode=`\n        ${this.enableShapeUniforms?"\n  int getFlatIndex(ivec3 coords) {\n    return coords.x * outShapeStrides[0] + coords.y * outShapeStrides[1] + coords.z;\n  }\n":Sf(e)}\n\n        void main() {\n          ivec3 coords = getOutputCoords();\n\n          vec4 result = vec4(0.);\n          int flatIndex, r, c, offset;\n          ivec3 localCoords;\n          vec2 uv;\n          vec4 values;\n\n          ${r}\n\n          ${n.output} = ${s};\n        }\n    `}}function Xf(e,t,n,r,s,a){!function(e,t){const n=fe().getNumber("WEBGL_MAX_TEXTURE_SIZE");if(e<=0||t<=0)throw new Error(`Requested texture size [${e}x${t}] is invalid.`);if(e>n||t>n)throw new Error(`Requested texture size [${e}x${t}] greater than WebGL maximum on this browser / GPU [${n}x${n}].`)}(t,n);const o=function(e){return of(e,(()=>e.createTexture()),"Unable to create WebGLTexture.")}(e),i=e.TEXTURE_2D;return Xp(e,(()=>e.bindTexture(i,o))),Xp(e,(()=>e.texParameteri(i,e.TEXTURE_WRAP_S,e.CLAMP_TO_EDGE))),Xp(e,(()=>e.texParameteri(i,e.TEXTURE_WRAP_T,e.CLAMP_TO_EDGE))),Xp(e,(()=>e.texParameteri(i,e.TEXTURE_MIN_FILTER,e.NEAREST))),Xp(e,(()=>e.texParameteri(i,e.TEXTURE_MAG_FILTER,e.NEAREST))),1===fe().getNumber("WEBGL_VERSION")?Xp(e,(()=>e.texImage2D(i,0,r,t,n,0,s,a,null))):Xp(e,(()=>e.texStorage2D(i,1,r,t,n))),Xp(e,(()=>e.bindTexture(e.TEXTURE_2D,null))),{texture:o,texShape:[n,t]}}function Yf(e){return e.internalFormatFloat}function Qf(e){return e.internalFormatHalfFloat}function Zf(e){return e.downloadTextureFormat}function Jf(e){return e.internalFormatPackedFloat}function em(e){return e.internalFormatPackedHalfFloat}class tm{constructor(e){this.outputTexture=null,this.program=null,this.disposed=!1,this.itemsToPoll=[];const t=fe().getNumber("WEBGL_VERSION");if(null!=e?(this.gl=e,function(e,t){Bp[e]=t}(t,e)):this.gl=Up(t),e=this.gl,2===fe().getNumber("WEBGL_VERSION")){const t=e;this.createVertexArray=()=>Xp(t,(()=>t.createVertexArray())),this.bindVertexArray=e=>Xp(t,(()=>t.bindVertexArray(e))),this.deleteVertexArray=e=>Xp(t,(()=>t.deleteVertexArray(e))),this.getVertexArray=()=>Xp(t,(()=>t.getParameter(t.VERTEX_ARRAY_BINDING)))}else if(null!=e){const t=e.getExtension("OES_vertex_array_object");if(null==t)throw new Error("All WebGL1 implementations are expected to offer OES_vertex_array_object.");this.createVertexArray=()=>Xp(e,(()=>t.createVertexArrayOES())),this.bindVertexArray=n=>Xp(e,(()=>t.bindVertexArrayOES(n))),this.deleteVertexArray=n=>Xp(e,(()=>t.deleteVertexArrayOES(n))),this.getVertexArray=()=>Xp(e,(()=>e.getParameter(t.VERTEX_ARRAY_BINDING_OES)))}let n="WEBGL_color_buffer_float";const r="EXT_color_buffer_half_float";if(this.parallelCompilationExtension=this.gl.getExtension("KHR_parallel_shader_compile"),1===fe().getNumber("WEBGL_VERSION")){const e="OES_texture_float",t="OES_texture_half_float";if(this.textureFloatExtension=Qp(this.gl,e),mf(this.gl,t))this.textureHalfFloatExtension=Qp(this.gl,t);else if(fe().get("WEBGL_FORCE_F16_TEXTURES"))throw new Error("GL context does not support half float textures, yet the environment flag WEBGL_FORCE_F16_TEXTURES is set to true.");if(this.colorBufferFloatExtension=this.gl.getExtension(n),mf(this.gl,r))this.colorBufferHalfFloatExtension=Qp(this.gl,r);else if(fe().get("WEBGL_FORCE_F16_TEXTURES"))throw new Error("GL context does not support color renderable half floats, yet the environment flag WEBGL_FORCE_F16_TEXTURES is set to true.")}else if(n="EXT_color_buffer_float",mf(this.gl,n))this.colorBufferFloatExtension=this.gl.getExtension(n);else{if(!mf(this.gl,r))throw new Error("GL context does not support color renderable floats");this.colorBufferHalfFloatExtension=this.gl.getExtension(r)}this.vertexBuffer=function(e){return function(e,t){const n=of(e,(()=>e.createBuffer()),"Unable to create WebGLBuffer");return Xp(e,(()=>e.bindBuffer(e.ARRAY_BUFFER,n))),Xp(e,(()=>e.bufferData(e.ARRAY_BUFFER,t,e.STATIC_DRAW))),n}(e,new Float32Array([-1,1,0,0,1,-1,-1,0,0,0,1,1,0,1,1,1,-1,0,1,0]))}(this.gl),this.indexBuffer=function(e){return function(e,t){const n=of(e,(()=>e.createBuffer()),"Unable to create WebGLBuffer");return Xp(e,(()=>e.bindBuffer(e.ELEMENT_ARRAY_BUFFER,n))),Xp(e,(()=>e.bufferData(e.ELEMENT_ARRAY_BUFFER,t,e.STATIC_DRAW))),n}(e,new Uint16Array([0,1,2,2,1,3]))}(this.gl),this.framebuffer=function(e){return of(e,(()=>e.createFramebuffer()),"Unable to create WebGLFramebuffer.")}(this.gl),this.textureConfig=qp(this.gl,this.textureHalfFloatExtension)}get debug(){return fe().getBool("DEBUG")}dispose(){if(this.disposed)return;null!=this.program&&console.warn("Disposing a GPGPUContext that still has a bound WebGLProgram. This is probably a resource leak, delete the program with GPGPUContext.deleteProgram before disposing."),null!=this.outputTexture&&console.warn("Disposing a GPGPUContext that still has a bound output matrix texture.  This is probably a resource leak, delete the output matrix texture with GPGPUContext.deleteMatrixTexture before disposing.");const e=this.gl;Xp(e,(()=>e.finish())),Xp(e,(()=>e.bindFramebuffer(e.FRAMEBUFFER,null))),Xp(e,(()=>e.deleteFramebuffer(this.framebuffer))),Xp(e,(()=>e.bindBuffer(e.ARRAY_BUFFER,null))),Xp(e,(()=>e.bindBuffer(e.ELEMENT_ARRAY_BUFFER,null))),Xp(e,(()=>e.deleteBuffer(this.indexBuffer))),this.disposed=!0}createFloat32MatrixTexture(e,t){return this.throwIfDisposed(),function(e,t,n,r){const[s,a]=Hp(t,n);return Xf(e,s,a,Yf(r),r.textureFormatFloat,e.FLOAT)}(this.gl,e,t,this.textureConfig)}createFloat16MatrixTexture(e,t){return this.throwIfDisposed(),function(e,t,n,r){const[s,a]=Hp(t,n);return Xf(e,s,a,Qf(r),r.textureFormatFloat,r.textureTypeHalfFloat)}(this.gl,e,t,this.textureConfig)}createUnsignedBytesMatrixTexture(e,t){return this.throwIfDisposed(),function(e,t,n,r){const[s,a]=Hp(t,n);return Xf(e,s,a,Zf(r),e.RGBA,e.UNSIGNED_BYTE)}(this.gl,e,t,this.textureConfig)}uploadPixelDataToTexture(e,t){this.throwIfDisposed(),function(e,t,n){Xp(e,(()=>e.bindTexture(e.TEXTURE_2D,t))),n.data instanceof Uint8Array?2===fe().getNumber("WEBGL_VERSION")?Xp(e,(()=>e.texSubImage2D(e.TEXTURE_2D,0,0,0,n.width,n.height,e.RGBA,e.UNSIGNED_BYTE,n.data))):Xp(e,(()=>e.texImage2D(e.TEXTURE_2D,0,e.RGBA,n.width,n.height,0,e.RGBA,e.UNSIGNED_BYTE,n.data))):2===fe().getNumber("WEBGL_VERSION")?Xp(e,(()=>e.texSubImage2D(e.TEXTURE_2D,0,0,0,e.RGBA,e.UNSIGNED_BYTE,n))):Xp(e,(()=>e.texImage2D(e.TEXTURE_2D,0,e.RGBA,e.RGBA,e.UNSIGNED_BYTE,n))),Xp(e,(()=>e.bindTexture(e.TEXTURE_2D,null)))}(this.gl,e,t)}uploadDenseMatrixToTexture(e,t,n,r){this.throwIfDisposed(),function(e,t,n,r,s,a){let o,i,u;Xp(e,(()=>e.bindTexture(e.TEXTURE_2D,t))),s instanceof Uint8Array?(o=new Uint8Array(n*r*4),i=e.UNSIGNED_BYTE,u=e.RGBA):(o=new Float32Array(n*r*4),i=e.FLOAT,u=a.internalFormatPackedFloat),o.set(s),2===fe().getNumber("WEBGL_VERSION")?Xp(e,(()=>e.texSubImage2D(e.TEXTURE_2D,0,0,0,n,r,e.RGBA,i,o))):Xp(e,(()=>e.texImage2D(e.TEXTURE_2D,0,u,n,r,0,e.RGBA,i,o))),Xp(e,(()=>e.bindTexture(e.TEXTURE_2D,null)))}(this.gl,e,t,n,r,this.textureConfig)}createFloat16PackedMatrixTexture(e,t){return this.throwIfDisposed(),function(e,t,n,r){const[s,a]=Kp(t,n);return Xf(e,s,a,em(r),e.RGBA,r.textureTypeHalfFloat)}(this.gl,e,t,this.textureConfig)}createPackedMatrixTexture(e,t){return this.throwIfDisposed(),function(e,t,n,r){const[s,a]=Kp(t,n);return Xf(e,s,a,Jf(r),e.RGBA,e.FLOAT)}(this.gl,e,t,this.textureConfig)}deleteMatrixTexture(e){this.throwIfDisposed(),this.outputTexture===e&&(sf(this.gl,this.framebuffer),this.outputTexture=null),Xp(this.gl,(()=>this.gl.deleteTexture(e)))}downloadByteEncodedFloatMatrixFromOutputTexture(e,t,n){return this.downloadMatrixDriver(e,(()=>function(e,t,n,r){const[s,a]=Hp(t,n),o=new Uint8Array(t*n*4);return Xp(e,(()=>e.readPixels(0,0,s,a,r.downloadTextureFormat,e.UNSIGNED_BYTE,o))),new Float32Array(o.buffer)}(this.gl,t,n,this.textureConfig)))}downloadPackedMatrixFromBuffer(e,t,n,r,s,a){return function(e,t,n,r,s,a,o,i){const u=e,l=new Float32Array(function(e,t){const[n,r]=Kp(e,t);return n*r*4}(a,o));return u.bindBuffer(u.PIXEL_PACK_BUFFER,t),u.getBufferSubData(u.PIXEL_PACK_BUFFER,0,l),u.bindBuffer(u.PIXEL_PACK_BUFFER,null),l}(this.gl,e,0,0,0,s,a,this.textureConfig)}downloadFloat32MatrixFromBuffer(e,t){return function(e,t,n){const r=e,s=new Float32Array(n);return r.bindBuffer(r.PIXEL_PACK_BUFFER,t),r.getBufferSubData(r.PIXEL_PACK_BUFFER,0,s),r.bindBuffer(r.PIXEL_PACK_BUFFER,null),s}(this.gl,e,t)}createBufferFromTexture(e,t,n){this.bindTextureToFrameBuffer(e);const r=function(e,t,n,r){const s=e.createBuffer();Xp(e,(()=>e.bindBuffer(e.PIXEL_PACK_BUFFER,s)));const a=16*t*n;return Xp(e,(()=>e.bufferData(e.PIXEL_PACK_BUFFER,a,e.STREAM_READ))),Xp(e,(()=>e.readPixels(0,0,n,t,e.RGBA,e.FLOAT,0))),Xp(e,(()=>e.bindBuffer(e.PIXEL_PACK_BUFFER,null))),s}(this.gl,t,n,this.textureConfig);return this.unbindTextureToFrameBuffer(),r}createAndWaitForFence(){const e=this.createFence(this.gl);return this.pollFence(e)}createFence(e){let t,n;if(fe().getBool("WEBGL_FENCE_API_ENABLED")){const r=e,s=r.fenceSync(r.SYNC_GPU_COMMANDS_COMPLETE,0);e.flush(),n=()=>{const e=r.clientWaitSync(s,0,0);return e===r.ALREADY_SIGNALED||e===r.CONDITION_SATISFIED},t=s}else fe().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")>0?(t=this.beginQuery(),this.endQuery(),n=()=>this.isQueryAvailable(t,fe().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))):n=()=>!0;return{query:t,isFencePassed:n}}downloadMatrixFromPackedTexture(e,t,n){return this.downloadMatrixDriver(e,(()=>function(e,t,n){const r=new Float32Array(t*n*4);return Xp(e,(()=>e.readPixels(0,0,n,t,e.RGBA,e.FLOAT,r))),r}(this.gl,t,n)))}createProgram(e){this.throwIfDisposed();const t=this.gl;null==this.vertexShader&&(this.vertexShader=function(e){const t=vf();return function(e,t){const n=of(e,(()=>e.createShader(e.VERTEX_SHADER)),"Unable to create vertex WebGLShader.");if(Xp(e,(()=>e.shaderSource(n,t))),Xp(e,(()=>e.compileShader(n))),!1===e.getShaderParameter(n,e.COMPILE_STATUS))throw console.log(e.getShaderInfoLog(n)),new Error("Failed to compile vertex shader.");return n}(e,`${t.version}\n    precision highp float;\n    ${t.attribute} vec3 clipSpacePos;\n    ${t.attribute} vec2 uv;\n    ${t.varyingVs} vec2 resultUV;\n\n    void main() {\n      gl_Position = vec4(clipSpacePos, 1);\n      resultUV = uv;\n    }`)}(t));const n=function(e){return of(e,(()=>e.createProgram()),"Unable to create WebGLProgram.")}(t);Xp(t,(()=>t.attachShader(n,this.vertexShader))),Xp(t,(()=>t.attachShader(n,e))),function(e,t){if(Xp(e,(()=>e.linkProgram(t))),!fe().get("ENGINE_COMPILE_ONLY")&&!1===e.getProgramParameter(t,e.LINK_STATUS))throw console.log(e.getProgramInfoLog(t)),new Error("Failed to link vertex and fragment shaders.")}(t,n);const r=Object.assign(n,{vao:this.createVertexArray()});return this.debug&&ef(t,r),r}buildVao(e){this.setProgram(e),this.bindVertexArray(e.vao);const t=this.gl;Xp(t,(()=>t.bindBuffer(t.ELEMENT_ARRAY_BUFFER,this.indexBuffer))),function(e,t,n){Xp(e,(()=>e.bindBuffer(e.ARRAY_BUFFER,n))),tf(e,t,"clipSpacePos",n,3,20,0)&&tf(e,t,"uv",n,2,20,12)}(t,e,this.vertexBuffer)}deleteProgram(e){this.throwIfDisposed(),e===this.program&&(this.program=null),null!=e&&(Xp(this.gl,(()=>this.gl.deleteProgram(e))),this.deleteVertexArray(e.vao))}setProgram(e){this.throwIfDisposed(),this.program=e,null!=this.program&&this.debug&&ef(this.gl,this.program),Xp(this.gl,(()=>this.gl.useProgram(e)))}getUniformLocation(e,t,n=!0){return this.throwIfDisposed(),n?function(e,t,n){return of(e,(()=>e.getUniformLocation(t,n)),'uniform "'+n+'" not present in program.')}(this.gl,e,t):function(e,t,n){return e.getUniformLocation(t,n)}(this.gl,e,t)}getAttributeLocation(e,t){return this.throwIfDisposed(),Xp(this.gl,(()=>this.gl.getAttribLocation(e,t)))}getUniformLocationNoThrow(e,t){return this.throwIfDisposed(),this.gl.getUniformLocation(e,t)}setInputMatrixTexture(e,t,n){this.throwIfDisposed(),this.throwIfNoProgram(),nf(this.gl,e,t,n)}setOutputMatrixTexture(e,t,n){this.setOutputMatrixTextureDriver(e,n,t)}setOutputPackedMatrixTexture(e,t,n){this.throwIfDisposed();const[r,s]=Kp(t,n);this.setOutputMatrixTextureDriver(e,r,s)}setOutputMatrixWriteRegion(e,t,n,r){this.setOutputMatrixWriteRegionDriver(n,e,r,t)}setOutputPackedMatrixWriteRegion(e,t,n,r){throw new Error("setOutputPackedMatrixWriteRegion not implemented.")}debugValidate(){null!=this.program&&ef(this.gl,this.program),af(this.gl)}executeProgram(){this.throwIfDisposed(),this.throwIfNoProgram();const e=this.gl;if(this.debug){const e=this.getVertexArray();console.assert(e===this.program.vao,"VAO changed between setProgram and executeProgram!"),this.debugValidate()}Xp(e,(()=>e.drawElements(e.TRIANGLES,6,e.UNSIGNED_SHORT,0)))}blockUntilAllProgramsCompleted(){this.throwIfDisposed(),Xp(this.gl,(()=>this.gl.finish()))}getQueryTimerExtension(){return null==this.disjointQueryTimerExtension&&(this.disjointQueryTimerExtension=Qp(this.gl,2===fe().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")?"EXT_disjoint_timer_query_webgl2":"EXT_disjoint_timer_query")),this.disjointQueryTimerExtension}getQueryTimerExtensionWebGL2(){return this.getQueryTimerExtension()}getQueryTimerExtensionWebGL1(){return this.getQueryTimerExtension()}beginQuery(){if(2===fe().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")){const e=this.gl,t=this.getQueryTimerExtensionWebGL2(),n=e.createQuery();return e.beginQuery(t.TIME_ELAPSED_EXT,n),n}const e=this.getQueryTimerExtensionWebGL1(),t=e.createQueryEXT();return e.beginQueryEXT(e.TIME_ELAPSED_EXT,t),t}endQuery(){if(2===fe().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")){const e=this.gl,t=this.getQueryTimerExtensionWebGL2();return void e.endQuery(t.TIME_ELAPSED_EXT)}const e=this.getQueryTimerExtensionWebGL1();e.endQueryEXT(e.TIME_ELAPSED_EXT)}async waitForQueryAndGetTime(e){return await G((()=>this.disposed||this.isQueryAvailable(e,fe().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")))),this.getQueryTime(e,fe().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))}getQueryTime(e,t){if(0===t)return null;if(2===t){const t=this.gl;return t.getQueryParameter(e,t.QUERY_RESULT)/1e6}{const t=this.getQueryTimerExtensionWebGL1();return t.getQueryObjectEXT(e,t.QUERY_RESULT_EXT)/1e6}}isQueryAvailable(e,t){if(0===t)return!0;if(2===t){const t=this.gl,n=this.getQueryTimerExtensionWebGL2(),r=t.getQueryParameter(e,t.QUERY_RESULT_AVAILABLE);return null==this.disjoint&&(this.disjoint=this.gl.getParameter(n.GPU_DISJOINT_EXT)),r&&!this.disjoint}{const t=this.getQueryTimerExtensionWebGL1(),n=t.getQueryObjectEXT(e,t.QUERY_RESULT_AVAILABLE_EXT);return null==this.disjoint&&(this.disjoint=this.gl.getParameter(t.GPU_DISJOINT_EXT)),n&&!this.disjoint}}pollFence(e){return new Promise((t=>{this.addItemToPoll((()=>e.isFencePassed()),(()=>t()))}))}pollItems(){const e=function(e){let t=0;for(;t<e.length&&e[t]();++t);return t-1}(this.itemsToPoll.map((e=>e.isDoneFn)));for(let t=0;t<=e;++t){const{resolveFn:e}=this.itemsToPoll[t];e()}this.itemsToPoll=this.itemsToPoll.slice(e+1)}addItemToPoll(e,t){if(this.itemsToPoll.push({isDoneFn:e,resolveFn:t}),this.itemsToPoll.length>1)return;let n;"setTimeoutCustom"in fe().platform&&(n=fe().platform.setTimeoutCustom.bind(fe().platform)),G((()=>(this.pollItems(),0===this.itemsToPoll.length)),(()=>0),null,n)}bindTextureToFrameBuffer(e){this.throwIfDisposed(),rf(this.gl,e,this.framebuffer),this.debug&&af(this.gl)}unbindTextureToFrameBuffer(){null!=this.outputTexture?(rf(this.gl,this.outputTexture,this.framebuffer),this.debug&&af(this.gl)):sf(this.gl,this.framebuffer)}downloadMatrixDriver(e,t){this.bindTextureToFrameBuffer(e);const n=t();return this.unbindTextureToFrameBuffer(),n}setOutputMatrixTextureDriver(e,t,n){this.throwIfDisposed();const r=this.gl;rf(r,e,this.framebuffer),this.debug&&af(r),this.outputTexture=e,Xp(r,(()=>r.viewport(0,0,t,n))),Xp(r,(()=>r.scissor(0,0,t,n)))}setOutputMatrixWriteRegionDriver(e,t,n,r){this.throwIfDisposed(),Xp(this.gl,(()=>this.gl.scissor(e,t,n,r)))}throwIfDisposed(){if(this.disposed)throw new Error("Attempted to use disposed GPGPUContext.")}throwIfNoProgram(){if(null==this.program)throw new Error("No GPU program is currently set.")}}function nm(e,t){Array.isArray(e)||(e=[e]),e.forEach((e=>{null!=e&&D("complex64"!==e.dtype,(()=>`${t} does not support complex64 tensors in the CPU backend.`))}))}function rm(e){const t=new Float32Array(e.length);for(let n=0;n<e.length;++n)t[n]=Math.abs(e[n]);return t}function sm(e){return(t,n,r,s,a)=>{const o=Io(t,n),i=o.length,u=ne(o),l=q(a,B(o)),c=t.length,h=n.length,d=ne(t),p=ne(n),f=So(t,o),m=So(n,o);if(f.length+m.length===0)for(let t=0;t<l.length;++t)l[t]=e(r[t%r.length],s[t%s.length]);else for(let t=0;t<l.length;++t){const n=le(t,i,u),a=n.slice(-c);f.forEach((e=>a[e]=0));const o=ue(a,c,d),g=n.slice(-h);m.forEach((e=>g[e]=0));const y=ue(g,h,p);l[t]=e(r[o],s[y])}return[l,o]}}function am(e){const{inputs:t,backend:n}=e,{real:r,imag:s}=t,a=n.data.get(r.dataId).values,o=n.data.get(s.dataId).values,i=n.makeTensorInfo(r.shape,"complex64");return n.data.get(i.dataId).complexTensorInfos={real:n.makeTensorInfo(r.shape,"float32",a),imag:n.makeTensorInfo(s.shape,"float32",o)},i}function om(e,t,n="float32"){if("complex64"===n)return am({inputs:{real:om(e,t,"float32"),imag:om(e,t,"float32")},backend:e});const r=oe(B(t),n);return e.makeTensorInfo(t,n,r)}function im(e){const{inputs:t,backend:n}=e,{x:r}=t;return n.incRef(r.dataId),{dataId:r.dataId,shape:r.shape,dtype:r.dtype}}function um(e,t,n,r){if("int32"===r)return[t,"int32",Int32Array.from(e)];if("bool"===r){const r=jr([0],n),[s,a]=sm(((e,t)=>e!==t?1:0))(t,[],e,r,"bool");return[a,"bool",s]}throw new Error(`Error in Cast: failed to cast ${n} to ${r}`)}function lm(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{dtype:a}=r;if("complex64"===a){if("complex64"===s.dtype)return im({inputs:{x:s},backend:n});const e=om(n,s.shape,s.dtype),t=lm({inputs:{x:s},backend:n,attrs:{dtype:"float32"}}),r=am({inputs:{real:t,imag:e},backend:n});return n.disposeIntermediateTensorInfo(e),n.disposeIntermediateTensorInfo(t),r}if("complex64"===s.dtype){const e=function(e){const{inputs:t,backend:n}=e,{input:r}=t,s=n.data.get(r.dataId).complexTensorInfos.real,a=n.data.get(s.dataId).values;return n.makeTensorInfo(s.shape,s.dtype,a)}({inputs:{input:s},backend:n}),t=lm({inputs:{x:e},backend:n,attrs:{dtype:a}});return n.disposeIntermediateTensorInfo(e),t}if(!Y(s.dtype,a)){const e=im({inputs:{x:s},backend:n});return{dataId:e.dataId,shape:e.shape,dtype:a}}const o=n.data.get(s.dataId).values,[i,u,l]=um(o,s.shape,s.dtype,a);return n.makeTensorInfo(i,u,l)}function cm(e,t,n,r){return null==n?({inputs:n,backend:s})=>{const{a,b:o}=n,i=s;nm([a,o],e);const u=i.data.get(a.dataId).values,l=i.data.get(o.dataId).values,c="string"===a.dtype?Mp(u):u,h="string"===a.dtype?Mp(l):l,d=r||a.dtype,[p,f]=t(a.shape,o.shape,c,h,d);return i.makeTensorInfo(f,d,p)}:({inputs:e,backend:s})=>{const{a,b:o}=e,i=s;if("complex64"===a.dtype||"complex64"===o.dtype){const e=lm({inputs:{x:a},backend:i,attrs:{dtype:"complex64"}}),t=i.data.get(e.dataId),r=t.complexTensorInfos.real,s=t.complexTensorInfos.imag,u=i.data.get(r.dataId).values,l=i.data.get(s.dataId).values,c=lm({inputs:{x:o},backend:i,attrs:{dtype:"complex64"}}),h=i.data.get(c.dataId),d=h.complexTensorInfos.real,p=h.complexTensorInfos.imag,f=i.data.get(d.dataId).values,m=i.data.get(p.dataId).values,[g,y,x]=n(a.shape,o.shape,u,l,f,m),b=i.makeTensorInfo(x,"float32",g),v=i.makeTensorInfo(x,"float32",y),w=am({inputs:{real:b,imag:v},backend:i});return i.disposeIntermediateTensorInfo(e),i.disposeIntermediateTensorInfo(c),i.disposeIntermediateTensorInfo(b),i.disposeIntermediateTensorInfo(v),w}{const e=i.data.get(a.dataId).values,n=i.data.get(o.dataId).values,s=r||a.dtype,[u,l]=t(a.shape,o.shape,e,n,s);return i.makeTensorInfo(l,s,u)}}}function hm(e){return(t,n,r,s,a,o)=>{const i=Io(t,n),u=B(i),l=i.length,c=ne(i),h=q("float32",u),d=q("float32",u),p=So(t,i),f=So(n,i),m=rp(r,s),g=rp(a,o),y=t.length,x=ne(t),b=n.length,v=ne(n);if(p.length+f.length===0)for(let t=0;t<h.length;t++){const n=t%m.length,r=t%g.length,s=e(m[2*n],m[2*n+1],g[2*r],g[2*r+1]);h[t]=s.real,d[t]=s.imag}else for(let t=0;t<h.length;t++){const n=le(t,l,c),r=n.slice(-y);p.forEach((e=>r[e]=0));const s=ue(r,y,x),a=n.slice(-b);f.forEach((e=>a[e]=0));const o=ue(a,b,v),i=e(m[2*s],m[2*s+1],g[2*o],g[2*o+1]);h[t]=i.real,d[t]=i.imag}return[h,d,i]}}const dm=sm(((e,t)=>e+t)),pm=hm(((e,t,n,r)=>({real:e+n,imag:t+r})));function fm(e,t,n,r,s){const a=B(r),o=oe(s,n);for(let n=0;n<e.length;n++){const r=e[n];if(r<0)throw new Error("Input x must be non-negative!");r>=s||(o[r]+=a>0?t[n]:1)}return o}function mm(e,t,n,r=!1){const s=e.shape[0],a=e.shape[1],o=Ha([s,n],t.dtype);for(let i=0;i<s;i++)for(let s=0;s<a;s++){const a=e.get(i,s);if(a<0)throw new Error("Input x must be non-negative!");a>=n||(r?o.set(1,i,a):t.size>0?o.set(o.get(i,a)+t.get(i,s),i,a):o.set(o.get(i,a)+1,i,a))}return o}cm(ke,dm,pm);const gm=sm(((e,t)=>e&t));function ym(e){return(t,n,r)=>{const s=X(n,t.length);for(let n=0;n<t.length;++n)s[n]=e(t[n],r);return s}}function xm(e,t,n){return bm(e,ym(t),n)}function bm(e,t,n){return({inputs:r,attrs:s,backend:a})=>{const{x:o}=r;nm(o,e);const i=a,u=i.data.get(o.dataId).values;let l;if("string"===o.dtype){if(!Array.isArray(u))throw new Error("String tensor's value was not an instance of Array");l=Mp(u)}else l=u;const c=n||o.dtype,h=t(l,c,s);return i.makeTensorInfo(o.shape,c,h)}}cm(Be,gm);const vm=ym((e=>Math.ceil(e)));function wm(e,t,n,r){const s=X(n,B(t));if(r&&"string"!==n){let t=0;e.forEach((e=>{const n=B(e.shape);s.set(e.vals,t),t+=n}))}else{let r=0;e.forEach((e=>{const a="string"===n?Mp(e.vals):e.vals;let o=0;for(let n=0;n<e.shape[0];++n){const i=n*t[1]+r;for(let t=0;t<e.shape[1];++t)s[i+t]=a[o++]}r+=e.shape[1]}))}return s}bm(Ve,vm);const km=sm(((e,t)=>e===t?1:0)),Sm=(cm(mt,km,null,"bool"),ym((e=>Math.exp(e)))),Cm=(bm(gt,Sm,"float32"),ym((e=>Math.expm1(e)))),Im=(bm(xt,Cm),ym((e=>Math.floor(e))));function Tm(e,t,n,r,s,a,o,i,u){const l=Ha([r,a],n);for(let n=0;n<r;n++){const r=[];let c=0;for(let t=0;t<s;t++){const a=e[n*s+t];c+=a*o[t],r.push(a)}if(c<0||c>=u/a)throw new Error(`Invalid indices: ${r} does not index into ${i}`);for(let e=0;e<a;e++)l.values[n*a+e]=t.get(...t.indexToLoc(c*a+e))}return l}function $m(e,t,n){const r=Ha(n,e.dtype);for(let n=0;n<r.size;++n){const s=r.indexToLoc(n).slice(),a=s[0],o=s[2],i=t.locToIndex([a,o]);s[2]=t.values[i];const u=e.locToIndex(s);0<=u&&u<e.values.length&&(r.values[n]=e.values[u])}return r}bm(kt,Im);const Nm=sm(((e,t)=>e>t?1:0)),Em=(cm($t,Nm,null,"bool"),sm(((e,t)=>e>=t?1:0))),Rm=(cm(Nt,Em,null,"bool"),sm(((e,t)=>e<t?1:0))),_m=(cm(Dt,Rm,null,"bool"),sm(((e,t)=>e<=t?1:0)));function Am(e,t,n){const r=(t-e)/(n-1),s=oe(n,"float32");s[0]=e;for(let e=1;e<s.length;e++)s[e]=s[e-1]+r;return s}cm(Mt,_m,null,"bool");const Om=ym((e=>Math.log(e)));function Fm(e,t,n,r){const s=q(r,B(n));for(let n=0;n<s.length;++n){const r=n*t;let a=e[r];for(let n=0;n<t;++n){const t=e[r+n];(Number.isNaN(t)||t>a)&&(a=t)}s[n]=a}return s}bm(Bt,Om);const Pm=sm(((e,t)=>Math.max(e,t))),Dm=(cm(jt,Pm),sm(((e,t)=>Math.min(e,t)))),Mm=(cm(Zt,Dm),sm(((e,t)=>e*t))),Lm=hm(((e,t,n,r)=>({real:e*n-t*r,imag:e*r+t*n})));function Bm(e,t,n){const r=Hr(-1,n);return Mm([],t,r,e,n)}cm(nn,Mm,Lm);const zm=sm(((e,t)=>e!==t?1:0));function Um(e,t,n,r,s){const a=t.length,o=B(t),i=ne(t),u=ne(s),l=q(n,B(s));for(let t=0;t<o;++t){const n=le(t,a,i),s=new Array(n.length);for(let e=0;e<s.length;e++)s[e]=n[r[e]];l[ue(s,a,u)]=e[t]}return l}function Vm(e,t,n,r){const[s,a]=Vu(e,r),o=ws(t,"int32"),i=oe(B(s),o),u=B(a);for(let e=0;e<i.length;++e){const t=e*u;let r=1;for(let e=0;e<u;++e)r*=n[t+e];i[e]=r}return{outVals:i,outShape:s,outDtype:o}}function Wm(e,t){const n=e.slice(0,t);for(;n.length<t;)n.push(1);for(let r=t;r<e.length;r++)n[t-1]*=e[r];return n}function Gm(e,t,n,r,s,a,o,i){if(0===e.length)throw new Error("paramsNestedSplits must be non empty");if(0===t[0].length)throw new Error("Split tensors must not be scalars");if(function(e,t,n){e.forEach(((e,r)=>{if(e<0||e>=n){const s=le(r,t.length,ne(t)).join(",");throw new Error(`indices[${s}] = ${e} is not in [0, ${n})`)}}))}(a,o,t[0][0]-1),0===r.length)throw new Error("params.rank must be nonzero");const u=r[0],{outSplits:l,valueSlices:c,numValues:h}=function(e,t,n,r){const s=[];let a=0;const o=t.length-1+n.length,i=new Array(o).fill(null).map((()=>[0]));!function(e,t){for(let n=0;n<e.length;++n){const r=e[n],s=n===e.length-1?t:e[n+1].length;if(0===r.length)throw new Error("Ragged splits may not be empty");if(r[0]<0)throw new Error("Ragged splits must be non-negative");if(r[r.length-1]>s)throw new Error("Ragged splits must not point past values");for(let e=1;e<r.length;++e)if(r[e-1]>r[e])throw new Error("Ragged splits must be sorted in ascending order")}}(n,r);let u=1;for(let e=0;e<t.length-1;++e){u*=t[e];const n=t[e+1];for(let t=1;t<u+1;++t)i[e].push(t*n)}for(let r=0;r<e.length;++r){let o=e[r],u=e[r]+1;for(let e=0;e<n.length;++e){const r=n[e],s=e+t.length-1;if(s>=0){const e=i[s],t=e[e.length-1]-r[o];for(let e=o;e<u;++e)i[s].push(r[e+1]+t)}o=r[o],u=r[u]}u!==o&&(s.push([o,u]),a+=u-o)}return{outSplits:i,valueSlices:s,numValues:a}}(a,o,e,u),d=function(e){const t=[];for(let n=0;n<e.length;++n){const r=X("int32",e[n].length);t.push(r),e[n].forEach(((e,t)=>r[t]=e))}return t}(l),p=function(e,t,n,r,s){const a=t.slice();a[0]=s;const o=X(n,B(a)),i=e.length;return function(e,t,n,r,s,a){const o=Wm(t,2)[1],i=Wm(a,2)[1];let u=0;for(const t of n)for(let n=t[0];n<t[1];++n){for(let t=0;t<r;++t)s[u*i+t]=e[n*o+t];++u}}(e,t,r,0===i?0:i/t[0],o,a),[o,a]}(n,r,s,c,h);return[d,p[0],p[1]]}cm(sn,zm,null,"bool");const Hm=2147483647;function jm(e,t,n,r,s,a,o){if(t.length>1)throw new Error("starts must be a scalar or vector");if(s.length>1)throw new Error("limits must be a scalar or vector");if(o.length>1)throw new Error("deltas must be a scalar or vector");const i=0===t.length,u=0===s.length,l=0===o.length,c=[];i||c.push(t[0]),u||c.push(s[0]),l||c.push(o[0]);for(let e=1;e<c.length;++e)if(c[e]!==c[e-1])throw new Error("starts, limits, and deltas must have the same shape");const h=0===c.length?1:c[0],d=X("int32",h+1);d[0]=0;for(let t=0;t<h;++t){const n=i?e[0]:e[t],s=u?r[0]:r[t],o=l?a[0]:a[t];if(0===o)throw new Error("Requires delta != 0");let c;if(o>0&&s<n||o<0&&s>n)c=0;else if(c=Math.ceil(Math.abs((s-n)/o)),c>Hm)throw new Error(`Requires ((limit - start) / delta) <= ${Hm}`);d[t+1]=d[t]+c}const p=X(n,d[h]);let f=0;for(let t=0;t<h;++t){const n=d[t+1]-d[t];let r=i?e[0]:e[t];const s=l?a[0]:a[t];for(let e=0;e<n;++e)p[f++]=r,r+=s}return[d,p]}var Km=Pd;class qm{constructor(e,t,n,r,s,a,o,i,u,l){this.shape=e,this.shapeShape=t,this.values=n,this.valuesShape=r,this.valuesDType=s,this.defaultValue=a,this.defaultValueShape=o,this.rowPartitionValues=i,this.rowPartitionValuesShapes=u,this.rowPartitionTypes=Md(l),this.raggedRank=Ld(this.rowPartitionTypes)}getRowPartitionTypeByDimension(e){return this.rowPartitionTypes[0]===Km.FIRST_DIM_SIZE?this.rowPartitionTypes[e+1]:this.rowPartitionTypes[e]}getRowPartitionTensor(e){return this.rowPartitionTypes[0]===Km.FIRST_DIM_SIZE?this.rowPartitionValues[e+1]:this.rowPartitionValues[e]}getMaxWidth(e){const t=this.getRowPartitionTensor(e-1);switch(this.getRowPartitionTypeByDimension(e-1)){case Km.VALUE_ROWIDS:return qm.getMaxWidthValueRowID(t);case Km.ROW_SPLITS:return qm.getMaxWidthRowSplit(t);default:throw new Error(`Cannot handle partition type ${Km[this.getRowPartitionTypeByDimension(e-1)]}`)}}static getMaxWidthRowSplit(e){const t=e.length;if(0===t||1===t)return 0;let n=0;for(let r=0;r<t-1;++r){const t=e[r+1]-e[r];t>n&&(n=t)}return n}static getMaxWidthValueRowID(e){const t=e.length;if(0===t)return 0;let n=0,r=e[0],s=0;for(let a=1;a<t;++a){const t=e[a];t!==r&&(r=t,s=Math.max(a-n,s),n=a)}return Math.max(t-n,s)}tensorShapeFromTensor(e,t,n=!0){if(0===t.length){if(-1===e[0])return[];throw new Error("The only valid scalar shape tensor is the fully unknown shape specified as -1.")}return Ym(e,n)}calculateOutputSize(e){const t=this.valuesShape;Bd(this.defaultValueShape,t);const n=this.tensorShapeFromTensor(this.shape,this.shapeShape),r=Dd(this.raggedRank,n,t);r[0]<0&&(r[0]=e);for(let e=1;e<=this.raggedRank;++e)r[e]<0&&(r[e]=this.getMaxWidth(e));return r}calculateFirstParentOutputIndex(e,t,n){const r=Math.min(e,n),s=[];let a=0;for(let e=0;e<r;++e,a+=t)s.push(a);for(let t=r;t<e;++t)s.push(-1);return D(s.length===e,(()=>"Final length of result must be equal to firstDimension.")),s}calculateOutputIndexRowSplit(e,t,n,r){const s=e.length,a=[];for(let o=0;o<s-1;++o){const s=e[o+1]-e[o];let i=Math.min(r,s),u=t[o];-1===u&&(i=0);for(let e=0;e<i;++e)a.push(u),u+=n;for(let e=0;e<s-i;++e)a.push(-1)}if(s>0&&a.length!==e[s-1])throw new Error("Invalid row split size.");return a}calculateOutputIndexValueRowID(e,t,n,r){const s=e.length,a=[];if(0===s)return[];let o=0,i=e[0];if(i>=t.length)throw new Error(`Got currentValueRowId=${i}, which is not less than ${t.length}`);let u=t[i];a.push(u);for(let l=1;l<s;++l){const s=e[l];if(s===i)u>=0&&(++o,o<r?u+=n:u=-1);else{if(o=0,i=s,s>=t.length)throw new Error(`Got nextValueRowId=${s} which is not less than ${t.length}`);u=t[s]}a.push(u)}if(a.length!==e.length)throw new Error("Invalid row ids.");return a}calculateOutputIndex(e,t,n,r){const s=this.getRowPartitionTensor(e),a=this.getRowPartitionTypeByDimension(e);switch(a){case Km.VALUE_ROWIDS:return this.calculateOutputIndexValueRowID(s,t,n,r);case Km.ROW_SPLITS:if(s.length-1>t.length)throw new Error(`Row partition size is greater than output size: ${s.length-1} > ${t.length}`);return this.calculateOutputIndexRowSplit(s,t,n,r);default:throw new Error(`Unsupported partition type: ${Km[a]}`)}}getFirstDimensionSize(){const e=this.rowPartitionValues[0];if(0===this.rowPartitionTypes.length)throw new Error("No row_partition_types given.");const t=this.rowPartitionTypes[0];switch(t){case Km.FIRST_DIM_SIZE:return e[0];case Km.VALUE_ROWIDS:throw new Error("Cannot handle VALUE_ROWIDS in first dimension.");case Km.ROW_SPLITS:return this.rowPartitionValuesShapes[0][0]-1;default:throw new Error(`Cannot handle type ${Km[t]}`)}}compute(){if(this.rowPartitionValues[0].length<=0)throw new Error("Invalid first partition input. Tensor requires at least one element.");const e=this.getFirstDimensionSize(),t=this.calculateOutputSize(e),n=new Array(this.raggedRank+1);n[n.length-1]=1;for(let e=n.length-2;e>=0;--e)n[e]=n[e+1]*t[e+1];const r=Ym(t,!1),s=X(this.valuesDType,B(r));if(n[0]*t[0]>0){let a=this.calculateFirstParentOutputIndex(e,n[0],t[0]);for(let e=1;e<=this.raggedRank;++e)a=this.calculateOutputIndex(e-1,a,n[e],t[e]);this.setOutput(this.raggedRank,a,s,r)}return[r,s]}setOutput(e,t,n,r){if(0===n.length)return;const s=this.values,a=n;let o=r.slice();o=o.slice(e+1);const i=B(o),u=t.length;let l=this.defaultValue;if(l.length!==i&&1!==l.length){const e=this.defaultValueShape;Ya((()=>{const t=ji(l,e),n=lu(t,o);l=n.dataSync()}))}let c=0,h=0,d=0;for(let e=0;e<=u;++e){let r=e<u?t[e]:-1;if(r!==d){if(h<d){const e=s.subarray(c*i);Xm(a.subarray(h*i),e,(d-h)*i)}if(e>=u){const e=n.length;r=Math.floor(e/i)}if(r>d)if(1===this.defaultValue.length)a.subarray(d*i,r*i).fill(this.defaultValue[0]),d=r;else for(;r>d;)Xm(a.slice(d*i),l,i),++d;r<0?(c=e+1,h=d):(c=e,h=d,d=h+1)}else++d}}}function Xm(e,t,n){for(let r=0;r<n;r++)e[r]=t[r]}function Ym(e,t){const n=[];for(let r of e){if(r<0){if(!t)throw new Error(`Dimension ${r} must be >= 0`);if(r<-1)throw new Error(`Dimension ${r} must be >= -1`);r=-1}n.push(r)}return n}function Qm(e,t,n,r,s,a,o,i,u,l){return new qm(e,t,n,r,s,a,o,i,u,l).compute()}function Zm(e,t,n,r){if(e===t||e<t&&n<0||t<e&&n>1)return oe(0,r);const s=oe(Math.abs(Math.ceil((t-e)/n)),r);t<e&&1===n&&(n=-1),s[0]=e;for(let e=1;e<s.length;e++)s[e]=s[e-1]+n;return s}const Jm=ym((e=>1/Math.sqrt(e)));function eg(e,t,n,r,s,a,o,i,u,l){const c=[r/s,s],h=e.values,d=t.values;if(0===r)return Ha(n,t.dtype);const p=u instanceof ls?u:Ha(c,t.dtype);"string"==typeof u||"number"==typeof u?p.values.fill(u):"boolean"==typeof u&&p.values.fill(+u);for(let e=0;e<a;e++){const a=[];let u=0;for(let t=0;t<o;t++){const n=h[e*o+t];a.push(n),u+=n*i[t]}if(u<0||u>=r/s)throw new Error(`Invalid indices: ${a} does not index into ${n}`);for(let n=0;n<s;n++)l?p.values[u*s+n]+=d[e*s+n]:p.values[u*s+n]=0===t.rank?d[0]:d[e*s+n]}return p}bm(En,Jm);const tg=ym((e=>1/(1+Math.exp(-e))));function ng(e,t,n,r,s){const a=fi(r,t,n),o=B(n),i=ne(r);if(a){const n=mi(t,i);return"string"===s?e.slice(n,n+o):e.subarray(n,n+o)}const u=Ha(r,s,"string"===s?Mp(e):e),l=Ha(n,s);for(let e=0;e<l.size;++e){const n=l.indexToLoc(e),r=n.map(((e,n)=>e+t[n]));l.set(u.get(...r),...n)}return"string"===s?Lp(l.values):l.values}function rg(e,t,n,r,s,a,o){const i=t[0],u=a[0],l=new Array(u),c=new Array(i),h=t[1];if(0===u){if(0!==i)throw new Error(kp(i));return[X(n,0),[0,h],X(s,0),l,c]}let d=!0,p=0;const f=new Array(u).fill(0);for(let t=0;t<i;++t){const n=e[t*h];if(n<0)throw new Error(Sp(t,n));if(n>=u)throw new Error(Cp(t,n,u));++f[n],d=d&&n>=p,p=n}let m=!0;for(let e=0;e<u;++e){const t=0===f[e];l[e]=t,m=m&&!t,f[e]=Math.max(f[e],1),e>0&&(f[e]+=f[e-1])}if(m&&d){const t=e,n=r;for(let e=0;e<i;++e)c[e]=e;return[t,[i,h],n,l,c]}{const t=f[u-1],a=X(n,t*h),d=X(s,t),p=new Array(u).fill(0);for(let t=0;t<i;++t){const n=e[t*h],s=p[n],o=(0===n?0:f[n-1])+s;p[n]++;for(let n=0;n<h;++n)a[o*h+n]=e[t*h+n];d[o]=r[t],c[t]=o}for(let e=0;e<u;++e)if(0===p[e]){const t=0===e?0:f[e-1];a[t*h+0]=e;for(let e=1;e<h;++e)a[t*h+e]=0;d[t]=o}return[a,[t,h],d,l,c]}}function sg(e,t,n,r,s){const a=B(r),o=t[0],i=s.length,u=[];let l=1,c=-1;for(let e=0;e<i;++e){const t=s[e];if(-1===t){if(-1!==c)throw new Error(Ip(c,e));c=e,u.push(1)}else{if(t<0)throw new Error(Tp(e,t));l*=t,u.push(t)}}if(-1!==c){if(l<=0)throw new Error("reshape cannot infer the missing input size for an empty tensor unless all specified input sizes are non-zero");const e=Math.trunc(a/l);if(l*e!==a)throw new Error(Np(r,u));u[c]=e}if(B(u)!==a)throw new Error(Ep(r,u));const h=r.length,d=[];if(h>0){d[h-1]=1;for(let e=h-2;e>=0;--e)d[e]=d[e+1]*r[e+1]}const p=[];if(i>0){p[i-1]=1;for(let e=i-2;e>=0;--e)p[e]=p[e+1]*u[e+1]}const f=X(n,o*i);for(let t=0;t<o;++t){let n=0;for(let r=0;r<h;++r)n+=e[t*h+r]*d[r];for(let e=0;e<i;++e)f[t*i+e]=Math.trunc(n/p[e]),n%=p[e]}return[f,[o,i],u]}function ag(e,t,n,r,s,a=!1,o=0){const i=r.length,u=[t[0],e.length/t[0]],l=u[1],c=i>0?s[i-1]+1:0;if(c<0)throw new Error("segment ids must be >= 0");const h=t.slice();h[0]=c;const d=X(n,h.reduce(((e,t)=>e*t),1));if(0===i)return c>0&&d.fill(o),[d,h];if(c<=0)throw new Error("segment ids must be >= 0");let p=0,f=1,m=0,g=s[p];for(;;){let t=0;if(f<i){if(t=s[f],g===t){++f;continue}if(g>=t)throw new Error("segment ids are not increasing")}if(g<0||g>=c)throw new Error(Ap(g,c));g>m&&d.fill(o,m*l,g*l);for(let t=p;t<f;++t){const n=r[t];if(n<0||n>=u[0])throw new Error(Op(t,r[t],u[0]));for(let t=0;t<l;t++)d[g*l+t]+=e[n*l+t]}if(a)for(let e=0;e<l;e++)d[g*l+e]/=f-p;if(p=f,++f,m=g+1,g=t,f>i)break}return m<c&&d.fill(o,m*l,c*l),[d,h]}xm(Bn,(e=>1/(1+Math.exp(-e))));const og=ym((e=>Math.sqrt(e))),ig=(xm(Un,(e=>Math.sqrt(e))),ym(((e,t)=>{const{pattern:n,replaceGlobal:r,rewrite:s}=t;return e.replace(new RegExp(n,r?"g":""),s)})));function ug(e,t,n,r){const s=Ha(e,t.dtype);for(let e=0;e<s.size;e++){const a=s.indexToLoc(e),o=new Array(a.length);for(let e=0;e<o.length;e++)o[e]=a[e]*n[e]+r[e];s.set(t.get(...o),...a)}return s}bm(Jn,ig);class lg{constructor(e,t,n,r,s,a){this.separator=qr(e),this.nGramWidths=t,this.leftPad=qr(n),this.rightPad=qr(r),this.padWidth=s,this.preserveShort=a}getPadWidth(e){return Math.min(this.padWidth<0?e-1:this.padWidth,e-1)}getNumNGrams(e,t){const n=this.getPadWidth(t);return Math.max(0,e+2*n-t+1)}createNGrams(e,t,n,r,s,a){for(let o=0;o<s;++o){const i=this.getPadWidth(a),u=Math.max(0,i-o),l=Math.max(0,i-(s-(o+1))),c=a-(u+l),h=t+(u>0?0:o-i);let d=0;d+=u*this.leftPad.length;for(let t=0;t<c;++t)d+=e[h+t].length;d+=l*this.rightPad.length,d+=(u+l+c-1)*this.separator.length,n[r+o]=new Uint8Array(d);const p=n[r+o];let f=0;const m=e=>e.forEach((e=>p[f++]=e));for(let e=0;e<u;++e)m(this.leftPad),m(this.separator);for(let t=0;t<c-1;++t)m(e[h+t]),m(this.separator);if(c>0){m(e[h+c-1]);for(let e=0;e<l;++e)m(this.separator),m(this.rightPad)}else{for(let e=0;e<l-1;++e)m(this.rightPad),m(this.separator);m(this.rightPad)}}}compute(e,t){const n=e.length,r=t.length;if(r>0){let e=t[0];if(0!==e)throw new Error(`First split value must be 0, got ${e}`);for(let s=1;s<r;++s){let r=t[s]>=e;if(r=r&&t[s]<=n,!r)throw new Error(`Invalid split value ${t[s]}, must be in [${e}, ${n}]`);e=t[s]}if(e!==n)throw new Error(`Last split value must be data size. Expected ${n}, got ${e}`)}const s=r-1,a=X("int32",r);if(0===n||0===r){const e=new Array(n);for(let e=0;e<=s;++e)a[e]=0;return[e,a]}a[0]=0;for(let e=1;e<=s;++e){const n=t[e]-t[e-1];let r=0;this.nGramWidths.forEach((e=>{r+=this.getNumNGrams(n,e)})),this.preserveShort&&n>0&&0===r&&(r=1),a[e]=a[e-1]+r}const o=new Array(a[s]);for(let n=0;n<s;++n){const r=t[n];let s=a[n];if(this.nGramWidths.forEach((a=>{const i=t[n+1]-t[n],u=this.getNumNGrams(i,a);this.createNGrams(e,r,o,s,u,a),s+=u})),this.preserveShort&&s===a[n]){const a=t[n+1]-t[n];if(0===a)continue;const i=a+2*this.padWidth,u=1;this.createNGrams(e,r,o,s,u,i)}}return[o,a]}}function cg(e,t,n,r,s,a,o,i){return new lg(n,r,s,a,o,i).compute(e,t)}function hg(e,t,n,r){if(!e.length)return;if(0===t.length){for(let t=0;t<e.length;++t)r.push(e.subarray(t,t+1));return}if(1===t.length){const s=t[0];let a=e.indexOf(s);for(;-1!==a;){const t=e.subarray(0,a);n&&0===t.length||r.push(t),a=(e=e.subarray(a+1)).indexOf(s)}return void(n&&0===e.length||r.push(e))}let s=0;for(let a=0;a<e.length+1;a++)if(a===e.length||-1!==t.indexOf(e[a])){const t=e.subarray(s,a);n&&0===t.length||r.push(t),s=a+1}}function dg(e,t,n){const r=e.length,s=[];let a=0,o=0;const i=new Array(r);for(let u=0;u<r;++u){const r=s.length;hg(e[u],t,n,s);const l=s.length-r;i[u]=l,a+=l,o=Math.max(o,l)}const u=X("int32",2*a),l=new Array(a),c=[r,o];let h=0;for(let e=0;e<r;++e)for(let t=0;t<i[e];++t)u[2*h]=e,u[2*h+1]=t,l[h]=s[h],++h;return[u,l,c]}function pg(e,t){const n=X("int32",e.length);for(let r=0;r<e.length;++r)n[r]=Gr(e[r]).modulo(t).getLowBitsUnsigned();return n}const fg=sm(((e,t)=>e-t)),mg=hm(((e,t,n,r)=>({real:e-n,imag:t-r})));function gg(e,t){const n=new Array(e.rank);for(let r=0;r<n.length;r++)n[r]=e.shape[r]*t[r];const r=Ha(n,e.dtype);for(let t=0;t<r.values.length;++t){const n=r.indexToLoc(t),s=new Array(e.rank);for(let t=0;t<s.length;t++)s[t]=n[t]%e.shape[t];const a=e.locToIndex(s);r.values[t]=e.values[a]}return r}cm(sr,fg,mg);const yg=(e,t)=>{const n=t.value-e.value;return 0===n?e.index-t.index:n};function xg(e,t,n=0,r=e.length-1){for(;r>n;){if(r-n>600){const s=r-n+1,a=t-n+1,o=Math.log(s),i=.5*Math.exp(2*o/3),u=.5*Math.sqrt(o*i*(s-i)/s)*Math.sign(a-s/2);xg(e,t,Math.max(n,Math.floor(t-a*i/s+u)),Math.min(r,Math.floor(t+(s-a)*i/s+u)))}const s=e[t];let a=n,o=r;for(F(e,n,t),yg(e[r],s)>0&&F(e,n,r);a<o;){for(F(e,a,o),a++,o--;yg(e[a],s)<0;)a+=1;for(;yg(e[o],s)>0;)o-=1}0===yg(e[n],s)?F(e,n,o):(o+=1,F(e,o,r)),o<=t&&(n=o+1),t<=o&&(r=o-1)}}function bg(e,t,n,r,s){const a=t[t.length-1],[o,i]=[e.length/a,a],u=q(n,o*r),l=q("int32",o*r);for(let t=0;t<o;t++){const n=t*i,a=e.subarray(n,n+i);let o=new Array(a.length);a.forEach(((e,t)=>o[t]={value:e,index:t})),r<o.length&&(xg(o,r),o=o.slice(0,r)),s&&o.sort(yg);const c=t*r,h=u.subarray(c,c+r),d=l.subarray(c,c+r);for(let e=0;e<r;e++)h[e]=o[e].value,d[e]=o[e].index}const c=t.slice();return c[c.length-1]=r,[Ha(c,n,u),Ha(c,"int32",l)]}function vg(e,t,n,r){const s=j(t,n)[0],a=[1,n[0],1];for(let e=0;e<s;e++)a[0]*=n[e];a[1]=n[s];for(let e=s+1;e<n.length;e++)a[2]*=n[e];const o=new Map,i=new Int32Array(n[s]),u=new ls(a,r,e),l=[],c=1===a[0]&&1===a[2];for(let t=0;t<n[s];t++){let n;if(c)n=e[t].toString();else{const e=[];for(let n=0;n<a[0];n++)for(let r=0;r<a[2];r++)e.push(u.get(n,t,r));n=e.join(",")}const r=o.get(n);if(null!=r)i[t]=r;else{const e=o.size;o.set(n,e),i[t]=e,l.push(t)}}const h=a.slice();h[1]=o.size;const d=new ls(h,r);l.forEach(((e,t)=>{for(let n=0;n<a[0];n++)for(let r=0;r<a[2];r++)d.set(u.get(n,e,r),n,t,r)}));const p=n.slice();return p[s]=h[1],{outputValues:d.values,outputShape:p,indices:i}}const{addImpl:wg,bincountImpl:kg,bincountReduceImpl:Sg,bitwiseAndImpl:Cg,castImpl:Ig,ceilImpl:Tg,concatImpl:$g,equalImpl:Ng,expImpl:Eg,expm1Impl:Rg,floorImpl:_g,gatherNdImpl:Ag,gatherV2Impl:Og,greaterImpl:Fg,greaterEqualImpl:Pg,lessImpl:Dg,lessEqualImpl:Mg,linSpaceImpl:Lg,logImpl:Bg,maxImpl:zg,maximumImpl:Ug,minimumImpl:Vg,multiplyImpl:Wg,negImpl:Gg,notEqualImpl:Hg,prodImpl:jg,raggedGatherImpl:Kg,raggedRangeImpl:qg,raggedTensorToTensorImpl:Xg,rangeImpl:Yg,rsqrtImpl:Qg,scatterImpl:Zg,sigmoidImpl:Jg,simpleAbsImpl:ey,sliceImpl:ty,sparseFillEmptyRowsImpl:ny,sparseReshapeImpl:ry,sparseSegmentReductionImpl:sy,sqrtImpl:ay,staticRegexReplaceImpl:oy,stridedSliceImpl:iy,stringNGramsImpl:uy,stringSplitImpl:ly,stringToHashBucketFastImpl:cy,subImpl:hy,tileImpl:dy,topKImpl:py,transposeImpl:fy,uniqueImpl:my}=u;function gy(e,t){return["x","y","z","w","u","v"].slice(0,t).map((t=>`${e}.${t}`))}function yy(e,t){return 1===t?[e]:gy(e,t)}class xy{constructor(e){if(this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.outputShape=e,this.rank=e.length,this.enableShapeUniforms=Uf(this.outputShape.length),0===this.rank)this.userCode="\n        void main() {\n          setOutput(vec4(getA(), 0., 0., 0.));\n        }\n      ";else{const e=yy("rc",this.rank),t=Pf(this.rank),n=this.getOutOfBoundsCondition(e),r=this.getSetup(e),s=this.getOutput(e);this.userCode=`\n        void main() {\n          ${t} rc = getOutputCoords();\n\n          if(${n}) {\n            setOutput(vec4(0));\n          } else {\n            ${r}\n\n            setOutput(vec4(${s}));\n          }\n        }\n      `}}getSourceCoordsArr(e){const t=[];for(let n=0;n<=1;n++)for(let r=0;r<=1;r++){let s=`${0===n?"r":"rp1"}, ${0===r?"c":"cp1"}`;for(let t=2;t<this.rank;t++)s=`${e[e.length-1-t]},`+s;t.push(s)}return t}getOutOfBoundsCondition(e){if(1===this.rank)return`rc > ${this.enableShapeUniforms?"outShape":this.outputShape[0]}`;let t="";for(let n=this.rank-2;n<this.rank;n++)t+=`${e[n]} >= ${this.enableShapeUniforms?`outShape[${n}]`:this.outputShape[n]}`,n<this.rank-1&&(t+="||");return t}getSetup(e){if(1===this.rank)return"";const t=e.slice(-2),n=this.enableShapeUniforms?`outShape[${this.rank} - 1]`:this.outputShape[this.rank-1],r=this.enableShapeUniforms?`outShape[${this.rank} - 2]`:this.outputShape[this.rank-2];return`\n      int r = ${t[0]};\n      int c = ${t[1]};\n      int rp1 = r + 1;\n      int cp1 = c + 1;\n\n      bool cEdge = cp1 >= ${n};\n      bool rEdge = rp1 >= ${r};\n    `}getOutput(e){const t=this.getSourceCoordsArr(e);return 1===this.rank?`getA(rc), (rc + 1 >= ${this.enableShapeUniforms?"outShape":this.outputShape[0]} ? 0. : getA(rc + 1)), 0, 0`:`getA(${t[0]}),\n            cEdge ? 0. : getA(${t[1]}),\n            rEdge ? 0. : getA(${t[2]}),\n            rEdge || cEdge ? 0. : getA(${t[3]})`}}class by{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"inputShape",type:"ivec3"}],this.outputShape=e,this.enableShapeUniforms=Uf(this.outputShape.length);let n="";for(let e=0;e<4;e++){let t="thisRC = rc;";e%2==1&&(t+="thisRC.z += 1;"),e>1&&(t+="thisRC.y += 1;"),n+=`\n        ${t}\n        ${e>0?"if(thisRC.y < rows && thisRC.z < cols){":""}\n          int flatIndex = getFlatIndex(thisRC);\n\n          ivec3 inputRC = inputCoordsFromReshapedOutCoords(flatIndex);\n          vec2 inputRCInnerDims = vec2(float(inputRC.y),float(inputRC.z));\n\n          result[${e}] =\n            getChannel(getA(inputRC.x, inputRC.y, inputRC.z), inputRCInnerDims);\n        ${e>0?"}":""}\n      `}var r,s;this.userCode=`\n      ${r=t,s=this.enableShapeUniforms,`\n    ivec3 inputCoordsFromReshapedOutCoords(int index) {\n      ${s?function(e,t,n="index"){const r=function(e,t){const n=e.length,r=e.map((e=>`${t}[${e}]`)),s=new Array(n-1);s[n-2]=r[n-1];for(let e=n-3;e>=0;--e)s[e]=`(${s[e+1]} * ${r[e+1]})`;return s}(e.map(((e,t)=>t)),t);return r.map(((t,s)=>`int ${e[s]} = ${n} / ${r[s]}; ${s===r.length-1?`int ${e[s+1]} = ${n} - ${e[s]} * ${r[s]}`:`index -= ${e[s]} * ${r[s]}`};`)).join("")}(["r","c","d"],"inputShape"):wf(["r","c","d"],r)}\n      return ivec3(r, c, d);\n    }\n  `}\n      ${this.enableShapeUniforms?"\n  int getFlatIndex(ivec3 coords) {\n    return coords.x * outShapeStrides[0] + coords.y * outShapeStrides[1] + coords.z;\n  }\n":Sf(e)}\n\n      void main() {\n        ivec3 rc = getOutputCoords();\n\n        vec4 result = vec4(0.);\n\n        ivec3 thisRC;\n        int rows = ${this.enableShapeUniforms?"outShape[1]":e[1]};\n        int cols = ${this.enableShapeUniforms?"outShape[2]":e[2]};\n\n        ${n}\n\n        setOutput(result);\n      }\n    `}}class vy{constructor(e){this.gpgpu=e,this.numUsedTextures=0,this.numFreeTextures=0,this._numBytesAllocated=0,this._numBytesFree=0,this.freeTextures={},this.usedTextures={},this.logEnabled=!1}acquireTexture(e,t,n){const r=ky(t,n),s=Sy(e,r,n);s in this.freeTextures||(this.freeTextures[s]=[]),s in this.usedTextures||(this.usedTextures[s]=[]);const a=wy(e,r,this.gpgpu.gl,this.gpgpu.textureConfig,n);if(this.freeTextures[s].length>0){this.numFreeTextures--,this.numUsedTextures++,this._numBytesFree-=a,this.log();const e=this.freeTextures[s].pop();return this.usedTextures[s].push(e),e}let o;return r===Gp.PACKED_2X2_FLOAT32?o=this.gpgpu.createPackedMatrixTexture(e[0],e[1]):r===Gp.PACKED_2X2_FLOAT16?o=this.gpgpu.createFloat16PackedMatrixTexture(e[0],e[1]):r===Gp.UNPACKED_FLOAT32?o=this.gpgpu.createFloat32MatrixTexture(e[0],e[1]):r===Gp.UNPACKED_FLOAT16?o=this.gpgpu.createFloat16MatrixTexture(e[0],e[1]):r===Gp.PACKED_4X1_UNSIGNED_BYTE&&(o=this.gpgpu.createUnsignedBytesMatrixTexture(e[0],e[1])),this.usedTextures[s].push(o),this.numUsedTextures++,this._numBytesAllocated+=a,this.log(),o}releaseTexture(e,t,n,r){if(null==this.freeTextures)return;const s=ky(n,r),a=Sy(t,s,r);a in this.freeTextures||(this.freeTextures[a]=[]);const o=wy(t,s,this.gpgpu.gl,this.gpgpu.textureConfig,r),i=fe().get("WEBGL_DELETE_TEXTURE_THRESHOLD");-1!==i&&this._numBytesAllocated>i?(this.gpgpu.deleteMatrixTexture(e.texture),this._numBytesAllocated-=o):(this.freeTextures[a].push(e),this.numFreeTextures++,this._numBytesFree+=o),this.numUsedTextures--;const u=this.usedTextures[a],l=u&&u.indexOf(e);if(null==l||l<0)throw new Error("Cannot release a texture that was never provided by this texture manager");u[l]=u[u.length-1],u.pop(),this.log()}log(){if(!this.logEnabled)return;const e=this.numFreeTextures+this.numUsedTextures;console.log("Free/Used",`${this.numFreeTextures} / ${this.numUsedTextures}`,`(${e})`);const t=this._numBytesFree/this._numBytesAllocated;console.log(`Bytes allocated: ${this._numBytesAllocated}`),console.log(`Bytes unused: ${this._numBytesFree} (${Math.round(100*t)}%)`)}get numBytesAllocated(){return this._numBytesAllocated}get numBytesFree(){return this._numBytesFree}getNumUsedTextures(){return this.numUsedTextures}getNumFreeTextures(){return this.numFreeTextures}dispose(){if(null!=this.freeTextures){for(const e in this.freeTextures)this.freeTextures[e].forEach((e=>{this.gpgpu.deleteMatrixTexture(e.texture)}));for(const e in this.usedTextures)this.usedTextures[e].forEach((e=>{this.gpgpu.deleteMatrixTexture(e.texture)}));this.freeTextures=null,this.usedTextures=null,this.numUsedTextures=0,this.numFreeTextures=0,this._numBytesAllocated=0,this._numBytesFree=0}}}function wy(e,t,n,r,s){const a=function(e,t){switch(e){case Gp.PACKED_2X2_FLOAT32:return Jf(t);case Gp.PACKED_2X2_FLOAT16:return em(t);case Gp.UNPACKED_FLOAT32:return Yf(t);case Gp.UNPACKED_FLOAT16:return Qf(t);case Gp.PACKED_4X1_UNSIGNED_BYTE:return Zf(t);default:throw new Error(`Unknown physical texture type ${e}`)}}(t,r);let o;if(s){const[t,n]=Kp(e[0],e[1]);o=t*n}else{const[t,n]=Hp(e[0],e[1]);o=t*n}const i=function(e,t){const n=e;if(t===n.R32F)return 4;if(t===n.R16F)return 2;if(t===n.RGBA32F)return 16;if(t===e.RGBA)return 16;if(t===n.RGBA16F)return 8;if(t===n.RGBA8)return 4;throw new Error(`Unknown internal format ${t}`)}(n,a);return o*i}function ky(e,t){if(e===Wp.UPLOAD)return Gp.PACKED_2X2_FLOAT32;if(e===Wp.RENDER||null==e)return function(e){return fe().getBool("WEBGL_RENDER_FLOAT32_ENABLED")?e?Gp.PACKED_2X2_FLOAT32:Gp.UNPACKED_FLOAT32:e?Gp.PACKED_2X2_FLOAT16:Gp.UNPACKED_FLOAT16}(t);if(e===Wp.DOWNLOAD||e===Wp.PIXELS)return Gp.PACKED_4X1_UNSIGNED_BYTE;throw new Error(`Unknown logical texture type ${e}`)}function Sy(e,t,n){return`${e[0]}_${e[1]}_${t}_${n}`}class Cy{constructor(e,t){this.variableNames=["A"],this.outputShape=e,this.enableShapeUniforms=Uf(this.outputShape.length),this.userCode=`\n      float unaryOperation(float x) {\n        ${t}\n      }\n\n      void main() {\n        float x = getAAtOutCoords();\n        float y = unaryOperation(x);\n\n        setOutput(y);\n      }\n    `}}const Iy="if (isnan(x)) return x;",Ty="return x;",$y="return abs(x);",Ny="return (x >= 0.0) ? x : (exp(x) - 1.0);",Ey=Iy+"\n  return (x < 0.0) ? 0.0 : x;\n",Ry=Iy+"\n  return (x < 0.0) ? 0.0 : min(6.0, x);\n",_y="return x;",Ay="return 1.0 / (1.0 + exp(-1.0 * x));",Oy="return x;",Fy="\n  vec4 result;\n\n  result.r = (x.r >= 0.0) ? x.r : (exp(x.r) - 1.0);\n  result.g = (x.g >= 0.0) ? x.g : (exp(x.g) - 1.0);\n  result.b = (x.b >= 0.0) ? x.b : (exp(x.b) - 1.0);\n  result.a = (x.a >= 0.0) ? x.a : (exp(x.a) - 1.0);\n\n  return result;\n",Py="\n  vec4 result = x * vec4(greaterThanEqual(x, vec4(0.0)));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n",Dy="\n  vec4 result = min(x, vec4(6.)) * vec4(greaterThanEqual(x, vec4(0.0)));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n",My="return 1.0 / (1.0 + exp(-1.0 * x));";class Ly{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e,this.enableShapeUniforms=Uf(this.outputShape.length),this.userCode=`\n      vec4 unaryOperation(vec4 x) {\n        ${t}\n      }\n\n      void main() {\n        vec4 x = getAAtOutCoords();\n        vec4 y = unaryOperation(x);\n\n        setOutput(y);\n      }\n    `}}class By{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!1,this.outputShape=e,this.enableShapeUniforms=Uf(this.outputShape.length);const t=e.length,n=yy("rc",t),r=Pf(t),s=function(e,t){if(1===e)return"rc";let n="";for(let r=0;r<e;r++)n+=t[r],r<e-1&&(n+=",");return n}(t,n),a=n.slice(-2),o=t<=1?"rc":`vec2(${a.join(",")})`;this.userCode=`\n      void main() {\n        ${r} rc = getOutputCoords();\n        vec4 packedInput = getA(${s});\n\n        setOutput(getChannel(packedInput, ${o}));\n      }\n    `}}const zy=ph,Uy={},Vy=fe().getNumber("CPU_HANDOFF_SIZE_THRESHOLD");class Wy extends R{nextDataId(){return Wy.nextDataId++}constructor(e){if(super(),this.pendingRead=new WeakMap,this.pendingDisposal=new WeakSet,this.dataRefCount=new WeakMap,this.numBytesInGPU=0,this.uploadWaitMs=0,this.downloadWaitMs=0,this.lastGlFlushTime=0,this.warnedAboutMemory=!1,this.pendingDeletes=0,this.disposed=!1,!fe().getBool("HAS_WEBGL"))throw new Error("WebGL is not supported on this device");let t;if(null!=e){if(e instanceof tm)t=e;else{const n=Up(fe().getNumber("WEBGL_VERSION"),e);t=new tm(n)}this.binaryCache={},this.gpgpuCreatedLocally=!1}else{const e=Up(fe().getNumber("WEBGL_VERSION"));t=new tm(e),this.binaryCache=((n=fe().getNumber("WEBGL_VERSION"))in Uy||(Uy[n]={}),Uy[n]),this.gpgpuCreatedLocally=!0}var n;this.gpgpu=t,this.canvas=this.gpgpu.gl.canvas,this.textureManager=new vy(this.gpgpu),this.numMBBeforeWarning=null==fe().global.screen?1024:fe().global.screen.height*fe().global.screen.width*window.devicePixelRatio*600/1024/1024,this.texData=new E(this,Xa())}numDataIds(){return this.texData.numDataIds()-this.pendingDeletes}writeTexture(e,t,n,r,s,a){const o=this.makeTensorInfo(t,n),i=this.texData.get(o.dataId);i.isPacked=!1,i.texture={texture:e,texShape:[r,s]},i.texShape=[r,s];const u=cf(t),l=new Kf(u,!1,a),c=this.runWebGLProgram(l,[o],n,[[r,s]]);return c.shape=t,i.texture=null,this.disposeIntermediateTensorInfo(o),c.dataId}write(e,t,n){if((fe().getBool("WEBGL_CHECK_NUMERICAL_PROBLEMS")||fe().getBool("DEBUG"))&&this.checkNumericalProblems(e),"complex64"===n&&null!=e)throw new Error("Cannot write to a complex64 dtype. Please use tf.complex(real, imag).");const r={id:this.nextDataId()};return this.texData.set(r,{shape:t,dtype:n,values:e,usage:Wp.UPLOAD,refCount:1}),r}refCount(e){return this.texData.has(e)?this.texData.get(e).refCount:0}incRef(e){this.texData.get(e).refCount++}decRef(e){this.texData.has(e)&&this.texData.get(e).refCount--}move(e,t,n,r,s){if(fe().getBool("DEBUG")&&this.checkNumericalProblems(t),"complex64"===r)throw new Error("Cannot write to a complex64 dtype. Please use tf.complex(real, imag).");this.texData.set(e,{shape:n,dtype:r,values:t,usage:Wp.UPLOAD,refCount:s})}disposeIntermediateTensorInfo(e){this.disposeData(e.dataId)}readSync(e){const t=this.texData.get(e),{values:n,dtype:r,complexTensorInfos:s,slice:a,shape:o,isPacked:i}=t;if(null!=a){let t;t=i?new Ly(o,_y):new Cy(o,_y);const n=this.runWebGLProgram(t,[{dataId:e,shape:o,dtype:r}],r),s=this.readSync(n.dataId);return this.disposeIntermediateTensorInfo(n),s}if(null!=n)return this.convertAndCacheOnCPU(e);if("string"===r)return n;const u=null!=this.activeTimers;let l,c;return u&&(l=Kr()),c="complex64"===r?rp(this.readSync(s.real.dataId),this.readSync(s.imag.dataId)):this.getValuesFromTexture(e),u&&(this.downloadWaitMs+=Kr()-l),this.convertAndCacheOnCPU(e,c)}async read(e){if(this.pendingRead.has(e)){const t=this.pendingRead.get(e);return new Promise((e=>t.push(e)))}const t=this.texData.get(e),{values:n,shape:r,slice:s,dtype:a,complexTensorInfos:o,isPacked:i}=t;if(null!=s){let t;t=i?new Ly(r,_y):new Cy(r,_y);const n=this.runWebGLProgram(t,[{dataId:e,shape:r,dtype:a}],a),s=this.read(n.dataId);return this.disposeIntermediateTensorInfo(n),s}if(null!=n)return this.convertAndCacheOnCPU(e);if(fe().getBool("DEBUG")&&!fe().getBool("WEBGL_DOWNLOAD_FLOAT_ENABLED")&&2===fe().getNumber("WEBGL_VERSION"))throw new Error("tensor.data() with WEBGL_DOWNLOAD_FLOAT_ENABLED=false and WEBGL_VERSION=2 not yet supported.");let u,l,c=null;if("complex64"!==a&&fe().get("WEBGL_BUFFER_SUPPORTED")){u=this.decode(e);const t=this.texData.get(u.dataId);c=this.gpgpu.createBufferFromTexture(t.texture.texture,...jp(r))}if(this.pendingRead.set(e,[]),"complex64"!==a&&await this.gpgpu.createAndWaitForFence(),"complex64"===a){const e=await Promise.all([this.read(o.real.dataId),this.read(o.imag.dataId)]);l=rp(e[0],e[1])}else if(null==c)l=this.getValuesFromTexture(e);else{const e=B(r);l=this.gpgpu.downloadFloat32MatrixFromBuffer(c,e)}if(null!=u&&this.disposeIntermediateTensorInfo(u),null!=c){const e=this.gpgpu.gl;Xp(e,(()=>e.deleteBuffer(c)))}const h=this.convertAndCacheOnCPU(e,l),d=this.pendingRead.get(e);return this.pendingRead.delete(e),d.forEach((e=>e(h))),this.pendingDisposal.has(e)&&(this.pendingDisposal.delete(e),this.disposeData(e)&&Xa().removeDataId(e,this),this.pendingDeletes--),h}readToGPU(e,t={}){const n=this.texData.get(e),{values:r,shape:s,slice:a,dtype:o,isPacked:i,texture:u}=n;if("complex64"===o)throw new Error("Does not support reading texture for complex64 dtype.");if(null!=a){let n;n=i?new Ly(s,_y):new Cy(s,_y);const r=this.runWebGLProgram(n,[{dataId:e,shape:s,dtype:o}],o),a=this.readToGPU(r,t);return this.disposeIntermediateTensorInfo(r),a}if(null==u)throw null!=r?new Error("Data is not on GPU but on CPU."):new Error("There is no data on GPU or CPU.");const l=this.decode(e,t.customTexShape),c=Xa().makeTensorFromTensorInfo(l),h=this.texData.get(l.dataId);return Object.assign({tensorRef:c},h.texture)}bufferSync(e){const t=this.readSync(e.dataId);if("string"===e.dtype)try{const n=t.map((e=>Xr(e)));return Ha(e.shape,e.dtype,n)}catch(e){throw new Error("Failed to decode encoded string bytes into utf-8")}return Ha(e.shape,e.dtype,t)}checkNumericalProblems(e){if(null!=e)for(let t=0;t<e.length;t++){const n=e[t];if(!Yp(n)){if(fe().getBool("WEBGL_RENDER_FLOAT32_CAPABLE"))throw Error(`The value ${n} cannot be represented with your current settings. Consider enabling float32 rendering: 'tf.env().set('WEBGL_RENDER_FLOAT32_ENABLED', true);'`);throw Error(`The value ${n} cannot be represented on this device.`)}}}getValuesFromTexture(e){const{shape:t,dtype:n,isPacked:r}=this.texData.get(e),s=B(t);if(fe().getBool("WEBGL_DOWNLOAD_FLOAT_ENABLED")){const n=this.decode(e),r=this.texData.get(n.dataId),a=this.gpgpu.downloadMatrixFromPackedTexture(r.texture.texture,...jp(t)).subarray(0,s);return this.disposeIntermediateTensorInfo(n),a}const a=fe().getBool("WEBGL_PACK")&&!0===r,o=a?cf(t):t,i=a?new Hf(o):new Gf(o),u=this.runWebGLProgram(i,[{shape:o,dtype:n,dataId:e}],"float32"),l=this.texData.get(u.dataId),c=this.gpgpu.downloadByteEncodedFloatMatrixFromOutputTexture(l.texture.texture,l.texShape[0],l.texShape[1]).subarray(0,s);return this.disposeIntermediateTensorInfo(u),c}timerAvailable(){return fe().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0}time(e){const t=this.activeTimers,n=[];let r=!1;null==this.programTimersStack?(this.programTimersStack=n,r=!0):this.activeTimers.push(n),this.activeTimers=n,e();const s=Qr(this.activeTimers.map((e=>e.query))).filter((e=>null!=e)),a=Qr(this.activeTimers.map((e=>e.name))).filter((e=>null!=e));this.activeTimers=t,r&&(this.programTimersStack=null);const o={uploadWaitMs:this.uploadWaitMs,downloadWaitMs:this.downloadWaitMs,kernelMs:null,wallMs:null};return(async()=>{if(fe().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0){const e=await Promise.all(s);o.kernelMs=P(e),o.getExtraProfileInfo=()=>e.map(((e,t)=>({name:a[t],ms:e}))).map((e=>`${e.name}: ${e.ms}`)).join(", ")}else o.kernelMs={error:"WebGL query timers are not supported in this environment."};return this.uploadWaitMs=0,this.downloadWaitMs=0,o})()}memory(){return{unreliable:!1,numBytesInGPU:this.numBytesInGPU,numBytesInGPUAllocated:this.textureManager.numBytesAllocated,numBytesInGPUFree:this.textureManager.numBytesFree}}startTimer(){return fe().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0?this.gpgpu.beginQuery():{startMs:Kr(),endMs:null}}endTimer(e){return fe().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0?(this.gpgpu.endQuery(),e):(e.endMs=Kr(),e)}async getQueryTime(e){if(fe().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0)return this.gpgpu.waitForQueryAndGetTime(e);const t=e;return t.endMs-t.startMs}disposeData(e,t=!1){if(this.pendingDisposal.has(e))return!1;if(!this.texData.has(e))return!0;if(t?this.texData.get(e).refCount=0:this.texData.get(e).refCount--,!t&&this.texData.get(e).refCount>0)return!1;if(this.pendingRead.has(e))return this.pendingDisposal.add(e),this.pendingDeletes++,!1;this.releaseGPUData(e);const{complexTensorInfos:n}=this.texData.get(e);return null!=n&&(this.disposeData(n.real.dataId,t),this.disposeData(n.imag.dataId,t)),this.texData.delete(e),!0}releaseGPUData(e){const{texture:t,dtype:n,texShape:r,usage:s,isPacked:a,slice:o}=this.texData.get(e),i=o&&o.origDataId||e,u=this.dataRefCount.get(i);u>1?this.dataRefCount.set(i,u-1):(this.dataRefCount.delete(i),null!=t&&(this.numBytesInGPU-=this.computeBytes(r,n),this.textureManager.releaseTexture(t,r,s,a)));const l=this.texData.get(e);l.texture=null,l.texShape=null,l.isPacked=!1,l.slice=null}getTexture(e){return this.uploadToGPU(e),this.texData.get(e).texture.texture}getDataInfo(e){return this.texData.get(e)}shouldExecuteOnCPU(e,t=Vy){return fe().getBool("WEBGL_CPU_FORWARD")&&e.every((e=>null==this.texData.get(e.dataId).texture&&B(e.shape)<t))}getGPGPUContext(){return this.gpgpu}where(e){wr("tf.where() in webgl locks the UI thread. Call tf.whereAsync() instead");const t=e.dataSync();return zy(e.shape,t)}packedUnaryOp(e,t,n){const r=new Ly(e.shape,t),s=this.compileAndRun(r,[e],n);return Xa().makeTensorFromTensorInfo(s)}abs(e){if(this.shouldExecuteOnCPU([e])&&"complex64"!==e.dtype){const t=ey(this.texData.get(e.dataId).values);return this.makeOutput(e.shape,e.dtype,t)}if(fe().getBool("WEBGL_PACK_UNARY_OPERATIONS"))return this.packedUnaryOp(e,$y,e.dtype);const t=new Cy(e.shape,$y),n=this.compileAndRun(t,[e]);return Xa().makeTensorFromTensorInfo(n)}makeTensorInfo(e,t,n){let r;if("string"===t&&null!=n&&n.length>0&&Z(n[0])){const s=n.map((e=>qr(e)));r=this.write(s,e,t)}else r=this.write(n,e,t);return this.texData.get(r).usage=null,{dataId:r,shape:e,dtype:t}}makeOutput(e,t,n){return Xa().makeTensorFromTensorInfo(this.makeTensorInfo(e,t,n),this)}unpackTensor(e){const t=new By(e.shape);return this.runWebGLProgram(t,[e],e.dtype)}packTensor(e){const t=new xy(e.shape);return this.runWebGLProgram(t,[e],e.dtype,null,!0)}packedReshape(e,t){const n=[uf(e.shape),...lf(e.shape)],r={dtype:e.dtype,shape:n,dataId:e.dataId},s=[uf(t),...lf(t)],a=new by(s,n),o=[n],i=this.runWebGLProgram(a,[r],e.dtype,o,!0);return{dataId:i.dataId,shape:t,dtype:i.dtype}}decode(e,t){const n=this.texData.get(e),{isPacked:r,shape:s,dtype:a}=n;null!=t&&D(B(s)<=t[0]*t[1]*4,(()=>"customTexShape is too small. Row * Column * 4 should be equal or larger than the size of the tensor data."));const o=cf(s);let i;i=r?new Wf(o):new Vf(o);const u=[null!=t?t:jp(o)];return{dtype:a,shape:s,dataId:this.runWebGLProgram(i,[{shape:o,dtype:a,dataId:e}],a,u,!0,t).dataId}}runWebGLProgram(e,t,n,r,s=!1,a){const o=this.makeTensorInfo(e.outputShape,n),i=this.texData.get(o.dataId);if(e.packedOutput&&(i.isPacked=!0),e.outPackingScheme===Vp.DENSE){const t=null!=a?a:jp(e.outputShape);i.texShape=t.map((e=>2*e))}if(null!=e.outTexUsage&&(i.usage=e.outTexUsage),0===B(o.shape))return i.values=q(o.dtype,0),o;const u=[],l=t.map((t=>{if("complex64"===t.dtype)throw new Error("GPGPUProgram does not support complex64 input. For complex64 dtypes, please separate the program into real and imaginary parts.");let n=this.texData.get(t.dataId);if(null==n.texture){if(!e.packedInputs&&B(t.shape)<=fe().getNumber("WEBGL_SIZE_UPLOAD_UNIFORM"))return{shape:t.shape,texData:null,isUniform:!0,uniformValues:n.values};e.packedInputs&&(n.isPacked=!0,n.shape=t.shape)}if(this.uploadToGPU(t.dataId),!!n.isPacked!=!!e.packedInputs)t=n.isPacked?this.unpackTensor(t):this.packTensor(t),u.push(t),n=this.texData.get(t.dataId);else if(n.isPacked&&!df(n.shape,t.shape)){const e=t,r=t.shape;t.shape=n.shape,t=this.packedReshape(t,r),u.push(t),n=this.texData.get(t.dataId),e.shape=r}return{shape:t.shape,texData:n,isUniform:!1}}));this.uploadToGPU(o.dataId);const c={shape:o.shape,texData:i,isUniform:!1},h=function(e,t,n){let r="";t.concat(n).forEach((t=>{const s=null!=t.texData&&null!=t.texData.slice&&t.texData.slice.flatOffset>0;if(e.enableShapeUniforms&&!t.isUniform){const a=t.texData.texShape,{useSqueezeShape:o,uniformShape:i,keptDims:u}=Df(e.packedInputs,t.shape,a);let l="",c="",h="";if(1===i.length&&e.packedInputs){const e=[Math.ceil(a[0]/2),Math.ceil(a[1]/2)];l=`${e[0]>1}_${e[1]>1}`}else if(2!==i.length||e.packedInputs){if(i.length>2&&!e.packedInputs){const e=ne(i);h=`${e[0]===a[1]}_${e[e.length-1]===a[1]}`}}else c=`${i[0]>1}_${i[1]>1}`;const d=t.shape.length,p=2===i.length&&z(t.shape,a),f=1===B(t.shape),m=So(t.shape,n.shape),g=!e.packedInputs&&d===n.shape.length&&z(a,n.texData.texShape),y=e.packedInputs||i.length>2?"":`${a[0]>1}_${a[1]>1}`;r+=`${d}_${g}_${o?u:""}_${i.length}_${f}_${m}_${p}_${l}_${c}_${h}_${y}_${s}`}else{const e=t.isUniform?"uniform":t.texData.texShape;r+=`${t.shape}_${e}_${s}`}}));const s=e.userCode;let a=e.constructor.name;return a+="_"+r+"_"+s+`${fe().getNumber("WEBGL_VERSION")}`,a}(e,l,c),d=this.getAndSaveBinary(h,(()=>function(e,t,n,r){const s=n.map(((e,n)=>{const r={logicalShape:e.shape,texShape:e.isUniform?null:e.texData.texShape,isUniform:e.isUniform,isPacked:!e.isUniform&&e.texData.isPacked,flatOffset:null};return null!=e.texData&&null!=e.texData.slice&&e.texData.slice.flatOffset>0&&(r.flatOffset=e.texData.slice.flatOffset),{name:t.variableNames[n],shapeInfo:r}})),a=s.map((e=>e.shapeInfo)),o={logicalShape:r.shape,texShape:r.texData.texShape,isUniform:!1,isPacked:r.texData.isPacked,flatOffset:null},i=Tf(s,o,t),u=function(e,t){const n=of(e,(()=>e.createShader(e.FRAGMENT_SHADER)),"Unable to create fragment WebGLShader.");if(Xp(e,(()=>e.shaderSource(n,t))),Xp(e,(()=>e.compileShader(n))),fe().get("ENGINE_COMPILE_ONLY"))return n;if(!1===e.getShaderParameter(n,e.COMPILE_STATUS))throw Jp(t,e.getShaderInfoLog(n)),new Error("Failed to compile fragment shader.");return n}(e.gl,i),l=e.createProgram(u);return fe().get("ENGINE_COMPILE_ONLY")?{program:t,fragmentShader:u,source:i,webGLProgram:l,inShapeInfos:a,outShapeInfo:o,variablesLocations:null,customUniformLocations:null,infLoc:null,nanLoc:null,outShapeLocation:null,outShapeStridesLocation:null,outTexShapeLocation:null}:(e.buildVao(l),Object.assign({program:t,fragmentShader:u,source:i,webGLProgram:l,inShapeInfos:a,outShapeInfo:o},Bf(e,t,l)))}(this.gpgpu,e,l,c))),p=null!=this.activeTimers;let f;p&&(f=this.startTimer()),fe().get("ENGINE_COMPILE_ONLY")||function(e,t,n,r,s){t.program.enableShapeUniforms||(zf(t.inShapeInfos,n),zf([t.outShapeInfo],[r]));const a=r.texData.texture,o=r.texData.texShape;r.texData.isPacked?e.setOutputPackedMatrixTexture(a.texture,o[0],o[1]):e.setOutputMatrixTexture(a.texture,o[0],o[1]),e.setProgram(t.webGLProgram),e.bindVertexArray(t.webGLProgram.vao),1===fe().getNumber("WEBGL_VERSION")&&null!==t.infLoc&&e.gl.uniform1f(t.infLoc,1/0),null!==t.nanLoc&&e.gl.uniform1f(t.nanLoc,NaN);for(let r=0;r<n.length;++r){const s=n[r],{uniform:a,offset:o,shape:i,texShape:u}=t.variablesLocations[r];if(i){const{uniformShape:n}=Df(t.program.packedInputs,s.shape,s.texData.texShape);switch(n.length){case 1:e.gl.uniform1iv(i,new Int32Array(n));break;case 2:e.gl.uniform2iv(i,new Int32Array(n));break;case 3:e.gl.uniform3iv(i,new Int32Array(n));break;case 4:e.gl.uniform4iv(i,new Int32Array(n))}}if(u&&e.gl.uniform2i(u,s.texData.texShape[0],s.texData.texShape[1]),null!=a)if(s.isUniform)if(B(s.shape)<2)e.gl.uniform1f(a,s.uniformValues[0]);else{let t=s.uniformValues;t instanceof Float32Array||(t=new Float32Array(t)),e.gl.uniform1fv(a,t)}else null!=s.texData.slice&&null!=o&&e.gl.uniform1i(o,s.texData.slice.flatOffset),e.setInputMatrixTexture(s.texData.texture.texture,a,r)}const i=t.outShapeLocation;if(i)switch(r.shape.length){case 1:e.gl.uniform1iv(i,new Int32Array(r.shape));break;case 2:e.gl.uniform2iv(i,new Int32Array(r.shape));break;case 3:e.gl.uniform3iv(i,new Int32Array(r.shape));break;case 4:e.gl.uniform4iv(i,new Int32Array(r.shape))}if(t.outShapeStridesLocation){const n=ne(r.shape);switch(r.shape.length){case 2:e.gl.uniform1iv(t.outShapeStridesLocation,new Int32Array(n));break;case 3:e.gl.uniform2iv(t.outShapeStridesLocation,new Int32Array(n));break;case 4:e.gl.uniform3iv(t.outShapeStridesLocation,new Int32Array(n))}}if(t.outTexShapeLocation&&e.gl.uniform2i(t.outTexShapeLocation,r.texData.texShape[0],r.texData.texShape[1]),t.program.customUniforms&&s)for(let n=0;n<t.program.customUniforms.length;++n){const r=t.program.customUniforms[n],a=t.customUniformLocations[n],o=s[n];if("float"===r.type)e.gl.uniform1fv(a,o);else if("vec2"===r.type)e.gl.uniform2fv(a,o);else if("vec3"===r.type)e.gl.uniform3fv(a,o);else if("vec4"===r.type)e.gl.uniform4fv(a,o);else if("int"===r.type)e.gl.uniform1iv(a,o);else if("ivec2"===r.type)e.gl.uniform2iv(a,o);else if("ivec3"===r.type)e.gl.uniform3iv(a,o);else{if("ivec4"!==r.type)throw Error(`uniform type ${r.type} is not supported yet.`);e.gl.uniform4iv(a,o)}}e.executeProgram()}(this.gpgpu,d,l,c,r),u.forEach((e=>this.disposeIntermediateTensorInfo(e))),p&&(f=this.endTimer(f),this.activeTimers.push({name:e.constructor.name,query:this.getQueryTime(f)}));const m=fe().get("WEBGL_FLUSH_THRESHOLD");if(m>0){const e=Kr();e-this.lastGlFlushTime>m&&(this.gpgpu.gl.flush(),this.lastGlFlushTime=e)}if(!fe().getBool("WEBGL_LAZILY_UNPACK")&&i.isPacked&&!1===s){const e=this.unpackTensor(o);return this.disposeIntermediateTensorInfo(o),e}return o}compileAndRun(e,t,n,r,s=!1){return n=n||t[0].dtype,this.runWebGLProgram(e,t,n,r,s)}getAndSaveBinary(e,t){return e in this.binaryCache||(this.binaryCache[e]=t()),this.binaryCache[e]}getTextureManager(){return this.textureManager}dispose(){this.disposed||(fe().getBool("IS_TEST")||Object.keys(this.binaryCache).forEach((e=>{this.gpgpu.deleteProgram(this.binaryCache[e].webGLProgram),delete this.binaryCache[e]})),this.textureManager.dispose(),null!=this.canvas&&"undefined"!=typeof HTMLCanvasElement&&this.canvas instanceof HTMLCanvasElement?this.canvas.remove():this.canvas=null,this.gpgpuCreatedLocally&&(this.gpgpu.program=null,this.gpgpu.dispose()),this.disposed=!0)}floatPrecision(){return null==this.floatPrecisionValue&&(this.floatPrecisionValue=Ya((()=>{if(!fe().get("WEBGL_RENDER_FLOAT32_ENABLED")){const e=fe().getBool("DEBUG");fe().set("DEBUG",!1);const t=this.abs(ho(1e-8)).dataSync()[0];if(fe().set("DEBUG",e),t>0)return 32}return 16}))),this.floatPrecisionValue}epsilon(){return 32===this.floatPrecision()?1e-7:1e-4}uploadToGPU(e){const t=this.texData.get(e),{shape:n,dtype:r,values:s,texture:a,usage:o,isPacked:i}=t;if(null!=a)return;const u=null!=this.activeTimers;let l;u&&(l=Kr());let c=t.texShape;if(null==c&&(c=function(e,t=!1){let n=fe().getNumber("WEBGL_MAX_TEXTURE_SIZE"),r=fe().getNumber("WEBGL_MAX_SIZE_FOR_NARROW_TEXTURE");if(r===1/0&&fe().getBool("WEBGL_AUTO_SQUARIFY_NARROW_TEXTURE_SHAPE")&&(r=n/2),t&&(n*=2,r*=2,1===(e=e.map(((t,n)=>n>=e.length-2?O(e[n]):e[n]))).length&&(e=[2,e[0]])),2!==e.length){const t=K(e);e=t.newShape}let s=B(e),a=null;e.length<=1&&s<=n?a=[1,s]:2===e.length&&e[0]<=n&&e[1]<=n?a=e:3===e.length&&e[0]*e[1]<=n&&e[2]<=n?a=[e[0]*e[1],e[2]]:3===e.length&&e[0]<=n&&e[1]*e[2]<=n?a=[e[0],e[1]*e[2]]:4===e.length&&e[0]*e[1]*e[2]<=n&&e[3]<=n?a=[e[0]*e[1]*e[2],e[3]]:4===e.length&&e[0]<=n&&e[1]*e[2]*e[3]<=n&&(a=[e[0],e[1]*e[2]*e[3]]);const o=null!=a&&Math.max(...a)>r&&Math.min(...a)<=(t?2:1)&&Math.min(...a)>0;if(null==a||o)if(t){const t=uf(e);let n=2,r=2;e.length&&([n,r]=lf(e)),s=t*(n/2)*(r/2),a=V(s).map((e=>2*e))}else a=V(s);return a}(n,i),t.texShape=c),null!=s){const e=cf(n);let a,o=c[1],h=c[0];const d=s instanceof Uint8Array||s instanceof Uint8ClampedArray;!i&&d||([o,h]=Kp(c[0],c[1])),a=i?new qf(e,d):new Kf(e,d);const p=d?[h,o]:c,f=this.makeTensorInfo(p,r),m=this.texData.get(f.dataId);m.usage=d?Wp.PIXELS:Wp.UPLOAD,m.texShape=p,this.gpgpu.uploadDenseMatrixToTexture(this.getTexture(f.dataId),o,h,s);const g=[[h,o]],y=!0,x=this.runWebGLProgram(a,[f],r,g,y),b=this.texData.get(x.dataId);t.texShape=b.texShape,t.isPacked=b.isPacked,t.usage=b.usage,fe().get("ENGINE_COMPILE_ONLY")?this.disposeData(x.dataId):(t.texture=b.texture,t.values=null,this.texData.delete(x.dataId)),this.disposeIntermediateTensorInfo(f),u&&(this.uploadWaitMs+=Kr()-l)}else{const e=this.acquireTexture(c,o,r,i);t.texture=e}}convertAndCacheOnCPU(e,t){const n=this.texData.get(e),{dtype:r}=n;return null!=t&&(n.values=function(e,t){if("float32"===t||"complex64"===t)return e;if("int32"===t||"bool"===t){const n="int32"===t?new Int32Array(e.length):new Uint8Array(e.length);for(let t=0;t<n.length;++t)n[t]=Math.round(e[t]);return n}throw new Error(`Unknown dtype ${t}`)}(t,r)),n.values}acquireTexture(e,t,n,r){if(this.numBytesInGPU+=this.computeBytes(e,n),!this.warnedAboutMemory&&this.numBytesInGPU>1024*this.numMBBeforeWarning*1024){const e=(this.numBytesInGPU/1024/1024).toFixed(2);this.warnedAboutMemory=!0,console.warn(`High memory usage in GPU: ${e} MB, most likely due to a memory leak`)}return this.textureManager.acquireTexture(e,t,r)}computeBytes(e,t){return e[0]*e[1]*Q(t)}checkCompileCompletion(){for(const[,e]of Object.entries(this.binaryCache))this.checkCompletion_(e)}async checkCompileCompletionAsync(){const e=[];if(this.gpgpu.parallelCompilationExtension){for(const[,t]of Object.entries(this.binaryCache))e.push(this.checkCompletionAsync_(t));return Promise.all(e)}for(const[,t]of Object.entries(this.binaryCache)){const n=new Promise((e=>{try{this.checkCompletion_(t),e(!0)}catch(e){throw e}}));e.push(n)}return Promise.all(e)}async checkCompletionAsync_(e){return this.gpgpu.gl.getProgramParameter(e.webGLProgram,this.gpgpu.parallelCompilationExtension.COMPLETION_STATUS_KHR)?this.checkCompletion_(e):(await new Promise((e=>Ad((()=>e())))),this.checkCompletionAsync_(e))}checkCompletion_(e){if(!1===this.gpgpu.gl.getProgramParameter(e.webGLProgram,this.gpgpu.gl.LINK_STATUS)){if(console.log(this.gpgpu.gl.getProgramInfoLog(e.webGLProgram)),!1===this.gpgpu.gl.getShaderParameter(e.fragmentShader,this.gpgpu.gl.COMPILE_STATUS))throw Jp(e.source,this.gpgpu.gl.getShaderInfoLog(e.fragmentShader)),new Error("Failed to compile fragment shader.");throw new Error("Failed to link vertex and fragment shaders.")}return!0}getUniformLocations(){for(const e of Object.values(this.binaryCache)){this.gpgpu.buildVao(e.webGLProgram);const{variablesLocations:t,customUniformLocations:n,infLoc:r,nanLoc:s,outShapeLocation:a,outShapeStridesLocation:o,outTexShapeLocation:i}=Bf(this.gpgpu,e.program,e.webGLProgram);e.variablesLocations=t,e.customUniformLocations=n,e.infLoc=r,e.nanLoc=s,e.outShapeLocation=a,e.outShapeStridesLocation=o,e.outTexShapeLocation=i}}createTensorFromGPUData(e,t,n){e.channels=e.channels||"RGBA";const{texture:r,height:s,width:a,channels:o}=e,i=Xa().backend;if(!i.gpgpu.gl.isTexture(r))throw new Error("The texture is invalid. Also, please make sure the texture and the TFJS WebGL backend are using the same canvas. If you want to use your own custom canvas, you have to create and use the custom TFJS WebGL backend created from the canvas through 'new tf.MathBackendWebGL(customCanvas)'.");const u=i.writeTexture(r,t,n,s,a,o);return Xa().makeTensorFromDataId(u,t,n,i)}}Wy.nextDataId=0,Ps()&&to("webgl",(()=>new Wy),2);const Gy="\n  if (isnan(a)) return a;\n  if (isnan(b)) return b;\n";class Hy{constructor(e,t,n){this.variableNames=["A","B"],this.outputShape=Io(t,n),this.enableShapeUniforms=Uf(this.outputShape.length),this.userCode=`\n      float binaryOperation(float a, float b) {\n        ${e}\n      }\n\n      void main() {\n        float a = getAAtOutCoords();\n        float b = getBAtOutCoords();\n        setOutput(binaryOperation(a, b));\n      }\n    `}}const jy="\n  result.r = isNaN.r ? NAN : result.r;\n  result.g = isNaN.g ? NAN : result.g;\n  result.b = isNaN.b ? NAN : result.b;\n  result.a = isNaN.a ? NAN : result.a;\n";class Ky{constructor(e,t,n,r=!1){this.variableNames=["A","B"],this.supportsBroadcasting=!0,this.packedInputs=!0,this.packedOutput=!0,this.outputShape=Io(t,n);const s=this.outputShape.length;this.enableShapeUniforms=Uf(s);let a="";if(r)if(0===s||1===B(this.outputShape))a="\n          result.y = 0.;\n          result.z = 0.;\n          result.w = 0.;\n        ";else if(a=`\n          ${Pf(s)} coords = getOutputCoords();\n        `,1===s)this.enableShapeUniforms?a+="\n            result.y = (coords + 1) >= outShape ? 0. : result.y;\n            result.z = 0.;\n            result.w = 0.;\n          ":a+=`\n            result.y = (coords + 1) >= ${this.outputShape[0]} ? 0. : result.y;\n            result.z = 0.;\n            result.w = 0.;\n          `;else{const e=yy("coords",s);this.enableShapeUniforms?a+=`\n            bool nextRowOutOfBounds =\n              (${e[s-2]} + 1) >= outShape[${s} - 2];\n            bool nextColOutOfBounds =\n              (${e[s-1]} + 1) >= outShape[${s} - 1];\n            result.y = nextColOutOfBounds ? 0. : result.y;\n            result.z = nextRowOutOfBounds ? 0. : result.z;\n            result.w = nextColOutOfBounds || nextRowOutOfBounds ? 0. : result.w;\n          `:a+=`\n            bool nextRowOutOfBounds =\n              (${e[s-2]} + 1) >= ${this.outputShape[s-2]};\n            bool nextColOutOfBounds =\n              (${e[s-1]} + 1) >= ${this.outputShape[s-1]};\n            result.y = nextColOutOfBounds ? 0. : result.y;\n            result.z = nextRowOutOfBounds ? 0. : result.z;\n            result.w = nextColOutOfBounds || nextRowOutOfBounds ? 0. : result.w;\n          `}this.userCode=`\n      vec4 binaryOperation(vec4 a, vec4 b) {\n        ${e}\n      }\n\n      void main() {\n        vec4 a = getAAtOutCoords();\n        vec4 b = getBAtOutCoords();\n\n        vec4 result = binaryOperation(a, b);\n        ${a}\n\n        setOutput(result);\n      }\n    `}}function qy(e){const{inputs:t,backend:n}=e,{x:r}=t;return n.incRef(r.dataId),{dataId:r.dataId,shape:r.shape,dtype:r.dtype}}const Xy={kernelName:Et,backendName:"webgl",kernelFunc:qy};function Yy(e){const{inputs:t,backend:n}=e,{real:r,imag:s}=t,a=n.makeTensorInfo(r.shape,"complex64"),o=n.texData.get(a.dataId),i=qy({inputs:{x:r},backend:n}),u=qy({inputs:{x:s},backend:n});return o.complexTensorInfos={real:i,imag:u},a}const Qy={kernelName:Ge,backendName:"webgl",kernelFunc:Yy},Zy="return (a < 0.) ? b * a : a;",Jy="\n  vec4 aLessThanZero = vec4(lessThan(a, vec4(0.)));\n  return (aLessThanZero * (b * a)) + ((vec4(1.0) - aLessThanZero) * a);\n",ex={kernelName:Pt,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{alpha:a}=r,o=n.makeTensorInfo([],"float32",Hr(a,"float32")),i=fe().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new Ky(Jy,s.shape,o.shape):new Hy(Zy,s.shape,o.shape),u=n.runWebGLProgram(i,[s,o],"float32");return n.disposeIntermediateTensorInfo(o),u}},tx="return (a < 0.) ? b * a : a;",nx="\n  vec4 aLessThanZero = vec4(lessThan(a, vec4(0.)));\n  return (aLessThanZero * (b * a)) + ((vec4(1.0) - aLessThanZero) * a);\n",rx={kernelName:fn,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:r,alpha:s}=t,a=fe().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new Ky(nx,r.shape,s.shape):new Hy(tx,r.shape,s.shape);return n.runWebGLProgram(a,[r,s],"float32")}},sx="if (isnan(x)) return x;";function ax({opSnippet:e,packedOpSnippet:t,cpuKernelImpl:n,dtype:r}){return({inputs:s,backend:a})=>{const{x:o}=s,i=a,u=r||o.dtype;if(i.shouldExecuteOnCPU([o])&&null!=n){const e=i.texData.get(o.dataId),t=n(e.values,u);return i.makeTensorInfo(o.shape,u,t)}let l;return l=fe().getBool("WEBGL_PACK_UNARY_OPERATIONS")&&null!=t?new Ly(o.shape,t):new Cy(o.shape,e),i.runWebGLProgram(l,[o],u)}}function ox({opSnippet:e,packedOpSnippet:t,checkOutOfBounds:n=!1,supportsComplex:r=!1,cpuKernelImpl:s,dtype:a}){return({inputs:o,backend:i})=>{const{a:u,b:l}=o,c=i;if(r&&"complex64"===u.dtype){const t=c.texData.get(u.dataId),n=c.texData.get(l.dataId),[r,s]=[[t.complexTensorInfos.real,n.complexTensorInfos.real],[t.complexTensorInfos.imag,n.complexTensorInfos.imag]].map((t=>{const[n,r]=t,s={dataId:n.dataId,dtype:n.dtype,shape:u.shape},a={dataId:r.dataId,dtype:r.dtype,shape:l.shape},o=new Hy(e,u.shape,l.shape);return c.runWebGLProgram(o,[s,a],ws(n.dtype,r.dtype))})),a=Yy({inputs:{real:r,imag:s},backend:c});return c.disposeIntermediateTensorInfo(r),c.disposeIntermediateTensorInfo(s),a}const h=a||ws(u.dtype,l.dtype);if(("string"===u.dtype||"string"===l.dtype||c.shouldExecuteOnCPU([u,l]))&&null!=s){const e=c.texData.get(u.dataId).values,t=c.texData.get(l.dataId).values,n="string"===u.dtype?Mp(e):e,r="string"===u.dtype?Mp(t):t,[a,o]=s(u.shape,l.shape,n,r,h),i=c.makeTensorInfo(o,h);return c.texData.get(i.dataId).values=a,i}let d;return d=fe().getBool("WEBGL_PACK_BINARY_OPERATIONS")&&null!=t?new Ky(t,u.shape,l.shape,n):new Hy(e,u.shape,l.shape),c.runWebGLProgram(d,[u,l],h)}}function ix(e,t=!1){if("linear"===e)return t?Oy:Ty;if("relu"===e)return t?Py:Ey;if("elu"===e)return t?Fy:Ny;if("relu6"===e)return t?Dy:Ry;if("prelu"===e)return t?nx:tx;if("leakyrelu"===e)return t?Jy:Zy;if("sigmoid"===e)return t?My:Ay;throw new Error(`Activation ${e} has not been implemented for the WebGL backend.`)}class ux{constructor(e,t,n,r=!1,s=!1,a=!1,o=null,i=!1,u=!1){this.variableNames=["matrixA","matrixB"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=n,this.enableShapeUniforms=Uf(this.outputShape.length);const l=r?e[1]:e[2],c=Math.ceil(l/2),h=r?"i * 2, rc.y":"rc.y, i * 2",d=s?"rc.z, i * 2":"i * 2, rc.z",p=r?["a.xxyy","a.zzww"]:["a.xxzz","a.yyww"],f=s?["b.xzxz","b.ywyw"]:["b.xyxy","b.zwzw"];let m="",g="";o&&(m=i?`vec4 activation(vec4 a) {\n          vec4 b = getPreluActivationWeightsAtOutCoords();\n          ${o}\n        }`:u?`vec4 activation(vec4 a) {\n          vec4 b = getLeakyreluAlphaAtOutCoords();\n          ${o}\n        }`:`vec4 activation(vec4 x) {\n          ${o}\n        }`,g="result = activation(result);");const y=a?"result += getBiasAtOutCoords();":"";a&&this.variableNames.push("bias"),i&&this.variableNames.push("preluActivationWeights"),u&&this.variableNames.push("leakyreluAlpha");let x="rc.x",b="rc.x";e[0]<t[0]?x=`imod(rc.x, ${e[0]})`:t[0]<e[0]&&(b=`imod(rc.x, ${t[0]})`),this.userCode=`\n      ${m}\n      // Don't use uniform for sharedDimensionPacked for performance.\n      const float sharedDimension = ${c}.0;\n\n      vec4 dot2x2ARowBCol(ivec3 rc) {\n        vec4 result = vec4(0);\n        int batchA = ${x};\n        int batchB = ${b};\n        for (int i = 0; i < ${c}; i++) {\n          vec4 a = getMatrixA(batchA, ${h});\n          vec4 b = getMatrixB(batchB, ${d});\n\n          // These swizzled products need to be separately added.\n          // See: https://github.com/tensorflow/tfjs/issues/1735\n          result += (${p[0]} * ${f[0]});\n          result += (${p[1]} * ${f[1]});\n        }\n        return result;\n      }\n\n      void main() {\n        ivec3 rc = getOutputCoords();\n        vec4 result = dot2x2ARowBCol(rc);\n\n        ${y}\n\n        ${g}\n\n        setOutput(result);\n      }\n    `}}const lx={REAL:"return areal * breal - aimag * bimag;",IMAG:"return areal * bimag + aimag * breal;"};class cx{constructor(e,t,n){this.variableNames=["AReal","AImag","BReal","BImag"],this.outputShape=Io(t,n),this.userCode=`\n      float binaryOpComplex(\n          float areal, float aimag, float breal, float bimag) {\n        ${e}\n      }\n\n      void main() {\n        float areal = getARealAtOutCoords();\n        float aimag = getAImagAtOutCoords();\n        float breal = getBRealAtOutCoords();\n        float bimag = getBImagAtOutCoords();\n        setOutput(binaryOpComplex(areal, aimag, breal, bimag));\n      }\n    `}}const hx="return a * b;";function dx(e){const{inputs:t,backend:n}=e,{a:r,b:s}=t,a=ws(r.dtype,s.dtype);if("complex64"===r.dtype){const e=n.texData.get(r.dataId),t=n.texData.get(s.dataId),a=new cx(lx.REAL,r.shape,s.shape),o=new cx(lx.IMAG,r.shape,s.shape),i=[{dataId:e.complexTensorInfos.real.dataId,dtype:e.complexTensorInfos.real.dtype,shape:r.shape},{dataId:e.complexTensorInfos.imag.dataId,dtype:e.complexTensorInfos.imag.dtype,shape:r.shape},{dataId:t.complexTensorInfos.real.dataId,dtype:t.complexTensorInfos.real.dtype,shape:s.shape},{dataId:t.complexTensorInfos.imag.dataId,dtype:t.complexTensorInfos.imag.dtype,shape:s.shape}],u=n.runWebGLProgram(a,i,"float32"),l=n.runWebGLProgram(o,i,"float32"),c=Yy({inputs:{real:u,imag:l},backend:n});return n.disposeIntermediateTensorInfo(u),n.disposeIntermediateTensorInfo(l),c}if(n.shouldExecuteOnCPU([r,s])){const e=n.texData.get(r.dataId),t=n.texData.get(s.dataId),[o,i]=Wg(r.shape,s.shape,e.values,t.values,a),u=n.makeTensorInfo(i,a);return n.texData.get(u.dataId).values=o,u}let o;return o=fe().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new Ky(hx,r.shape,s.shape):new Hy(hx,r.shape,s.shape),n.runWebGLProgram(o,[r,s],a)}const px={kernelName:nn,backendName:"webgl",kernelFunc:dx};function fx(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{shape:a}=r,o=n,i=B(s.shape),u=H(a,i),l=B(u);D(i===l,(()=>`The new shape (${u}) has ${l} elements and the old shape (${s.shape}) has ${i} elements. The new shape and old shape must have the same number of elements.`));const c=o.texData.get(s.dataId);return!c.isPacked||df(s.shape,u)||null!==c.texture&&df(c.shape,u)?(o.incRef(s.dataId),{dataId:s.dataId,shape:u,dtype:s.dtype}):function(e,t,n){const r=[uf(e.shape),...lf(e.shape)],s={dtype:e.dtype,shape:r,dataId:e.dataId},a=[uf(t),...lf(t)],o=new by(a,r),i=[r],u=n.runWebGLProgram(o,[s],e.dtype,i,!0);return{dataId:u.dataId,shape:t,dtype:u.dtype}}(s,u,o)}const mx={kernelName:Sn,backendName:"webgl",kernelFunc:fx};class gx{constructor(e,t){this.variableNames=["x"];const{windowSize:n,batchSize:r,inSize:s,outSize:a}=e;this.outputShape=[r,a];const o=4*Math.floor(n/4),i=n%4;let u="sumValue += dot(values, ones);";if(null!=t){const e=1/t;u=`sumValue += dot(values * ${U(e)?e.toPrecision(2):e}, ones);`}let l="";s%n>0&&(l=`\n        if (inIdx < 0 || inIdx >= ${s}) {\n          return 0.0;\n        }\n      `),this.userCode=`\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\n\n      float getValue(int batch, int inIdx) {\n        ${l}\n        return getX(batch, inIdx);\n      }\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n        int outIdx = coords[1];\n        int inOffset = outIdx * ${n};\n\n        float sumValue = 0.0;\n\n        for (int i = 0; i < ${o}; i += 4) {\n          int inIdx = inOffset + i;\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            getValue(batch, inIdx + 3)\n          );\n\n          ${u}\n        }\n\n        int inIdx = inOffset + ${o};\n        if (${1===i}) {\n          vec4 values = vec4(getValue(batch, inIdx), 0.0, 0.0, 0.0);\n\n          ${u}\n        } else if (${2===i}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1), 0.0, 0.0);\n\n          ${u}\n        } else if (${3===i}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2), 0.0);\n\n          ${u}\n        }\n        setOutput(sumValue);\n      }\n    `}}class yx{constructor(e,t){this.variableNames=["x"];const{windowSize:n,batchSize:r,inSize:s,outSize:a}=e;this.outputShape=[r,a];let o="0.0",i="";"prod"===t?o="1.0":"min"===t?(o="1.0 / 1e-20",i="min"):"max"===t&&(o="-1.0 / 1e-20",i="max");let u=`${t}(${t}(${t}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;"sum"===t?u="sumValue":"prod"===t?u="prodValue":"all"===t?u="allValue":"any"===t&&(u="anyValue");const l=4*Math.floor(n/4),c=n%4;let h=`\n      if (${"sum"===t}) {\n        sumValue += dot(values, ones);\n      } else if (${"prod"===t}) {\n        vec2 tmp = vec2(values[0], values[1]) * vec2(values[2], values[3]);\n        prodValue *= tmp[0] * tmp[1];\n      } else {\n        minMaxValue = ${i}(values, minMaxValue);\n        if (${"min"===t} || ${"max"===t}) {\n          minMaxValue = ${i}(values, minMaxValue);\n          bvec4 isNaN = isnan(values);\n          if (isNaN.r || isNaN.g || isNaN.b || isNaN.a) {\n            minMaxValue = vec4(NAN);\n          }\n        }\n      }\n    `,d="vec4";"all"===t?(o="1.0",h="\n        bool reducedAllValue = all(values);\n        float floatedReducedAllValue = float(reducedAllValue);\n        allValue = float(allValue >= 1.0 && floatedReducedAllValue >= 1.0);\n      ",d="bvec4"):"any"===t&&(o="0.0",h="\n        bool reducedAnyValue = any(values);\n        float floatedReducedAnyValue = float(reducedAnyValue);\n        anyValue = float(anyValue >= 1.0 || floatedReducedAnyValue >= 1.0);\n      ",d="bvec4");let p="";s%n>0&&(p=`\n        if (inIdx < 0 || inIdx >= ${s}) {\n          return initializationValue;\n        }\n      `),this.userCode=`\n      const float initializationValue = ${o};\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\n\n      float getValue(int batch, int inIdx) {\n        ${p}\n        return getX(batch, inIdx);\n      }\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n        int outIdx = coords[1];\n        int inOffset = outIdx * ${n};\n\n        vec4 minMaxValue = vec4(${o});\n        float prodValue = 1.0;\n        float sumValue = 0.0;\n        float allValue = 1.0;\n        float anyValue = 0.0;\n\n        for (int i = 0; i < ${l}; i += 4) {\n          int inIdx = inOffset + i;\n          ${d} values = ${d}(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            getValue(batch, inIdx + 3)\n          );\n\n          ${h}\n        }\n\n        int inIdx = inOffset + ${l};\n        if (${1===c}) {\n          ${d} values = ${d}(\n            getValue(batch, inIdx),\n            initializationValue,\n            initializationValue,\n            initializationValue\n          );\n\n          ${h}\n        } else if (${2===c}) {\n          ${d} values = ${d}(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            initializationValue,\n            initializationValue\n          );\n\n          ${h}\n        } else if (${3===c}) {\n          ${d} values = ${d}(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            initializationValue\n          );\n\n          ${h}\n        }\n        setOutput(${u});\n      }\n    `}}function xx(e,t,n,r){const s=function(e){const t=[];for(;0===t.length||1!==t[t.length-1].outSize;){const n=t.length?t[t.length-1].outSize:e[1],r=Ud(n);t.push({inSize:n,windowSize:r,outSize:Math.ceil(n/r)})}return t}(e.shape);let a=e;for(let o=0;o<s.length;o++){const{inSize:i,windowSize:u,outSize:l}=s[o];let c,h;c="mean"===n?0===o?new gx({windowSize:u,inSize:i,batchSize:e.shape[0],outSize:l},i):new gx({windowSize:u,inSize:i,batchSize:e.shape[0],outSize:l}):new yx({windowSize:u,inSize:i,batchSize:e.shape[0],outSize:l},n),h=a,a=r.runWebGLProgram(c,[a],t),h.dataId!==e.dataId&&r.disposeIntermediateTensorInfo(h)}return a}class bx{constructor(e,t){this.variableNames=["A"];const n=new Array(e.length);for(let r=0;r<n.length;r++)n[r]=e[t[r]];this.outputShape=n,this.rank=n.length;const r=Pf(this.rank),s=function(e){const t=e.length;if(t>6)throw Error(`Transpose for rank ${t} is not yet supported`);const n=["resRC.x","resRC.y","resRC.z","resRC.w","resRC.u","resRC.v"],r=new Array(t);for(let t=0;t<e.length;t++)r[e[t]]=n[t];return r.join()}(t);this.userCode=`\n    void main() {\n      ${r} resRC = getOutputCoords();\n      setOutput(getA(${s}));\n    }\n    `}}class vx{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0;const n=new Array(e.length);for(let r=0;r<n.length;r++)n[r]=e[t[r]];if(this.outputShape=n,this.rank=n.length,this.rank>6)throw Error(`Packed transpose for rank ${this.rank} is not yet supported.`);const r=Pf(this.rank),s=gy("rc",this.rank),a=new Array(this.rank);for(let e=0;e<t.length;e++)a[t[e]]=s[e];const o=`vec2(${a.slice(-2).join()})`,i=`++${s[this.rank-1]} < ${n[this.rank-1]}`,u=`getChannel(getA(${a.join()}), ${o})`;this.userCode=`\n    void main() {\n      ${r} rc = getOutputCoords();\n      vec4 result = vec4(0.);\n      result[0] = ${u};\n      if(${i}) {\n        result[1] = ${u};\n      }\n      --${s[this.rank-1]};\n      if(++${s[this.rank-2]} < ${n[this.rank-2]}) {\n        result[2] = ${u};\n        if(${i}) {\n          result[3] = ${u};\n        }\n      }\n      setOutput(result);\n    }\n    `}}function wx(e,t,n){const r=fe().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new vx(e.shape,t):new bx(e.shape,t);return n.runWebGLProgram(r,[e],e.dtype)}function kx(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{axis:a,keepDims:o}=r;return function(e,t,n,r){const s=t,a=e.shape.length,o=j(s,e.shape);let i=o;const u=Hu(i,a),l=null!=u;let c=e;l&&(c=wx(e,u,r),i=Ku(i.length,a)),Gu("sum",i,a);const[h,d]=Vu(c.shape,i);let p=h;n&&(p=Wu(h,o));const f=B(d),m=fx({inputs:{x:c},attrs:{shape:[B(e.shape)/f,f]},backend:r}),g=xx(m,ks(e.dtype),"sum",r),y=fx({inputs:{x:g},attrs:{shape:p},backend:r});return r.disposeIntermediateTensorInfo(m),r.disposeIntermediateTensorInfo(g),l&&r.disposeIntermediateTensorInfo(c),y}(s,a,o,n)}const Sx={kernelName:Vn,backendName:"webgl",kernelFunc:kx};function Cx(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{perm:a}=r,o=n,i=s.shape.length,u=new Array(i);for(let e=0;e<u.length;e++)u[e]=s.shape[a[e]];let l;if(o.shouldExecuteOnCPU([s])){const e=o.texData.get(s.dataId).values,t=fy(e,s.shape,s.dtype,a,u);l=o.makeTensorInfo(u,s.dtype),o.texData.get(l.dataId).values=t}else l=wx(s,a,o);return l}const Ix={kernelName:cr,backendName:"webgl",kernelFunc:Cx},Tx=1e3;function $x({a:e,b:t,transposeA:n,transposeB:r,backend:s,bias:a=null,preluActivationWeights:o=null,leakyreluAlpha:i=0,activation:u=null}){const l=e.shape.length,c=t.shape.length,h=n?e.shape[l-2]:e.shape[l-1],d=r?t.shape[c-1]:t.shape[c-2],p=n?e.shape[l-1]:e.shape[l-2],f=r?t.shape[c-2]:t.shape[c-1],m=e.shape.slice(0,-2),g=t.shape.slice(0,-2),y=B(m),x=B(g),b=Io(e.shape.slice(0,-2),t.shape.slice(0,-2)).concat([p,f]);D(h===d,(()=>`Error in matMul: inner shapes (${h}) and (${d}) of Tensors with shapes ${e.shape} and ${t.shape} and transposeA=${n} and transposeB=${r} must match.`));const v=n?[y,h,p]:[y,p,h],w=r?[x,f,d]:[x,d,f],k=fx({inputs:{x:e},backend:s,attrs:{shape:v}}),S=fx({inputs:{x:t},backend:s,attrs:{shape:w}}),C=[k,S],I=Math.max(y,x),T=n?k.shape[1]:k.shape[2],$=null!=a,N=null!=o,E="leakyrelu"===u,R=null!=u?ix(u,!0):null;let _;if((1===p||1===f)&&T>Tx&&!1===($||N||E||null!=R)){let e=k,t=S;n&&(e=Cx({inputs:{x:k},backend:s,attrs:{perm:[0,2,1]}}),C.push(e)),r&&(t=Cx({inputs:{x:S},backend:s,attrs:{perm:[0,2,1]}}),C.push(t));const a=1===f;let o=e;1!==f&&(o=fx({inputs:{x:e},backend:s,attrs:{shape:[I,T,1]}}),C.push(o));const i=1===f?2:1;let u=t;a&&(u=fx({inputs:{x:t},backend:s,attrs:{shape:[I,1,T]}}),C.push(u));const l=dx({inputs:{a:o,b:u},backend:s});_=kx({inputs:{x:l},backend:s,attrs:{axis:i,keepDims:!0}}),C.push(l)}else{const u=ws(e.dtype,t.dtype),l=new ux(v,w,[I,p,f],n,r,$,R,N,E),c=[k,S];if(null!=a&&c.push(a),N&&c.push(o),E){const e=s.makeTensorInfo([],"float32",Hr(i,"float32"));c.push(e),C.push(e)}_=s.runWebGLProgram(l,c,u)}const A=fx({inputs:{x:_},backend:s,attrs:{shape:b}});C.push(_);for(const e of C)s.disposeIntermediateTensorInfo(e);return A}const Nx={kernelName:xr,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{a:s,b:a,bias:o,preluActivationWeights:i}=t,{transposeA:u,transposeB:l,activation:c,leakyreluAlpha:h}=r;return $x({a:s,b:a,transposeA:u,transposeB:l,backend:n,bias:o,preluActivationWeights:i,leakyreluAlpha:h,activation:c})}},Ex="return abs(x);",Rx={kernelName:be,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:r}=t;if(n.shouldExecuteOnCPU([r])&&"complex64"!==r.dtype){const e=n.texData.get(r.dataId),t=ey(e.values);return n.makeTensorInfo(r.shape,r.dtype,t)}let s;return s=fe().getBool("WEBGL_PACK_UNARY_OPERATIONS")?new Ly(r.shape,Ex):new Cy(r.shape,Ex),n.runWebGLProgram(s,[r],r.dtype)}},_x=ax({opSnippet:Iy+"\n  if (abs(x) > 1.) {\n    return NAN;\n  }\n  return acos(x);\n"}),Ax={kernelName:ve,backendName:"webgl",kernelFunc:_x},Ox=ax({opSnippet:Iy+"\n  if (x < 1.0) return NAN;\nreturn log(x + sqrt(x * x - 1.0));"}),Fx={kernelName:we,backendName:"webgl",kernelFunc:Ox},Px="return a + b;",Dx=ox({opSnippet:Px,packedOpSnippet:Px,supportsComplex:!0,cpuKernelImpl:wg}),Mx={kernelName:ke,backendName:"webgl",kernelFunc:Dx};class Lx{constructor(e,t){this.outputShape=[],this.outputShape=e,this.variableNames=t.map(((e,t)=>`T${t}`));const n=[];this.variableNames.forEach((e=>{n.push(`float v${e} = get${e}AtOutCoords();`)}));const r=this.variableNames.map((e=>`v${e}`)).join(" + ");this.userCode=`\n      void main() {\n        ${n.join("\n        ")}\n\n        float result = ${r};\n        setOutput(result);\n      }\n    `}}class Bx{constructor(e,t){this.outputShape=[],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e,this.variableNames=t.map(((e,t)=>`T${t}`));const n=[];this.variableNames.forEach((e=>{n.push(`vec4 v${e} = get${e}AtOutCoords();`)}));const r=this.variableNames.map((e=>`v${e}`)).join(" + ");this.userCode=`\n      void main() {\n        ${n.join("\n        ")}\n\n        vec4 result = ${r};\n        setOutput(result);\n      }\n    `}}const zx={kernelName:Se,backendName:"webgl",kernelFunc:function e(t){const{inputs:n,backend:r}=t,s=n;if(1===s.length)return qy({inputs:{x:s[0]},backend:r});if(s.length>fe().get("WEBGL_MAX_TEXTURES_IN_SHADER")){const t=Math.floor(s.length/2),n=e({inputs:s.slice(0,t),backend:r}),a=e({inputs:s.slice(t),backend:r});return e({inputs:[n,a],backend:r})}const a=s.map((e=>e.dtype)).reduce(((e,t)=>ws(e,t))),o=s.map((e=>e.shape)),i=fe().getBool("WEBGL_PACK")?new Bx(s[0].shape,o):new Lx(s[0].shape,o);return r.runWebGLProgram(i,s,a)}},Ux={kernelName:Ce,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{axis:a,keepDims:o}=r,i=s.shape.length,u=j(a,s.shape);let l=u;const c=Hu(l,i);let h=s;null!=c&&(h=Cx({inputs:{x:s},backend:n,attrs:{perm:c}}),l=Ku(l.length,i)),Gu("all",l,i);const[d,p]=Vu(h.shape,l),f=fx({inputs:{x:h},backend:n,attrs:{shape:[-1,B(p)]}}),m=xx(f,f.dtype,"all",n);let g;return g=fx(o?{inputs:{x:m},backend:n,attrs:{shape:Wu(d,u)}}:{inputs:{x:m},backend:n,attrs:{shape:d}}),n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(m),null!=c&&n.disposeIntermediateTensorInfo(h),g}},Vx={kernelName:Ie,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{axis:a,keepDims:o}=r,i=s.shape.length,u=j(a,s.shape);let l=u;const c=Hu(l,i);let h=s;null!=c&&(h=Cx({inputs:{x:s},backend:n,attrs:{perm:c}}),l=Ku(l.length,i)),Gu("any",l,i);const[d,p]=Vu(h.shape,l),f=fx({inputs:{x:h},backend:n,attrs:{shape:[-1,B(p)]}}),m=xx(f,f.dtype,"any",n);let g;return g=fx(o?{inputs:{x:m},backend:n,attrs:{shape:Wu(d,u)}}:{inputs:{x:m},backend:n,attrs:{shape:d}}),n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(m),null!=c&&n.disposeIntermediateTensorInfo(h),g}};class Wx{constructor(e,t,n){this.variableNames=["A"];const{windowSize:r,batchSize:s,outSize:a}=e;n||this.variableNames.push("bestIndicesA"),this.outputShape=[s,a];const o="max"===t?">":"<",i=n?"inOffset + i;":"round(getBestIndicesA(batch, inOffset + i));";this.userCode=`\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n        int outIdx = coords[1];\n        int inOffset = outIdx * ${r};\n\n        int bestIndex = inOffset;\n        float bestValue = getA(batch, bestIndex);\n\n        for (int i = 0; i < ${r}; i++) {\n          int inIdx = ${i};\n          float candidate = getA(batch, inIdx);\n          if (candidate ${o} bestValue) {\n            bestValue = candidate;\n            bestIndex = inIdx;\n          }\n        }\n        setOutput(float(bestIndex));\n      }\n    `}}class Gx{constructor(e,t,n,r){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,D(e.length>2,(()=>`Packed arg${n.charAt(0).toUpperCase()+n.slice(1)} supports only inputs with rank above 2.`));const s=e[e.length-1],a=Math.ceil(s/t);this.outputShape=e.slice(0,-1),a>1&&this.outputShape.push(a),r||this.variableNames.push("bestIndicesA");const o=this.outputShape,i=o.length,u=Pf(i),l=yy("coords",i);let c,h;if(1===a){h=i+1;const e=Pf(h);c=`\n        ${e} sourceLocR = ${e}(${l.join()}, 0);\n        ++${l[i-1]};\n        ${e} sourceLocG = ${e}(${l.join()}, 0);\n        ++${l[i-2]};\n        ${e} sourceLocA = ${e}(${l.join()}, 0);\n        --${l[i-1]};\n        ${e} sourceLocB = ${e}(${l.join()}, 0);\n        --${l[i-2]};`}else h=i,c=`\n        ${u} sourceLocR = coords;\n        ++${l[i-1]};\n        ${u} sourceLocG = coords;\n        ++${l[i-2]};\n        ${u} sourceLocA = coords;\n        --${l[i-1]};\n        ${u} sourceLocB = coords;\n        --${l[i-2]};`;const d=["x","y","z","w","u","v"].slice(0,h),p="."+d[h-1],f=d.map((e=>"int "+e)),m=yy("sourceLocR",h-1).concat("inIdx.r"),g=yy("sourceLocG",h-1).concat("inIdx.g"),y=yy("sourceLocB",h-1).concat("inIdx.b"),x=yy("sourceLocA",h-1).concat("inIdx.a"),b="max"===n?"greaterThan":"lessThan",v=r?"":`\n          inIdx = round(vec4(getBestIndicesAChannel(${m.join()}),\n                             getBestIndicesAChannel(${g.join()}),\n                             getBestIndicesAChannel(${y.join()}),\n                             getBestIndicesAChannel(${x.join()})));`,w=`vec4(\n            getAChannel(${m.join()}),\n            hasNextCol ? getAChannel(${g.join()}) : 0.,\n            hasNextRow ? getAChannel(${y.join()}) : 0.,\n            hasNextRow && hasNextCol ? getAChannel(${x.join()}) : 0.)`,k=r?"":`\n      float getBestIndicesAChannel(${f.join()}) {\n        return getChannel(getBestIndicesA(${d.join()}),\n                                          vec2(${d.slice(-2).join()}));\n      }`;this.userCode=`\n      float getAChannel(${f.join()}) {\n        return getChannel(getA(${d.join()}),\n                               vec2(${d.slice(-2).join()}));\n      }\n      ${k}\n      void main() {\n        ${u} coords = getOutputCoords();\n        bool hasNextCol = ${l[i-1]} < ${o[i-1]-1};\n        bool hasNextRow = ${l[i-2]} < ${o[i-2]-1};\n        ${c}\n        ivec4 srcIdx = ivec4(sourceLocR${p}, sourceLocG${p},\n          sourceLocB${p}, sourceLocA${p}) * ${t};\n        ivec4 inIdx = srcIdx;\n        vec4 bestIndex = vec4(inIdx);\n        vec4 bestValue = ${w};\n\n        for (int i = 0; i < ${t}; i++) {\n          inIdx = srcIdx;\n          ${v}\n          vec4 candidate = ${w};\n          bvec4 nan = isnan(candidate);\n          bvec4 replace = bvec4(\n            vec4(${b}(candidate, bestValue)) * (vec4(1.0) - vec4(nan)));\n\n          bestValue = vec4(replace.x  ? candidate.x : bestValue.x,\n                           replace.y  ? candidate.y : bestValue.y,\n                           replace.z  ? candidate.z : bestValue.z,\n                           replace.w  ? candidate.w : bestValue.w);\n          bestIndex = mix(bestIndex, vec4(inIdx), vec4(replace));\n          srcIdx++;\n        }\n        setOutput(bestIndex);\n      }\n    `}}function Hx(e,t,n,r=null){let s=t.shape[0],a=t.shape[1];null!=r&&(s=r.shape[0],a=r.shape[1]);const o=Ud(a),i={windowSize:o,inSize:a,batchSize:s,outSize:Math.ceil(a/o)},u=new Wx(i,n,null==r),l=[t];null!=r&&l.push(r);const c=e.runWebGLProgram(u,l,"int32");if(1===c.shape[1])return c;const h=Hx(e,t,n,c);return e.disposeIntermediateTensorInfo(c),h}function jx(e,t,n,r=null){const s=null!=r?r.shape:t.shape,a=Ud(s[s.length-1]),o=new Gx(s,a,n,null==r),i=null==r?[t]:[t,r],u=e.runWebGLProgram(o,i,"int32");if(u.shape.length===t.shape.length){const r=jx(e,t,n,u);return e.disposeIntermediateTensorInfo(u),r}return u}function Kx(e,t,n,r){const s=[n];if(Gu("arg"+r.charAt(0).toUpperCase()+r.slice(1),s,t.shape.length),!fe().getBool("WEBGL_PACK_REDUCE")||t.shape.length<=2){const n=[],a=e.texData.get(t.dataId);let o=t;null!==a&&a.isPacked&&(o=e.unpackTensor(t),n.push(o));const[i,u]=Vu(o.shape,s),l=B(u),c=fx({inputs:{x:o},backend:e,attrs:{shape:[-1,l]}});n.push(c);const h=Hx(e,c,r);n.push(h);const d=fx({inputs:{x:h},backend:e,attrs:{shape:i}});return n.forEach((t=>e.disposeIntermediateTensorInfo(t))),d}return jx(e,t,r)}const qx={kernelName:Te,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{axis:a}=r;let o=j(a,s.shape);const i=Hu(o,s.shape.length);let u=s;const l=[];null!=i&&(u=Cx({inputs:{x:s},backend:n,attrs:{perm:i}}),l.push(u),o=Ku(o.length,u.shape.length)),Gu("argMax",[o[0]],u.shape.length);const c=Kx(n,u,o[0],"max");return l.forEach((e=>n.disposeIntermediateTensorInfo(e))),c}},Xx={kernelName:$e,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{axis:a}=r;let o=j(a,s.shape);const i=Hu(o,s.shape.length);let u=s;const l=[];null!=i&&(u=Cx({inputs:{x:s},backend:n,attrs:{perm:i}}),l.push(u),o=Ku(o.length,u.shape.length)),Gu("argMin",[o[0]],u.shape.length);const c=Kx(n,u,o[0],"min");return l.forEach((e=>n.disposeIntermediateTensorInfo(e))),c}},Yx=ax({opSnippet:Iy+"\n  if (abs(x) > 1.) {\n    return NAN;\n  }\n  return asin(x);\n"}),Qx={kernelName:Ne,backendName:"webgl",kernelFunc:Yx},Zx=ax({opSnippet:Iy+"return log(x + sqrt(x * x + 1.0));"}),Jx={kernelName:Ee,backendName:"webgl",kernelFunc:Zx},eb=ax({opSnippet:Iy+"\n  return atan(x);\n"}),tb={kernelName:Re,backendName:"webgl",kernelFunc:eb},nb=ox({opSnippet:Gy+"\n  return atan(a, b);\n",packedOpSnippet:"\n  vec4 result = atan(a, b);\n  bvec4 isNaNA = isnan(a);\n  bvec4 isNaNB = isnan(b);\n  bvec4 isNaN = bvec4(isNaNA.x || isNaNB.x, isNaNA.y || isNaNB.y, isNaNA.z || isNaNB.z, isNaNA.w || isNaNB.w);\n  "+jy+"\n  return result;\n"}),rb={kernelName:Ae,backendName:"webgl",kernelFunc:nb},sb=ax({opSnippet:Iy+"\n  if ((x < -1.0) || (x > 1.0)) return NAN;\nreturn (log(1.0 + x) - log(1.0 - x)) / 2.0;"}),ab={kernelName:_e,backendName:"webgl",kernelFunc:sb};class ob{constructor(e,t,n,r=!1,s=!1){if(this.variableNames=["x"],"avg"===t&&n)throw new Error("Cannot compute positions for average pool.");const a=e.filterWidth,o=e.strideHeight,i=e.strideWidth,u=e.dilationHeight,l=e.dilationWidth,c=e.effectiveFilterHeight,h=e.effectiveFilterWidth,d=e.padInfo.top,p=e.padInfo.left;this.outputShape=e.outShape;const f="avg"===t,m=`((batch  * ${e.inHeight} + xR) * ${e.inWidth} + xC) * ${e.inChannels} + d`,g=`(xR * ${e.inWidth} + xC) * ${e.inChannels} + d`;let y="0.0";if(f||(y="-1.0 / 1e-20"),n){const t=">=";return void(this.userCode=`\n        const ivec2 strides = ivec2(${o}, ${i});\n        const ivec2 pads = ivec2(${d}, ${p});\n\n        void main() {\n          ivec4 coords = getOutputCoords();\n          int batch = coords[0];\n          int d = coords[3];\n\n          ivec2 xRCCorner = coords.yz * strides - pads;\n          int xRCorner = xRCCorner.x;\n          int xCCorner = xRCCorner.y;\n\n          // max/min x(?, ?, d) to get y(yR, yC, d).\n          // ? = to be determined\n          float minMaxValue = 0.0;\n          float minMaxValueFound = 0.0;\n          int minMaxPosition = 0;\n          float avgValue = 0.0;\n\n          for (int wR = 0; wR < ${c};\n              wR += ${u}) {\n            int xR = xRCorner + wR;\n\n            if (xR < 0 || xR >= ${e.inHeight}) {\n              continue;\n            }\n\n            for (int wC = 0; wC < ${h};\n                wC += ${l}) {\n              int xC = xCCorner + wC;\n\n              if (xC < 0 || xC >= ${e.inWidth}) {\n                continue;\n              }\n\n              float value = getX(batch, xR, xC, d);\n\n              // If a min / max value has already been found, use it. If not,\n              // use the current value.\n              float currMinMaxValue = mix(\n                  value, minMaxValue, minMaxValueFound);\n              if (value ${t} currMinMaxValue) {\n                minMaxValue = value;\n                minMaxValueFound = 1.0;\n                minMaxPosition = ${r?s?m:g:`wR * ${h} + wC`};\n              }\n            }\n          }\n          setOutput(float(minMaxPosition));\n        }\n      `)}let x=`${t}(${t}(${t}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;"avg"===t&&(x="avgValue / max(count, 1.0)");const b=4*Math.floor(a/4),v=a%4,w=`\n      if (${f}) {\n        avgValue += dot(values, ones);\n      } else {\n        minMaxValue = max(values, minMaxValue);\n      }\n    `;this.userCode=`\n      const ivec2 strides = ivec2(${o}, ${i});\n      const ivec2 pads = ivec2(${d}, ${p});\n      const float initializationValue = ${y};\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\n\n      float count = 0.0;\n\n      float getValue(int batch, int xR, int xC, int d) {\n        if (xC < 0 || xC >= ${e.inWidth}) {\n          return initializationValue;\n        }\n        count += 1.0;\n        return getX(batch, xR, xC, d);\n      }\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d = coords[3];\n\n        ivec2 xRCCorner = coords.yz * strides - pads;\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        // max/min x(?, ?, d) to get y(yR, yC, d).\n        // ? = to be determined\n        vec4 minMaxValue = vec4(${y});\n        float avgValue = 0.0;\n        count = 0.0;\n\n        for (int wR = 0; wR < ${c};\n            wR += ${u}) {\n          int xR = xRCorner + wR;\n\n          if (xR < 0 || xR >= ${e.inHeight}) {\n            continue;\n          }\n\n          for (int wC = 0; wC < ${b}; wC += 4) {\n            int xC = xCCorner + wC * ${l};\n\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              getValue(batch, xR, xC + ${l}, d),\n              getValue(batch, xR, xC + 2 * ${l}, d),\n              getValue(batch, xR, xC + 3 * ${l}, d)\n            );\n\n            ${w}\n          }\n\n          int xC = xCCorner + ${b};\n          if (${1===v}) {\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              initializationValue,\n              initializationValue,\n              initializationValue\n            );\n\n            ${w}\n          } else if (${2===v}) {\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              getValue(batch, xR, xC + ${l}, d),\n              initializationValue,\n              initializationValue\n            );\n\n            ${w}\n          } else if (${3===v}) {\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              getValue(batch, xR, xC + ${l}, d),\n              getValue(batch, xR, xC + 2 * ${l}, d),\n              initializationValue\n            );\n\n            ${w}\n          }\n        }\n        setOutput(${x});\n      }\n    `}}class ib{constructor(e,t,n,r=!1,s=!1){if(this.variableNames=["x"],"avg"===t&&n)throw new Error("Cannot compute positions for average pool.");const a=e.filterWidth,o=e.strideDepth,i=e.strideHeight,u=e.strideWidth,l=e.dilationDepth,c=e.dilationHeight,h=e.dilationWidth,d=e.effectiveFilterDepth,p=e.effectiveFilterHeight,f=e.effectiveFilterWidth,m=e.padInfo.front,g=e.padInfo.top,y=e.padInfo.left;this.outputShape=e.outShape;const x="avg"===t;let b="0.0";if(x||(b="-1.0 / 1e-20"),n){const t=">=";return void(this.userCode=`\n        const ivec3 strides =\n            ivec3(${o}, ${i}, ${u});\n        const ivec3 pads = ivec3(${m}, ${g}, ${y});\n\n        void main() {\n          ivec5 coords = getOutputCoords();\n          int batch = coords.x;\n          int ch = coords.u;\n\n          ivec3 xCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;\n          int xDCorner = xCorner.x;\n          int xRCorner = xCorner.y;\n          int xCCorner = xCorner.z;\n\n          // max/min x(?, ?, ?, ch) to get y(yD, yR, yC, ch).\n          // ? = to be determined\n          float minMaxValue = 0.0;\n          float minMaxValueFound = 0.0;\n          int minMaxPosition = 0;\n\n          for (int wD = 0; wD < ${d};\n              wD += ${l}) {\n            int xD = xDCorner + wD;\n\n            if (xD < 0 || xD >= ${e.inDepth}) {\n              continue;\n            }\n\n            for (int wR = 0; wR < ${p};\n                wR += ${c}) {\n              int xR = xRCorner + wR;\n\n              if (xR < 0 || xR >= ${e.inHeight}) {\n                continue;\n              }\n\n              for (int wC = 0; wC < ${f};\n                  wC += ${h}) {\n                int xC = xCCorner + wC;\n\n                if (xC < 0 || xC >= ${e.inWidth}) {\n                  continue;\n                }\n\n                float value = getX(batch, xD, xR, xC, ch);\n\n                // If a min / max value has already been found, use it. If not,\n                // use the current value.\n                float currMinMaxValue = mix(\n                    value, minMaxValue, minMaxValueFound);\n                if (value ${t} currMinMaxValue) {\n                  minMaxValue = value;\n                  minMaxValueFound = 1.0;\n                  minMaxPosition = ${r?s?`(((batch * ${e.inDepth} + xD) * ${e.inHeight} + xR) * ${e.inWidth} + xC) * ${e.inChannels} + ch`:`((xD * ${e.inHeight} + xR) * ${e.inWidth} + xC) * ${e.inChannels} + ch`:`wD * ${p} * ${f} +\n                      wR * ${f} + wC`};\n                }\n              }\n            }\n          }\n          setOutput(float(minMaxPosition));\n        }\n      `)}let v=`${t}(${t}(${t}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;"avg"===t&&(v="avgValue / max(count, 1.0)");const w=4*Math.floor(a/4),k=a%4,S=`\n      if (${x}) {\n        avgValue += dot(values, ones);\n      } else {\n        minMaxValue = max(values, minMaxValue);\n      }\n    `;this.userCode=`\n      const ivec3 strides =\n        ivec3(${o}, ${i}, ${u});\n      const ivec3 pads = ivec3(${m}, ${g}, ${y});\n      const float initializationValue = ${b};\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\n\n      float count = 0.0;\n\n      float getValue(int batch, int xD, int xR, int xC, int ch) {\n        if (xC < 0 || xC >= ${e.inWidth}) {\n          return initializationValue;\n        }\n        count += 1.0;\n        return getX(batch, xD, xR, xC, ch);\n      }\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int ch = coords.u;\n\n        ivec3 xCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;\n        int xDCorner = xCorner.x;\n        int xRCorner = xCorner.y;\n        int xCCorner = xCorner.z;\n\n        // max/min x(?, ?, ?, d) to get y(yD, yR, yC, ch).\n        // ? = to be determined\n        vec4 minMaxValue = vec4(${b});\n        float avgValue = 0.0;\n        count = 0.0;\n\n        for (int wD = 0; wD < ${d};\n            wD += ${l}) {\n          int xD = xDCorner + wD;\n\n          if (xD < 0 || xD >= ${e.inDepth}) {\n            continue;\n          }\n\n          for (int wR = 0; wR < ${p};\n            wR += ${c}) {\n            int xR = xRCorner + wR;\n\n            if (xR < 0 || xR >= ${e.inHeight}) {\n              continue;\n            }\n\n            for (int wC = 0; wC < ${w}; wC += 4) {\n              int xC = xCCorner + wC * ${h};\n\n              vec4 values = vec4(\n                getValue(batch, xD, xR, xC, ch),\n                getValue(batch, xD, xR, xC + ${h}, ch),\n                getValue(batch, xD, xR, xC + 2 * ${h}, ch),\n                getValue(batch, xD, xR, xC + 3 * ${h}, ch)\n              );\n\n              ${S}\n            }\n\n            int xC = xCCorner + ${w};\n            if (${1===k}) {\n              vec4 values = vec4(\n                getValue(batch, xD, xR, xC, ch),\n                initializationValue,\n                initializationValue,\n                initializationValue\n              );\n\n              ${S}\n            } else if (${2===k}) {\n              vec4 values = vec4(\n                getValue(batch, xD, xR, xC, ch),\n                getValue(batch, xD, xR, xC + ${h}, ch),\n                initializationValue,\n                initializationValue\n              );\n\n              ${S}\n            } else if (${3===k}) {\n              vec4 values = vec4(\n                getValue(batch, xD, xR, xC, ch),\n                getValue(batch, xD, xR, xC + ${h}, ch),\n                getValue(batch, xD, xR, xC + 2 * ${h}, ch),\n                initializationValue\n              );\n\n              ${S}\n            }\n          }\n        }\n        setOutput(${v});\n      }\n    `}}const ub={kernelName:Oe,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t;xf(s,"avgPool");const{filterSize:a,strides:o,pad:i,dimRoundingMode:u}=r;D(Vi(o,1),(()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${o} and dilations '1'`));const l=Ai(s.shape,a,o,1,i,u);if(1===l.filterWidth&&1===l.filterHeight&&z(l.inShape,l.outShape))return qy({inputs:{x:s},backend:n});const c=new ob(l,"avg",!1);return n.runWebGLProgram(c,[s],"float32")}},lb={kernelName:Pe,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{filterSize:a,strides:o,pad:i,dimRoundingMode:u,dataFormat:l}=r,c=Oi(s.shape,a,o,[1,1,1],i,u,l),h=new ib(c,"avg",!1);return n.runWebGLProgram(h,[s],"float32")}};class cb{constructor(e){this.variableNames=["dy"],this.outputShape=e.inShape;const t=e.filterHeight,n=e.filterWidth,r=e.strideHeight,s=e.strideWidth,a=e.dilationHeight,o=e.dilationWidth,i=e.effectiveFilterHeight,u=e.effectiveFilterWidth,l=i-1-e.padInfo.top,c=u-1-e.padInfo.left,h=1/(t*n);this.userCode=`\n      const ivec2 pads = ivec2(${l}, ${c});\n      const float avgMultiplier = float(${h});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n\n        ivec2 dyRCCorner = coords.yz - pads;\n        int dyRCorner = dyRCCorner.x;\n        int dyCCorner = dyRCCorner.y;\n\n        // Convolve dy(?, ?, d) with pos mask(:, :, d) to get dx(xR, xC, d).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < ${i};\n            wR += ${a}) {\n          float dyR = float(dyRCorner + wR) / ${r}.0;\n\n          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          for (int wC = 0; wC < ${u};\n            wC+= ${o}) {\n            float dyC = float(dyCCorner + wC) / ${s}.0;\n\n            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            float dyValue = getDy(b, idyR, idyC, d);\n\n            dotProd += dyValue * avgMultiplier;\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class hb{constructor(e){this.variableNames=["dy"],this.outputShape=e.inShape;const t=e.filterDepth,n=e.filterHeight,r=e.filterWidth,s=e.strideDepth,a=e.strideHeight,o=e.strideWidth,i=e.dilationDepth,u=e.dilationHeight,l=e.dilationWidth,c=e.effectiveFilterDepth,h=e.effectiveFilterHeight,d=e.effectiveFilterWidth,p=c-1-e.padInfo.front,f=h-1-e.padInfo.top,m=d-1-e.padInfo.left,g=1/(t*n*r);this.userCode=`\n      const ivec3 pads = ivec3(${p}, ${f}, ${m});\n      const float avgMultiplier = float(${g});\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int ch = coords.u;\n\n        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;\n        int dyDCorner = dyCorner.x;\n        int dyRCorner = dyCorner.y;\n        int dyCCorner = dyCorner.z;\n\n        // Convolve dy(?, ?, ?, d) with pos mask(:, :, :, ch) to get\n        // dx(xD, xR, xC, ch).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n\n        for (int wD = 0; wD < ${c};\n            wD += ${i}) {\n          float dyD = float(dyDCorner + wD) / ${s}.0;\n\n          if (dyD < 0.0 || dyD >= ${e.outDepth}.0 || fract(dyD) > 0.0) {\n            continue;\n          }\n          int idyD = int(dyD);\n\n          for (int wR = 0; wR < ${h};\n              wR += ${u}) {\n            float dyR = float(dyRCorner + wR) / ${a}.0;\n\n            if (dyR < 0.0 || dyR >= ${e.outHeight}.0 ||\n                fract(dyR) > 0.0) {\n              continue;\n            }\n            int idyR = int(dyR);\n\n            for (int wC = 0; wC < ${d};\n                wC += ${l}) {\n              float dyC = float(dyCCorner + wC) / ${o}.0;\n\n              if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                  fract(dyC) > 0.0) {\n                continue;\n              }\n              int idyC = int(dyC);\n\n              float dyValue = getDy(batch, idyD, idyR, idyC, ch);\n\n              dotProd += dyValue * avgMultiplier;\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}const db={kernelName:"AvgPool3DGrad",backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:s,input:a}=t,o=a,{filterSize:i,strides:u,pad:l,dimRoundingMode:c}=r,h=Oi(o.shape,i,u,[1,1,1],l,c),d=new hb(h);return n.runWebGLProgram(d,[s],o.dtype)}},pb={kernelName:Fe,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:s,input:a}=t,o=a;xf([s,a],"avgPoolGrad");const{filterSize:i,strides:u,pad:l}=r,c=Ai(o.shape,i,u,1,l),h=new cb(c);return n.runWebGLProgram(h,[s],o.dtype)}},fb={kernelName:De,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{a:s,b:a}=t,{transposeA:o,transposeB:i}=r;return $x({a:s,b:a,transposeA:o,transposeB:i,backend:n})}};class mb{constructor(e,t,n,r,s,a){this.outputShape=[],this.variableNames=["x","mean","variance"],Io(e,t),Io(e,n);let o="0.0";null!=r&&(Io(e,r),this.variableNames.push("offset"),o="getOffsetAtOutCoords()");let i="1.0";null!=s&&(Io(e,s),this.variableNames.push("scale"),i="getScaleAtOutCoords()"),this.outputShape=e,this.userCode=`\n      void main() {\n        float x = getXAtOutCoords();\n        float mean = getMeanAtOutCoords();\n        float variance = getVarianceAtOutCoords();\n        float offset = ${o};\n        float scale = ${i};\n        float inv = scale * inversesqrt(variance + float(${a}));\n        setOutput(dot(vec3(x, -mean, offset), vec3(inv, inv, 1)));\n      }\n    `}}class gb{constructor(e,t,n,r,s,a){this.packedInputs=!0,this.packedOutput=!0,this.variableNames=["x","mean","variance"],Io(e,t),Io(e,n);let o="vec4(0.0)";null!=r&&(Io(e,r),this.variableNames.push("offset"),o="getOffsetAtOutCoords()");let i="vec4(1.0)";null!=s&&(Io(e,s),this.variableNames.push("scale"),i="getScaleAtOutCoords()"),this.outputShape=e,this.userCode=`\n      void main() {\n        vec4 offset = ${o};\n        vec4 scale = ${i};\n\n        vec4 x = getXAtOutCoords();\n        vec4 mean = getMeanAtOutCoords();\n        vec4 variance = getVarianceAtOutCoords();\n\n        vec4 inv = scale * inversesqrt(variance + vec4(${a}));\n\n        setOutput((x - mean) * inv + offset);\n      }\n    `}}const yb={kernelName:Ct,backendName:"webgl",kernelFunc:({inputs:e,backend:t,attrs:n})=>{const{x:r,mean:s,variance:a,offset:o,scale:i}=e;D(s.shape.length===a.shape.length,(()=>"Batch normalization gradient requires mean and variance to have equal ranks.")),D(null==o||s.shape.length===o.shape.length,(()=>"Batch normalization gradient requires mean and offset to have equal ranks.")),D(null==i||s.shape.length===i.shape.length,(()=>"Batch normalization gradient requires mean and scale to have equal ranks."));let{varianceEpsilon:u}=n;null==u&&(u=.001);const l=[r,s,a];let c=null;null!=o&&(c=o.shape,l.push(o));let h=null;null!=i&&(h=i.shape,l.push(i));const d=fe().getBool("WEBGL_PACK_NORMALIZATION")?new gb(r.shape,s.shape,a.shape,c,h,u):new mb(r.shape,s.shape,a.shape,c,h,u);return t.runWebGLProgram(d,l,l[0].dtype)}};class xb{constructor(e){this.variableNames=["source"],this.outputShape=e,this.rank=e.length;const t=Pf(this.rank);this.customUniforms=[{name:"start",arrayIndex:this.rank,type:"int"}];const n=function(e){if(1===e)return"sourceLoc";if(e<=6)return bb.slice(0,e).map((e=>"sourceLoc."+e)).join(",");throw Error(`Slicing for rank ${e} is not yet supported`)}(this.rank);let r;r=`\n        ${t} sourceLoc;\n        ${t} coords = getOutputCoords();\n        ${e.map(((e,t)=>`sourceLoc.${bb[t]} = start[${t}] + coords.${bb[t]};`)).join("\n")}\n      `,this.userCode=`\n      void main() {\n        ${r}\n        setOutput(getSource(${n}));\n      }\n    `}}const bb=["x","y","z","w","u","v"];class vb{constructor(e){this.variableNames=["source"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e,this.rank=e.length,this.customUniforms=[{name:"start",arrayIndex:this.rank,type:"int"}];const t=Pf(this.rank),n=yy("coords",this.rank),r=yy("sourceLoc",this.rank),s=1===this.rank?"sourceLoc":`vec2(${r.slice(-2).join()})`,a=`getChannel(getSource(${r.join()}), ${s})`,o=`\n      result.x = ${a};\n      if (++${n[this.rank-1]} < ${e[this.rank-1]}) {\n        ++${r[this.rank-1]};\n        result.y = ${a};\n        --${r[this.rank-1]};\n      }\n    `,i=1===this.rank?"":`\n      --${n[this.rank-1]};\n      if (++${n[this.rank-2]} < ${e[this.rank-2]}) {\n        ++${r[this.rank-2]};\n        result.z = ${a};\n        if (++${n[this.rank-1]} < ${e[this.rank-1]}) {\n          ++${r[this.rank-1]};\n          result.w = ${a};\n        }\n      }\n    `,u=this.rank<=4?`sourceLoc = coords +\n            ${t}(${e.map(((e,t)=>`start[${t}]`)).join()});`:e.map(((e,t)=>`${r[t]} = ${n[t]} + start[${t}];`)).join("\n");this.userCode=`\n      void main() {\n        ${t} coords = getOutputCoords();\n        ${t} sourceLoc;\n        ${u}\n        vec4 result = vec4(0.);\n        ${o}\n        ${i}\n        setOutput(result);\n      }\n    `}}function wb(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{begin:a,size:o}=r,[i,u]=gi(s,a,o);if(ni(s,i,u),0===B(u))return n.makeTensorInfo(u,s.dtype,[]);if(n.shouldExecuteOnCPU([s])||"string"===s.dtype){const e=n.texData.get(s.dataId),t=ty(e.values,i,u,s.shape,s.dtype);return n.makeTensorInfo(u,s.dtype,t)}const{isPacked:l}=n.texData.get(s.dataId),c=fi(s.shape,i,u);if(l||!c){const e=fe().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new vb(u):new xb(u),t=[i];return n.runWebGLProgram(e,[s],s.dtype,t)}return n.uploadToGPU(s.dataId),function(e,t,n,r){const s=r.texData.get(e.dataId),a=r.makeTensorInfo(n,e.dtype),o=r.texData.get(a.dataId);Object.assign(o,s),o.refCount=1,o.shape=n,o.dtype=e.dtype;let i=mi(t,ne(e.shape));s.slice&&(i+=s.slice.flatOffset),o.slice={flatOffset:i,origDataId:s.slice&&s.slice.origDataId||e.dataId};const u=r.dataRefCount.get(o.slice.origDataId)||1;return r.dataRefCount.set(o.slice.origDataId,u+1),a}(s,i,u,n)}const kb={kernelName:Pn,backendName:"webgl",kernelFunc:wb},Sb={kernelName:Me,backendName:"webgl",kernelFunc:e=>{const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{blockShape:a,crops:o}=r;D(s.shape.length<=4,(()=>"batchToSpaceND for rank > 4 with a WebGL backend not implemented yet"));const i=a.reduce(((e,t)=>e*t)),u=Wd(s.shape,a,i),l=Gd(u.length,a.length),c=Hd(s.shape,a,i),h=jd(o,a.length),d=Kd(c,o,a.length),p=[],f=fx({inputs:{x:s},backend:n,attrs:{shape:u}}),m=Cx({inputs:{x:f},backend:n,attrs:{perm:l}}),g=fx({inputs:{x:m},backend:n,attrs:{shape:c}}),y=wb({inputs:{x:g},backend:n,attrs:{begin:h,size:d}});return p.push(f),p.push(m),p.push(g),p.forEach((e=>n.disposeIntermediateTensorInfo(e))),y}},Cb={kernelName:Le,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,weights:a}=t,{size:o}=r,i=n.readSync(s.dataId),u=n.readSync(a.dataId),l=kg(i,u,a.dtype,a.shape,o);return n.makeTensorInfo([o],a.dtype,l)}},Ib={kernelName:Be,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{a:r,b:s}=t,a=fe().getBool("WEBGL_PACK_BINARY_OPERATIONS"),o=fe().getNumber("WEBGL_VERSION");if(n.shouldExecuteOnCPU([r,s])||1===o){const e=n.texData.get(r.dataId).values,t=n.texData.get(s.dataId).values,[a,o]=Cg(r.shape,s.shape,e,t,r.dtype),i=n.makeTensorInfo(o,r.dtype);return n.texData.get(i.dataId).values=a,i}let i;return i=a?new Ky("\n  int r = int(a.r) & int(b.r);\n  int g = int(a.g) & int(b.g);\n  int rb = int(a.b) & int(b.b);\n  int ra = int(a.a) & int(b.a);\n  return vec4(r, g, rb, ra);\n",r.shape,s.shape,!1):new Hy("\n  return float(int(a.r) & int(b.r));\n",r.shape,s.shape),n.runWebGLProgram(i,[r,s],r.dtype)}},Tb={kernelName:ze,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{s0:r,s1:s}=t,a=n.readSync(r.dataId),o=n.readSync(s.dataId),i=Io(Array.from(a),Array.from(o));return n.makeTensorInfo([i.length],"int32",Int32Array.from(i))}},$b=ox({opSnippet:"return float(a != b);",cpuKernelImpl:Hg,dtype:"bool"}),Nb={kernelName:sn,backendName:"webgl",kernelFunc:$b};function Eb(e){const{inputs:t,backend:n}=e,{input:r}=t;return qy({inputs:{x:n.texData.get(r.dataId).complexTensorInfos.real},backend:n})}const Rb={kernelName:vn,backendName:"webgl",kernelFunc:Eb},_b={kernelName:Ue,backendName:"webgl",kernelFunc:function e(t){const{inputs:n,backend:r,attrs:s}=t,{x:a}=n,{dtype:o}=s;if("complex64"===o){if("complex64"===a.dtype)return qy({inputs:{x:a},backend:r});const t=Dl(a.shape),n=e({inputs:{x:a},backend:r,attrs:{dtype:"float32"}}),s=Yy({inputs:{real:n,imag:t},backend:r});return t.dispose(),r.disposeIntermediateTensorInfo(n),s}if("complex64"===a.dtype){const t=Eb({inputs:{input:a},backend:r}),n=e({inputs:{x:t},backend:r,attrs:{dtype:o}});return r.disposeIntermediateTensorInfo(t),n}if(!Y(a.dtype,o)){const e=qy({inputs:{x:a},backend:r});return{dataId:e.dataId,shape:e.shape,dtype:o}}if(r.shouldExecuteOnCPU([a])){const e=r.texData.get(a.dataId).values,[t,n,s]=Ig(e,a.shape,a.dtype,o);return r.makeTensorInfo(t,n,s)}if("int32"===o)return function(e,t){const n=new Cy(e.shape,"return float(int(x));"),r=t.runWebGLProgram(n,[e],"int32");return{dataId:r.dataId,shape:r.shape,dtype:r.dtype}}(a,r);if("bool"===o){const e=r.makeTensorInfo([],"bool",q("bool",1)),t=$b({inputs:{a,b:e},backend:r});return r.disposeIntermediateTensorInfo(e),t}throw new Error(`Error in Cast: failed to cast ${a.dtype} to ${o}`)}},Ab="return ceil(x);",Ob=ax({opSnippet:Ab,packedOpSnippet:Ab,cpuKernelImpl:Tg}),Fb={kernelName:Ve,backendName:"webgl",kernelFunc:Ob};class Pb{constructor(e){this.variableNames=["A"],this.customUniforms=[{name:"minVal",type:"float"},{name:"maxVal",type:"float"}],this.outputShape=e,this.userCode="\n\n      void main() {\n        float value = getAAtOutCoords();\n        if (isnan(value)) {\n          setOutput(value);\n          return;\n        }\n\n        setOutput(clamp(value, minVal, maxVal));\n      }\n    "}}class Db{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"minVal",type:"float"},{name:"maxVal",type:"float"}],this.outputShape=e,this.userCode="\n      void main() {\n        vec4 value = getAAtOutCoords();\n\n        if (any(isnan(value))) {\n          setOutput(value);\n          return;\n        }\n\n        setOutput(clamp(value, vec4(minVal), vec4(maxVal)));\n      }\n    "}}const Mb={kernelName:We,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{clipValueMin:a,clipValueMax:o}=r;let i;i=fe().getBool("WEBGL_PACK_CLIP")?new Db(s.shape):new Pb(s.shape);const u=[[a],[o]];return n.runWebGLProgram(i,[s],s.dtype,u)}};class Lb{constructor(e){this.variableNames=["real","imag"],this.outputShape=e,this.userCode="\n      void main() {\n        float re = abs(getRealAtOutCoords());\n        float im = abs(getImagAtOutCoords());\n        float mx = max(re, im);\n\n        // sadly the length function in glsl is not underflow-safe\n        // (at least not on Intel GPUs). So the safe solution is\n        // to ensure underflow-safety in all cases.\n        setOutput(\n          mx == 0.0 ? 0.0 : mx * length(vec2(1, min(re, im)/mx))\n        );\n      }\n    "}}function Bb(e,t){return{dataId:t.dataId,dtype:t.dtype,shape:e.shape}}const zb={kernelName:He,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:r}=t,s=n.texData.get(r.dataId),a=new Lb(r.shape),o=[Bb(r,s.complexTensorInfos.real),Bb(r,s.complexTensorInfos.imag)];return n.runWebGLProgram(a,o,o[0].dtype)}};class Ub{constructor(e){this.outputShape=[],this.outputShape=Fd(e,1),this.variableNames=e.map(((e,t)=>`T${t}`));const t=new Array(e.length-1);t[0]=e[0][1];for(let n=1;n<t.length;n++)t[n]=t[n-1]+e[n][1];const n=[`if (yC < ${t[0]}) setOutput(getT0(yR, yC));`];for(let e=1;e<t.length;e++){const r=t[e-1];n.push(`else if (yC < ${t[e]}) setOutput(getT${e}(yR, yC-${r}));`)}const r=t.length,s=t[t.length-1];n.push(`else setOutput(getT${r}(yR, yC-${s}));`),this.userCode=`\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int yR = coords.x;\n        int yC = coords.y;\n\n        ${n.join("\n        ")}\n      }\n    `}}class Vb{constructor(e,t){this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[],this.outputShape=Fd(e,t);const n=this.outputShape,r=n.length,s=Pf(r),a=yy("coords",r),o=["x","y","z","w","u","v"].slice(0,r);this.variableNames=e.map(((e,t)=>`T${t}`));const i=new Array(e.length-1);i[0]=e[0][t];for(let n=1;n<i.length;n++)i[n]=i[n-1]+e[n][t];const u=o[t],l=o.slice(-2),c=o.join();let h=`if (${u} < ${i[0]}) {\n        return getChannel(\n            getT0(${c}), vec2(${l.join()}));\n        }`;for(let e=1;e<i.length;e++){const t=i[e-1];h+=`\n        if (${u} < ${i[e]}  && ${u} >= ${i[e-1]}) {\n          return getChannel(\n            getT${e}(${Wb(o,u,t)}),\n            vec2(${Wb(l,u,t)}));\n        }`}const d=i.length,p=i[i.length-1];h+=`\n        return getChannel(\n          getT${d}(${Wb(o,u,p)}),\n          vec2(${Wb(l,u,p)}));`,this.userCode=`\n      float getValue(${o.map((e=>"int "+e))}) {\n        ${h}\n      }\n\n      void main() {\n        ${s} coords = getOutputCoords();\n        vec4 result = vec4(getValue(${a}), 0., 0., 0.);\n\n        ${a[r-1]} = ${a[r-1]} + 1;\n        if (${a[r-1]} < ${n[r-1]}) {\n          result.g = getValue(${a});\n        }\n\n        ${a[r-2]} = ${a[r-2]} + 1;\n        if (${a[r-2]} < ${n[r-2]}) {\n          result.a = getValue(${a});\n        }\n\n        ${a[r-1]} = ${a[r-1]} - 1;\n        if (${a[r-2]} < ${n[r-2]} &&\n            ${a[r-1]} < ${n[r-1]}) {\n          result.b = getValue(${a});\n        }\n        setOutput(result);\n      }\n    `}}function Wb(e,t,n){const r=e.indexOf(t);return e.map(((e,t)=>t===r?`${e} - ${n}`:e)).join()}function Gb(e){const{inputs:t,backend:n}=e,{input:r}=t;return qy({inputs:{x:n.texData.get(r.dataId).complexTensorInfos.imag},backend:n})}const Hb={kernelName:_t,backendName:"webgl",kernelFunc:Gb};function jb(e,t,n){const r=e[0].dtype;if("complex64"===r){const r=e.map((e=>Eb({inputs:{input:e},backend:n}))),s=e.map((e=>Gb({inputs:{input:e},backend:n}))),a=jb(r,t,n),o=jb(s,t,n),i=Yy({inputs:{real:a,imag:o},backend:n});return r.forEach((e=>n.disposeIntermediateTensorInfo(e))),s.forEach((e=>n.disposeIntermediateTensorInfo(e))),n.disposeIntermediateTensorInfo(a),n.disposeIntermediateTensorInfo(o),i}let s=n.shouldExecuteOnCPU(e);if("string"===r&&(s=!0),s){const s=e.map((e=>{const r=B(e.shape.slice(t));return fx({inputs:{x:e},backend:n,attrs:{shape:[-1,r]}})})),a=s.map((e=>({vals:n.readSync(e.dataId),shape:e.shape}))),o=Fd(s.map((e=>e.shape)),1),i=1===s[0].shape[0],u=$g(a,o,r,i),l=Fd(e.map((e=>e.shape)),t),c=n.makeTensorInfo(l,r,u);return s.forEach((e=>n.disposeIntermediateTensorInfo(e))),c}const a=e.filter((e=>B(e.shape)>0)),o=fe().getBool("WEBGL_PACK_ARRAY_OPERATIONS")&&a[0].shape.length>1;if(1===a.length){const t=o?new Cy(e[0].shape,_y):new Ly(e[0].shape,_y);return n.runWebGLProgram(t,e,r)}const i=fe().getNumber("WEBGL_MAX_TEXTURES_IN_SHADER");if(a.length>i){const e=[];for(let r=0;r<a.length;r+=i){const s=a.slice(r,r+i);e.push(jb(s,t,n))}const r=jb(e,t,n);for(const t of e)n.disposeIntermediateTensorInfo(t);return r}if(o){const e=new Vb(a.map((e=>e.shape)),t);return n.runWebGLProgram(e,a,r)}const{tensors2D:u,outShape:l}=function(e,t,n){const r=Fd(e.map((e=>e.shape)),t);return{tensors2D:e.map((e=>fx({inputs:{x:e},attrs:{shape:[-1,B(e.shape.slice(t))]},backend:n}))),outShape:r}}(a,t,n),c=new Ub(u.map((e=>e.shape))),h=n.runWebGLProgram(c,u,r);u.forEach((e=>n.disposeIntermediateTensorInfo(e)));const d=fx({inputs:{x:h},attrs:{shape:l},backend:n});return n.disposeIntermediateTensorInfo(h),d}function Kb(e){const{inputs:t,backend:n,attrs:r}=e,{axis:s}=r,a=j(s,t[0].shape)[0];Od(t.map((e=>e.shape)),a);const o=Fd(t.map((e=>e.shape)),a);if(0===B(o))return n.makeTensorInfo(o,t[0].dtype,[]);const i=t.filter((e=>B(e.shape)>0));return 1===i.length?qy({inputs:{x:i[0]},backend:n}):jb(i,a,n)}const qb={kernelName:je,backendName:"webgl",kernelFunc:Kb};class Xb{constructor(e,t=!1,n=null,r=!1,s=!1){this.variableNames=["x","W"],this.outputShape=e.outShape;const a=e.padInfo.top,o=e.padInfo.left,i=e.strideHeight,u=e.strideWidth,l=e.dilationHeight,c=e.dilationWidth,h=e.filterHeight,d=e.filterWidth,p=4*Math.floor(e.inChannels/4),f=e.inChannels%4,m="channelsLast"===e.dataFormat,g=m?1:2,y=m?2:3,x=m?3:1;let b="",v="";n&&(b=r?`float activation(float a) {\n          float b = getPreluActivationWeightsAtOutCoords();\n          ${n}\n        }`:s?`float activation(float a) {\n          float b = getLeakyreluAlphaAtOutCoords();\n          ${n}\n        }`:`\n          float activation(float x) {\n            ${n}\n          }\n        `,v="result = activation(result);");const w=t?"result += getBiasAtOutCoords();":"";t&&this.variableNames.push("bias"),r&&this.variableNames.push("preluActivationWeights"),s&&this.variableNames.push("leakyreluAlpha"),this.userCode=`\n      ${b}\n\n      const ivec2 strides = ivec2(${i}, ${u});\n      const ivec2 pads = ivec2(${a}, ${o});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d2 = coords[${x}];\n\n        ivec2 xRCCorner =\n            ivec2(coords[${g}], coords[${y}]) * strides - pads;\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        // Convolve x(?, ?, d1) with w(:, :, d1, d2) to get y(yR, yC, d2).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < ${h}; wR++) {\n          int xR = xRCorner + wR * ${l};\n\n          if (xR < 0 || xR >= ${e.inHeight}) {\n            continue;\n          }\n\n          for (int wC = 0; wC < ${d}; wC++) {\n            int xC = xCCorner + wC * ${c};\n\n            if (xC < 0 || xC >= ${e.inWidth}) {\n              continue;\n            }\n\n            for (int d1 = 0; d1 < ${p}; d1 += 4) {\n              vec4 wValues = vec4(\n                getW(wR, wC, d1, d2),\n                getW(wR, wC, d1 + 1, d2),\n                getW(wR, wC, d1 + 2, d2),\n                getW(wR, wC, d1 + 3, d2)\n              );\n\n              if (${m}) {\n                vec4 xValues = vec4(\n                  getX(batch, xR, xC, d1),\n                  getX(batch, xR, xC, d1 + 1),\n                  getX(batch, xR, xC, d1 + 2),\n                  getX(batch, xR, xC, d1 + 3)\n                );\n                dotProd += dot(xValues, wValues);\n              } else {\n                vec4 xValues = vec4(\n                  getX(batch, d1, xR, xC),\n                  getX(batch, d1 + 1, xR, xC),\n                  getX(batch, d1 + 2, xR, xC),\n                  getX(batch, d1 + 3, xR, xC)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n            }\n\n            if (${1===f}) {\n\n              if (${m}) {\n                dotProd +=\n                    getX(batch, xR, xC, ${p}) *\n                    getW(wR, wC, ${p}, d2);\n              } else {\n                dotProd +=\n                    getX(batch, ${p}, xR, xC) *\n                    getW(wR, wC, ${p}, d2);\n              }\n\n            } else if (${2===f}) {\n              vec2 wValues = vec2(\n                getW(wR, wC, ${p}, d2),\n                getW(wR, wC, ${p} + 1, d2)\n              );\n\n              if (${m}) {\n                vec2 xValues = vec2(\n                  getX(batch, xR, xC, ${p}),\n                  getX(batch, xR, xC, ${p} + 1)\n                );\n                dotProd += dot(xValues, wValues);\n              } else {\n                vec2 xValues = vec2(\n                  getX(batch, ${p}, xR, xC),\n                  getX(batch, ${p} + 1, xR, xC)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n\n            } else if (${3===f}) {\n              vec3 wValues = vec3(\n                getW(wR, wC, ${p}, d2),\n                getW(wR, wC, ${p} + 1, d2),\n                getW(wR, wC, ${p} + 2, d2)\n              );\n\n              if (${m}) {\n                vec3 xValues = vec3(\n                  getX(batch, xR, xC, ${p}),\n                  getX(batch, xR, xC, ${p} + 1),\n                  getX(batch, xR, xC, ${p} + 2)\n                );\n                dotProd += dot(xValues, wValues);\n              } else {\n                vec3 xValues = vec3(\n                  getX(batch, ${p}, xR, xC),\n                  getX(batch, ${p} + 1, xR, xC),\n                  getX(batch, ${p} + 2, xR, xC)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n\n            }\n          }\n        }\n\n        float result = dotProd;\n        ${w}\n        ${v}\n        setOutput(result);\n      }\n    `}}class Yb{constructor(e){this.variableNames=["x","W"],this.outputShape=e.outShape;const t=e.padInfo.front,n=e.padInfo.top,r=e.padInfo.left,s=e.strideDepth,a=e.strideHeight,o=e.strideWidth,i=e.dilationDepth,u=e.dilationHeight,l=e.dilationWidth,c=e.filterDepth,h=e.filterHeight,d=e.filterWidth,p=4*Math.floor(e.inChannels/4),f=e.inChannels%4;this.userCode=`\n      const ivec3 strides = ivec3(${s}, ${a}, ${o});\n      const ivec3 pads = ivec3(${t}, ${n}, ${r});\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int d2 = coords.u;\n\n        ivec3 xFRCCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;\n        int xFCorner = xFRCCorner.x;\n        int xRCorner = xFRCCorner.y;\n        int xCCorner = xFRCCorner.z;\n\n        // Convolve x(?, ?, ?, d1) with w(:, :, :, d1, d2) to get\n        // y(yF, yR, yC, d2). ? = to be determined. : = across all\n        // values in that axis.\n        float dotProd = 0.0;\n        for (int wF = 0; wF < ${c}; wF++) {\n          int xF = xFCorner + wF * ${i};\n\n          if (xF < 0 || xF >= ${e.inDepth}) {\n            continue;\n          }\n\n          for (int wR = 0; wR < ${h}; wR++) {\n            int xR = xRCorner + wR * ${u};\n\n            if (xR < 0 || xR >= ${e.inHeight}) {\n              continue;\n            }\n\n            for (int wC = 0; wC < ${d}; wC++) {\n              int xC = xCCorner + wC * ${l};\n\n              if (xC < 0 || xC >= ${e.inWidth}) {\n                continue;\n              }\n\n              for (int d1 = 0; d1 < ${p}; d1 += 4) {\n                vec4 xValues = vec4(\n                  getX(batch, xF, xR, xC, d1),\n                  getX(batch, xF, xR, xC, d1 + 1),\n                  getX(batch, xF, xR, xC, d1 + 2),\n                  getX(batch, xF, xR, xC, d1 + 3)\n                );\n                vec4 wValues = vec4(\n                  getW(wF, wR, wC, d1, d2),\n                  getW(wF, wR, wC, d1 + 1, d2),\n                  getW(wF, wR, wC, d1 + 2, d2),\n                  getW(wF, wR, wC, d1 + 3, d2)\n                );\n\n                dotProd += dot(xValues, wValues);\n              }\n\n              if (${1===f}) {\n                dotProd +=\n                  getX(batch, xF, xR, xC, ${p}) *\n                  getW(wF, wR, wC, ${p}, d2);\n              } else if (${2===f}) {\n                vec2 xValues = vec2(\n                  getX(batch, xF, xR, xC, ${p}),\n                  getX(batch, xF, xR, xC, ${p} + 1)\n                );\n                vec2 wValues = vec2(\n                  getW(wF, wR, wC, ${p}, d2),\n                  getW(wF, wR, wC, ${p} + 1, d2)\n                );\n                dotProd += dot(xValues, wValues);\n              } else if (${3===f}) {\n                vec3 xValues = vec3(\n                  getX(batch, xF, xR, xC, ${p}),\n                  getX(batch, xF, xR, xC, ${p} + 1),\n                  getX(batch, xF, xR, xC, ${p} + 2)\n                );\n                vec3 wValues = vec3(\n                  getW(wF, wR, wC, ${p}, d2),\n                  getW(wF, wR, wC, ${p} + 1, d2),\n                  getW(wF, wR, wC, ${p} + 2, d2)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class Qb{constructor(e,t=!1,n=null,r=!1,s=!1){this.variableNames=["x","W"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"pads",type:"ivec2"},{name:"strides",type:"ivec2"},{name:"dilations",type:"ivec2"},{name:"inDims",type:"ivec2"}],this.outputShape=e.outShape,this.enableShapeUniforms=Uf(this.outputShape.length);const a=e.padInfo.left,o=e.strideWidth,i=e.dilationWidth,u=e.filterHeight,l=e.filterWidth,c=l;let h="\n       int xR; int xC; int xCOffset;\n       vec4 wTexel; vec4 previous; vec4 final;";for(let e=0;e<l;e++)h+=`\n           vec4 xTexelC${2*e};\n           int xTexelC${2*e}Ready;\n           vec4 xTexelC${2*e+1};\n           int xTexelC${2*e+1}Ready;\n           vec4 xC${e};`;h+=`\n     for (int r = 0; r < ${u}; r++) {\n      for (int d1 = 0; d1 < ${e.inChannels}; d1 += 2) {\n       `;for(let e=0;e<l;e++)h+=`\n           xTexelC${2*e} = vec4(0.0);\n           xTexelC${2*e}Ready = 0;\n           xTexelC${2*e+1} = vec4(0.0);\n           xTexelC${2*e+1}Ready = 0;\n           xC${e} = vec4(0.0);`;h+="\n         xR = xRCorner + r * dilations[0];\n         if (xR >=0 && xR < inDims[0]) {\n       ";for(let t=0;t<(c+1)/2;t++){const n=2*t;if(h+=`\n           xC = xCCorner + ${n*i};\n           `,1===o){if(n<l&&(a%2==1?(h+=`\n                 xCOffset = xC + 1;\n                 if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${n}Ready == 0) {\n                   xTexelC${n} = getX(batch, xR, xCOffset, d1);\n\n                   // Need to manually clear unused channels in case\n                   // we're reading from recycled texture.\n                   if (xCOffset + 1 >= inDims[1]) {\n                     xTexelC${n}.zw = vec2(0.0);\n                   }\n                   xTexelC${n}Ready = 1;\n                 }\n               `,h+=1===i&&n>0?`\n                 xC${n} = vec4(xTexelC${n-2}.zw, xTexelC${n}.xy);\n                 `:`\n                   xCOffset = xC + 1 - 2;\n\n                   if (xCOffset >= 0 && xCOffset < inDims[1]) {\n                     previous = getX(batch, xR, xCOffset, d1);\n\n                     // Need to manually clear unused channels in case\n                     // we're reading from recycled texture.\n                     if (xCOffset + 1 >= inDims[1]) {\n                       previous.zw = vec2(0.0);\n                     }\n\n                     xC${n} = vec4(previous.zw, xTexelC${n}.xy);\n                   } else {\n                     xC${n} = vec4(0.0, 0.0, xTexelC${n}.xy);\n                   }\n                   `):h+=`\n                 if (xC >= 0 && xC < inDims[1] && xTexelC${n}Ready == 0) {\n                   xTexelC${n} = getX(batch, xR, xC, d1);\n                   if (xC + 1 >= inDims[1]) {\n                     xTexelC${n}.zw = vec2(0.0);\n                   }\n                   xTexelC${n}Ready = 1;\n                 }\n\n                 xC${n} = xTexelC${n};\n                 `,n+1<l)){const e=a%2==0?O(i):i;i%2==0&&a%2==1||i%2!=0&&a%2!=1?(h+=`\n                   xCOffset = xC + imod(pads[1], 2) + ${e};\n\n                   if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${n+1}Ready == 0) {\n                     xTexelC${n+1} = getX(batch, xR, xCOffset, d1);\n\n                     // Need to manually clear unused channels in case\n                     // we're reading from recycled texture.\n                     if (xCOffset + 1 >= inDims[1]) {\n                       xTexelC${n+1}.zw = vec2(0.0);\n                     }\n                     xTexelC${n+1}Ready = 1;\n                   }\n                   `,h+=i>1?`\n                     xCOffset -= 2;\n                     if (xCOffset >= 0 && xCOffset < inDims[1]) {\n                      previous = getX(batch, xR, xCOffset, d1);\n                      xC${n+1} = vec4(previous.zw, xTexelC${n+1}.xy);\n                     } else {\n                      xC${n+1} = vec4(0.0, 0.0, xTexelC${n+1}.xy);\n                     }\n                     `:`\n                     xC${n+1} = vec4(xTexelC${n}.zw, xTexelC${n+1}.xy);\n                     `):h+=1===e?`\n                     xC${n+1} = xTexelC${n};\n                     `:`\n                     xCOffset = xC + ${e};\n\n                     if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${n+1}Ready == 0) {\n                       xTexelC${n+1} = getX(batch, xR, xCOffset, d1);\n                       if (xCOffset + 1 >= inDims[1]) {\n                         xTexelC${n+1}.zw = vec2(0.0);\n                       }\n                       xTexelC${n+1}Ready = 1;\n                     }\n\n                     xC${n+1} = xTexelC${n+1};\n                     `}}else n<l&&(a%2==1?(h+=`\n                 xCOffset = xC + 1 - strides[1];\n                 if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${n}Ready == 0) {\n                   xTexelC${n} = getX(batch, xR, xCOffset, d1);\n                   // Need to manually clear unused channels in case\n                   // we're reading from recycled texture.\n                   if (xCOffset + 1 >= inDims[1]) {\n                     xTexelC${n}.zw = vec2(0.0);\n                   }\n                   xTexelC${n}Ready = 1;\n                 }\n\n                 if(xC + 1 >= 0 && xC + 1 < inDims[1] && xTexelC${n+1}Ready == 0) {\n                   xTexelC${n+1} = getX(batch, xR, xC + 1, d1);\n                   // Need to manually clear unused channels in case\n                   // we're reading from recycled texture.\n                   if (xC + 2 >= inDims[1]) {\n                     xTexelC${n+1}.zw = vec2(0.0);\n                   }\n                   xTexelC${n+1}Ready = 1;\n                 }\n\n                 xC${n} = vec4(xTexelC${n}.zw, xTexelC${n+1}.zw);\n               `,n+1<l&&(h+=`\n                   final = vec4(0.0);\n                   xCOffset = xC + 1 + strides[1];\n                   if(xCOffset >= 0 && xCOffset < inDims[1]) {\n                     final = getX(batch, xR, xCOffset, d1);\n                   }\n                   xC${n+1} = vec4(xTexelC${n+1}.xy, final.xy);\n                 `)):(h+=`\n                 if(xC >= 0 && xC < inDims[1] && xTexelC${n}Ready == 0) {\n                   xTexelC${n} = getX(batch, xR, xC, d1);\n                   if (xC + 1 >= inDims[1]) {\n                     xTexelC${n}.zw = vec2(0.0);\n                   }\n                   xTexelC${n}Ready = 1;\n                 }\n\n                 xCOffset = xC + strides[1];\n                 if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${n+1}Ready == 0) {\n                   xTexelC${n+1} = getX(batch, xR, xCOffset, d1);\n                   if (xCOffset + 1 >= inDims[1]) {\n                     xTexelC${n+1}.zw = vec2(0.);\n                   }\n                   xTexelC${n+1}Ready = 1;\n                 }\n\n                 xC${n} = vec4(\n                   xTexelC${n}.xy, xTexelC${n+1}.xy);\n               `,n+1<l&&(h+=`\n                   xC${n+1} = vec4(xTexelC${n}.zw, xTexelC${n+1}.zw);\n                 `)));n<l&&(h+=`\n             wTexel = getW(r, ${n}, d1, d2);\n             dotProd += xC${n}.xxzz * vec4(wTexel.xy, wTexel.xy);\n             if(d1 + 1 < ${e.inChannels}) {\n               dotProd += xC${n}.yyww * vec4(wTexel.zw, wTexel.zw);\n             }\n           `,n+1<l&&(h+=`\n               wTexel = getW(r, ${n+1}, d1, d2);\n               dotProd += xC${n+1}.xxzz * vec4(wTexel.xy, wTexel.xy);\n               if(d1 + 1 < ${e.inChannels}) {\n                 dotProd += xC${n+1}.yyww * vec4(wTexel.zw, wTexel.zw);\n               }\n             `))}h+="\n     }\n   ",h+="\n     }\n   ",h+="\n     }\n   ";let d="",p="";n&&(d=r?`vec4 activation(vec4 a) {\n           vec4 b = getPreluActivationWeightsAtOutCoords();\n           ${n}\n         }`:s?`vec4 activation(vec4 a) {\n           vec4 b = getLeakyreluAlphaAtOutCoords();\n           ${n}\n         }`:`vec4 activation(vec4 x) {\n           ${n}\n         }`,p="result = activation(result);");const f=t?"result += getBiasAtOutCoords();":"";t&&this.variableNames.push("bias"),r&&this.variableNames.push("preluActivationWeights"),s&&this.variableNames.push("leakyreluAlpha"),this.userCode=`\n       ${d}\n\n       void main() {\n         ivec4 coords = getOutputCoords();\n         int batch = coords.x;\n         ivec2 xRCCorner = coords.yz * strides - pads;\n         int d2 = coords.w;\n         int xRCorner = xRCCorner.x;\n         int xCCorner = xRCCorner.y;\n\n         //intialize dotProd with a small epsilon seems to reduce GPU accuracy loss.\n         vec4 dotProd = vec4(0.000000000000001);\n\n         ${h}\n\n         vec4 result = dotProd - vec4(0.000000000000001);\n         ${f}\n         ${p}\n         setOutput(result);\n       }\n     `}}class Zb{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"inputShape",type:"ivec4"},{name:"pad",type:"ivec2"},{name:"stride",type:"ivec2"},{name:"dilation",type:"ivec2"},{name:"inChannels",type:"int"},{name:"itemsPerBlockRow",type:"int"},{name:"outWidth",type:"int"}],this.outputShape=e,this.enableShapeUniforms=Uf(this.outputShape.length);const{dataFormat:n}=t,r=vf(),s="channelsLast"===n,a=s?1:2,o=s?2:3,i=this.enableShapeUniforms?"if(blockIndex < outShape[2] && pos < outShape[1]) {":`if(blockIndex < ${e[2]} && pos < ${e[1]}) {`;let u="";for(let e=0;e<=1;e++)for(let t=0;t<=1;t++)u+=`\n          blockIndex = rc.z + ${t};\n          pos = rc.y + ${e};\n\n          ${i}\n            offsetY = int(blockIndex / outWidth) * stride[0] - pad[0];\n            d0 = offsetY + dilation[0] * (pos / itemsPerBlockRow);\n\n            if(d0 < inputShape[${a}] && d0 >= 0) {\n              // Use custom imod instead mod. On Intel GPU, mod may generate\n              // unexpected value.\n              // https://github.com/tensorflow/tfjs/issues/5447\n              offsetX = imod(blockIndex, outWidth) * stride[1] - pad[1];\n              d1 = offsetX + dilation[1] * (imod(pos, itemsPerBlockRow) /\n                  inChannels);\n\n              if(d1 < inputShape[${o}] && d1 >= 0) {\n\n                ch = imod(pos, inChannels);\n\n                if (${s}) {\n                  innerDims = vec2(d1, ch);\n                  result[${2*e+t}] = getChannel(\n                    getA(rc.x, d0, int(innerDims.x),\n                    int(innerDims.y)), innerDims);\n                } else {\n                  innerDims = vec2(d0, d1);\n                  result[${2*e+t}] = getChannel(\n                    getA(rc.x, ch, int(innerDims.x),\n                    int(innerDims.y)), innerDims);\n                }\n              }\n            }\n          }\n        `;this.userCode=`\n      void main() {\n        ivec3 rc = getOutputCoords();\n\n        vec4 result = vec4(0);\n\n        int blockIndex, pos, offsetY, d0, offsetX, d1, ch;\n        vec2 innerDims;\n\n        ${u}\n\n        ${r.output} = result;\n      }\n    `}}function Jb(e,t){const n=e.length;return n>=3?t?[...e.slice(0,-3),e[n-3]*e[n-2],e[n-1]]:[...e.slice(0,-3),e[n-3],e[n-2]*e[n-1]]:!t&&1===n&&e[0]>1?[e[0],1]:null}function ev({x:e,filter:t,convInfo:n,backend:r,bias:s=null,preluActivationWeights:a=null,leakyreluAlpha:o=0,activation:i=null}){const u=e.shape,l=r.texData.get(e.dataId),c=n.inChannels,h=u[0]*u[1]*u[2],d=n.outChannels,p="channelsLast"===n.dataFormat;let f;const m=[];if(null!=a){const e=Jb(a.shape,p);null!=e&&(a=fx({inputs:{x:a},backend:r,attrs:{shape:e}}),m.push(a))}if(null!=s){const e=Jb(s.shape,p);null!=e&&(s=fx({inputs:{x:s},backend:r,attrs:{shape:e}}),m.push(s))}if((1!==h&&1!==d||!(c>Tx))&&l.isPacked&&p&&null!=l.texture&&u[2]%2!=0&&z(l.shape.slice(-3),u.slice(-3))){const c=u[0]*u[1]*(u[2]+1),h={dataId:e.dataId,shape:[1,c,n.inChannels],dtype:e.dtype},d=l.shape;l.shape=l.shape.slice(),l.shape[l.shape.length-2]++,D(df(l.shape,h.shape),(()=>`packed reshape ${l.shape} to ${h.shape} isn't free`));const p=fx({inputs:{x:t},backend:r,attrs:{shape:[1,n.inChannels,n.outChannels]}});m.push(p);const g=$x({a:h,b:p,backend:r,transposeA:!1,transposeB:!1,bias:s,activation:i,preluActivationWeights:a,leakyreluAlpha:o}),y=r.texData.get(g.dataId);D(y.isPacked,(()=>"batchMatMul result is expected to be packed")),l.shape=d,y.shape=n.outShape,f=qy({inputs:{x:g},backend:r}),f.shape=n.outShape,m.push(g)}else{const u=n.outHeight*n.outWidth,l=fx({inputs:{x:e},backend:r,attrs:{shape:p?[n.batchSize,u,n.inChannels]:[n.batchSize,n.inChannels,u]}}),c=fx({inputs:{x:t},backend:r,attrs:{shape:[1,n.inChannels,n.outChannels]}}),h=$x({a:p?l:c,b:p?c:l,transposeA:!p,transposeB:!1,backend:r,bias:s,activation:i,preluActivationWeights:a,leakyreluAlpha:o});f=fx({inputs:{x:h},backend:r,attrs:{shape:n.outShape}}),m.push(l),m.push(c),m.push(h)}for(const e of m)r.disposeIntermediateTensorInfo(e);return f}function tv({x:e,filter:t,convInfo:n,backend:r,bias:s=null,preluActivationWeights:a=null,leakyreluAlpha:o=0,activation:i=null}){const{filterWidth:u,filterHeight:l,inChannels:c,outWidth:h,outHeight:d,dataFormat:p}=n,f="channelsLast"===p,m=u*l*c,g=d*h,y=[n.batchSize,m,g],x=[];if(null!=a){const e=Jb(a.shape,f);null!=e&&(a=fx({inputs:{x:a},backend:r,attrs:{shape:e}}),x.push(a))}if(null!=s){const e=Jb(s.shape,f);null!=e&&(s=fx({inputs:{x:s},backend:r,attrs:{shape:e}}),x.push(s))}const b=fx({inputs:{x:t},backend:r,attrs:{shape:[1,m,B(t.shape)/m]}});x.push(b);const v=new Zb(y,n),w=[e.shape,[n.padInfo.top,n.padInfo.left],[n.strideHeight,n.strideWidth],[n.dilationHeight,n.dilationWidth],[n.inChannels],[n.filterWidth*n.inChannels],[n.outWidth]],k=r.runWebGLProgram(v,[e],"float32",w),S=fx({inputs:{x:k},backend:r,attrs:{shape:y}});x.push(k),x.push(S);const C=null!=s,I=null!=a,T="leakyrelu"===i,$=i?ix(i,!0):null,N=new ux(f?S.shape:b.shape,f?b.shape:S.shape,f?[n.batchSize,g,n.outChannels]:[n.batchSize,n.outChannels,g],!0,!1,C,$,I,T),E=f?[S,b]:[b,S];if(s&&E.push(s),I&&E.push(a),T){const e=r.makeTensorInfo([],"float32",Hr(o,"float32"));E.push(e),x.push(e)}const R=r.runWebGLProgram(N,E,"float32"),_=fx({inputs:{x:R},backend:r,attrs:{shape:n.outShape}});x.push(R);for(const e of x)r.disposeIntermediateTensorInfo(e);return _}const nv={kernelName:Ke,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,filter:a}=t,{strides:o,pad:i,dataFormat:u,dilations:l,dimRoundingMode:c}=r,h=Gi(u),d=Fi(s.shape,a.shape,o,l,i,c,!1,h);let p;if(1!==d.filterHeight||1!==d.filterWidth||1!==d.dilationHeight||1!==d.dilationWidth||1!==d.strideHeight||1!==d.strideWidth||"SAME"!==d.padInfo.type&&"VALID"!==d.padInfo.type)if(d.strideWidth<=2&&"channelsLast"===h&&fe().getBool("WEBGL_EXP_CONV")){const e=new Qb(d),t=[[d.padInfo.top,d.padInfo.left],[d.strideHeight,d.strideWidth],[d.dilationHeight,d.dilationWidth],[d.inHeight,d.inWidth]];p=n.runWebGLProgram(e,[s,a],"float32",t)}else if(fe().getBool("WEBGL_CONV_IM2COL"))p=tv({x:s,filter:a,convInfo:d,backend:n});else{const e=new Xb(d);p=n.runWebGLProgram(e,[s,a],"float32")}else p=ev({x:s,filter:a,convInfo:d,backend:n});const f=fx({inputs:{x:p},backend:n,attrs:{shape:d.outShape}});return n.disposeIntermediateTensorInfo(p),f}};class rv{constructor(e){this.variableNames=["x","dy"],this.outputShape=e.filterShape;const t=e.strideHeight,n=e.strideWidth,r=e.padInfo.top,s=e.padInfo.left,a="channelsLast"===e.dataFormat;this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int wR = coords.x;\n        int wC = coords.y;\n        int d1 = coords.z;\n        int d2 = coords.w;\n\n        // Convolve x(?, ?, d1) with dy(:, :, d2) to get dw(wR, wC, d1, d2).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n\n        for (int b = 0; b < ${e.batchSize}; b++) {\n          for (int yR = 0; yR < ${e.outHeight}; yR++) {\n            int xR = wR + yR * ${t} - ${r};\n\n            if (xR < 0 || xR >= ${e.inHeight}) {\n              continue;\n            }\n\n            for (int yC = 0; yC < ${e.outWidth}; yC++) {\n              int xC = wC + yC * ${n} - ${s};\n\n              if (xC < 0 || xC >= ${e.inWidth}) {\n                continue;\n              }\n\n              ${a?"float dyValue = getDy(b, yR, yC, d2);\n              float xValue = getX(b, xR, xC, d1);\n              dotProd += (xValue * dyValue);":"float dyValue = getDy(b, d2, yR, yC);\n              float xValue = getX(b, d1, xR, xC);\n              dotProd += (xValue * dyValue);"}\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class sv{constructor(e){this.variableNames=["dy","W"],this.outputShape=e.inShape;const t=e.filterHeight,n=e.filterWidth,r=e.strideHeight,s=e.strideWidth,a="channelsLast"===e.dataFormat,o=t-1-e.padInfo.top,i=n-1-e.padInfo.left,u=a?1:2,l=a?2:3,c=a?3:1;this.userCode=`\n      const ivec2 pads = ivec2(${o}, ${i});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d1 = coords[${c}];\n\n        ivec2 dyCorner = ivec2(coords[${u}], coords[${l}]) - pads;\n        int dyRCorner = dyCorner.x;\n        int dyCCorner = dyCorner.y;\n\n        // Convolve dy(?, ?, d2) with w(:, :, d1, d2) to compute dx(xR, xC, d1).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < ${t}; wR++) {\n          float dyR = float(dyRCorner + wR) / ${r}.0;\n\n          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          int wRPerm = ${t} - 1 - wR;\n\n          for (int wC = 0; wC < ${n}; wC++) {\n            float dyC = float(dyCCorner + wC) / ${s}.0;\n\n            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            int wCPerm = ${n} - 1 - wC;\n\n            for (int d2 = 0; d2 < ${e.outChannels}; d2++) {\n\n              if (${a}) {\n                float xValue = getDy(batch, idyR, idyC, d2);\n                float wValue = getW(wRPerm, wCPerm, d1, d2);\n                dotProd += xValue * wValue;\n              } else {\n                float xValue = getDy(batch, d2, idyR, idyC);\n                float wValue = getW(wRPerm, wCPerm, d1, d2);\n                dotProd += xValue * wValue;\n              }\n\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class av{constructor(e){this.variableNames=["x","dy"],this.outputShape=e.filterShape;const t=e.strideDepth,n=e.strideHeight,r=e.strideWidth,s=e.padInfo.front,a=e.padInfo.top,o=e.padInfo.left;this.userCode=`\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int wF = coords.x;\n        int wR = coords.y;\n        int wC = coords.z;\n        int d1 = coords.w;\n        int d2 = coords.u;\n\n        float dotProd = 0.0;\n\n        for (int b = 0; b < ${e.batchSize}; b++) {\n          for (int yF = 0; yF < ${e.outDepth}; yF++) {\n            int xF = wF + yF * ${t} - ${s};\n\n            if (xF < 0 || xF >= ${e.inDepth}) {\n              continue;\n            }\n\n            for (int yR = 0; yR < ${e.outHeight}; yR++) {\n              int xR = wR + yR * ${n} - ${a};\n\n              if (xR < 0 || xR >= ${e.inHeight}) {\n                continue;\n              }\n\n              for (int yC = 0; yC < ${e.outWidth}; yC++) {\n                int xC = wC + yC * ${r} - ${o};\n\n                if (xC < 0 || xC >= ${e.inWidth}) {\n                  continue;\n                }\n\n                float dyValue = getDy(b, yF, yR, yC, d2);\n                float xValue = getX(b, xF, xR, xC, d1);\n                dotProd += (xValue * dyValue);\n              }\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class ov{constructor(e){this.variableNames=["dy","W"],this.outputShape=e.inShape;const t=e.filterDepth,n=e.filterHeight,r=e.filterWidth,s=e.strideDepth,a=e.strideHeight,o=e.strideWidth,i=t-1-e.padInfo.front,u=n-1-e.padInfo.top,l=r-1-e.padInfo.left;this.userCode=`\n      const ivec3 pads = ivec3(${i}, ${u}, ${l});\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int d1 = coords.u;\n\n\n        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;\n        int dyFCorner = dyCorner.x;\n        int dyRCorner = dyCorner.y;\n        int dyCCorner = dyCorner.z;\n\n        float dotProd = 0.0;\n        for (int wF = 0; wF < ${t}; wF++) {\n          float dyF = float(dyFCorner + wF) / ${s}.0;\n\n          if (dyF < 0.0 || dyF >= ${e.outDepth}.0 || fract(dyF) > 0.0) {\n            continue;\n          }\n          int idyF = int(dyF);\n\n          int wFPerm = ${t} - 1 - wF;\n\n          for (int wR = 0; wR < ${n}; wR++) {\n            float dyR = float(dyRCorner + wR) / ${a}.0;\n\n            if (dyR < 0.0 || dyR >= ${e.outHeight}.0 ||\n              fract(dyR) > 0.0) {\n              continue;\n            }\n            int idyR = int(dyR);\n\n            int wRPerm = ${n} - 1 - wR;\n\n            for (int wC = 0; wC < ${r}; wC++) {\n              float dyC = float(dyCCorner + wC) / ${o}.0;\n\n              if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                  fract(dyC) > 0.0) {\n                continue;\n              }\n              int idyC = int(dyC);\n\n              int wCPerm = ${r} - 1 - wC;\n\n              for (int d2 = 0; d2 < ${e.outChannels}; d2++) {\n                float xValue = getDy(batch, idyF, idyR, idyC, d2);\n                float wValue = getW(wFPerm, wRPerm, wCPerm, d1, d2);\n                dotProd += xValue * wValue;\n              }\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}const iv={kernelName:qe,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,dy:a}=t,{strides:o,pad:i,dataFormat:u,dimRoundingMode:l,filterShape:c}=r,h=Gi(u),d=Fi(s.shape,c,o,1,i,l,!1,h),p=new rv(d);return n.runWebGLProgram(p,[s,a],"float32")}};class uv{constructor(e){this.variableNames=["dy","W"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"strides",type:"vec2"}],this.outputShape=e.inShape,this.enableShapeUniforms=Uf(this.outputShape.length);const t=e.filterHeight,n=e.filterWidth,r=t-1-e.padInfo.top,s=n-1-e.padInfo.left;this.userCode=`\n      const ivec2 pads = ivec2(${r}, ${s});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d1 = coords[3];\n\n        ivec2 dyCorner = ivec2(coords[1], coords[2]) - pads;\n        int dyRCorner = dyCorner.x;\n        int dyCCorner = dyCorner.y;\n\n        vec4 result = vec4(0.);\n        for (int wR = 0; wR < ${t}; wR++) {\n          float dyR = float(dyRCorner + wR) / strides[0];\n          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n          int wRPerm = ${t} - 1 - wR;\n\n          for (int wC = 0; wC < ${n}; wC++) {\n            int wCPerm = ${n} - 1 - wC;\n\n            float dyC = float(dyCCorner + wC) / strides[1];\n            bool idyCVal = (dyC >= 0.0) && (dyC < ${e.outWidth}.0)\n              && (fract(dyC) == 0.0);\n            int idyC = int(dyC);\n\n            float dyC2 = float(dyCCorner + wC + 1) / strides[1];\n            bool idyCVal2 = (dyC2 >= 0.0) && (dyC2 < ${e.outWidth}.0)\n              && (fract(dyC2) == 0.0);\n            int idyC2 = int(dyC2);\n\n            if (idyCVal && idyCVal2) {\n              for (int d2 = 0; d2 < ${e.outChannels}; d2 += 2) {\n                vec4 wValue = getW(wRPerm, wCPerm, d1, d2);\n                vec4 dySample = getDy(batch, idyR, idyC, d2);\n                vec4 dySample2 = (idyC / 2 == idyC2 / 2) ?\n                  dySample : getDy(batch, idyR, idyC2, d2);\n\n                vec2 dyValue = mod(float(idyC), 2.) == 0. ?\n                  dySample.xy : dySample.zw;\n                result.xy += vec2(dot(dyValue, wValue.xy),\n                  dot(dyValue, wValue.zw));\n\n                dyValue = mod(float(idyC2), 2.) == 0. ?\n                  dySample2.xy : dySample2.zw;\n                result.zw += vec2(dot(dyValue, wValue.xy),\n                  dot(dyValue, wValue.zw));\n              }\n            } else if (idyCVal) {\n              for (int d2 = 0; d2 < ${e.outChannels}; d2 += 2) {\n                vec4 wValue = getW(wRPerm, wCPerm, d1, d2);\n                vec4 dySample = getDy(batch, idyR, idyC, d2);\n                vec2 dyValue = mod(float(idyC), 2.) == 0. ?\n                  dySample.xy : dySample.zw;\n                result.xy += vec2(dot(dyValue, wValue.xy),\n                  dot(dyValue, wValue.zw));\n              }\n            } else if (idyCVal2) {\n              for (int d2 = 0; d2 < ${e.outChannels}; d2 += 2) {\n                vec4 wValue = getW(wRPerm, wCPerm, d1, d2);\n                vec4 dySample = getDy(batch, idyR, idyC2, d2);\n                vec2 dyValue = mod(float(idyC2), 2.) == 0. ?\n                  dySample.xy : dySample.zw;\n                result.zw += vec2(dot(dyValue, wValue.xy),\n                  dot(dyValue, wValue.zw));\n              }\n            }\n          }\n        }\n        setOutput(result);\n      }\n    `}}const lv={kernelName:Xe,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:s,filter:a}=t,{inputShape:o,strides:i,pad:u,dataFormat:l,dimRoundingMode:c}=r,h=Gi(l),d=Fi(o,a.shape,i,1,u,c,!1,h);if(fe().getBool("WEBGL_PACK")&&"channelsLast"===h){const e=[[d.strideHeight,d.strideWidth]],t=new uv(d);return n.runWebGLProgram(t,[s,a],"float32",e)}{const e=new sv(d);return n.runWebGLProgram(e,[s,a],"float32")}}},cv={kernelName:Ye,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,filter:a}=t,{strides:o,pad:i,dilations:u}=r,l=Pi(s.shape,a.shape,o,u,i),c=new Yb(l);return n.runWebGLProgram(c,[s,a],"float32")}},hv={kernelName:"Conv3DBackpropFilterV2",backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,dy:a}=t,{strides:o,pad:i,filterShape:u}=r,l=Pi(s.shape,u,o,1,i),c=new av(l);return n.runWebGLProgram(c,[s,a],"float32")}},dv={kernelName:Qe,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:s,filter:a}=t,{pad:o,strides:i,inputShape:u}=r,l=Pi(u,a.shape,i,1,o),c=new ov(l);return n.runWebGLProgram(c,[s,a],"float32")}},pv=ax({opSnippet:sx+"\n  return cos(x);\n",packedOpSnippet:`\n  vec4 result = cos(x);\n  bvec4 isNaN = isnan(x);\n  ${jy}\n  return result;\n`}),fv={kernelName:Ze,backendName:"webgl",kernelFunc:pv},mv=ax({opSnippet:"\n  float e2x = exp(-x);\n  return (e2x + 1.0 / e2x) / 2.0;\n"}),gv={kernelName:Je,backendName:"webgl",kernelFunc:mv};class yv{constructor(e,t,n,r,s){this.variableNames=["Image","Boxes","BoxInd"],this.outputShape=[];const[a,o,i,u]=e,[l]=t,[c,h]=n;this.outputShape=[l,c,h,u];const d="bilinear"===r?1:0,[p,f]=[o-1+".0",i-1+".0"],[m,g,y]=c>1?[""+(o-1)/(c-1),"(y2-y1) * height_ratio",`y1*${p} + float(y)*(height_scale)`]:["0.0","0.0",`0.5 * (y1+y2) * ${p}`],[x,b,v]=h>1?[""+(i-1)/(h-1),"(x2-x1) * width_ratio",`x1*${f} + float(x)*(width_scale)`]:["0.0","0.0",`0.5 * (x1+x2) * ${f}`];this.userCode=`\n      const float height_ratio = float(${m});\n      const float width_ratio = float(${x});\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int y = coords[1];\n        int x = coords[2];\n        int d = coords[3];\n\n        // get box vals\n        float y1 = getBoxes(b,0);\n        float x1 = getBoxes(b,1);\n        float y2 = getBoxes(b,2);\n        float x2 = getBoxes(b,3);\n\n        // get image in batch index\n        int bInd = round(getBoxInd(b));\n        if(bInd < 0 || bInd >= ${a}) {\n          return;\n        }\n\n        float height_scale = ${g};\n        float width_scale = ${b};\n\n        float in_y = ${y};\n        if( in_y < 0.0 || in_y > ${p} ) {\n          setOutput(float(${s}));\n          return;\n        }\n        float in_x = ${v};\n        if( in_x < 0.0 || in_x > ${f} ) {\n          setOutput(float(${s}));\n          return;\n        }\n\n        vec2 sourceFracIndexCR = vec2(in_x,in_y);\n        if(${d} == 1) {\n          // Compute the four integer indices.\n          ivec2 sourceFloorCR = ivec2(sourceFracIndexCR);\n          ivec2 sourceCeilCR = ivec2(ceil(sourceFracIndexCR));\n\n          float topLeft = getImage(b, sourceFloorCR.y, sourceFloorCR.x, d);\n          float bottomLeft = getImage(b, sourceCeilCR.y, sourceFloorCR.x, d);\n          float topRight = getImage(b, sourceFloorCR.y, sourceCeilCR.x, d);\n          float bottomRight = getImage(b, sourceCeilCR.y, sourceCeilCR.x, d);\n\n          vec2 fracCR = sourceFracIndexCR - vec2(sourceFloorCR);\n\n          float top = topLeft + (topRight - topLeft) * fracCR.x;\n          float bottom = bottomLeft + (bottomRight - bottomLeft) * fracCR.x;\n          float newValue = top + (bottom - top) * fracCR.y;\n          setOutput(newValue);\n        } else {\n          // Compute the coordinators of nearest neighbor point.\n          ivec2 sourceNearestCR = ivec2(floor(\n            sourceFracIndexCR + vec2(0.5,0.5)));\n          float newValue = getImage(b, sourceNearestCR.y, sourceNearestCR.x, d);\n          setOutput(newValue);\n        }\n      }\n    `}}const xv={kernelName:nt,backendName:"webgl",kernelFunc:e=>{const{inputs:t,backend:n,attrs:r}=e,{image:s,boxes:a,boxInd:o}=t,{cropSize:i,method:u,extrapolationValue:l}=r,c=new yv(s.shape,a.shape,i,u,l);return n.runWebGLProgram(c,[s,a,o],"float32")}};var bv;!function(e){e.Prod="*",e.Sum="+"}(bv||(bv={}));class vv{constructor(e,t,n,r){this.op=e,this.outputShape=t,this.variableNames=["x"],this.customUniforms=[{name:"index",type:"float"}];const s=this.outputShape.length,a=this.op===bv.Prod?"1.0":"0.0",o=n?a:`getX(${wv(s,"coords",this.op)})`,i=this.outputShape[this.outputShape.length-1];let u="",l="";n?(u=r?"end != "+(i-1):"end != 0",l=r?"end + 1":"end - 1"):(u=r?`end + pow2 < ${i}`:"end >= pow2",l=r?"end + pow2":"end - pow2"),this.userCode=`\n      void main() {\n        ${Pf(s)} coords = getOutputCoords();\n        int end = ${kv(s,"coords",this.op)};\n        float val = ${o};\n        int pow2 = int(pow(2.0, index));\n        if (${u}) {\n          int idx = ${l};\n          ${kv(s,"coords",this.op)} = idx;\n          val ${this.op}= getX(${wv(s,"coords",this.op)});\n        }\n        setOutput(val);\n      }\n    `}}function wv(e,t,n){if(1===e)return`${t}`;if(2===e)return`${t}.x, ${t}.y`;if(3===e)return`${t}.x, ${t}.y, ${t}.z`;if(4===e)return`${t}.x, ${t}.y, ${t}.z, ${t}.w`;throw new Error(`Cumulative ${n} for rank ${e} is not yet supported`)}function kv(e,t,n){if(1===e)return`${t}`;if(2===e)return`${t}.y`;if(3===e)return`${t}.z`;if(4===e)return`${t}.w`;throw new Error(`Cumulative ${n} for rank ${e} is not yet supported`)}function Sv(e,t,n,r,s,a){const o=t.shape.length,i=Hu([r],o);let u=t;null!=i&&(u=Cx({inputs:{x:t},backend:n,attrs:{perm:i}}));const l=Ku(1,o)[0];if(l!==o-1)throw new Error(`WebGL cumprod shader expects an inner-most axis=${t.shape.length-1} but got axis=${r}`);const c=u.shape[l];let h=qy({inputs:{x:u},backend:n});for(let t=0;t<=Math.ceil(Math.log2(c))-1;t++){const r=new vv(e,u.shape,!1,a),s=[[t]],o=h;h=n.runWebGLProgram(r,[h],h.dtype,s),n.disposeIntermediateTensorInfo(o)}if(s){const t=new vv(e,u.shape,s,a),r=h;h=n.runWebGLProgram(t,[h],h.dtype),n.disposeIntermediateTensorInfo(r)}if(null!=i){const e=Cx({inputs:{x:h},backend:n,attrs:{perm:ju(i)}});return n.disposeIntermediateTensorInfo(h),n.disposeIntermediateTensorInfo(u),e}return h}const Cv={kernelName:et,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{axis:a,exclusive:o,reverse:i}=r;return Sv(bv.Prod,s,n,a,o,i)}},Iv={kernelName:tt,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{axis:a,exclusive:o,reverse:i}=r;return Sv(bv.Sum,s,n,a,o,i)}},Tv={kernelName:rt,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,weights:a}=t,{size:o,binaryOutput:i}=r;if(1===s.shape.length){const e=n.readSync(s.dataId),t=n.readSync(a.dataId),r=kg(e,t,a.dtype,a.shape,o);return n.makeTensorInfo([o],a.dtype,r)}if(2===s.shape.length){const e=n.bufferSync(s),t=n.bufferSync(a),r=Sg(e,t,o,i);return n.makeTensorInfo(r.shape,a.dtype,r.values)}throw new Error(`Error in denseBincount: input must be at most rank 2, but got rank${s.shape.length}.`)}};class $v{constructor(e,t,n){this.variableNames=["x"],this.outputShape=[],this.outputShape=e,this.blockSize=t,this.dataFormat=n,this.userCode=`\n    void main() {\n      ivec4 coords = getOutputCoords();\n      int b = coords[0];\n      int h = ${this.getHeightCoordString()};\n      int w = ${this.getWidthCoordString()};\n      int d = ${this.getDepthCoordString()};\n\n      int in_h = h / ${t};\n      int offset_h = imod(h, ${t});\n      int in_w = w / ${t};\n      int offset_w = imod(w, ${t});\n      int offset_d = (offset_h * ${t} + offset_w) *\n        ${this.getOutputDepthSize()};\n      int in_d = d + offset_d;\n\n      float result = ${this.getInputSamplingString()};\n      setOutput(result);\n    }\n  `}getHeightCoordString(){return"NHWC"===this.dataFormat?"coords[1]":"coords[2]"}getWidthCoordString(){return"NHWC"===this.dataFormat?"coords[2]":"coords[3]"}getDepthCoordString(){return"NHWC"===this.dataFormat?"coords[3]":"coords[1]"}getOutputDepthSize(){return"NHWC"===this.dataFormat?this.outputShape[3]:this.outputShape[1]}getInputSamplingString(){return"NHWC"===this.dataFormat?"getX(b, in_h, in_w, in_d)":"getX(b, in_d, in_h, in_w)"}}const Nv={kernelName:st,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{blockSize:a,dataFormat:o}=r,i=s.shape[0],u=("NHWC"===o?s.shape[1]:s.shape[2])*a,l=("NHWC"===o?s.shape[2]:s.shape[3])*a,c=("NHWC"===o?s.shape[3]:s.shape[1])/(a*a),h=new $v("NHWC"===o?[i,u,l,c]:[i,c,u,l],a,o);return n.runWebGLProgram(h,[s],s.dtype)}};class Ev{constructor(e,t=!1,n=null,r=!1,s=!1){this.variableNames=["x","W"],this.customUniforms=[{name:"pads",type:"ivec2"},{name:"strides",type:"ivec2"},{name:"dilations",type:"ivec2"},{name:"inDims",type:"ivec2"}],this.outputShape=e.outShape,this.enableShapeUniforms=Uf(this.outputShape.length);const a=e.filterHeight,o=e.filterWidth,i=e.outChannels/e.inChannels;let u="",l="";n&&(u=r?`float activation(float a) {\n          float b = getPreluActivationWeightsAtOutCoords();\n          ${n}\n        }`:s?`float activation(float a) {\n          float b = getLeakyreluAlphaAtOutCoords();\n          ${n}\n        }`:`\n          float activation(float x) {\n            ${n}\n          }\n        `,l="result = activation(result);");const c=t?"result += getBiasAtOutCoords();":"";t&&this.variableNames.push("bias"),r&&this.variableNames.push("preluActivationWeights"),s&&this.variableNames.push("leakyreluAlpha"),this.userCode=`\n      ${u}\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords.x;\n        ivec2 xRCCorner = coords.yz * strides - pads;\n        int d2 = coords.w;\n        int d1 = d2 / ${i};\n        int q = d2 - d1 * ${i};\n\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        // Convolve x(?, ?, d1) with w(:, :, d1, q) to get y(yR, yC, d2).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        // TO DO(dsmilkov): Flatten the two for loops and vec4 the operations.\n        for (int wR = 0; wR < ${a}; wR++) {\n          int xR = xRCorner + wR * dilations[0];\n\n          if (xR < 0 || xR >= inDims[0]) {\n            continue;\n          }\n\n          for (int wC = 0; wC < ${o}; wC++) {\n            int xC = xCCorner + wC * dilations[1];\n\n            if (xC < 0 || xC >= inDims[1]) {\n              continue;\n            }\n\n            float xVal = getX(batch, xR, xC, d1);\n            float wVal = getW(wR, wC, d1, q);\n            dotProd += xVal * wVal;\n          }\n        }\n\n        float result = dotProd;\n        ${c}\n        ${l}\n        setOutput(result);\n      }\n    `}}class Rv{constructor(e,t=!1,n=null,r=!1,s=!1){this.variableNames=["x","W"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"pads",type:"ivec2"},{name:"strides",type:"ivec2"},{name:"dilations",type:"ivec2"},{name:"inDims",type:"ivec2"}],this.outputShape=e.outShape,this.enableShapeUniforms=Uf(this.outputShape.length);const a=e.outChannels/e.inChannels,o=e.padInfo.left,i=e.strideWidth,u=e.dilationWidth,l=e.filterHeight,c=e.filterWidth,h=c;let d="\n      int xR; int xC; int xCOffset;\n      vec4 wTexel; vec4 previous; vec4 final;";for(let e=0;e<c;e++)d+=`\n          vec4 xTexelC${2*e};\n          int xTexelC${2*e}Ready;\n          vec4 xTexelC${2*e+1};\n          int xTexelC${2*e+1}Ready;\n          vec4 xC${e};`;d+=`\n    for (int r = 0; r < ${l}; r++) {\n      `;for(let e=0;e<c;e++)d+=`\n          xTexelC${2*e} = vec4(0.0);\n          xTexelC${2*e}Ready = 0;\n          xTexelC${2*e+1} = vec4(0.0);\n          xTexelC${2*e+1}Ready = 0;\n          xC${e} = vec4(0.0);`;d+="\n        xR = xRCorner + r * dilations[0];\n        if (xR >=0 && xR < inDims[0]) {\n      ";for(let e=0;e<(h+1)/2;e++){const t=2*e;if(d+=`\n          xC = xCCorner + ${t*u};\n          `,1===i){if(t<c&&(o%2==1?(d+=`\n                xCOffset = xC + 1;\n                if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${t}Ready == 0) {\n                  xTexelC${t} = getX(batch, xR, xCOffset, d1);\n\n                  // Need to manually clear unused channels in case\n                  // we're reading from recycled texture.\n                  if (xCOffset + 1 >= inDims[1]) {\n                    xTexelC${t}.zw = vec2(0.0);\n                  }\n                  xTexelC${t}Ready = 1;\n                }\n              `,d+=1===u&&t>0?`\n                xC${t} = vec4(xTexelC${t-2}.zw, xTexelC${t}.xy);\n                `:`\n                  xCOffset = xC + 1 - 2;\n\n                  if (xCOffset >= 0 && xCOffset < inDims[1]) {\n                    previous = getX(batch, xR, xCOffset, d1);\n\n                    // Need to manually clear unused channels in case\n                    // we're reading from recycled texture.\n                    if (xCOffset + 1 >= inDims[1]) {\n                      previous.zw = vec2(0.0);\n                    }\n\n                    xC${t} = vec4(previous.zw, xTexelC${t}.xy);\n                  } else {\n                    xC${t} = vec4(0.0, 0.0, xTexelC${t}.xy);\n                  }\n                  `):d+=`\n                if (xC >= 0 && xC < inDims[1] && xTexelC${t}Ready == 0) {\n                  xTexelC${t} = getX(batch, xR, xC, d1);\n                  if (xC + 1 >= inDims[1]) {\n                    xTexelC${t}.zw = vec2(0.0);\n                  }\n                  xTexelC${t}Ready = 1;\n                }\n\n                xC${t} = xTexelC${t};\n                `,t+1<c)){const e=o%2==0?O(u):u;u%2==0&&o%2==1||u%2!=0&&o%2!=1?(d+=`\n                  xCOffset = xC + imod(pads[1], 2) + ${e};\n\n                  if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${t+1}Ready == 0) {\n                    xTexelC${t+1} = getX(batch, xR, xCOffset, d1);\n\n                    // Need to manually clear unused channels in case\n                    // we're reading from recycled texture.\n                    if (xCOffset + 1 >= inDims[1]) {\n                      xTexelC${t+1}.zw = vec2(0.0);\n                    }\n                    xTexelC${t+1}Ready = 1;\n                  }\n                  `,d+=u>1?`\n                    xCOffset -= 2;\n                    if (xCOffset >= 0 && xCOffset < inDims[1]) {\n                     previous = getX(batch, xR, xCOffset, d1);\n                     xC${t+1} = vec4(previous.zw, xTexelC${t+1}.xy);\n                    } else {\n                     xC${t+1} = vec4(0.0, 0.0, xTexelC${t+1}.xy);\n                    }\n                    `:`\n                    xC${t+1} = vec4(xTexelC${t}.zw, xTexelC${t+1}.xy);\n                    `):d+=1===e?`\n                    xC${t+1} = xTexelC${t};\n                    `:`\n                    xCOffset = xC + ${e};\n\n                    if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${t+1}Ready == 0) {\n                      xTexelC${t+1} = getX(batch, xR, xCOffset, d1);\n                      if (xCOffset + 1 >= inDims[1]) {\n                        xTexelC${t+1}.zw = vec2(0.0);\n                      }\n                      xTexelC${t+1}Ready = 1;\n                    }\n\n                    xC${t+1} = xTexelC${t+1};\n                    `}}else t<c&&(o%2==1?(d+=`\n                xCOffset = xC + 1 - strides[1];\n                if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${t}Ready == 0) {\n                  xTexelC${t} = getX(batch, xR, xCOffset, d1);\n                  // Need to manually clear unused channels in case\n                  // we're reading from recycled texture.\n                  if (xCOffset + 1 >= inDims[1]) {\n                    xTexelC${t}.zw = vec2(0.0);\n                  }\n                  xTexelC${t}Ready = 1;\n                }\n\n                if(xC + 1 >= 0 && xC + 1 < inDims[1] && xTexelC${t+1}Ready == 0) {\n                  xTexelC${t+1} = getX(batch, xR, xC + 1, d1);\n                  // Need to manually clear unused channels in case\n                  // we're reading from recycled texture.\n                  if (xC + 2 >= inDims[1]) {\n                    xTexelC${t+1}.zw = vec2(0.0);\n                  }\n                  xTexelC${t+1}Ready = 1;\n                }\n\n                xC${t} = vec4(xTexelC${t}.zw, xTexelC${t+1}.zw);\n              `,t+1<c&&(d+=`\n                  final = vec4(0.0);\n                  xCOffset = xC + 1 + strides[1];\n                  if(xCOffset >= 0 && xCOffset < inDims[1]) {\n                    final = getX(batch, xR, xCOffset, d1);\n                  }\n                  xC${t+1} = vec4(xTexelC${t+1}.xy, final.xy);\n                `)):(d+=`\n                if(xC >= 0 && xC < inDims[1] && xTexelC${t}Ready == 0) {\n                  xTexelC${t} = getX(batch, xR, xC, d1);\n                  if (xC + 1 >= inDims[1]) {\n                    xTexelC${t}.zw = vec2(0.0);\n                  }\n                  xTexelC${t}Ready = 1;\n                }\n\n                xCOffset = xC + strides[1];\n                if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${t+1}Ready == 0) {\n                  xTexelC${t+1} = getX(batch, xR, xCOffset, d1);\n                  if (xCOffset + 1 >= inDims[1]) {\n                    xTexelC${t+1}.zw = vec2(0.);\n                  }\n                  xTexelC${t+1}Ready = 1;\n                }\n\n                xC${t} = vec4(\n                  xTexelC${t}.xy, xTexelC${t+1}.xy);\n              `,t+1<c&&(d+=`\n                  xC${t+1} = vec4(xTexelC${t}.zw, xTexelC${t+1}.zw);\n                `)));t<c&&(d+=`\n            wTexel = getW(r, ${t}, d1, q);\n            dotProd += xC${t} * vec4(wTexel.xz, wTexel.xz);\n          `,t+1<c&&(d+=`\n              wTexel = getW(r, ${t+1}, d1, q);\n              dotProd += xC${t+1} * vec4(wTexel.xz, wTexel.xz);\n            `))}d+="\n    }\n  ",d+="\n      }\n    ";let p="",f="";n&&(p=r?`vec4 activation(vec4 a) {\n          vec4 b = getPreluActivationWeightsAtOutCoords();\n          ${n}\n        }`:s?`vec4 activation(vec4 a) {\n          vec4 b = getLeakyreluAlphaAtOutCoords();\n          ${n}\n        }`:`vec4 activation(vec4 x) {\n          ${n}\n        }`,f="result = activation(result);");const m=t?"result += getBiasAtOutCoords();":"";t&&this.variableNames.push("bias"),r&&this.variableNames.push("preluActivationWeights"),s&&this.variableNames.push("leakyreluAlpha"),this.userCode=`\n      ${p}\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords.x;\n        ivec2 xRCCorner = coords.yz * strides - pads;\n        int d2 = coords.w;\n        int d1 = d2 / ${a};\n        int q = d2 - d1 * ${a};\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        //intialize dotProd with a small epsilon seems to reduce GPU accuracy loss.\n        vec4 dotProd = vec4(0.000000000000001);\n\n        ${d}\n\n        vec4 result = dotProd - vec4(0.000000000000001);\n        ${m}\n        ${f}\n        setOutput(result);\n      }\n    `}}const _v={kernelName:at,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,filter:a}=t,{strides:o,pad:i,dilations:u,dimRoundingMode:l}=r;let c=u;null==c&&(c=[1,1]),D(Vi(o,c),(()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${o} and dilations '${c}'`));const h=Fi(s.shape,a.shape,o,c,i,l,!0);let d;d=fe().getBool("WEBGL_PACK_DEPTHWISECONV")&&h.strideWidth<=2&&h.outChannels/h.inChannels==1?new Rv(h):new Ev(h);const p=[[h.padInfo.top,h.padInfo.left],[h.strideHeight,h.strideWidth],[h.dilationHeight,h.dilationWidth],[h.inHeight,h.inWidth]];return n.runWebGLProgram(d,[s,a],"float32",p)}};class Av{constructor(e){this.variableNames=["x","dy"],this.outputShape=e.filterShape;const t=e.strideHeight,n=e.strideWidth,r=e.padInfo.top,s=e.padInfo.left,a=e.outChannels/e.inChannels;this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int wR = coords.x;\n        int wC = coords.y;\n        int d1 = coords.z;\n        int dm = coords.w;\n        int d2 = d1 * ${a} + dm;\n\n        float dotProd = 0.0;\n\n        // TO DO: Vec4 over the batch size\n        for (int b = 0; b < ${e.batchSize}; b++) {\n          for (int yR = 0; yR < ${e.outHeight}; yR++) {\n            int xR = wR + yR * ${t} - ${r};\n\n            if (xR < 0 || xR >= ${e.inHeight}) {\n              continue;\n            }\n\n            for (int yC = 0; yC < ${e.outWidth}; yC++) {\n              int xC = wC + yC * ${n} - ${s};\n\n              if (xC < 0 || xC >= ${e.inWidth}) {\n                continue;\n              }\n\n              float dyValue = getDy(b, yR, yC, d2);\n              float xValue = getX(b, xR, xC, d1);\n              dotProd += (xValue * dyValue);\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class Ov{constructor(e){this.variableNames=["dy","W"],this.outputShape=e.inShape;const t=e.filterHeight,n=e.filterWidth,r=e.strideHeight,s=e.strideWidth,a=t-1-e.padInfo.top,o=n-1-e.padInfo.left,i=e.outChannels/e.inChannels;this.userCode=`\n      const ivec2 pads = ivec2(${a}, ${o});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d1 = coords[3];\n        ivec2 dyCorner = coords.yz - pads;\n        int dyRCorner = dyCorner.x;\n        int dyCCorner = dyCorner.y;\n\n        float dotProd = 0.0;\n\n        for (int wR = 0; wR < ${t}; wR++) {\n          float dyR = float(dyRCorner + wR) / ${r}.0;\n\n          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          int wRPerm = ${t} - 1 - wR;\n\n          for (int wC = 0; wC < ${n}; wC++) {\n            float dyC = float(dyCCorner + wC) / ${s}.0;\n\n            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            int wCPerm = ${n} - 1 - wC;\n\n            // TO DO: Vec4 over the channelMul\n            for (int dm = 0; dm < ${i}; dm++) {\n              int d2 = d1 * ${i} + dm;\n              float xValue = getDy(batch, idyR, idyC, d2);\n              float wValue = getW(wRPerm, wCPerm, d1, dm);\n              dotProd += xValue * wValue;\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}const Fv={kernelName:ot,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,dy:a}=t,{strides:o,dilations:i,pad:u,dimRoundingMode:l,filterShape:c}=r,h=Fi(s.shape,c,o,i,u,l,!0),d=new Av(h);return n.runWebGLProgram(d,[s,a],"float32")}},Pv={kernelName:it,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:s,filter:a}=t,{strides:o,dilations:i,pad:u,dimRoundingMode:l,inputShape:c}=r,h=Fi(c,a.shape,o,i,u,l,!0),d=new Ov(h);return n.runWebGLProgram(d,[s,a],"float32")}};class Dv{constructor(e){this.variableNames=["X"],this.outputShape=[e,e],this.userCode="\n      void main() {\n          ivec2 coords = getOutputCoords();\n          float val = coords[0] == coords[1] ? getX(coords[0]) : 0.0;\n          setOutput(val);\n      }\n    "}}const Mv={kernelName:ut,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:r}=t,s=[...r.shape,...r.shape],a=B(r.shape),o=fx({inputs:{x:r},backend:n,attrs:{shape:[a]}}),i=new Dv(a),u=n.runWebGLProgram(i,[o],o.dtype),l=fx({inputs:{x:u},backend:n,attrs:{shape:s}});return n.disposeIntermediateTensorInfo(o),n.disposeIntermediateTensorInfo(u),l}};class Lv{constructor(e){this.variableNames=["x","W"],this.outputShape=e.outShape;const{inHeight:t,inWidth:n,padInfo:r,strideHeight:s,strideWidth:a,filterHeight:o,filterWidth:i,dilationHeight:u,dilationWidth:l}=e,{top:c,left:h}=r;this.userCode=`\n      const ivec2 strides = ivec2(${s}, ${a});\n      const ivec2 pads = ivec2(${c}, ${h});\n      const float neg_infinity = -3.4e38;\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords.x;\n        int d1 = coords.w;\n        ivec2 outTopLeftCorner =\n            coords.yz * strides - pads;\n        int hBeg = outTopLeftCorner.x;\n        int wBeg = outTopLeftCorner.y;\n\n        float curVal = neg_infinity;\n        for (int h = 0; h < ${o}; h++) {\n          int hIn = hBeg + h * ${u};\n\n          if (hIn >= 0 && hIn < ${t}) {\n            for (int w = 0; w < ${i}; w++) {\n              int wIn = wBeg + w * ${l};\n\n              if (wIn >= 0 && wIn < ${n}) {\n                float xVal = getX(batch, hIn, wIn, d1);\n                float wVal = getW(h, w, d1);\n\n                float val = xVal + wVal;\n                if (val > curVal) {\n                  curVal = val;\n                }\n              }\n            }\n          }\n        }\n\n        float result = curVal;\n        setOutput(result);\n      }\n    `}}const Bv={kernelName:lt,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,filter:a}=t,{strides:o,pad:i,dilations:u}=r,l=_i(s.shape,a.shape,o,i,"NHWC",u);let c;const h=new Lv(l);c=n.runWebGLProgram(h,[s,a],"float32");const d=fx({inputs:{x:c},backend:n,attrs:{shape:l.outShape}});return n.disposeIntermediateTensorInfo(c),d}},zv={kernelName:dt,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{equation:s}=r,a=t,{allDims:o,summedDims:i,idDims:u}=mp(s,a.length);yp(o.length,u,a);const{path:l,steps:c}=xp(i,u),h=c.length;let d=null,p=o.length;const f=[];for(let e=0;e<h;++e){for(const t of c[e]){const{permutationIndices:e,expandDims:r}=gp(p,u[t]);let s;bp(e)?s=a[t]:(s=Cx({inputs:{x:a[t]},backend:n,attrs:{perm:e}}),f.push(s));const o=s.shape.slice();for(let e=0;e<r.length;++e)o.splice(r[e],0,1);z(s.shape,o)||(s=fx({inputs:{x:s},backend:n,attrs:{shape:o}}),f.push(s)),null===d?d=s:(d=dx({inputs:{a:s,b:d},backend:n}),f.push(d))}e<h-1&&(l[e]>=0&&(d=kx({inputs:{x:d},backend:n,attrs:{axis:l[e]-(o.length-p),keepDims:!1}}),f.push(d)),p--)}for(const e of f)e!==d&&n.disposeIntermediateTensorInfo(e);return d}},Uv=ax({opSnippet:"return (x >= 0.0) ? x : (exp(x) - 1.0);",packedOpSnippet:"\n  vec4 result;\n\n  result.r = (x.r >= 0.0) ? x.r : (exp(x.r) - 1.0);\n  result.g = (x.g >= 0.0) ? x.g : (exp(x.g) - 1.0);\n  result.b = (x.b >= 0.0) ? x.b : (exp(x.b) - 1.0);\n  result.a = (x.a >= 0.0) ? x.a : (exp(x.a) - 1.0);\n\n  return result;\n"}),Vv={kernelName:pt,backendName:"webgl",kernelFunc:Uv},Wv={kernelName:"EluGrad",backendName:"webgl",kernelFunc:e=>{const{inputs:t,backend:n}=e,{dy:r,y:s}=t,a=fe().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new Ky("\n  vec4 bGTEZero = vec4(greaterThanEqual(b, vec4(0.)));\n  return (bGTEZero * a) + ((vec4(1.0) - bGTEZero) * (a * (b + vec4(1.0))));\n",r.shape,s.shape):new Hy("return (b >= 0.0) ? a : a * (b + 1.0);",r.shape,s.shape);return n.runWebGLProgram(a,[r,s],r.dtype)}},Gv=ox({opSnippet:"return float(a == b);",packedOpSnippet:"\n  return vec4(equal(a, b));\n",dtype:"bool",cpuKernelImpl:Ng}),Hv={kernelName:mt,backendName:"webgl",kernelFunc:Gv},jv=ax({opSnippet:`\n  // Error function is calculated approximately with elementary function.\n  // See "Handbook of Mathematical Functions with Formulas,\n  // Graphs, and Mathematical Tables", Abramowitz and Stegun.\n  float p = ${Qd};\n  float a1 = ${Zd};\n  float a2 = ${Jd};\n  float a3 = ${ep};\n  float a4 = ${tp};\n  float a5 = ${np};\n\n  float sign = sign(x);\n  x = abs(x);\n  float t = 1.0 / (1.0 + p * x);\n  return sign * (1.0 - (((((a5*t + a4)*t) + a3)*t + a2)*t + a1)*t*exp(-x*x));\n`}),Kv={kernelName:ft,backendName:"webgl",kernelFunc:jv},qv=ax({opSnippet:sx+"\n  return exp(x);\n",packedOpSnippet:"\n  vec4 result = exp(x);\n  bvec4 isNaN = isnan(x);\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n",cpuKernelImpl:Eg,dtype:"float32"}),Xv={kernelName:gt,backendName:"webgl",kernelFunc:qv};function Yv(e){const{inputs:t,attrs:n,backend:r}=e,{dim:s}=n,{input:a}=t,o=a.shape.length,i=a.shape.slice();let u=s;return s<0&&(D(-(o+1)<=s,(()=>`Axis must be in the interval [${-(o+1)}, ${o}]`)),u=o+s+1),i.splice(u,0,1),fx({inputs:{x:a},backend:r,attrs:{shape:i}})}const Qv={kernelName:yt,backendName:"webgl",kernelFunc:Yv},Zv="return exp(x) - 1.0;",Jv=ax({opSnippet:Zv,packedOpSnippet:Zv,cpuKernelImpl:Rg}),ew={kernelName:xt,backendName:"webgl",kernelFunc:Jv};class tw{constructor(e,t,n){this.variableNames=["real","imag"];const r=t[1];this.outputShape=t;const s=n?`2.0 * ${Math.PI}`:`-2.0 * ${Math.PI}`,a=n?`${r}.0`:"1.0";let o;if("real"===e)o="return real * expR - imag * expI;";else{if("imag"!==e)throw new Error(`FFT component must be either "real" or "imag", got ${e}.`);o="return real * expI + imag * expR;"}this.userCode=`\n      const float exponentMultiplier = ${s};\n\n      float unaryOpComplex(float real, float expR, float imag, float expI) {\n        ${o}\n      }\n\n      float mulMatDFT(int batch, int index) {\n        float indexRatio = float(index) / float(${r});\n        float exponentMultiplierTimesIndexRatio =\n            exponentMultiplier * indexRatio;\n\n        float result = 0.0;\n\n        for (int i = 0; i < ${r}; i++) {\n          // x = (-2|2 * PI / N) * index * i;\n          float x = exponentMultiplierTimesIndexRatio * float(i);\n          float expR = cos(x);\n          float expI = sin(x);\n          float real = getReal(batch, i);\n          float imag = getImag(batch, i);\n\n          result +=\n              unaryOpComplex(real, expR, imag, expI) / ${a};\n        }\n\n        return result;\n      }\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        setOutput(mulMatDFT(coords[0], coords[1]));\n      }\n    `}}function nw(e,t,n){const r=n.texData.get(e.dataId),s=B(e.shape),a=e.shape[e.shape.length-1],o=fx({inputs:{x:e},backend:n,attrs:{shape:[s/a,a]}}),i=o.shape,u=new tw("real",i,t),l=new tw("imag",i,t),c=[{dataId:r.complexTensorInfos.real.dataId,dtype:r.complexTensorInfos.real.dtype,shape:i},{dataId:r.complexTensorInfos.imag.dataId,dtype:r.complexTensorInfos.imag.dtype,shape:i}],h=n.runWebGLProgram(u,c,"float32"),d=n.runWebGLProgram(l,c,"float32"),p=Yy({inputs:{real:h,imag:d},backend:n});n.disposeIntermediateTensorInfo(h),n.disposeIntermediateTensorInfo(d);const f=fx({inputs:{x:p},backend:n,attrs:{shape:e.shape}});return n.disposeIntermediateTensorInfo(o),n.disposeIntermediateTensorInfo(p),f}const rw={kernelName:bt,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{input:r}=t;return nw(r,!1,n)}};class sw{constructor(e,t){this.outputShape=[],this.customUniforms=[{name:"value",type:"float"}],this.variableNames=["x"],this.outputShape=e,this.userCode="\n      void main() {\n        // Input can be obtained from uniform value.\n        setOutput(value);\n      }\n    "}}function aw(e){const{backend:t,attrs:n}=e,{shape:r,value:s}=n;let{dtype:a}=n;if(a=a||J(s),"string"===a){const e=X(a,B(r));return e.fill(s),t.makeTensorInfo(r,a,e)}{const e=new sw(r,s),n=[[s]];return t.runWebGLProgram(e,[],a,n)}}const ow={kernelName:vt,backendName:"webgl",kernelFunc:aw};class iw{constructor(e){this.variableNames=["Image"],this.outputShape=[];const t=e[2];this.outputShape=e,this.userCode=`\n        void main() {\n          ivec4 coords = getOutputCoords();\n          int x = coords[2];\n\n          int coordX = ${t} - x - 1;\n          float outputValue;\n          if(coordX >= 0 && coordX < ${t}) {\n            outputValue = getImage(coords[0], coords[1], coordX, coords[3]);\n          } else {\n            outputValue = getImage(coords[0], coords[1], coords[2], coords[3]);\n          }\n          setOutput(outputValue);\n        }\n    `}}const uw={kernelName:wt,backendName:"webgl",kernelFunc:({inputs:e,backend:t})=>{const{image:n}=e,r=t,s=new iw(n.shape);return r.runWebGLProgram(s,[n],n.dtype)}},lw="return floor(x);",cw=ax({opSnippet:lw,packedOpSnippet:lw,cpuKernelImpl:_g}),hw={kernelName:kt,backendName:"webgl",kernelFunc:cw},dw=ox({opSnippet:"\n  float s = sign(a) * sign(b);\n  int ia = round(a);\n  int ib = round(b);\n  if (ib != 0) {\n    // Windows (D3D) wants guaranteed non-zero int division at compile-time.\n    return float(idiv(ia, ib, s));\n  } else {\n    return NAN;\n  }\n",packedOpSnippet:"\n  ivec4 ia = round(a);\n  ivec4 ib = round(b);\n  bvec4 cond = notEqual(ib, ivec4(0));\n  ivec4 result = ivec4(0);\n  vec4 s = sign(a) * sign(b);\n\n  // Windows (D3D) wants guaranteed non-zero int division at compile-time.\n  if (cond[0]) {\n    result[0] = idiv(ia[0], ib[0], s[0]);\n  }\n  if (cond[1]) {\n    result[1] = idiv(ia[1], ib[1], s[1]);\n  }\n  if (cond[2]) {\n    result[2] = idiv(ia[2], ib[2], s[2]);\n  }\n  if (cond[3]) {\n    result[3] = idiv(ia[3], ib[3], s[3]);\n  }\n  return vec4(result);\n",dtype:"int32"}),pw={kernelName:St,backendName:"webgl",kernelFunc:dw};class fw{constructor(e){this.variableNames=["A"];const t=vf(),[n,r]=e;this.outputShape=e,this.userCode=`\n      void main() {\n        ivec3 coords = getOutputCoords();\n        int texR = coords[0];\n        int texC = coords[1];\n        int depth = coords[2];\n        vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${r}.0, ${n}.0);\n\n        vec4 values = ${t.texture2D}(A, uv);\n        float value;\n        if (depth == 0) {\n          value = values.r;\n        } else if (depth == 1) {\n          value = values.g;\n        } else if (depth == 2) {\n          value = values.b;\n        } else if (depth == 3) {\n          value = values.a;\n        }\n\n        setOutput(floor(value * 255.0 + 0.5));\n      }\n    `}}class mw{constructor(e){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0;const t=vf(),[n,r]=e;this.outputShape=e,this.userCode=`\n      void main() {\n        ivec3 coords = getOutputCoords();\n        int texR = coords[0];\n        int texC = coords[1];\n        int depth = coords[2];\n\n        vec4 result = vec4(0.);\n\n        for(int row=0; row<=1; row++) {\n          for(int col=0; col<=1; col++) {\n            texC = coords[1] + row;\n            depth = coords[2] + col;\n\n            vec2 uv = (vec2(texC, texR) + halfCR) /\n                       vec2(${r}.0, ${n}.0);\n            vec4 values = ${t.texture2D}(A, uv);\n            float value;\n            if (depth == 0) {\n              value = values.r;\n            } else if (depth == 1) {\n              value = values.g;\n            } else if (depth == 2) {\n              value = values.b;\n            } else if (depth == 3) {\n              value = values.a;\n            }\n\n            result[row * 2 + col] = floor(value * 255.0 + 0.5);\n          }\n        }\n\n        ${t.output} = result;\n      }\n    `}}const gw={kernelName:gr,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e;let{pixels:s}=t;const{numChannels:a}=r,o="undefined"!=typeof HTMLVideoElement&&s instanceof HTMLVideoElement,i="undefined"!=typeof HTMLImageElement&&s instanceof HTMLImageElement,[u,l]=o?[s.videoWidth,s.videoHeight]:[s.width,s.height],c=[l,u],h=[l,u,a];if(i||o){const e=fe().getBool("CANVAS2D_WILL_READ_FREQUENTLY_FOR_GPU");null!=yw&&e===xw||(xw=e,yw=document.createElement("canvas").getContext("2d",{willReadFrequently:xw})),yw.canvas.width=u,yw.canvas.height=l,yw.drawImage(s,0,0,u,l),s=yw.canvas}const d=n.makeTensorInfo(c,"int32");n.texData.get(d.dataId).usage=Wp.PIXELS,n.gpgpu.uploadPixelDataToTexture(n.getTexture(d.dataId),s);const p=fe().getBool("WEBGL_PACK")?new mw(h):new fw(h),f=n.runWebGLProgram(p,[d],"int32");return n.disposeData(d.dataId),f}};let yw,xw=fe().getBool("CANVAS2D_WILL_READ_FREQUENTLY_FOR_GPU");const bw={kernelName:br,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,filter:a,bias:o,preluActivationWeights:i}=t,{strides:u,pad:l,dataFormat:c,dilations:h,dimRoundingMode:d,activation:p,leakyreluAlpha:f}=r,m=Gi(c),g=Fi(s.shape,a.shape,u,h,l,d,!1,m);let y;const x=[],b=null!=o,v=null!=i,w="leakyrelu"===p,k=()=>{const e=[s,a],t=(e,t)=>{if("NCHW"===t&&1===e.shape.length&&1!==e.shape[0]){const t=fx({inputs:{x:e},backend:n,attrs:{shape:[e.shape[0],1,1]}});return x.push(t),t}return e};if(b&&e.push(t(o,c)),v&&e.push(t(i,c)),w){const t=n.makeTensorInfo([],"float32",Hr(f,"float32"));e.push(t),x.push(t)}return e};if(1!==g.filterHeight||1!==g.filterWidth||1!==g.dilationHeight||1!==g.dilationWidth||1!==g.strideHeight||1!==g.strideWidth||"SAME"!==g.padInfo.type&&"VALID"!==g.padInfo.type)if(g.strideWidth<=2&&"channelsLast"===m&&fe().getBool("WEBGL_EXP_CONV")){const e=p?ix(p,!0):null,t=new Qb(g,b,e,v,w),r=[[g.padInfo.top,g.padInfo.left],[g.strideHeight,g.strideWidth],[g.dilationHeight,g.dilationWidth],[g.inHeight,g.inWidth]],s=k();y=n.runWebGLProgram(t,s,"float32",r)}else if(fe().getBool("WEBGL_CONV_IM2COL"))y=tv({x:s,filter:a,convInfo:g,backend:n,bias:o,activation:p,preluActivationWeights:i,leakyreluAlpha:f});else{const e=p?ix(p,!1):null,t=new Xb(g,b,e,v,w),r=k();y=n.runWebGLProgram(t,r,"float32")}else y=ev({x:s,filter:a,convInfo:g,backend:n,bias:o,activation:p,preluActivationWeights:i,leakyreluAlpha:f});const S=fx({inputs:{x:y},backend:n,attrs:{shape:g.outShape}});return x.push(y),x.forEach((e=>n.disposeIntermediateTensorInfo(e))),S}},vw={kernelName:vr,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,filter:a,bias:o,preluActivationWeights:i}=t,{strides:u,pad:l,dilations:c,dimRoundingMode:h,activation:d,leakyreluAlpha:p}=r,f=[];let m=c;null==m&&(m=[1,1]),D(Vi(u,m),(()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${u} and dilations '${m}'`));const g=Fi(s.shape,a.shape,u,m,l,h,!0),y=fe().getBool("WEBGL_PACK_DEPTHWISECONV")&&g.strideWidth<=2&&g.outChannels/g.inChannels==1,x=d?ix(d,y):null,b=[s,a],v=null!=o,w=null!=i,k="leakyrelu"===d;if(v&&b.push(o),w&&b.push(i),k){const e=n.makeTensorInfo([],"float32",Hr(p,"float32"));b.push(e),f.push(e)}let S;S=y?new Rv(g,v,x,w,k):new Ev(g,v,x,w,k);const C=[[g.padInfo.top,g.padInfo.left],[g.strideHeight,g.strideWidth],[g.dilationHeight,g.dilationWidth],[g.inHeight,g.inWidth]],I=n.runWebGLProgram(S,b,"float32",C);return f.forEach((e=>n.disposeIntermediateTensorInfo(e))),I}};class ww{constructor(e,t,n,r){this.sliceDim=e,this.strides=t,this.paramsShape=r,this.variableNames=["x","indices"],this.outputShape=n;const s=Pf(n.length);let a="\n    int index;";for(let e=0;e<this.sliceDim;e++)a+=`\n          index = round(getIndices(coords[0], ${e}));\n          out_of_bounds = out_of_bounds || index < 0;\n          out_of_bounds = out_of_bounds || index >= ${this.paramsShape[e]};\n          flattenIndex += index * ${this.strides[e]};`;this.userCode=`\n         void main() {\n          ${s} coords = getOutputCoords();\n          int flattenIndex = 0;\n          bool out_of_bounds = false;\n\n          ${a}\n\n          setOutput(out_of_bounds ? 0.0 : getX(flattenIndex, coords[1]));\n        }\n      `}}const kw={kernelName:Tt,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{params:r,indices:s}=t,a=s.shape,o=a[a.length-1],i=B(r.shape),[u,l,c,h]=qd(r,s),d=fx({inputs:{x:s},backend:n,attrs:{shape:[l,o]}}),p=fx({inputs:{x:r},backend:n,attrs:{shape:[B(r.shape)/c,c]}});if(n.shouldExecuteOnCPU([r,s])||"string"===r.dtype){const e=n.readSync(s.dataId),t=n.bufferSync(r),a=Ag(e,t,r.dtype,l,o,c,h,r.shape,i);return n.makeTensorInfo(u,r.dtype,a.values)}const f=new ww(o,h,[l,c],r.shape),m=n.runWebGLProgram(f,[p,d],p.dtype),g=fx({inputs:{x:m},backend:n,attrs:{shape:u}});return n.disposeIntermediateTensorInfo(d),n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(m),g}};class Sw{constructor(e,t){this.variableNames=["A","indices"],this.outputShape=t,this.rank=t.length;const n=Pf(this.rank),r=function(e,t){const n=["resRC.x","resRC.y","resRC.z","resRC.w"],r=[];for(let t=0;t<e.length;t++)2===t?r.push("index"):r.push(`${n[t]}`);return r.join()}(e);this.userCode=`\n      void main() {\n        ${n} resRC = getOutputCoords();\n        int index = int(getIndices(resRC.x, resRC.z));\n        float inBounds = (index >= 0) && (index < ${e[2]}) ? 1.0 : 0.0;\n        setOutput(inBounds * getA(${r}));\n      }\n    `}}function Cw(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,indices:a}=t,{axis:o,batchDims:i}=r,u=j(o,s.shape)[0];if(fe().get("DEBUG")){const e=n.readSync(a.dataId),t=s.shape[u];for(let n=0;n<e.length;++n){const r=e[n];D(r<=t-1&&r>=0,(()=>`GatherV2: the index value ${r} is not in [0, ${t-1}]`))}}const l=Dp(s,a,u,i),c=B(a.shape),h=[],d=fx({inputs:{x:s},backend:n,attrs:{shape:[l.batchSize,l.outerSize,l.dimSize,l.sliceSize]}}),p=fx({inputs:{x:a},backend:n,attrs:{shape:[l.batchSize,c/l.batchSize]}});h.push(d),h.push(p);const f=[l.batchSize,l.outerSize,c/l.batchSize,l.sliceSize];if(n.shouldExecuteOnCPU([s,a])||"string"===s.dtype){const e=n.bufferSync(p),t=n.bufferSync(d),r=Og(t,e,f);return h.forEach((e=>n.disposeIntermediateTensorInfo(e))),n.makeTensorInfo(l.outputShape,r.dtype,r.values)}const m=new Sw(d.shape,f),g=n.runWebGLProgram(m,[d,p],d.dtype);h.push(g);const y=fx({inputs:{x:g},backend:n,attrs:{shape:l.outputShape}});return h.forEach((e=>n.disposeIntermediateTensorInfo(e))),y}const Iw={kernelName:It,backendName:"webgl",kernelFunc:Cw},Tw=ox({opSnippet:"return float(a > b);",packedOpSnippet:"\n  return vec4(greaterThan(a, b));\n",cpuKernelImpl:Fg,dtype:"bool"}),$w={kernelName:$t,backendName:"webgl",kernelFunc:Tw},Nw=ox({opSnippet:"return float(a >= b);",packedOpSnippet:"\n  return vec4(greaterThanEqual(a, b));\n",dtype:"bool",cpuKernelImpl:Pg}),Ew={kernelName:Nt,backendName:"webgl",kernelFunc:Nw},Rw={kernelName:Rt,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{input:r}=t;return nw(r,!0,n)}},_w=ax({opSnippet:"return float(!isnan(x) && !isinf(x));",dtype:"bool"}),Aw={kernelName:At,backendName:"webgl",kernelFunc:_w},Ow=ax({opSnippet:"return float(isinf(x));",dtype:"bool"}),Fw={kernelName:Ot,backendName:"webgl",kernelFunc:Ow},Pw=ax({opSnippet:"return float(isnan(x));",dtype:"bool"}),Dw={kernelName:Ft,backendName:"webgl",kernelFunc:Pw},Mw=ox({opSnippet:"return float(a < b);",packedOpSnippet:"\n  return vec4(lessThan(a, b));\n",cpuKernelImpl:Dg,dtype:"bool"}),Lw={kernelName:Dt,backendName:"webgl",kernelFunc:Mw},Bw=ox({opSnippet:"return float(a <= b);",packedOpSnippet:"\n  return vec4(lessThanEqual(a, b));\n",cpuKernelImpl:Mg,dtype:"bool"}),zw={kernelName:Mt,backendName:"webgl",kernelFunc:Bw},Uw={kernelName:Lt,backendName:"webgl",kernelFunc:function(e){const{backend:t,attrs:n}=e,{start:r,stop:s,num:a}=n,o=Lg(r,s,a);return t.makeTensorInfo([o.length],"float32",o)}},Vw=ax({opSnippet:sx+"\n  return x < 0.0 ? 0./0. : log(x);\n",packedOpSnippet:"\n  vec4 result = log(x);\n  bvec4 isNaN = isnan(x);\n  result.r = isNaN.r ? x.r : (x.r < 0.0 ? 0./0. : result.r);\n  result.g = isNaN.g ? x.g : (x.g < 0.0 ? 0./0. : result.g);\n  result.b = isNaN.b ? x.b : (x.b < 0.0 ? 0./0. : result.b);\n  result.a = isNaN.a ? x.a : (x.a < 0.0 ? 0./0. : result.a);\n  return result;\n",cpuKernelImpl:Bg}),Ww={kernelName:Bt,backendName:"webgl",kernelFunc:Vw},Gw=ax({opSnippet:sx+"\n  return log(1.0 + x);\n"}),Hw={kernelName:zt,backendName:"webgl",kernelFunc:Gw},jw=ox({opSnippet:"return float(a >= 1.0 && b >= 1.0);",packedOpSnippet:"\n  return vec4(\n    vec4(greaterThanEqual(a, vec4(1.0))) *\n    vec4(greaterThanEqual(b, vec4(1.0))));\n",dtype:"bool"}),Kw={kernelName:Ut,backendName:"webgl",kernelFunc:jw},qw=ax({opSnippet:"return float(!(x >= 1.0));"}),Xw={kernelName:Vt,backendName:"webgl",kernelFunc:qw},Yw=ox({opSnippet:"return float(a >= 1.0 || b >= 1.0);",packedOpSnippet:"\n  return min(\n    vec4(greaterThanEqual(a, vec4(1.0))) +\n    vec4(greaterThanEqual(b, vec4(1.0))),\n    vec4(1.0));\n",dtype:"bool"}),Qw={kernelName:Wt,backendName:"webgl",kernelFunc:Yw};class Zw{constructor(e,t,n,r,s){this.variableNames=["x"],this.outputShape=[];const a=t,o=e[3]-1;let i;this.outputShape=e;const u=`float(${n}) + float(${r}) * sum`;i=.5===s?`inversesqrt(${u})`:1===s?`1.0/(${u})`:`exp(log(${u}) * float(-${s}));`,this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int r = coords[1];\n        int c = coords[2];\n        int d = coords[3];\n        float x = getX(b, r, c, d);\n        float sum = 0.0;\n        for (int j = -${a}; j <= ${a}; j++) {\n          int idx = d + j;\n          if (idx >= 0 && idx <=  ${o}) {\n            float z = getX(b, r, c, idx);\n            sum += z * z;\n          }\n        }\n        float val = x * ${i};\n        setOutput(val);\n      }\n    `}}class Jw{constructor(e,t,n,r,s){this.variableNames=["x"],this.outputShape=[],this.packedInputs=!0,this.packedOutput=!0;const a=t,o=e[3]-1;let i;this.outputShape=e;const u=`float(${n}) + float(${r}) * sum`;i=.5===s?`inversesqrt(${u})`:1===s?`1.0/(${u})`:`exp(log(${u}) * float(-${s}));`,this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords.x;\n        int r = coords.y;\n        int c = coords.z;\n        int d = coords.w;\n\n        bool hasNextCol = d < ${this.outputShape[3]};\n        bool hasNextRow = c < ${this.outputShape[2]};\n\n        vec4 sum = vec4(0.);\n        vec4 xFragAtOutputCoords = getX(b, r, c, d);\n\n        vec4 xAtOutputCoords = vec4(\n          getChannel(xFragAtOutputCoords, vec2(c, d)),\n          hasNextCol ?\n            getChannel(xFragAtOutputCoords, vec2(c, d + 1)) : 0.0,\n          hasNextRow ?\n            getChannel(xFragAtOutputCoords , vec2(c + 1, d)) : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getChannel(xFragAtOutputCoords, vec2(c + 1, d + 1)) : 0.0\n        );\n\n        int firstChannel = d - ${a};\n        vec2 cache = vec2(0.);\n        if(firstChannel >= 0){\n          vec4 firstChannelFrag = getX(b, r, c, firstChannel);\n          cache.x = getChannel(firstChannelFrag, vec2(c, firstChannel));\n            if(hasNextRow){\n              cache.y = getChannel(firstChannelFrag, vec2(c + 1, firstChannel));\n            }\n        }\n\n        ivec2 depth = ivec2(d, d + 1);\n        for (int j = - ${a}; j <= ${a}; j++) {\n          ivec2 idx = depth + j;\n          bvec2 aboveLowerBound = greaterThanEqual(idx, ivec2(0));\n          bvec2 belowUpperBound = lessThanEqual(idx, ivec2(${o}));\n\n          bool depthInRange = aboveLowerBound.x && belowUpperBound.x;\n          bool depthPlusOneInRange = aboveLowerBound.y && belowUpperBound.y;\n\n          if(depthInRange || depthPlusOneInRange){\n            vec4 z = vec4(0.);\n            vec4 xFragAtCurrentDepth;\n            z.xz = cache.xy;\n            if(depthPlusOneInRange && hasNextCol){\n              xFragAtCurrentDepth = idx.y != d ?\n                getX(b, r, c, idx.y) : xFragAtOutputCoords;\n              z.y = getChannel(xFragAtCurrentDepth, vec2(c, idx.y));\n              if(hasNextRow){\n                z.w = getChannel(xFragAtCurrentDepth, vec2(c + 1, idx.y));\n              }\n            }\n            cache.xy = z.yw;\n            sum += z * z;\n          }\n        }\n        vec4 result = xAtOutputCoords * ${i};\n        setOutput(result);\n      }\n    `}}const ek={kernelName:Gt,backendName:"webgl",kernelFunc:e=>{const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{depthRadius:a,bias:o,alpha:i,beta:u}=r,l=fe().getBool("WEBGL_PACK_NORMALIZATION")?new Jw(s.shape,a,o,i,u):new Zw(s.shape,a,o,i,u);return n.runWebGLProgram(l,[s],s.dtype)}};class tk{constructor(e,t,n,r,s){this.variableNames=["inputImage","outputImage","dy"],this.outputShape=[],this.outputShape=e,this.depth=e[3],this.depthRadius=t,this.bias=n,this.alpha=r,this.beta=s,this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int r = coords[1];\n        int c = coords[2];\n\n        float result = 0.0;\n        for (int d = 0; d < ${this.depth}; ++d) {\n          int depthBegin = int(max(0.0, float(d - ${t})));\n          int depthEnd = int(min(float(${this.depth}),\n              float(d + ${t} + 1)));\n\n          const int MIN_DEPTH_BEGIN = 0;\n          const int MAX_DEPTH_END = ${this.depth};\n\n          float norm = 0.0;\n          for (int k = MIN_DEPTH_BEGIN; k < MAX_DEPTH_END; ++k) {\n            if (k < depthBegin){\n              continue;\n            }\n            else if (k >= depthBegin && k < depthEnd) {\n              norm += getInputImage(b, r, c, k) * getInputImage(b, r, c, k);\n            }\n            else {\n              break;\n            }\n          }\n\n          norm = float(${r}) * norm + float(${n});\n\n          for(int k = MIN_DEPTH_BEGIN; k < MAX_DEPTH_END; ++k){\n            if (k < depthBegin){\n              continue;\n            }\n            else if (k >= depthBegin && k < depthEnd){\n              float dyi = -2.0 * float(${r})\n                * float(${s})\n                * getInputImage(b, r, c, k) * getOutputImage(b, r, c, d)\n                / norm;\n              if (k == d) {\n                dyi += pow(norm, -1.0 * ${s});\n              }\n              if (k == coords[3]) {\n                dyi *= getDy(b, r, c, d);\n                result += dyi;\n              }\n            }\n            else {\n              break;\n            }\n          }\n      }\n      setOutput(result);\n      }\n    `}}const nk={kernelName:"LRNGrad",backendName:"webgl",kernelFunc:e=>{const{inputs:t,backend:n,attrs:r}=e,{x:s,y:a,dy:o}=t,{depthRadius:i,bias:u,alpha:l,beta:c}=r,h=new tk(s.shape,i,u,l,c);return n.runWebGLProgram(h,[s,a,o],s.dtype)}};function rk(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{reductionIndices:a,keepDims:o}=r,i=s.shape.length,u=j(a,s.shape);let l=u;const c=Hu(l,i),h=null!=c,d=n.shouldExecuteOnCPU([s]);let p=s;if(h){if(d){const e=n.texData.get(p.dataId).values,t=new Array(i);for(let e=0;e<t.length;e++)t[e]=s.shape[c[e]];const r=fy(e,s.shape,s.dtype,c,t);p=n.makeTensorInfo(t,s.dtype),n.texData.get(p.dataId).values=r}else p=wx(s,c,n);l=Ku(l.length,i)}Gu("max",l,i);const[f,m]=Vu(p.shape,l);let g,y=f;if(o&&(y=Wu(f,u)),d){const e=n.texData.get(p.dataId).values,t=zg(e,B(m),y,s.dtype);g=n.makeTensorInfo(y,s.dtype),n.texData.get(g.dataId).values=t}else g=function(e,t,n,r){const s=B(t),a=fx({inputs:{x:e},attrs:{shape:[B(e.shape)/s,s]},backend:r}),o=xx(a,e.dtype,"max",r),i=fx({inputs:{x:o},attrs:{shape:n},backend:r});return r.disposeIntermediateTensorInfo(a),r.disposeIntermediateTensorInfo(o),i}(p,m,y,n);return h&&n.disposeIntermediateTensorInfo(p),g}const sk={kernelName:Ht,backendName:"webgl",kernelFunc:rk},ak=ox({opSnippet:Gy+"\n  return max(a, b);\n",packedOpSnippet:"\n  vec4 result = vec4(max(a, b));\n  bvec4 isNaNA = isnan(a);\n  bvec4 isNaNB = isnan(b);\n  bvec4 isNaN = bvec4(isNaNA.x || isNaNB.x, isNaNA.y || isNaNB.y, isNaNA.z || isNaNB.z, isNaNA.w || isNaNB.w);\n  "+jy+"\n  return result;\n",cpuKernelImpl:Ug}),ok={kernelName:jt,backendName:"webgl",kernelFunc:ak},ik={kernelName:Kt,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t;xf(s,"maxPool");const{filterSize:a,strides:o,pad:i,dimRoundingMode:u}=r;D(Vi(o,1),(()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${o} and dilations '1'`));const l=Ai(s.shape,a,o,1,i,u);if(1===l.filterWidth&&1===l.filterHeight&&z(l.inShape,l.outShape))return qy({inputs:{x:s},backend:n});const c=new ob(l,"max",!1);return n.runWebGLProgram(c,[s],s.dtype)}},uk={kernelName:qt,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{filterSize:a,strides:o,pad:i,dataFormat:u,dimRoundingMode:l}=r,c=Oi(s.shape,a,o,[1,1,1],i,l,u),h=new ib(c,"max",!1);return n.runWebGLProgram(h,[s],s.dtype)}};class lk{constructor(e){this.variableNames=["dy","maxPos"],this.outputShape=e.inShape;const t=e.strideHeight,n=e.strideWidth,r=e.dilationHeight,s=e.effectiveFilterHeight,a=e.effectiveFilterWidth,o=s-1-e.padInfo.top,i=a-1-e.padInfo.left,u=s*a-1;this.userCode=`\n      const ivec2 pads = ivec2(${o}, ${i});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n\n        ivec2 dyRCCorner = coords.yz - pads;\n        int dyRCorner = dyRCCorner.x;\n        int dyCCorner = dyRCCorner.y;\n\n        // Convolve dy(?, ?, d) with pos mask(:, :, d) to get dx(xR, xC, d).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < ${s};\n          wR += ${r}) {\n          float dyR = float(dyRCorner + wR) / ${t}.0;\n\n          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          for (int wC = 0; wC < ${a}; wC++) {\n            float dyC = float(dyCCorner + wC) / ${n}.0;\n\n            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            float dyValue = getDy(b, idyR, idyC, d);\n            int maxPosValue = ${u} - int(getMaxPos(b, idyR, idyC, d));\n\n            // Get the current value, check it against the value from the\n            // position matrix.\n            int curPosValue = wR * ${a} + wC;\n            float mask = float(maxPosValue == curPosValue ? 1.0 : 0.0);\n\n            dotProd += dyValue * mask;\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class ck{constructor(e){this.variableNames=["dy","maxPos"],this.outputShape=e.inShape;const t=e.strideDepth,n=e.strideHeight,r=e.strideWidth,s=e.dilationDepth,a=e.dilationHeight,o=e.dilationWidth,i=e.effectiveFilterDepth,u=e.effectiveFilterHeight,l=e.effectiveFilterWidth,c=i-1-e.padInfo.front,h=u-1-e.padInfo.top,d=l-1-e.padInfo.left,p=i*u*l-1;this.userCode=`\n      const ivec3 pads = ivec3(${c}, ${h}, ${d});\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int ch = coords.u;\n\n        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;\n        int dyDCorner = dyCorner.x;\n        int dyRCorner = dyCorner.y;\n        int dyCCorner = dyCorner.z;\n\n        // Convolve dy(?, ?, ?, ch) with pos mask(:, :, :, d) to get\n        // dx(xD, xR, xC, ch).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n\n        for (int wD = 0; wD < ${i};\n           wD += ${s}) {\n          float dyD = float(dyDCorner + wD) / ${t}.0;\n\n          if (dyD < 0.0 || dyD >= ${e.outDepth}.0 || fract(dyD) > 0.0) {\n            continue;\n          }\n          int idyD = int(dyD);\n\n          for (int wR = 0; wR < ${u};\n              wR += ${a}) {\n            float dyR = float(dyRCorner + wR) / ${n}.0;\n\n            if (dyR < 0.0 || dyR >= ${e.outHeight}.0 ||\n                fract(dyR) > 0.0) {\n              continue;\n            }\n            int idyR = int(dyR);\n\n            for (int wC = 0; wC < ${l};\n                wC += ${o}) {\n              float dyC = float(dyCCorner + wC) / ${r}.0;\n\n              if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                  fract(dyC) > 0.0) {\n                continue;\n              }\n              int idyC = int(dyC);\n\n              float dyValue = getDy(batch, idyD, idyR, idyC, ch);\n              int maxPosValue = ${p} -\n                  int(getMaxPos(batch, idyD, idyR, idyC, ch));\n\n              // Get the current value, check it against the value from the\n              // position matrix.\n              int curPosValue =\n                  wD * ${u} * ${l} +\n                  wR * ${l} + wC;\n              float mask = float(maxPosValue == curPosValue ? 1.0 : 0.0);\n\n              dotProd += dyValue * mask;\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}const hk={kernelName:"MaxPool3DGrad",backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:s,input:a}=t,o=a,{filterSize:i,strides:u,pad:l,dimRoundingMode:c}=r,h=Oi(o.shape,i,u,[1,1,1],l,c),d=new ib(h,"max",!0),p=n.runWebGLProgram(d,[o],o.dtype),f=new ck(h),m=n.runWebGLProgram(f,[s,p],o.dtype);return n.disposeIntermediateTensorInfo(p),m}},dk={kernelName:"MaxPoolGrad",backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:s,input:a,output:o}=t,i=a;xf([a,o],"maxPoolGrad");const{filterSize:u,strides:l,pad:c,dimRoundingMode:h}=r,d=Ai(i.shape,u,l,1,c,h),p=new ob(d,"max",!0),f=n.runWebGLProgram(p,[i],i.dtype),m=new lk(d),g=n.runWebGLProgram(m,[s,f],i.dtype);return n.disposeIntermediateTensorInfo(f),g}},pk={kernelName:Xt,backendName:"webgl",kernelFunc:({inputs:e,attrs:t,backend:n})=>{const{x:r}=e,{filterSize:s,strides:a,pad:o,includeBatchInIndex:i}=t,u=n;D(4===r.shape.length,(()=>`Error in maxPool: input must be rank 4 but got rank ${r.shape.length}.`));const l=[1,1];D(Vi(a,l),(()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${a} and dilations '${l}'`));const c=Ai(r.shape,s,a,l,o),[h,d]=function(e,t,n,r){let s=new ob(n,"max",!1);const a=r.runWebGLProgram(s,[e],"float32");return s=new ob(n,"max",!0,!0,t),[a,r.runWebGLProgram(s,[e],"float32")]}(r,i,c,u);return[h,d]}},fk={kernelName:Yt,backendName:"webgl",kernelFunc:({inputs:e,attrs:t,backend:n})=>{const{x:r}=e,{keepDims:s,axis:a}=t,o=n,i=r.shape.length,u=j(a,r.shape);let l=u;const c=Hu(l,i),h=null!=c,d=o.shouldExecuteOnCPU([r]),p=[];let f=r;if(h){if(d){const e=o.texData.get(f.dataId).values,t=new Array(i);for(let e=0;e<t.length;e++)t[e]=r.shape[c[e]];const n=fy(e,r.shape,r.dtype,c,t);f=o.makeTensorInfo(t,r.dtype),o.texData.get(f.dataId).values=n}else f=wx(r,c,o);p.push(f),l=Ku(l.length,i)}Gu("sum",l,i);const[m,g]=Vu(f.shape,l);let y=m;s&&(y=Wu(m,u));const x=function(e,t,n,r){const s=B(t),a=fx({inputs:{x:e},attrs:{shape:[B(e.shape)/s,s]},backend:r}),o=xx(a,"float32","mean",r),i=fx({inputs:{x:o},attrs:{shape:n},backend:r});return r.disposeIntermediateTensorInfo(a),r.disposeIntermediateTensorInfo(o),i}(f,g,y,o);for(const e of p)o.disposeIntermediateTensorInfo(e);return x}},mk={kernelName:Qt,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{axis:a,keepDims:o}=r,i=s.shape.length,u=j(a,s.shape);let l=u;const c=Hu(l,i);let h=s;null!=c&&(h=Cx({inputs:{x:s},backend:n,attrs:{perm:c}}),l=Ku(l.length,s.shape.length)),Gu("min",l,i);const[d,p]=Vu(h.shape,l),f=fx({inputs:{x:h},backend:n,attrs:{shape:[-1,B(p)]}}),m=xx(f,f.dtype,"min",n);let g;return g=fx(o?{inputs:{x:m},backend:n,attrs:{shape:Wu(d,u)}}:{inputs:{x:m},backend:n,attrs:{shape:d}}),n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(m),null!=c&&n.disposeIntermediateTensorInfo(h),g}},gk=ox({opSnippet:Gy+"\n  return min(a, b);\n",packedOpSnippet:"\n  vec4 result = vec4(min(a, b));\n  bvec4 isNaNA = isnan(a);\n  bvec4 isNaNB = isnan(b);\n  bvec4 isNaN = bvec4(isNaNA.x || isNaNB.x, isNaNA.y || isNaNB.y, isNaNA.z || isNaNB.z, isNaNA.w || isNaNB.w);\n  "+jy+"\n  return result;\n",cpuKernelImpl:Vg}),yk={kernelName:Zt,backendName:"webgl",kernelFunc:gk};class xk{constructor(e,t,n){this.variableNames=["x"],this.outputShape=t.map(((t,n)=>t[0]+e[n]+t[1]));const r=e.length,s=Pf(r),a=t.map((e=>e[0])).join(","),o=t.map(((t,n)=>t[0]+e[n])).join(","),i=["coords[0]","coords[1]","coords[2]","coords[3]"].slice(0,r),u="reflect"===n?0:1;this.userCode=1!==r?`\n      ${s} start = ${s}(${a});\n      ${s} end = ${s}(${o});\n\n      void main() {\n        ${s} outC = getOutputCoords();\n        for (int i = 0; i < ${r}; i++) {\n          if (outC[i] < start[i]) {\n            outC[i] = start[i] * 2 - outC[i] - ${u};\n          } else if(outC[i] >= end[i]) {\n            outC[i] = (end[i] - 1) * 2 - outC[i] + ${u};\n          }\n        }\n        ${s} coords = outC - start;\n        setOutput(getX(${i}));\n      }\n    `:`\n        int start = ${a};\n        int end = ${o};\n\n        void main() {\n          int outC = getOutputCoords();\n          if (outC < start) {\n            outC = start * 2 - outC - ${u};\n          } else if(outC >= end) {\n            outC = (end - 1) * 2 - outC + ${u};\n          }\n          setOutput(getX(outC - start));\n        }\n      `}}class bk{constructor(e,t,n){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=t.map(((t,n)=>t[0]+e[n]+t[1]));const r=e.length,s=Pf(r),a=t.map((e=>e[0])).join(","),o=t.map(((t,n)=>t[0]+e[n])).join(","),i=yy("rc",r),u=yy("source",r),l=`${i[r-1]} < ${this.outputShape[r-1]}`,c=1===r?"source":`vec2(${u.slice(-2).join()})`,h="reflect"===n?0:1;let d="";if(1===r){const e=`\n        ${s} source = rc;\n        if (source < start) {\n          source = start * 2 - source - ${h};\n        } else if (source >= end) {\n          source = (end - 1) * 2 - source + ${h};\n        }\n        source -= start;\n      `;d=`\n        ${s} rc = outputLoc;\n        ${e}\n        result[0] = getChannel(getX(${u.join()}), ${c});\n        ${i[r-1]} += 1;\n        if(${l}) {\n          ${e}\n          result[1] = getChannel(getX(${u.join()}), ${c});\n        }\n      `}else{const e=`\n        ${s} source = rc;\n        ${s} lt = ${s}(lessThan(source, start));\n        ${s} gte = ${s}(greaterThanEqual(source, end));\n        ${s} orig = 1 - (lt + gte);\n        source = orig * source +\n                lt * (start * 2 - source - ${h}) +\n                gte * ((end - 1) * 2 - source + ${h});\n        source -= start;\n      `;d=`\n        ${s} rc = outputLoc;\n        ${e}\n        result[0] = getChannel(getX(${u.join()}), ${c});\n        ${i[r-1]} += 1;\n        if(${l}) {\n          ${e}\n          result[1] = getChannel(getX(${u.join()}), ${c});\n        }\n        rc = outputLoc;\n        ${i[r-2]} += 1;\n        if(${i[r-2]} < ${this.outputShape[r-2]}) {\n          ${e}\n          result[2] = getChannel(getX(${u.join()}), ${c});\n          ${i[r-1]} += 1;\n          if(${l}) {\n            ${e}\n            result[3] = getChannel(getX(${u.join()}), ${c});\n          }\n        }\n      `}this.userCode=`\n      const ${s} start = ${s}(${a});\n      const ${s} end = ${s}(${o});\n\n      void main() {\n        ${s} outputLoc = getOutputCoords();\n        vec4 result = vec4(0.);\n        ${d}\n        setOutput(result);\n      }\n    `}}const vk={kernelName:Jt,backendName:"webgl",kernelFunc:({inputs:e,backend:t,attrs:n})=>{const{x:r}=e,{paddings:s,mode:a}=n,o=fe().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new bk(r.shape,s,a):new xk(r.shape,s,a);return t.runWebGLProgram(o,[r],r.dtype)}},wk=ox({opSnippet:"if (b == 0.0) return NAN;\n  return mod(a, b);",packedOpSnippet:"\n  vec4 result = mod(a, b);\n  bvec4 isNaN = equal(b, vec4(0.0));\n  "+jy+"\n  return result;\n"}),kk={kernelName:en,backendName:"webgl",kernelFunc:wk};class Sk{constructor(e,t,n){this.variableNames=["probs"],this.customUniforms=[{name:"seed",type:"float"}],this.outputShape=[e,n],this.userCode=`\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n\n        float r = random(seed);\n        float cdf = 0.0;\n\n        for (int i = 0; i < ${t-1}; i++) {\n          cdf += getProbs(batch, i);\n\n          if (r < cdf) {\n            setOutput(float(i));\n            return;\n          }\n        }\n\n        // If no other event happened, last event happened.\n        setOutput(float(${t-1}));\n      }\n    `}}const Ck=ox({opSnippet:"\nif (a == b) {\n  return 1.0;\n};\nreturn a / b;",packedOpSnippet:"\n  // vec4 one = vec4(equal(a, b));\n  // return one + (vec4(1.0) - one) * a / b;\n  vec4 result = a / b;\n  if(a.x == b.x) {\n    result.x = 1.;\n  }\n  if(a.y == b.y) {\n    result.y = 1.;\n  }\n  if(a.z == b.z) {\n    result.z = 1.;\n  }\n  if(a.w == b.w) {\n    result.w = 1.;\n  }\n\n  return result;\n",checkOutOfBounds:!0}),Ik={kernelName:ht,backendName:"webgl",kernelFunc:Ck},Tk="return a - b;",$k=ox({opSnippet:Tk,packedOpSnippet:Tk,supportsComplex:!0,cpuKernelImpl:hy}),Nk={kernelName:sr,backendName:"webgl",kernelFunc:$k};function Ek(e){const{inputs:t,backend:n,attrs:r}=e,{logits:s}=t,{dim:a}=r,o=j([a],s.shape),i=rk({inputs:{x:s},backend:n,attrs:{reductionIndices:o,keepDims:!1}}),u=Wu(i.shape,o),l=fx({inputs:{x:i},backend:n,attrs:{shape:u}}),c=$k({inputs:{a:s,b:l},backend:n}),h=qv({inputs:{x:c},backend:n}),d=kx({inputs:{x:h},backend:n,attrs:{axis:o,keepDims:!1}}),p=fx({inputs:{x:d},backend:n,attrs:{shape:u}}),f=Ck({inputs:{a:h,b:p},backend:n});return n.disposeIntermediateTensorInfo(i),n.disposeIntermediateTensorInfo(l),n.disposeIntermediateTensorInfo(c),n.disposeIntermediateTensorInfo(h),n.disposeIntermediateTensorInfo(d),n.disposeIntermediateTensorInfo(p),f}const Rk={kernelName:Hn,backendName:"webgl",kernelFunc:Ek},_k={kernelName:tn,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{logits:s}=t,{numSamples:a,seed:o,normalized:i}=r,u=i?s:Ek({inputs:{logits:s},backend:n,attrs:{dim:s.shape.length-1}}),l=u.shape[0],c=u.shape[1],h=new Sk(l,c,a),d=[[o]],p=n.runWebGLProgram(h,[u],"int32",d);return i||n.disposeIntermediateTensorInfo(u),p}},Ak=Iy+"\n  return -x;\n",Ok={kernelName:rn,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:r}=t;if(n.shouldExecuteOnCPU([r])){const e=n.texData.get(r.dataId),[t,s]=Gg(e.values,r.shape,r.dtype);return n.makeTensorInfo(s,r.dtype,t)}let s;return s=fe().getBool("WEBGL_PACK_UNARY_OPERATIONS")?new Ly(r.shape,"\n  vec4 result = -x;\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n"):new Cy(r.shape,Ak),n.runWebGLProgram(s,[r],r.dtype)}},Fk=Kh,Pk={kernelName:an,backendName:"webgl",kernelFunc:function(e){wr("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");const{inputs:t,backend:n,attrs:r}=e,{boxes:s,scores:a}=t,{maxOutputSize:o,iouThreshold:i,scoreThreshold:u}=r,l=n.readSync(s.dataId),c=n.readSync(a.dataId),{selectedIndices:h}=Fk(l,c,o,i,u);return n.makeTensorInfo([h.length],"int32",new Int32Array(h))}},Dk=qh,Mk={kernelName:on,backendName:"webgl",kernelFunc:function(e){wr("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");const{inputs:t,backend:n,attrs:r}=e,{boxes:s,scores:a}=t,{maxOutputSize:o,iouThreshold:i,scoreThreshold:u,padToMaxOutputSize:l}=r,c=n.readSync(s.dataId),h=n.readSync(a.dataId),{selectedIndices:d,validOutputs:p}=Dk(c,h,o,i,u,l);return[n.makeTensorInfo([d.length],"int32",new Int32Array(d)),n.makeTensorInfo([],"int32",new Int32Array([p]))]}},Lk=Xh,Bk={kernelName:un,backendName:"webgl",kernelFunc:function(e){wr("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");const{inputs:t,backend:n,attrs:r}=e,{boxes:s,scores:a}=t,{maxOutputSize:o,iouThreshold:i,scoreThreshold:u,softNmsSigma:l}=r,c=n.readSync(s.dataId),h=n.readSync(a.dataId),d=o,p=i,f=u,m=l,{selectedIndices:g,selectedScores:y}=Lk(c,h,d,p,f,m);return[n.makeTensorInfo([g.length],"int32",new Int32Array(g)),n.makeTensorInfo([y.length],"float32",new Float32Array(y))]}};class zk{constructor(e,t,n,r){this.variableNames=["indices"],this.outputShape=[e,t],this.userCode=`\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int index = round(getIndices(coords.x));\n        setOutput(mix(float(${r}), float(${n}),\n                      float(index == coords.y)));\n      }\n    `}}const Uk={kernelName:cn,backendName:"webgl",kernelFunc:e=>{const{inputs:t,backend:n,attrs:r}=e,{indices:s}=t,{dtype:a,depth:o,onValue:i,offValue:u}=r,l=B(s.shape),c=new zk(l,o,i,u),h=fx({inputs:{x:s},backend:n,attrs:{shape:[l]}}),d=n.runWebGLProgram(c,[h],a);n.disposeIntermediateTensorInfo(h);const p=fx({inputs:{x:d},backend:n,attrs:{shape:[...s.shape,o]}});return n.disposeIntermediateTensorInfo(d),p}};function Vk(e){const{inputs:t,backend:n}=e,{x:r}=t;if("complex64"===r.dtype){const e=Eb({inputs:{input:r},backend:n}),t=Vk({inputs:{x:e},backend:n}),s=Gb({inputs:{input:r},backend:n}),a=Vk({inputs:{x:s},backend:n}),o=Yy({inputs:{real:t,imag:a},backend:n});return n.disposeIntermediateTensorInfo(e),n.disposeIntermediateTensorInfo(t),n.disposeIntermediateTensorInfo(s),n.disposeIntermediateTensorInfo(a),o}return aw({attrs:{shape:r.shape,dtype:r.dtype,value:"string"===r.dtype?"":0},backend:n})}const Wk={kernelName:fr,backendName:"webgl",kernelFunc:Vk},Gk={kernelName:ln,backendName:"webgl",kernelFunc:function e(t){const{inputs:n,backend:r}=t,{x:s}=n;if("string"===s.dtype)throw new Error("onesLike is not supported under string dtype");if("complex64"===s.dtype){const t=Eb({inputs:{input:s},backend:r}),n=e({inputs:{x:t},backend:r}),a=Gb({inputs:{input:s},backend:r}),o=Vk({inputs:{x:a},backend:r}),i=Yy({inputs:{real:n,imag:o},backend:r});return r.disposeIntermediateTensorInfo(t),r.disposeIntermediateTensorInfo(n),r.disposeIntermediateTensorInfo(a),r.disposeIntermediateTensorInfo(o),i}return aw({attrs:{shape:s.shape,dtype:s.dtype,value:1},backend:r})}},Hk={kernelName:hn,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{axis:s}=r;if(1===t.length)return Yv({inputs:{input:t[0]},backend:n,attrs:{dim:s}});const a=t[0].shape,o=t[0].dtype;t.forEach((e=>{M(a,e.shape,"All tensors passed to stack must have matching shapes"),D(o===e.dtype,(()=>"All tensors passed to stack must have matching dtypes"))}));const i=[],u=Kb({inputs:t.map((e=>{const t=Yv({inputs:{input:e},backend:n,attrs:{dim:s}});return i.push(t),t})),backend:n,attrs:{axis:s}});return i.forEach((e=>n.disposeIntermediateTensorInfo(e))),u}};class jk{constructor(e,t,n){this.variableNames=["x"],this.customUniforms=[{name:"value",type:"float"}],this.outputShape=t.map(((t,n)=>t[0]+e[n]+t[1]));const r=e.length,s=Pf(r),a=t.map((e=>e[0])).join(","),o=t.map(((t,n)=>t[0]+e[n])).join(","),i=["coords[0]","coords[1]","coords[2]","coords[3]"].slice(0,r);this.userCode=1!==r?`\n      ${s} start = ${s}(${a});\n      ${s} end = ${s}(${o});\n\n      void main() {\n        ${s} outC = getOutputCoords();\n        if (any(lessThan(outC, start)) || any(greaterThanEqual(outC, end))) {\n          setOutput(value);\n        } else {\n          ${s} coords = outC - start;\n          setOutput(getX(${i}));\n        }\n      }\n    `:`\n        int start = ${a};\n        int end = ${o};\n\n        void main() {\n          int outC = getOutputCoords();\n          if (outC < start || outC >= end) {\n            setOutput(value);\n          } else {\n            setOutput(getX(outC - start));\n          }\n        }\n      `}}class Kk{constructor(e,t,n){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"value",type:"float"}],this.outputShape=t.map(((t,n)=>t[0]+e[n]+t[1]));const r=e.length,s=Pf(r),a=t.map((e=>e[0])).join(","),o=t.map(((t,n)=>t[0]+e[n])).join(","),i=yy("rc",r),u=yy("source",r),l=`${i[r-1]} < ${this.outputShape[r-1]}`,c=1===r?"source":`vec2(${u.slice(-2).join()})`,h=[`${s} rc = outputLoc;`,`${i[r-1]} += 1;\n       if(${l}) {\n      `,1===r?"":`}\n       rc = outputLoc;\n       ${i[r-2]} += 1;\n       if(${i[r-2]} < ${this.outputShape[r-2]}) {`,1===r?"":`  ${i[r-1]} += 1;\n         if(${l}) {`],d=1===r?"rc < start || rc >= end":"any(lessThan(rc, start)) || any(greaterThanEqual(rc, end))";let p="";for(let e=0,t=1===r?2:4;e<t;e++)p+=`\n        ${h[e]}\n        if (${d}) {\n          result[${e}] = float(value);\n        } else {\n          ${s} source = rc - start;\n          result[${e}] = getChannel(getX(${u.join()}), ${c});\n        }\n      `;p+=1===r?"} ":"}}",this.userCode=`\n      const ${s} start = ${s}(${a});\n      const ${s} end = ${s}(${o});\n\n      void main() {\n        ${s} outputLoc = getOutputCoords();\n        vec4 result = vec4(0.);\n        ${p}\n        setOutput(result);\n      }\n    `}}const qk=e=>{const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{paddings:a,constantValue:o}=r;if(0===B(s.shape))return aw({backend:n,attrs:{shape:a.map(((e,t)=>e[0]+s.shape[t]+e[1])),value:o,dtype:s.dtype}});const i=fe().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new Kk(s.shape,a,o):new jk(s.shape,a,o),u=[[o]];return n.runWebGLProgram(i,[s],s.dtype,u)},Xk={kernelName:dn,backendName:"webgl",kernelFunc:qk},Yk=ox({opSnippet:"\n  if(a < 0.0 && floor(b) < b){\n    return NAN;\n  }\n  if (b == 0.0) {\n    return 1.0;\n  }\n  return (round(mod(b, 2.0)) != 1) ?\n      pow(abs(a), b) : sign(a) * pow(abs(a), b);\n",packedOpSnippet:"\n  // isModRound1 has 1 for components with round(mod(b, 2.0)) == 1, 0 otherwise.\n  vec4 isModRound1 = vec4(equal(round(mod(b, 2.0)), ivec4(1)));\n  vec4 multiplier = sign(a) * isModRound1 + (vec4(1.0) - isModRound1);\n  vec4 result = multiplier * pow(abs(a), b);\n\n  // Ensure that a^0 = 1, including 0^0 = 1 as this correspond to TF and JS\n  bvec4 isExpZero = equal(b, vec4(0.0));\n  result.r = isExpZero.r ? 1.0 : result.r;\n  result.g = isExpZero.g ? 1.0 : result.g;\n  result.b = isExpZero.b ? 1.0 : result.b;\n  result.a = isExpZero.a ? 1.0 : result.a;\n\n  bvec4 isNaN1 = lessThan(a, vec4(0.0));\n  bvec4 isNaN2 = lessThan(floor(b), b);\n  bvec4 isNaN = bvec4(isNaN1.x && isNaN2.x, isNaN1.y && isNaN2.y, isNaN1.z && isNaN2.z, isNaN1.w && isNaN2.w);\n  "+jy+"\n  return result;\n"}),Qk={kernelName:pn,backendName:"webgl",kernelFunc:Yk},Zk={kernelName:mn,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{axis:a,keepDims:o}=r,i=s.shape.length,u=[],l=j(a,s.shape);let c=l;const h=Hu(c,i);let d,p=s;if(null!=h&&(p=Cx({inputs:{x:s},backend:n,attrs:{perm:h}}),c=Ku(c.length,i),u.push(p)),Gu("prod",c,i),n.shouldExecuteOnCPU([p])){const e=n.texData.get(p.dataId).values,{outVals:t,outShape:r,outDtype:s}=jg(p.shape,p.dtype,e,c);d=n.makeTensorInfo(r,s,t)}else{const[e,t]=Vu(p.shape,c),r=B(t),a=fx({inputs:{x:p},backend:n,attrs:{shape:[-1,r]}}),o=xx(a,ks(s.dtype),"prod",n);d=fx({inputs:{x:o},backend:n,attrs:{shape:e}}),u.push(a),u.push(o)}if(o){u.push(d);const e=Wu(d.shape,l);d=fx({inputs:{x:d},backend:n,attrs:{shape:e}})}return u.forEach((e=>n.disposeIntermediateTensorInfo(e))),d}},Jk={kernelName:gn,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{paramsNestedSplits:s,paramsDenseValues:a,indices:o}=t,{outputRaggedRank:i}=r,u=s.map((e=>n.readSync(e.dataId))),l=s.map((e=>e.shape)),c=n.readSync(a.dataId),h=n.readSync(o.dataId),[d,p,f]=Kg(u,l,c,a.shape,a.dtype,h,o.shape,i),m=d.map((e=>n.makeTensorInfo([e.length],"int32",e))),g=n.makeTensorInfo(f,a.dtype,p);return m.concat([g])}},eS={kernelName:yn,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{starts:r,limits:s,deltas:a}=t,o=n.readSync(r.dataId),i=n.readSync(s.dataId),u=n.readSync(a.dataId),[l,c]=qg(o,r.shape,r.dtype,i,s.shape,u,a.shape);return[n.makeTensorInfo([l.length],"int32",l),n.makeTensorInfo([c.length],r.dtype,c)]}},tS={kernelName:xn,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{shape:s,values:a,defaultValue:o,rowPartitionTensors:i}=t,{rowPartitionTypes:u}=r,l=n.readSync(s.dataId),c=n.readSync(a.dataId),h=n.readSync(o.dataId),d=i.map((e=>n.readSync(e.dataId))),p=i.map((e=>e.shape)),[f,m]=Xg(l,s.shape,c,a.shape,a.dtype,h,o.shape,d,p,u);return n.makeTensorInfo(f,a.dtype,m)}},nS=e=>{const{backend:t,attrs:n}=e,{start:r,stop:s,step:a,dtype:o}=n,i=Yg(r,s,a,o);return t.makeTensorInfo([i.length],o,i)},rS={kernelName:bn,backendName:"webgl",kernelFunc:nS},sS=ax({opSnippet:"return 1.0 / x;"}),aS={kernelName:wn,backendName:"webgl",kernelFunc:sS},oS=ax({opSnippet:Iy+"\n  return (x < 0.0) ? 0.0 : x;\n",packedOpSnippet:"\n  vec4 result = x * vec4(greaterThanEqual(x, vec4(0.0)));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n"}),iS={kernelName:kn,backendName:"webgl",kernelFunc:oS},uS=ax({opSnippet:Iy+"\n  return (x < 0.0) ? 0.0 : min(6.0, x);\n",packedOpSnippet:"\n  vec4 result = min(x, vec4(6.)) * vec4(greaterThanEqual(x, vec4(0.0)));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n"}),lS={kernelName:Tn,backendName:"webgl",kernelFunc:uS};class cS{constructor(e,t,n,r,s){this.variableNames=["A"],this.outputShape=[];const[a,o,i,u]=e;this.outputShape=[a,t,n,u];const l=[r&&t>1?o-1:o,r&&n>1?i-1:i],c=[r&&t>1?t-1:t,r&&n>1?n-1:n];let h;h=s?"(vec2(yRC) + vec2(0.5)) * effectiveInputOverOutputRatioRC - vec2(0.5)":"vec2(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`\n      const vec2 effectiveInputOverOutputRatioRC = vec2(\n          ${l[0]/c[0]},\n          ${l[1]/c[1]});\n      const vec2 inputShapeRC = vec2(${o}.0, ${i}.0);\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        ivec2 yRC = coords.yz;\n\n        // Fractional source index.\n        vec2 sourceFracIndexRC = ${h};\n\n        // Compute the four integer indices.\n        ivec2 sourceFloorRC = ivec2(max(sourceFracIndexRC, vec2(0.0)));\n        ivec2 sourceCeilRC = ivec2(\n          min(inputShapeRC - 1.0, ceil(sourceFracIndexRC)));\n\n        float topLeft = getA(b, sourceFloorRC.x, sourceFloorRC.y, d);\n        float bottomLeft = getA(b, sourceCeilRC.x, sourceFloorRC.y, d);\n        float topRight = getA(b, sourceFloorRC.x, sourceCeilRC.y, d);\n        float bottomRight = getA(b, sourceCeilRC.x, sourceCeilRC.y, d);\n\n        vec2 fracRC = sourceFracIndexRC - vec2(sourceFloorRC);\n\n        float top = topLeft + (topRight - topLeft) * fracRC.y;\n        float bottom = bottomLeft + (bottomRight - bottomLeft) * fracRC.y;\n        float newValue = top + (bottom - top) * fracRC.x;\n\n        setOutput(newValue);\n      }\n    `}}class hS{constructor(e,t,n,r,s){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[];const[a,o,i,u]=e;this.outputShape=[a,t,n,u];const l=[r&&t>1?o-1:o,r&&n>1?i-1:i],c=[r&&t>1?t-1:t,r&&n>1?n-1:n];let h;h=s?"(vec3(yRC) + vec3(0.5)) * effectiveInputOverOutputRatioRC - vec3(0.5)":"vec3(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`\n      const vec3 effectiveInputOverOutputRatioRC = vec3(\n          ${l[0]/c[0]},\n          ${l[1]/c[1]},\n          ${l[1]/c[1]});\n      const vec3 inputShapeRC = vec3(${o}.0, ${i}.0,\n                                     ${i}.0);\n\n      float getAValue(int b, int r, int c, int d) {\n        return getChannel(getA(b, r, c, d), vec2(c, d));\n      }\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        // Calculate values for next column in yRC.z.\n        ivec3 yRC = coords.yzz + ivec3(0, 0, 1);\n\n        // Fractional source index.\n        vec3 sourceFracIndexRC = ${h};\n\n        // Compute the four integer indices.\n        ivec3 sourceFloorRC = ivec3(max(sourceFracIndexRC, vec3(0.0)));\n        ivec3 sourceCeilRC = ivec3(\n          min(inputShapeRC - 1.0, ceil(sourceFracIndexRC)));\n\n        // Should we calculate next column and row elements in 2x2 packed cell.\n        bool hasNextCol = d < ${u-1};\n        bool hasNextRow = coords.z < ${n-1};\n\n        // In parallel, construct four corners for all four components in\n        // packed 2x2 cell.\n        vec4 topLeft = vec4(\n          getAValue(b, sourceFloorRC.x, sourceFloorRC.y, d),\n          hasNextCol ? getAValue(b, sourceFloorRC.x, sourceFloorRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceFloorRC.x, sourceFloorRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceFloorRC.x, sourceFloorRC.z, d + 1) : 0.0);\n\n        vec4 bottomLeft = vec4(\n          getAValue(b, sourceCeilRC.x, sourceFloorRC.y, d),\n          hasNextCol ? getAValue(b, sourceCeilRC.x, sourceFloorRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceCeilRC.x, sourceFloorRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceCeilRC.x, sourceFloorRC.z, d + 1) : 0.0);\n\n        vec4 topRight = vec4(\n          getAValue(b, sourceFloorRC.x, sourceCeilRC.y, d),\n          hasNextCol ? getAValue(b, sourceFloorRC.x, sourceCeilRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceFloorRC.x, sourceCeilRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceFloorRC.x, sourceCeilRC.z, d + 1) : 0.0);\n\n        vec4 bottomRight = vec4(\n          getAValue(b, sourceCeilRC.x, sourceCeilRC.y, d),\n          hasNextCol ? getAValue(b, sourceCeilRC.x, sourceCeilRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceCeilRC.x, sourceCeilRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceCeilRC.x, sourceCeilRC.z, d + 1) : 0.0);\n\n        vec3 fracRC = sourceFracIndexRC - vec3(sourceFloorRC);\n\n        vec4 top = mix(topLeft, topRight, fracRC.yyzz);\n        vec4 bottom = mix(bottomLeft, bottomRight, fracRC.yyzz);\n        vec4 newValue = mix(top, bottom, fracRC.x);\n\n        setOutput(newValue);\n      }\n    `}}const dS={kernelName:In,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{images:s}=t,{alignCorners:a,halfPixelCenters:o,size:i}=r,[u,l]=i,c=fe().getBool("WEBGL_PACK_IMAGE_OPERATIONS")?new hS(s.shape,u,l,a,o):new cS(s.shape,u,l,a,o);return n.runWebGLProgram(c,[s],"float32")}};class pS{constructor(e,t,n){this.variableNames=["dy"],this.outputShape=[],this.outputShape=t;const[,r,s]=t,[,a,o]=e,i=[n&&a>1?r-1:r,n&&o>1?s-1:s],u=[n&&a>1?a-1:a,n&&o>1?o-1:o],l=i[0]/u[0],c=i[1]/u[1],h=1/l,d=1/c,p=2*Math.ceil(h)+2,f=2*Math.ceil(d)+2;this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        int r = coords[1];\n        int c = coords[2];\n\n        float accumulator = 0.0;\n\n        const float heightScale = float(${l});\n        const float widthScale = float(${c});\n\n        const float invHeightScale = float(${h});\n        const float invWidthScale = float(${d});\n\n        const int winHeight = int(${p});\n        const int winWidth = int(${f});\n\n        // Compute bounds for where in dy we will look\n        float startRLerp = floor(float(r) * invHeightScale);\n        int startDyR = int(startRLerp - float(winHeight / 2));\n\n        float startCLerp = floor(float(c) * invWidthScale);\n        int startDyC = int(startCLerp - float(winWidth / 2));\n\n        // Loop over dy\n        for (int dyROffset = 0; dyROffset < winHeight; dyROffset++) {\n          int dyR = dyROffset + startDyR;\n\n          // Guard against the window exceeding the bounds of dy\n          if (dyR < 0 || dyR >= ${a}) {\n            continue;\n          }\n\n          for (int dyCOffset = 0; dyCOffset < winWidth; dyCOffset++) {\n            int dyC = dyCOffset + startDyC;\n\n            // Guard against the window exceeding the bounds of dy\n            if (dyC < 0 || dyC >= ${o}) {\n              continue;\n            }\n\n            float dxR = float(dyR) * heightScale;\n            int topDxRIndex = int(floor(dxR));\n            int bottomDxRIndex = int(min(ceil(dxR), ${r-1}.0));\n            float dxRLerp = dxR - float(topDxRIndex);\n            float inverseDxRLerp = 1.0 - dxRLerp;\n\n            float dxC = float(dyC) * widthScale;\n            int leftDxCIndex = int(floor(dxC));\n            int rightDxCIndex = int(min(ceil(dxC), ${s-1}.0));\n            float dxCLerp = dxC - float(leftDxCIndex);\n            float inverseDxCLerp = 1.0 - dxCLerp;\n\n            if (r == topDxRIndex && c == leftDxCIndex) {\n              // topLeft\n              accumulator +=\n                getDy(b, dyR, dyC, d) * inverseDxRLerp * inverseDxCLerp;\n            }\n\n            if (r == topDxRIndex && c == rightDxCIndex) {\n              // topRight\n              accumulator += getDy(b, dyR, dyC, d) * inverseDxRLerp * dxCLerp;\n            }\n\n            if (r == bottomDxRIndex && c == leftDxCIndex) {\n              // bottomLeft\n              accumulator += getDy(b, dyR, dyC, d) * dxRLerp * inverseDxCLerp;\n            }\n\n            if (r == bottomDxRIndex && c == rightDxCIndex) {\n              // bottomRight\n              accumulator += getDy(b, dyR, dyC, d) * dxRLerp * dxCLerp;\n            }\n          }\n        }\n        // End loop over dy\n\n        setOutput(accumulator);\n      }\n    `}}const fS={kernelName:"ResizeBilinearGrad",backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{images:s,dy:a}=t,{alignCorners:o}=r,i=new pS(a.shape,s.shape,o);return n.runWebGLProgram(i,[a],a.dtype)}};class mS{constructor(e,t,n,r,s){this.variableNames=["A"],this.outputShape=[];const[a,o,i,u]=e;this.outputShape=[a,t,n,u];const l=[r&&t>1?o-1:o,r&&n>1?i-1:i],c=[r&&t>1?t-1:t,r&&n>1?n-1:n],h=r?"0.5":"0.0";let d;d=s?"max((vec2(yRC) + vec2(0.5)) * effectiveInputOverOutputRatioRC, vec2(0.0))":"vec2(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`\n      const vec2 effectiveInputOverOutputRatioRC = vec2(\n          ${l[0]/c[0]},\n          ${l[1]/c[1]});\n      const vec2 inputShapeRC = vec2(${o}.0, ${i}.0);\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        ivec2 yRC = coords.yz;\n\n        // Fractional source index.\n        vec2 sourceFracIndexRC = ${d};\n\n        // Compute the coordinators of nearest neighbor point.\n        ivec2 sourceNearestRC = ivec2(\n          min(inputShapeRC - 1.0, floor(sourceFracIndexRC + ${h})));\n        float newValue = getA(b, sourceNearestRC.x, sourceNearestRC.y, d);\n\n        setOutput(newValue);\n      }\n    `}}class gS{constructor(e,t,n,r,s){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[];const[a,o,i,u]=e;this.outputShape=[a,t,n,u];const l=[r&&t>1?o-1:o,r&&n>1?i-1:i],c=[r&&t>1?t-1:t,r&&n>1?n-1:n],h=r?"0.5":"0.0";let d;d=s?"max((vec3(yRC) + vec3(0.5)) * effectiveInputOverOutputRatioRC, vec3(0.0))":"vec3(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`\n      const vec3 effectiveInputOverOutputRatioRC = vec3(\n          ${l[0]/c[0]},\n          ${l[1]/c[1]},\n          ${l[1]/c[1]});\n      const vec3 inputShapeRC = vec3(${o}.0, ${i}.0,\n                                     ${i}.0);\n\n      float getAValue(int b, int r, int c, int d) {\n        return getChannel(getA(b, r, c, d), vec2(c, d));\n      }\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        // Calculate values for next column in yRC.z.\n        ivec3 yRC = coords.yzz + ivec3(0, 0, 1);\n\n        // Fractional source index.\n        vec3 sourceFracIndexRC = ${d};\n\n        // Compute the coordinators of nearest neighbor point.\n        ivec3 sourceNearestRC = ivec3(\n          min(inputShapeRC - 1.0, floor(sourceFracIndexRC + ${h})));\n\n        // Should we calculate next column and row elements in 2x2 packed cell.\n        bool hasNextCol = d < ${u-1};\n        bool hasNextRow = coords.z < ${n-1};\n\n        vec4 newValue = vec4(\n          getAValue(b, sourceNearestRC.x, sourceNearestRC.y, d),\n          hasNextCol ? getAValue(b, sourceNearestRC.x, sourceNearestRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceNearestRC.x, sourceNearestRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceNearestRC.x, sourceNearestRC.z, d + 1) : 0.0);\n\n        setOutput(newValue);\n      }\n    `}}const yS={kernelName:Cn,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{images:s}=t,{alignCorners:a,halfPixelCenters:o,size:i}=r,[u,l]=i,c=fe().getBool("WEBGL_PACK_IMAGE_OPERATIONS")?new gS(s.shape,u,l,a,o):new mS(s.shape,u,l,a,o);return n.runWebGLProgram(c,[s],s.dtype)}};class xS{constructor(e,t,n){this.variableNames=["dy"],this.outputShape=[],this.outputShape=t;const[,r,s]=t,[,a,o]=e,i=[n&&a>1?r-1:r,n&&o>1?s-1:s],u=[n&&a>1?a-1:a,n&&o>1?o-1:o],l=i[0]/u[0],c=i[1]/u[1],h=1/l,d=1/c,p=2*Math.ceil(h)+2,f=2*Math.ceil(d)+2;this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        int r = coords[1];\n        int c = coords[2];\n\n        float accumulator = 0.0;\n\n        const float heightScale = float(${l});\n        const float widthScale = float(${c});\n\n        const float invHeightScale = float(${h});\n        const float invWidthScale = float(${d});\n\n        const int winHeight = int(${p});\n        const int winWidth = int(${f});\n\n        // Compute bounds for where in dy we will look\n        float startRLerp = floor(float(r) * invHeightScale);\n        int startDyR = int(floor(startRLerp - float(winHeight / 2)));\n\n        float startCLerp = floor(float(c) * invWidthScale);\n        int startDyC = int(floor(startCLerp - float(winWidth / 2)));\n\n        // Loop over dy\n        for (int dyROffset = 0; dyROffset < winHeight; dyROffset++) {\n          int dyR = dyROffset + startDyR;\n\n          // Guard against the window exceeding the bounds of dy\n          if (dyR < 0 || dyR >= ${a}) {\n            continue;\n          }\n\n          for (int dyCOffset = 0; dyCOffset < winWidth; dyCOffset++) {\n            int dyC = dyCOffset + startDyC;\n\n            // Guard against the window exceeding the bounds of dy\n            if (dyC < 0 || dyC >= ${o}) {\n              continue;\n            }\n\n            float sourceFracRow =\n              float(${i[0]}) *\n                (float(dyR) / float(${u[0]}));\n\n            float sourceFracCol =\n                float(${i[1]}) *\n                  (float(dyC) / float(${u[1]}));\n\n            int sourceNearestRow = int(min(\n                float(int(${r}) - 1),\n                ${n} ? float(round(sourceFracRow)) :\n                                  float(floor(sourceFracRow))));\n\n            int sourceNearestCol = int(min(\n                float(int(${s}) - 1),\n                ${n} ? float(round(sourceFracCol)) :\n                                  float(floor(sourceFracCol))));\n\n            if (r == sourceNearestRow && c == sourceNearestCol) {\n              accumulator += getDy(b, dyR, dyC, d);\n            }\n          }\n        }\n        // End loop over dy\n\n        setOutput(accumulator);\n      }\n    `}}const bS={kernelName:"ResizeNearestNeighborGrad",backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{images:s,dy:a}=t,{alignCorners:o}=r,i=new xS(a.shape,s.shape,o);return n.runWebGLProgram(i,[a],a.dtype)}};class vS{constructor(e,t){this.variableNames=["x"];const n=e.length;if(n>4)throw new Error(`WebGL backend: Reverse of rank-${n} tensor is not yet supported`);if(this.outputShape=e,1===n)return void(this.userCode=`\n        void main() {\n          int coord = getOutputCoords();\n          setOutput(getX(${e[0]} - coord - 1));\n        }\n      `);const r=e.map(((n,r)=>(n=>-1!==t.indexOf(n)&&1!==e[n]?`${e[n]} - coords[${n}] - 1`:`coords[${n}]`)(r))).join(","),s=Pf(n);this.userCode=`\n      void main() {\n        ${s} coords = getOutputCoords();\n        setOutput(getX(${r}));\n      }\n    `}}class wS{constructor(e,t){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0;const n=e.length;if(n>4)throw new Error(`WebGL backend: Reverse of rank-${n} tensor is not yet supported`);this.outputShape=e;const r=yy("rc",n),s=`${r[n-1]} + 1 < ${this.outputShape[n-1]}`,a=`${r[n-2]} + 1 < ${this.outputShape[n-2]}`,o=Pf(n);function i(n){const r=e.map(((r,s)=>function(n,r){return-1!==t.indexOf(n)&&1!==e[n]?`${e[n]} - ${r[n]} - 1`:`${r[n]}`}(s,n)));return`getChannel(getX(${r.join(",")}), vec2(${r.slice(-2).join(",")}))`}this.userCode=1===n?`\n        void main(){\n          int rc = getOutputCoords();\n          vec4 result = vec4(0.);\n          result.r = getChannel(getX(${e[0]} - rc - 1),\n            ${e[0]} - rc - 1);\n          if(${s}){\n              result.g = getChannel(getX(${e[0]} - (rc  + 1) - 1),\n                ${e[0]} - (rc  + 1) - 1);\n          }\n          setOutput(result);\n        }\n      `:`\n        void main() {\n          ${o} rc = getOutputCoords();\n          vec4 result = vec4(0.);\n          result.r = ${function(e){return i(e)}(r.slice())};\n          if(${s}){\n            result.g = ${function(e){return e[n-1]="("+e[n-1]+" + 1)",i(e)}(r.slice())};\n          }\n          if(${a}) {\n            result.b = ${function(e){return e[n-2]="("+e[n-2]+" + 1)",i(e)}(r.slice())};\n            if(${s}) {\n              result.a = ${function(e){return e[n-1]="("+e[n-1]+" + 1)",e[n-2]="("+e[n-2]+" + 1)",i(e)}(r.slice())};\n            }\n          }\n          setOutput(result);\n        }\n    `}}const kS={kernelName:$n,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{dims:a}=r,o=s.shape.length,i=j(a,s.shape);if(0===o)return qy({inputs:{x:s},backend:n});const u=fe().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new wS(s.shape,i):new vS(s.shape,i);return n.runWebGLProgram(u,[s],s.dtype)}};class SS{constructor(e,t){this.variableNames=["Image"],this.outputShape=[],this.customUniforms=[{name:"params",type:"vec4"}];const n=e[1],r=e[2];this.outputShape=e;let s="";s="number"==typeof t?`float outputValue = ${t.toFixed(2)};`:`\n        vec3 fill = vec3(${t.join(",")});\n        float outputValue = fill[coords[3]];`,this.userCode=`\n        void main() {\n          ivec4 coords = getOutputCoords();\n          int x = coords[2];\n          int y = coords[1];\n          float coordXFloat = (float(x) - params[0]) * params[3] -\n            (float(y) - params[1]) * params[2];\n          float coordYFloat = (float(x) - params[0]) * params[2] +\n            (float(y) - params[1]) * params[3];\n          int coordX = int(round(coordXFloat + params[0]));\n          int coordY = int(round(coordYFloat + params[1]));\n          ${s}\n          if(coordX >= 0 && coordX < ${r} && coordY >= 0 && coordY < ${n}) {\n            outputValue = getImage(coords[0], coordY, coordX, coords[3]);\n          }\n          setOutput(outputValue);\n        }\n    `}}const CS={kernelName:yr,backendName:"webgl",kernelFunc:({inputs:e,attrs:t,backend:n})=>{const{image:r}=e,{radians:s,fillValue:a,center:o}=t,i=n,u=new SS(r.shape,a),[l,c]=Vd(o,r.shape[1],r.shape[2]),h=[[l,c,Math.sin(s),Math.cos(s)]];return i.runWebGLProgram(u,[r],r.dtype,h)}},IS=ax({opSnippet:"\n  // OpenGL ES does not support round function.\n  // The algorithm is based on banker's rounding.\n  float base = floor(x);\n  if ((x - base) < 0.5) {\n    return floor(x);\n  } else if ((x - base) > 0.5) {\n    return ceil(x);\n  } else {\n    if (mod(base, 2.0) == 0.0) {\n      return base;\n    } else {\n      return base + 1.0;\n    }\n  }\n"}),TS={kernelName:Nn,backendName:"webgl",kernelFunc:IS},$S=ax({opSnippet:"return inversesqrt(x);",cpuKernelImpl:Qg}),NS={kernelName:En,backendName:"webgl",kernelFunc:$S};class ES{constructor(e,t,n,r,s,a,o=!0,i=!1){this.variableNames=["updates","indices","defaultValue"],this.outputShape=a;const u=Pf(s.length),l=Pf(a.length);let c="";1===n?c="i":2===n&&(c="i, j");const h=`getIndices(${c})`;let d="";1===r?d="i":2===r&&(d="i, coords[1]");const p=`getUpdates(${d})`;let f="";i&&(f="coords[0], coords[1]");const m=`getDefaultValue(${f})`,g=t>1?"strides[j]":"strides";this.userCode=`\n        ${u} strides = ${u}(${s});\n\n        void main() {\n          ${l} coords = getOutputCoords();\n          float sum = 0.0;\n          bool found = false;\n          for (int i = 0; i < ${e}; i++) {\n            int flattenedIndex = 0;\n            for (int j = 0; j < ${t}; j++) {\n              int index = round(${h});\n              flattenedIndex += index * ${g};\n            }\n            if (flattenedIndex == coords[0]) {\n              sum += ${p};\n              found = true;\n            }\n          }\n          setOutput(mix(${m}, sum, float(found)));\n        }\n      `}}class RS{constructor(e,t,n,r,s,a,o=!0,i=!1){this.variableNames=["updates","indices","defaultValue"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=a;const u=Pf(s.length),l=Pf(a.length);let c="";1===n?c="i":2===n&&(c="i, j");const h=`getIndices(${c})`;let d="";1===r?d="i":2===r&&(d="i, coords[1]");const p=`getUpdates(${d})`;let f="";i&&(f="coords[0], coords[1]");const m=`getDefaultValue(${f})`,g=t>1?"strides[j]":"strides",y=t>1?"strides[j + 1]":"strides";this.userCode=`\n        ${u} strides = ${u}(${s});\n\n        void main() {\n          ${l} coords = getOutputCoords();\n          vec4 sum = vec4(0.);\n          vec4 found = vec4(0.);\n          for (int i = 0; i < ${e}; i+=2) {\n            ivec2 flattenedIndex = ivec2(0);\n            for (int j = 0; j < ${t}; j+=2) {\n              ivec4 index = round(${h});\n              flattenedIndex += index.xz * ${g};\n              if (j + 1 < ${t}) {\n                flattenedIndex += index.yw * ${y};\n              }\n            }\n            if (flattenedIndex[0] == coords[0] || flattenedIndex[1] == coords[0] ||\n                flattenedIndex[0] == coords[0] + 1 || flattenedIndex[1] == coords[0] + 1) {\n              vec4 updVals = ${p};\n              if (flattenedIndex[0] == coords[0]) {\n                sum.xy += updVals.xy;\n                found.xy = vec2(1.);\n              } else if (flattenedIndex[0] == coords[0] + 1) {\n                sum.zw += updVals.xy;\n                found.zw = vec2(1.);\n              }\n              if (flattenedIndex[1] == coords[0]) {\n                sum.xy += updVals.zw;\n                found.xy = vec2(1.);\n              } else if (flattenedIndex[1] == coords[0] + 1) {\n                sum.zw += updVals.zw;\n                found.zw = vec2(1.);\n              }\n            }\n          }\n          setOutput(mix(${m}, sum, found));\n        }\n      `}}const _S={kernelName:Rn,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{indices:s,updates:a}=t,{shape:o}=r,{sliceRank:i,numUpdates:u,sliceSize:l,strides:c,outputSize:h}=sh(0,s,o),d=[h/l,l];if(0===h)return n.makeTensorInfo(o,s.dtype);const p=fx({inputs:{x:s},backend:n,attrs:{shape:[u,i]}}),f=fx({inputs:{x:a},backend:n,attrs:{shape:[u,l]}}),m=n.makeTensorInfo([],"float32",new Float32Array([0]));let g;g=fe().getBool("WEBGL_PACK")?new RS(u,i,p.shape.length,f.shape.length,c,d):new ES(u,i,p.shape.length,f.shape.length,c,d);const y=n.runWebGLProgram(g,[f,p,m],f.dtype),x=fx({inputs:{x:y},backend:n,attrs:{shape:o}});return n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(y),n.disposeIntermediateTensorInfo(m),x}};class AS{constructor(e,t,n,r){this.variableNames=["sortedSequence","values"],this.customUniforms=[{name:"numInputs",type:"int"}],this.outputShape=[e,n];const s=`for (int i = 0; i < ${Math.ceil(Math.log2(t+1))}; ++i) { if (left >= right) break;`,a=2===fe().getNumber("WEBGL_VERSION")?"while (left < right) {":s,o="left"===r?"<":"<=";this.userCode=`\n       int findBound(int batch, float value) {\n         int left = 0;\n         int right = numInputs;\n         int mid;\n         ${a}\n           mid = (left + right) / 2;\n           if (getSortedSequence(batch, mid) ${o} value) {\n             left = mid + 1;\n           } else {\n             right = mid;\n           }\n         }\n         return right;\n       }\n\n       void main() {\n         ivec2 coords = getOutputCoords();\n         int batch = coords[0];\n         int valueIndex = coords[1];\n\n         float value = getValues(batch, valueIndex);\n\n         setOutput(float(findBound(batch, value)));\n       }\n     `}}const OS={kernelName:An,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{sortedSequence:s,values:a}=t,{side:o}=r,i=new AS(s.shape[0],s.shape[1],a.shape[1],o),u=[[s.shape[1]]];return n.runWebGLProgram(i,[s,a],"int32",u)}};class FS{constructor(e,t,n){let r,s;if(this.variableNames=["c","a","b"],this.outputShape=t,n>4)throw Error(`Where for rank ${n} is not yet supported`);if(1===n)s="resRC",r="resRC";else{const n=["resRC.x","resRC.y","resRC.z","resRC.w"],a=[],o=[];for(let r=0;r<t.length;r++)o.push(`${n[r]}`),r<e&&a.push(`${n[r]}`);r=a.join(),s=o.join()}const a=Pf(n);this.userCode=`\n      void main() {\n        ${a} resRC = getOutputCoords();\n        float cVal = getC(${r});\n        if (cVal >= 1.0) {\n          setOutput(getA(${s}));\n        } else {\n          setOutput(getB(${s}));\n        }\n      }\n    `}}const PS={kernelName:On,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{condition:r,t:s,e:a}=t,o=new FS(r.shape.length,s.shape,s.shape.length);return n.runWebGLProgram(o,[r,s,a],ws(s.dtype,a.dtype))}},DS=ax({opSnippet:`\n  // Stable and Attracting Fixed Point (0, 1) for Normalized Weights.\n  // see: https://arxiv.org/abs/1706.02515\n  float scaleAlpha = ${Xd};\n  float scale = ${Yd};\n  return (x >= 0.0) ? scale * x : scaleAlpha * (exp(x) - 1.0);\n`}),MS={kernelName:Fn,backendName:"webgl",kernelFunc:DS},LS=ax({opSnippet:sx+"\n  return 1.0 / (1.0 + exp(-1.0 * x));\n",packedOpSnippet:"\n  vec4 result = 1.0 / (1.0 + exp(-1.0 * x));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n",cpuKernelImpl:Jg}),BS={kernelName:Bn,backendName:"webgl",kernelFunc:LS},zS=ax({opSnippet:"\n  if (isnan(x)) { return 0.0; }\n  return sign(x);\n"}),US={kernelName:Ln,backendName:"webgl",kernelFunc:zS},VS=ax({opSnippet:sx+"\n  return sin(x);\n",packedOpSnippet:`\n  vec4 result = sin(x);\n  bvec4 isNaN = isnan(x);\n  ${jy}\n  return result;\n`}),WS={kernelName:Dn,backendName:"webgl",kernelFunc:VS},GS=ax({opSnippet:"\n  float e2x = exp(x);\n  return (e2x - 1.0 / e2x) / 2.0;\n"}),HS={kernelName:Mn,backendName:"webgl",kernelFunc:GS},jS=ax({opSnippet:"\n  float epsilon = 1.1920928955078125e-7;\n  float threshold = log(epsilon) + 2.0;\n\n  bool too_large = x > -threshold;\n  bool too_small = x < threshold;\n\n  float result;\n  float exp_x = exp(x);\n\n  if (too_large){\n    result = x;\n  }\n  else if (too_small){\n    result = exp_x;\n  }\n  else{\n    result = log(exp_x + 1.0);\n  }\n  return result;\n"}),KS={kernelName:zn,backendName:"webgl",kernelFunc:jS},qS={kernelName:Wn,backendName:"webgl",kernelFunc:e=>{const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{blockShape:a,paddings:o}=r;D(s.shape.length<=4,(()=>"spaceToBatchND for rank > 4 with a WebGL backend not implemented yet"));const i=a.reduce(((e,t)=>e*t)),u=[[0,0]];u.push(...o);for(let e=1+a.length;e<s.shape.length;++e)u.push([0,0]);const l=[],c=qk({inputs:{x:s},backend:n,attrs:{paddings:u,constantValue:0}}),h=Wd(c.shape,a,i,!1),d=Gd(h.length,a.length,!1),p=Hd(c.shape,a,i,!1),f=fx({inputs:{x:c},backend:n,attrs:{shape:h}}),m=Cx({inputs:{x:f},backend:n,attrs:{perm:d}}),g=fx({inputs:{x:m},backend:n,attrs:{shape:p}});return l.push(c),l.push(f),l.push(m),l.forEach((e=>n.disposeIntermediateTensorInfo(e))),g}},XS={kernelName:jn,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{indices:r,values:s,denseShape:a,defaultValue:o}=t;if(1!==a.shape.length)throw new Error(`Dense shape must be a vector, saw:\n         ${a.shape}`);if(2!==r.shape.length)throw new Error(`Indices must be a matrix, saw:\n         ${r.shape}`);if(1!==s.shape.length)throw new Error(`Values must be a vector, saw:\n         ${s.shape}`);if(0!==o.shape.length)throw new Error(`Default value must be a scalar, saw:\n        ${o.shape}`);const i=n.readSync(r.dataId),u=n.readSync(s.dataId),l=n.readSync(a.dataId),c=n.readSync(o.dataId)[0],[h,d,p,f,m]=ny(i,r.shape,r.dtype,u,s.dtype,l,c);return[n.makeTensorInfo(d,r.dtype,h),n.makeTensorInfo([d[0]],s.dtype,p),n.makeTensorInfo([f.length],"bool",new Uint8Array(f.map((e=>Number(e))))),n.makeTensorInfo([m.length],r.dtype,new Int32Array(m))]}},YS={kernelName:Kn,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{inputIndices:r,inputShape:s,newShape:a}=t;if(2!==r.shape.length)throw new Error(`Input indices should be a matrix but received shape ${r.shape}`);if(1!==s.shape.length)throw new Error(`Input shape should be a vector but received shape ${s.shape}`);if(1!==a.shape.length)throw new Error(`Target shape should be a vector but received shape ${a.shape}`);const o=Array.from(n.readSync(s.dataId)),i=n.readSync(r.dataId),u=Array.from(n.readSync(a.dataId)),[l,c,h]=ry(i,r.shape,r.dtype,o,u);return[n.makeTensorInfo(c,r.dtype,l),n.makeTensorInfo([h.length],a.dtype,new Int32Array(h))]}},QS={kernelName:qn,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{data:r,indices:s,segmentIds:a}=t;if(r.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(1!==s.shape.length)throw new Error(`Indices should be a vector but received shape\n              ${s.shape}`);if(1!==a.shape.length)throw new Error(`Segment ids should be a vector but received shape\n              ${a.shape}`);const o=n.readSync(r.dataId),i=n.readSync(s.dataId),u=n.readSync(a.dataId),[l,c]=sy(o,r.shape,r.dtype,i,u,!0);return n.makeTensorInfo(c,r.dtype,l)}},ZS={kernelName:Xn,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{data:r,indices:s,segmentIds:a}=t;if(r.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(1!==s.shape.length)throw new Error(`Indices should be a vector but received shape\n             ${s.shape}`);if(1!==a.shape.length)throw new Error(`Segment ids should be a vector but received shape\n             ${a.shape}`);const o=n.readSync(r.dataId),i=n.readSync(s.dataId),u=n.readSync(a.dataId),[l,c]=sy(o,r.shape,r.dtype,i,u);return n.makeTensorInfo(c,r.dtype,l)}},JS={kernelName:Yn,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{sparseIndices:s,sparseValues:a,defaultValue:o}=t,{outputShape:i}=r,{sliceRank:u,numUpdates:l,sliceSize:c,strides:h,outputSize:d}=sh(0,s,i);if("string"===a.dtype){const e=n.bufferSync(s),t=n.bufferSync(a),r=Xr(n.readSync(o.dataId)[0]),p=Zg(e,t,i,d,c,l,u,h,r,!1);return n.makeTensorInfo(i,p.dtype,p.values)}const p=new ES(l,u,s.shape.length,a.shape.length,h,[d,1],!1),f=n.runWebGLProgram(p,[a,s,o],a.dtype),m=fx({inputs:{x:f},backend:n,attrs:{shape:i}});return n.disposeIntermediateTensorInfo(f),m}},eC={kernelName:Gn,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{numOrSizeSplits:a,axis:o}=r,i=j(o,s.shape)[0],u=wp(s,a,i),l=s.shape.length,c=new Array(l).fill(0),h=s.shape.slice();return u.map((e=>{const t=[...h];t[i]=e;const r=wb({inputs:{x:s},backend:n,attrs:{begin:c,size:t}});return c[i]+=e,r}))}},tC="return sqrt(x);",nC=ax({opSnippet:tC,packedOpSnippet:tC,cpuKernelImpl:ay}),rC={kernelName:Un,backendName:"webgl",kernelFunc:nC},sC={kernelName:Zn,backendName:"webgl",kernelFunc:ax({opSnippet:"return x * x;"})},aC="return (a - b) * (a - b);",oC=ox({opSnippet:aC,packedOpSnippet:aC}),iC={kernelName:Qn,backendName:"webgl",kernelFunc:oC},uC={kernelName:Jn,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t;if("string"!==s.dtype)throw new Error("Input must be of datatype string");const a=Mp(n.readSync(s.dataId)),o=oy(a,"string",r);return n.makeTensorInfo(s.shape,"string",o)}},lC={kernelName:mr,backendName:"webgl",kernelFunc:function({inputs:e,attrs:t,backend:n}){const{x:r}=e,s=Iy+`\n    return x > 0.0 ? 1.0 : float(${t.alpha});\n  `,a=new Cy(r.shape,s);return n.runWebGLProgram(a,[r],r.dtype)}};class cC{constructor(e,t,n){this.variableNames=["x"],this.outputShape=n;const r=n.length,s=Pf(n.length),a=Pf(n.length);let o="";if(1===r)o="coords * strides + begin";else{let e=0;o=n.map(((t,r)=>(e++,1===n.length?`coords * strides[${r}] + begin[${r}]`:`coords[${e-1}] * strides[${r}] + begin[${r}]`))).join(",")}this.userCode=`\n      ${s} begin = ${s}(${e});\n      ${s} strides = ${s}(${t});\n\n      void main() {\n        ${a} coords = getOutputCoords();\n        setOutput(getX(${o}));\n      }\n    `}}const hC={kernelName:er,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{begin:a,end:o,strides:i,beginMask:u,endMask:l,ellipsisMask:c,newAxisMask:h,shrinkAxisMask:d}=r,{finalShapeSparse:p,finalShape:f,isIdentity:m,sliceDim0:g,isSimpleSlice:y,begin:x,end:b,strides:v}=yi(s.shape,a,o,i,u,l,c,h,d);let w;if(m)w=fx({inputs:{x:s},backend:n,attrs:{shape:f}});else if(g||y){D(s.shape.length>=1,(()=>`Input must have rank at least 1, got: ${s.shape.length}`));const e=si(x,b,v),t=wb({inputs:{x:s},backend:n,attrs:{begin:x,size:e}});w=fx({inputs:{x:t},backend:n,attrs:{shape:f}}),n.disposeIntermediateTensorInfo(t)}else if(n.shouldExecuteOnCPU([s])){const e=n.readSync(s.dataId),t=Ha(s.shape,s.dtype,e),r=iy(p,t,v,x);w=n.makeTensorInfo(f,s.dtype,r.values)}else{const e=new cC(x,v,p);w=n.runWebGLProgram(e,[s],s.dtype)}const k=fx({inputs:{x:w},backend:n,attrs:{shape:f}});return n.disposeIntermediateTensorInfo(w),k}},dC={kernelName:tr,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{separator:s,nGramWidths:a,leftPad:o,rightPad:i,padWidth:u,preserveShortSequences:l}=r,{data:c,dataSplits:h}=t,d=n.readSync(c.dataId),p=n.readSync(h.dataId),[f,m]=uy(d,p,s,a,o,i,u,l);return[n.makeTensorInfo([f.length],"string",f),n.makeTensorInfo(h.shape,"int32",m)]}},pC={kernelName:nr,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{skipEmpty:s}=r,{input:a,delimiter:o}=t;if("string"!==a.dtype)throw new Error("Input must be of datatype string");if(1!==a.shape.length)throw new Error(`Input must be a vector, got shape: ${a.shape}`);if(0!==o.shape.length)throw new Error(`Delimiter must be a scalar, got shape: ${o.shape}`);const i=n.readSync(a.dataId),u=n.readSync(o.dataId)[0],[l,c,h]=ly(i,u,s),d=c.length;return[n.makeTensorInfo([d,2],"int32",l),n.makeTensorInfo([d],"string",c),n.makeTensorInfo([2],"int32",new Int32Array(h))]}},fC={kernelName:rr,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{numBuckets:s}=r,{input:a}=t;if("string"!==a.dtype)throw new Error("Input must be of datatype string");if(s<=0)throw new Error("Number of buckets must be at least 1");const o=n.readSync(a.dataId),i=cy(o,s);return n.makeTensorInfo(a.shape,"int32",i)}},mC=ax({opSnippet:"return tan(x);"}),gC={kernelName:ar,backendName:"webgl",kernelFunc:mC},yC=ax({opSnippet:"\n  float e2x = exp(-2.0 * abs(x));\n  return sign(x) * (1.0 - e2x) / (1.0 + e2x);\n"}),xC={kernelName:or,backendName:"webgl",kernelFunc:yC},bC={kernelName:_n,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{tensor:s,indices:a,updates:o}=t,{}=r,{sliceRank:i,numUpdates:u,sliceSize:l,strides:c,outputSize:h}=sh(0,a,s.shape),d=[h/l,l];if(0===h)return n.makeTensorInfo(s.shape,a.dtype);const p=fx({inputs:{x:a},backend:n,attrs:{shape:[u,i]}}),f=fx({inputs:{x:o},backend:n,attrs:{shape:[u,l]}}),m=fx({inputs:{x:s},backend:n,attrs:{shape:d}}),g=new ES(u,i,p.shape.length,f.shape.length,c,d,!1,!0),y=n.runWebGLProgram(g,[f,p,m],m.dtype),x=fx({inputs:{x:y},backend:n,attrs:{shape:s.shape}});return n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(m),n.disposeIntermediateTensorInfo(y),x}};class vC{constructor(e,t){this.variableNames=["A"];const n=new Array(e.length);for(let r=0;r<n.length;r++)n[r]=e[r]*t[r];this.outputShape=n,this.rank=n.length;const r=Pf(this.rank),s=function(e){const t=e.length;if(t>5)throw Error(`Tile for rank ${t} is not yet supported`);if(1===t)return`imod(resRC, ${e[0]})`;const n=["resRC.x","resRC.y","resRC.z","resRC.w","resRC.u"],r=[];for(let t=0;t<e.length;t++)r.push(`imod(${n[t]}, ${e[t]})`);return r.join()}(e);this.userCode=`\n      void main() {\n        ${r} resRC = getOutputCoords();\n        setOutput(getA(${s}));\n      }\n    `}}function wC(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{reps:a}=r;if("string"===s.dtype||s.shape.length>5){const e=n.readSync(s.dataId),t="string"===s.dtype?e.map((e=>Xr(e))):e,r=Ha(s.shape,s.dtype,t),o=dy(r,a);return n.makeTensorInfo(o.shape,o.dtype,o.values)}const o=new vC(s.shape,a);return n.runWebGLProgram(o,[s],s.dtype)}const kC={kernelName:ir,backendName:"webgl",kernelFunc:wC};class SC{constructor(e){this.variableNames=["x","indices"],this.customUniforms=[{name:"n",type:"int"},{name:"firstPass",type:"int"},{name:"negativeInf",type:"float"},{name:"dir",type:"int"},{name:"inc",type:"int"}],this.outputShape=e,this.userCode="\n       void main() {\n         ivec2 coords = getOutputCoords();\n         int batch = coords[0];\n         int elemIdx = coords[1];\n\n         // We compare elements pair-wise within a group of size 2 * inc.\n         // The comparing rule for each group alternates between ascending\n         // and descending. Within each group, we compare each pair at\n         // positions i and i+inc. To decide whether an element at position i\n         // is x0 or x1, we mod it by 2 * inc, if the result is smaller than\n         // inc, it is in the first half of the group, we denote it as x0,\n         // otherwise we denote it as x1.\n         // For example, as shown in the Bitonic top K paper referenced above,\n         // Figure5(a) shows that element[1] is in the\n         // second half of the group when group size is 2, but it is in the\n         // first half of the group when group size is 4.\n\n         bool isFirstInPair = imod(elemIdx, 2 * inc) < inc;\n         int i = isFirstInPair ? elemIdx : elemIdx - inc;\n\n         int i0 = firstPass == 1 ? i : int(getIndices(batch, i));\n         int i1 = firstPass == 1 ? i + inc : int(getIndices(batch, i + inc));\n         float x0 = i0 < n ? getX(batch, i0) : negativeInf;\n         float x1 = i1 < n ? getX(batch, i1) : negativeInf;\n\n         // Denotes which direction indices are in (ascending or descending).\n         bool reverse = imod(elemIdx, 2 * dir) >= dir;\n         bool isGreater = x0 > x1 || (x0 == x1 && i1 > i0);\n         if (reverse == isGreater) { // Elements in opposite order of direction\n           int iTemp = i0;\n           i0 = i1;\n           i1 = iTemp;\n         }\n         if (isFirstInPair) {\n            setOutput(float(i0));\n         } else {\n            setOutput(float(i1));\n         }\n       }\n     "}}class CC{constructor(e){this.variableNames=["x","indices"],this.customUniforms=[{name:"n",type:"int"},{name:"firstPass",type:"int"},{name:"k",type:"int"}],this.outputShape=e,this.userCode="\n    void main() {\n         // Takes max of indices (0, k), (1, k + 1), (2, k + 2) ...\n         ivec2 coords = getOutputCoords();\n         int batch = coords[0];\n         int elemIdx = coords[1];\n\n         // The output size is half of the previous size.\n         // If the previous sequence is | | | | _ _ _ _  | | | |  _ _ _ _ (k=4),\n         // we only need to output the indices at positions |, the indices at\n         // positions _ can be thrown away, see Figure5(b) After Phase 2\n         // (Merge phase) in the Bitonic Top K paper referenced above.\n         // For example, the paper shows we only need to output the orange bars.\n         // The output sequence should look like this | | | | | | | |.\n         // Because the sequence is halved, to map the output index back\n         // to the previous sequence to find the corresponding value,\n         // we need to double the index. When we double the index,\n         // we basically interpolate a position, so 2i looks like\n         // | _ | _ | _ | _ | _ | _ | _. We move the | to the first k position\n         // of each 2k positions by - elemIdx % k. E.g. for output at\n         // index 4,5,6,7, we want to get the corresponding element at\n         // original index 8,9,10,11, for output at index 8,9,10,11,\n         // we want to get the corresponding element at original index\n         // 16,17,18,19, so on and so forth.\n\n         int i = elemIdx < k ? elemIdx : (elemIdx * 2 - imod(elemIdx, k));\n         int i0 = firstPass == 1 ? i : int(getIndices(batch, i));\n         int i1 = firstPass == 1 ? i + k : int(getIndices(batch, i + k));\n\n         float x0 = getX(batch, i0);\n         float x1 = i1 < n ? getX(batch, i1) : x0;\n\n         setOutput(x0 >= x1 ? float(i0) : float(i1));\n       }\n     "}}function IC(e,t){null!==t&&e.disposeIntermediateTensorInfo(t)}function TC(e){let t=1;for(;t<e;)t*=2;return t}const $C={kernelName:ur,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{k:a,sorted:o}=r,i=fe().getNumber("TOPK_LAST_DIM_CPU_HANDOFF_SIZE_THRESHOLD"),u=fe().getNumber("TOPK_K_CPU_HANDOFF_THRESHOLD"),l=s.shape,c=l[l.length-1];if(n.shouldExecuteOnCPU([s])||c<i||a>u){const e=n.readSync(s.dataId),[t,r]=py(e,l,s.dtype,a,o);return[n.makeTensorInfo(t.shape,t.dtype,t.values),n.makeTensorInfo(r.shape,r.dtype,r.values)]}if(0===a)return l[l.length-1]=0,[n.makeTensorInfo(l,s.dtype,[]),n.makeTensorInfo(l,"int32",[])];if(1===c)return[s,aw({attrs:{shape:l,dtype:"int32",value:0},backend:n})];const h=n.texData.get(s.dataId),d=null!==h&&h.isPacked,p=d?n.unpackTensor(s):s,f=B(l)/c,m=fx({inputs:{x:p},attrs:{shape:[f,c]},backend:n});d&&IC(n,p);const g=TC(a),y=TC(c);let x=null;const b=()=>null===x?[m,m]:[m,x],v=(e,t,r)=>{const s=b(),a=new SC(r),o=[[c],[null===x?1:0],[Number.NEGATIVE_INFINITY],[e],[t]],i=x;x=n.runWebGLProgram(a,s,"int32",o),IC(n,i)};for(let e=1;e<g;e*=2){const t=2*e;for(let n=e;n>=1;n/=2)v(t,n,[f,y])}for(let e=y;e>g;e/=2){const t=b(),r=new CC([f,e/2]),s=[[c],[null===x?1:0],[g]],a=x;x=n.runWebGLProgram(r,t,"int32",s),IC(n,a);const o=g/2,i=2*o;for(let e=o;e>=1;e/=2)v(i,e,x.shape)}let w=x;x=wb({inputs:{x},backend:n,attrs:{begin:0,size:[f,a]}}),IC(n,w);let k=Cw({inputs:{x:m,indices:x},backend:n,attrs:{axis:1,batchDims:1}});IC(n,m);const S=l.slice(0,-1);S.push(a),w=x,x=fx({inputs:{x},attrs:{shape:S},backend:n}),IC(n,w);const C=k;return k=fx({inputs:{x:k},attrs:{shape:S},backend:n}),IC(n,C),[k,x]}};class NC{constructor(e,t,n,r,s,a){this.variableNames=["Image","Transforms"],this.outputShape=a;const o="nearest"===n?1:2;let i;switch(r){case"constant":default:i=1;break;case"reflect":i=2;break;case"wrap":i=3;break;case"nearest":i=4}this.userCode=`\n            float mapCoord(float outCoord, float len) {\n              float inCoord = outCoord;\n              if(${i} == 2) {\n                if (inCoord < 0.0) {\n                  if (len <= 1.0) {\n                    inCoord = 0.0;\n                  } else {\n                    float sz2 = 2.0 * len;\n                    if (inCoord < sz2) {\n                      inCoord = sz2 * float(int(float(-inCoord / sz2))) +\n                      inCoord;\n                    }\n                    inCoord = inCoord < -len ? inCoord + sz2 : -inCoord - 1.0;\n                  }\n                } else if (inCoord > len - 1.0) {\n                  if (len <= 1.0) {\n                    inCoord = 0.0;\n                  } else {\n                    float sz2 = 2.0 * len;\n                    inCoord -= sz2 * float(int(float(inCoord / sz2)));\n                    if (inCoord >= len) {\n                      inCoord = sz2 - inCoord - 1.0;\n                    }\n                  }\n                }\n                return clamp(inCoord, 0.0, len - 1.0);\n              } else if (${i} == 3) {\n                if (inCoord < 0.0) {\n                  if (len <= 1.0) {\n                    inCoord = 0.0;\n                  } else {\n                    float sz = len - 1.0;\n                    inCoord += len * (float(int(float(-inCoord / sz))) + 1.0);\n                  }\n                } else if (inCoord > len - 1.0) {\n                  if (len <= 1.0) {\n                    inCoord = 0.0;\n                  } else {\n                    float sz = len - 1.0;\n                    inCoord -= len * float(int(float(inCoord / sz)));\n                  }\n                }\n                return clamp(inCoord, 0.0, len - 1.0);\n              } else if (${i} == 4) {\n                return clamp(outCoord, 0.0, len - 1.0);\n              } else {\n                return outCoord;\n              }\n            }\n\n            float readWithFillValue(int batch, int coordY, int coordX,\n              int channel) {\n              float outputValue;\n              if (0 <= coordY && coordY < ${e} && 0 <= coordX && coordX < ${t}) {\n                  outputValue = getImage(batch, coordY, coordX, channel);\n              } else {\n                outputValue = float(${s});\n              }\n              return outputValue;\n            }\n\n            void main() {\n              ivec4 coords = getOutputCoords();\n              float outputValue;\n              int batch = coords[0];\n              int x = coords[2];\n              int y = coords[1];\n              int channel = coords[3];\n              float xf = float(x);\n              float yf = float(y);\n              float a1 = getTransforms(batch, 0);\n              float a2 = getTransforms(batch, 1);\n              float a3 = getTransforms(batch, 2);\n              float b1 = getTransforms(batch, 3);\n              float b2 = getTransforms(batch, 4);\n              float b3 = getTransforms(batch, 5);\n              float c1 = getTransforms(batch, 6);\n              float c2 = getTransforms(batch, 7);\n              float projection = c1 * xf + c2 * yf + 1.0;\n              if (projection == 0.0) {\n                outputValue = float(${s});\n              } else {\n                float inX = (a1 * xf + a2 * yf + a3) / projection;\n                float inY = (b1 * xf + b2 * yf + b3) / projection;\n                float mapX = mapCoord(inX, float(${t}));\n                float mapY = mapCoord(inY, float(${e}));\n\n                if (${o} == 1) {\n                  int coordY = int(round(mapY));\n                  int coordX = int(round(mapX));\n                  outputValue = readWithFillValue(batch, coordY, coordX,\n                    channel);\n                } else {\n                  float yFloor = floor(mapY);\n                  float xFloor = floor(mapX);\n                  float yCeil = yFloor + 1.0;\n                  float xCeil = xFloor + 1.0;\n                  float valueYFloor = (xCeil - mapX) *\n                  readWithFillValue(batch, int(yFloor), int(xFloor), channel) +\n                  (mapX - xFloor) *\n                  readWithFillValue(batch, int(yFloor), int(xCeil), channel);\n                  float valueYCeil = (xCeil - mapX) *\n                  readWithFillValue(batch, int(yCeil), int(xFloor), channel) +\n                  (mapX - xFloor) *\n                  readWithFillValue(batch, int(yCeil), int(xCeil), channel);\n                  outputValue = (yCeil - mapY) * valueYFloor +\n                  (mapY - yFloor) * valueYCeil;\n                }\n              }\n              setOutput(outputValue);\n            }\n        `}}const EC={kernelName:lr,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{image:s,transforms:a}=t,{interpolation:o,fillMode:i,fillValue:u,outputShape:l}=r,[c,h,d,p]=s.shape,[f,m]=null!=l?l:[h,d],g=new NC(h,d,o,i,u,[c,f,m,p]);return n.runWebGLProgram(g,[s,a],"float32")}},RC={kernelName:hr,backendName:"webgl",kernelFunc:function(e){const{inputs:t,attrs:n,backend:r}=e,{axis:s}=n,{x:a}=t;xf(a,"unique"),console.warn("WARNING: ","UI might be locked temporarily as data is being downloaded");const o=r.readSync(a.dataId),{outputValues:i,outputShape:u,indices:l}=my(o,s,a.shape,a.dtype);return[r.makeTensorInfo(u,a.dtype,i),r.makeTensorInfo([l.length],"int32",l)]}},_C={kernelName:dr,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{value:s}=t;let{axis:a}=r;a<0&&(a+=s.shape.length);const o=s,i=o.shape.length,u=s.shape[a],l=new Array(i-1);let c=0;for(let e=0;e<i;e++)e!==a&&(l[c++]=o.shape[e]);const h=[],d=new Array(i).fill(0),p=o.shape.slice();p[a]=1;const f=new Array(u);for(let e=0;e<f.length;e++){d[a]=e;const t=wb({inputs:{x:o},backend:n,attrs:{begin:d,size:p}}),r=fx({inputs:{x:t},backend:n,attrs:{shape:l}});f[e]=r,h.push(t)}return h.forEach((e=>n.disposeIntermediateTensorInfo(e))),f}};class AC{constructor(e,t){this.variableNames=["x","segmentIds"];const n=e.windowSize,r=e.batchSize,s=e.inSize,a=e.numSegments,o=a*Math.ceil(s/n);this.outputShape=[r,o];const i=4*Math.floor(n/4),u=n%4,l="\n        sumValue += dot(values, segFilter);\n    ";let c="";s%n>0&&(c=`\n        if (inIdx < 0 || inIdx >= ${s}) {\n          return initializationValue;\n        }\n      `);let h="";s%n>0&&(h=`\n        if (inIdx < 0 || inIdx >= ${s}) {\n          return -1.0;\n        }\n      `),this.userCode=`\n      const float initializationValue = 0.0;\n\n      float getValue(int batch, int inIdx) {\n        ${c}\n        return getX(batch, inIdx);\n      }\n\n      float getSegmentIdAtIndex(int inIdx) {\n        ${h}\n        return getSegmentIds(inIdx);\n      }\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n        int outIdx = coords[1];\n        int inOffset = int(floor(float(outIdx) / float(\n          ${a})) * float(${n}));\n        int currentSeg = int(mod(float(outIdx), float(${a})));\n\n        float sumValue = 0.0;\n\n        for (int i = 0; i < ${i}; i += 4) {\n          int inIdx = inOffset + i;\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            getValue(batch, inIdx + 3)\n          );\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 2)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 3)) == currentSeg ? 1 : 0\n          );\n\n          ${l}\n        }\n\n        int inIdx = inOffset + ${i};\n        if (${1===u}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            initializationValue,\n            initializationValue,\n            initializationValue\n          );\n\n          int inIdxSeg = int(getSegmentIdAtIndex(inIdx));\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            0,\n            0,\n            0\n          );\n\n          ${l}\n        } else if (${2===u}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            initializationValue,\n            initializationValue\n          );\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,\n              0,\n              0\n          );\n\n          ${l}\n        } else if (${3===u}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            initializationValue\n          );\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 2)) == currentSeg ? 1 : 0,\n            0\n          );\n\n          ${l}\n        }\n        setOutput(sumValue);\n      }\n    `}}const OC={kernelName:pr,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,segmentIds:a}=t,{numSegments:o}=r,i=s.shape.length,u=[];let l=0;const c=Hu([l],i);let h=s;null!=c&&(h=Cx({inputs:{x:s},backend:n,attrs:{perm:c}}),u.push(h),l=Ku(1,i)[0]);const d=Pp(h.shape,l,o),p=B([h.shape[l]]),f=fx({inputs:{x:h},backend:n,attrs:{shape:[-1,p]}});u.push(f);const m=ks(s.dtype),g=(e,t,r,s,a)=>{const o=e.shape[0],i=e.shape[1],l=Fp(i,a),c=new AC({windowSize:l,inSize:i,batchSize:o,numSegments:a},t),h=n.compileAndRun(c,[e,r],s);if(u.push(h),h.shape[1]===a)return h;const d=nS({backend:n,attrs:{start:0,stop:a,step:1,dtype:"float32"}}),p=wC({inputs:{x:d},backend:n,attrs:{reps:[i/l]}});return u.push(d),u.push(p),g(h,t,p,s,a)},y=fx({inputs:{x:g(f,"unsortedSegmentSum",a,m,o)},backend:n,attrs:{shape:d}});let x=y;if(null!=c){u.push(y);const e=ju(c);x=Cx({inputs:{x},backend:n,attrs:{perm:e}})}return u.forEach((e=>n.disposeIntermediateTensorInfo(e))),x}},FC=[Nx,Rx,Ax,Fx,Mx,zx,Ux,Vx,qx,Xx,Qx,Jx,tb,rb,ab,ub,lb,db,pb,fb,yb,Sb,Cb,Ib,Tb,_b,Fb,Mb,Qy,zb,qb,nv,iv,lv,cv,hv,dv,fv,gv,xv,Cv,Iv,Tv,Nv,_v,Fv,Pv,Mv,Bv,zv,Vv,Wv,Hv,Kv,Xv,Qv,ew,rw,ow,uw,hw,pw,gw,bw,vw,kw,Iw,$w,Ew,Xy,Rw,Hb,Aw,Fw,Dw,ex,Lw,zw,Uw,Ww,Hw,Kw,Xw,Qw,ek,nk,sk,ok,ik,uk,hk,dk,pk,fk,mk,yk,vk,kk,_k,px,Ok,Pk,Mk,Bk,Nb,Uk,Gk,Hk,Xk,Qk,rx,Zk,Jk,eS,tS,rS,Rb,Ik,aS,iS,lS,mx,dS,fS,yS,bS,kS,CS,TS,NS,_S,OS,PS,MS,BS,US,WS,HS,kb,Rk,KS,qS,XS,YS,QS,ZS,JS,eC,rC,sC,iC,uC,lC,hC,dC,pC,fC,Nk,Sx,gC,xC,bC,kC,$C,EC,Ix,RC,_C,OC,Wk];for(const e of FC)Nr(e);var PC,DC,MC=n(264);fe().registerFlag("KEEP_INTERMEDIATE_TENSORS",(()=>!1),(e=>{e&&console.warn("Keep intermediate tensors is ON. This will print the values of all intermediate tensors during model inference. Not all models support this mode. For details, check e2e/benchmarks/ model_config.js. This significantly impacts performance.")})),function(e){e[e.DT_INVALID=0]="DT_INVALID",e[e.DT_FLOAT=1]="DT_FLOAT",e[e.DT_DOUBLE=2]="DT_DOUBLE",e[e.DT_INT32=3]="DT_INT32",e[e.DT_UINT8=4]="DT_UINT8",e[e.DT_INT16=5]="DT_INT16",e[e.DT_INT8=6]="DT_INT8",e[e.DT_STRING=7]="DT_STRING",e[e.DT_COMPLEX64=8]="DT_COMPLEX64",e[e.DT_INT64=9]="DT_INT64",e[e.DT_BOOL=10]="DT_BOOL",e[e.DT_QINT8=11]="DT_QINT8",e[e.DT_QUINT8=12]="DT_QUINT8",e[e.DT_QINT32=13]="DT_QINT32",e[e.DT_BFLOAT16=14]="DT_BFLOAT16",e[e.DT_QINT16=15]="DT_QINT16",e[e.DT_QUINT16=16]="DT_QUINT16",e[e.DT_UINT16=17]="DT_UINT16",e[e.DT_COMPLEX128=18]="DT_COMPLEX128",e[e.DT_HALF=19]="DT_HALF",e[e.DT_RESOURCE=20]="DT_RESOURCE",e[e.DT_VARIANT=21]="DT_VARIANT",e[e.DT_UINT32=22]="DT_UINT32",e[e.DT_UINT64=23]="DT_UINT64",e[e.DT_FLOAT_REF=101]="DT_FLOAT_REF",e[e.DT_DOUBLE_REF=102]="DT_DOUBLE_REF",e[e.DT_INT32_REF=103]="DT_INT32_REF",e[e.DT_UINT8_REF=104]="DT_UINT8_REF",e[e.DT_INT16_REF=105]="DT_INT16_REF",e[e.DT_INT8_REF=106]="DT_INT8_REF",e[e.DT_STRING_REF=107]="DT_STRING_REF",e[e.DT_COMPLEX64_REF=108]="DT_COMPLEX64_REF",e[e.DT_INT64_REF=109]="DT_INT64_REF",e[e.DT_BOOL_REF=110]="DT_BOOL_REF",e[e.DT_QINT8_REF=111]="DT_QINT8_REF",e[e.DT_QUINT8_REF=112]="DT_QUINT8_REF",e[e.DT_QINT32_REF=113]="DT_QINT32_REF",e[e.DT_BFLOAT16_REF=114]="DT_BFLOAT16_REF",e[e.DT_QINT16_REF=115]="DT_QINT16_REF",e[e.DT_QUINT16_REF=116]="DT_QUINT16_REF",e[e.DT_UINT16_REF=117]="DT_UINT16_REF",e[e.DT_COMPLEX128_REF=118]="DT_COMPLEX128_REF",e[e.DT_HALF_REF=119]="DT_HALF_REF",e[e.DT_RESOURCE_REF=120]="DT_RESOURCE_REF",e[e.DT_VARIANT_REF=121]="DT_VARIANT_REF",e[e.DT_UINT32_REF=122]="DT_UINT32_REF",e[e.DT_UINT64_REF=123]="DT_UINT64_REF"}(PC||(PC={})),function(e){let t;!function(e){e[e.LEGACY=0]="LEGACY",e[e.V1=1]="V1",e[e.V2=2]="V2"}(t=e.CheckpointFormatVersion||(e.CheckpointFormatVersion={}))}(DC||(DC={}));const LC={};function BC(e){return LC[e]}function zC(e,t,n,r,s){const a=t.inputParams[e];if(a&&void 0!==a.inputIndexStart){const e=a.inputIndexStart,o=0===a.inputIndexEnd?void 0:void 0===a.inputIndexEnd?e+1:a.inputIndexEnd,i=e<0?t.inputNames.length+e:e;if("tensor"===a.type)return UC(t.inputNames[i],n,r,s);if("tensors"===a.type){const a=t.inputs.slice(e,o),i=t.inputNames.slice(e,o).filter(((e,t)=>{var n;return"NoOp"!==(null===(n=a[t])||void 0===n?void 0:n.op)}));return i.map((e=>UC(e,n,r,s)))}const u=UC(t.inputNames[i],n,r,s),l=u.dataSync();return"number"===a.type?l[0]:se(u.shape,l)}const o=t.attrParams[e];return o&&o.value}function UC(e,t,n,r){const[s,a]=HC(e,n);if(null!=r){const e=r.getHashTableHandleByName(s);if(null!=e)return e}const o=n.currentContextIds.find((e=>!!t[GC(s,e)]));return void 0!==o?t[GC(s,o)][a]:void 0}function VC(e,t,n){return t[GC(e,n.currentContextId)]}function WC(e,t){const[n,r,s]=HC(e,t);return[GC(n,t&&t.currentContextId),r,s]}function GC(e,t){return t?`${e}-${t}`:e}function HC(e,t){if(""===e)return["",0,void 0];const n=null!=t&&null!=t.parseNodeNameCache;if(n){const n=t.parseNodeNameCache.get(e);if(null!=n)return n}const r=e.split(":");let s;if(1===r.length)s=[e,0,void 0];else{const e=r[0],t=3===r.length?r[1]:void 0;s=[e,Number(r[r.length-1]),t]}return n&&t.parseNodeNameCache.set(e,s),s}function jC(e,t,n){let r=zC("pad",e,t,n);if("explicit"===r){r=zC("explicitPaddings",e,t,n);const s=[[0,0],[0,0],[0,0],[0,0]];for(let e=0;e<4;e++)s[e][0]=r[2*e],s[e][1]=r[2*e+1];return s}return r}function KC(e){return e.kept?e:Ka(e)}const qC=[{tfOpName:"Add",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"AddV2",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"AddN",category:"arithmetic",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}]},{tfOpName:"BiasAdd",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"Sub",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"RealDiv",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Div",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"DivNoNan",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"FloorDiv",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Mul",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Maximum",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Minimum",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Pow",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"SquaredDifference",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Mod",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"FloorMod",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}],XC=[{tfOpName:"Abs",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Acos",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Asin",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Atan",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Atan2",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"y",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Ceil",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ClipByValue",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"clipValueMin",type:"number"},{start:2,name:"clipValueMax",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Complex",category:"basic_math",inputs:[{start:0,name:"real",type:"tensor"},{start:1,name:"imag",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ComplexAbs",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Cos",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Cosh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Elu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Exp",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Floor",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Log",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Imag",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"Tout",name:"outputType",type:"dtype",notSupported:!0}]},{tfOpName:"Neg",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Real",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"Tout",name:"outputType",type:"dtype",notSupported:!0}]},{tfOpName:"Prelu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"alpha",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Relu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Relu6",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Selu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sigmoid",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sin",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sinh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sqrt",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Rsqrt",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Square",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Tan",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Tanh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sign",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Round",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Expm1",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Log1p",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Reciprocal",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Softplus",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Asinh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Acosh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Atanh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Erf",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LeakyRelu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"alpha",name:"alpha",type:"number",defaultValue:.2},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"IsNan",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"IsFinite",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"IsInf",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}],YC=[{tfOpName:"EmptyTensorList",category:"control",inputs:[{start:0,name:"elementShape",type:"shape"},{start:1,name:"maxNumElements",type:"number"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"LoopCond",category:"control",inputs:[{start:0,name:"pred",type:"tensor"}]},{tfOpName:"Switch",category:"control",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"pred",type:"tensor"}]},{tfOpName:"Merge",category:"control",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}]},{tfOpName:"Enter",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"frame_name",name:"frameName",type:"string"},{tfName:"is_constant",name:"isConstant",type:"bool"}]},{tfOpName:"Exit",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"NextIteration",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"TensorArrayV3",category:"control",inputs:[{start:0,name:"size",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"element_shape",name:"elementShape",type:"shape"},{tfName:"dynamic_size",name:"dynamicSize",type:"bool"},{tfName:"clear_after_read",name:"clearAfterRead",type:"bool"},{tfName:"identical_element_shapes",name:"identicalElementShapes",type:"bool"},{tfName:"tensor_array_name",name:"name",type:"string"}]},{tfOpName:"TensorArrayWriteV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"tensor",type:"tensor"},{start:3,name:"flowIn",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"TensorArrayReadV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"flowIn",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"TensorArrayGatherV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"flowIn",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"element_shape",name:"elementShape",type:"shape"}]},{tfOpName:"TensorArrayScatterV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"tensor",type:"tensor"},{start:3,name:"flowIn",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"TensorArrayConcatV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"flowIn",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"element_shape_except0",name:"elementShapeExcept0",type:"shape",notSupported:!0}]},{tfOpName:"TensorArraySplitV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"tensor",type:"tensor"},{start:2,name:"lengths",type:"number[]"},{start:3,name:"flowIn",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"TensorArraySizeV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"flowIn",type:"number"}]},{tfOpName:"TensorArrayCloseV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"}]},{tfOpName:"StatelessIf",category:"control",inputs:[{start:0,name:"cond",type:"tensor"},{start:1,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"then_branch",name:"thenBranch",type:"func"},{tfName:"else_branch",name:"elseBranch",type:"func"}]},{tfOpName:"If",category:"control",inputs:[{start:0,name:"cond",type:"tensor"},{start:1,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"then_branch",name:"thenBranch",type:"func"},{tfName:"else_branch",name:"elseBranch",type:"func"}]},{tfOpName:"StatelessWhile",category:"control",inputs:[{start:0,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"cond",name:"cond",type:"func"},{tfName:"body",name:"body",type:"func"}]},{tfOpName:"While",category:"control",inputs:[{start:0,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"cond",name:"cond",type:"func"},{tfName:"body",name:"body",type:"func"}]},{tfOpName:"TensorListScatter",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListScatterV2",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"elementShape",type:"shape"},{start:3,name:"numElements",type:"number"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListGather",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListGetItem",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListSetItem",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"tensor",type:"tensor"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListReserve",category:"control",inputs:[{start:0,name:"elementShape",type:"shape"},{start:1,name:"numElements",type:"number"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListFromTensor",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListStack",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"},{tfName:"num_elements",name:"numElements",type:"dtype"}]},{tfOpName:"TensorListSplit",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"elementShape",type:"shape"},{start:2,name:"lengths",type:"number[]"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListConcat",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"}],attrs:[{tfName:"element_shape",name:"elementShape",type:"shape"},{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListConcatV2",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"}],attrs:[{tfName:"element_shape",name:"elementShape",type:"shape"},{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListPopBack",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListPushBack",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"tensor",type:"tensor"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListLength",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"}]},{tfOpName:"TensorListResize",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"size",type:"number"}]}],QC=[{tfOpName:"AvgPool",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MaxPool",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[],notSupported:!0},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MaxPoolWithArgmax",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"include_batch_in_index",name:"includeBatchInIndex",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"AvgPool3D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MaxPool3D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Conv1D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"stride",name:"stride",type:"number"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NWC"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"dilation",name:"dilation",type:"number",defaultValue:1}]},{tfOpName:"Conv2D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"useCudnnOnGpu",name:"useCudnnOnGpu",type:"bool"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"_FusedConv2D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"},{start:2,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"num_args",name:"numArgs",type:"number"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"use_cudnn_on_gpu",name:"useCudnnOnGpu",type:"bool",defaultValue:!0},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]",defaultValue:[1,1,1,1]},{tfName:"fused_ops",name:"fusedOps",type:"string[]",defaultValue:[]},{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:1e-4},{tfName:"leakyrelu_alpha",name:"leakyreluAlpha",type:"number",defaultValue:.2}]},{tfOpName:"Conv2DBackpropInput",category:"convolution",inputs:[{start:2,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"},{start:0,name:"outputShape",type:"number[]"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]",notSupported:!0}]},{tfOpName:"DepthwiseConv2d",category:"convolution",inputs:[{start:0,name:"input",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"DepthwiseConv2dNative",category:"convolution",inputs:[{start:0,name:"input",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"FusedDepthwiseConv2dNative",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"},{start:2,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"num_args",name:"numArgs",type:"number"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]",defaultValue:[1,1,1,1]},{tfName:"fused_ops",name:"fusedOps",type:"string[]",defaultValue:[]},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]}]},{tfOpName:"Conv3D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"Dilation2D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"rates",name:"dilations",type:"number[]"},{tfName:"padding",name:"pad",type:"string"}]}],ZC=[{tfOpName:"Fill",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"},{start:1,name:"value",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"LinSpace",category:"creation",inputs:[{start:0,name:"start",type:"number"},{start:1,name:"stop",type:"number"},{start:2,name:"num",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"OneHot",category:"creation",inputs:[{start:0,name:"indices",type:"tensor"},{start:1,name:"depth",type:"number"},{start:2,name:"onValue",type:"number",defaultValue:1},{start:3,name:"offValue",type:"number",defaultValue:0}],attrs:[{tfName:"axis",name:"axis",type:"number",notSupported:!0},{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"Ones",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"OnesLike",category:"creation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"}]},{tfOpName:"RandomStandardNormal",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"seed",name:"seed",type:"number",defaultValue:0},{tfName:"seed2",name:"seed2",type:"number",defaultValue:0,notSupported:!0},{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"T",name:"T",type:"number",notSupported:!0}]},{tfOpName:"RandomUniform",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"minval",name:"minval",type:"number",defaultValue:0},{tfName:"maxval",name:"maxval",type:"number",defaultValue:1},{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"seed",name:"seed",type:"number",defaultValue:0},{tfName:"seed2",name:"seed2",type:"number",defaultValue:0,notSupported:!0},{tfName:"T",name:"T",type:"number",notSupported:!0}]},{tfOpName:"RandomUniformInt",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"minval",name:"minval",type:"number"},{tfName:"maxval",name:"maxval",type:"number"},{tfName:"seed",name:"seed",type:"number",defaultValue:0},{tfName:"seed2",name:"seed2",type:"number",defaultValue:0,notSupported:!0}]},{tfOpName:"Range",category:"creation",inputs:[{start:0,name:"start",type:"number"},{start:1,name:"stop",type:"number"},{start:2,name:"step",type:"number",defaultValue:0}],attrs:[{tfName:"Tidx",name:"dtype",type:"dtype"}]},{tfOpName:"TruncatedNormal",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"means",name:"mean",type:"number",defaultValue:0},{tfName:"stddev",name:"stdDev",type:"number",defaultValue:1},{tfName:"seed",name:"seed",type:"number"},{tfName:"seed2",name:"seed2",type:"number",defaultValue:0,notSupported:!0},{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"T",name:"T",type:"number",notSupported:!0}]},{tfOpName:"Zeros",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"ZerosLike",category:"creation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"Multinomial",category:"creation",inputs:[{start:0,name:"logits",type:"tensor"},{start:1,name:"numSamples",type:"number"}],attrs:[{tfName:"seed",name:"seed",type:"number"},{tfName:"seed2",name:"seed2",type:"number"},{tfName:"T",name:"dtype",type:"dtype"},{tfName:"output_dtype",name:"output_dtype",type:"dtype"}]}],JC=[{tfOpName:"NonMaxSuppressionV2",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"}]},{tfOpName:"NonMaxSuppressionV3",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"},{start:4,name:"scoreThreshold",type:"number"}]},{tfOpName:"NonMaxSuppressionV4",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"},{start:4,name:"scoreThreshold",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"T_threshold",name:"threshold",type:"dtype",notSupported:!0},{tfName:"pad_to_max_output_size",name:"padToMaxOutputSize",type:"bool"}]},{tfOpName:"NonMaxSuppressionV5",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"},{start:4,name:"scoreThreshold",type:"number"},{start:5,name:"softNmsSigma",type:"number"}]},{tfOpName:"Where",category:"dynamic",inputs:[{start:0,name:"condition",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ListDiff",category:"dynamic",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"y",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}],eI=[{tfOpName:"LowerBound",category:"evaluation",inputs:[{start:0,name:"sortedSequence",type:"tensor"},{start:1,name:"values",type:"tensor"}]},{tfOpName:"TopKV2",category:"evaluation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"k",type:"number"}],attrs:[{tfName:"sorted",name:"sorted",type:"bool"}]},{tfOpName:"UpperBound",category:"evaluation",inputs:[{start:0,name:"sortedSequence",type:"tensor"},{start:1,name:"values",type:"tensor"}]},{tfOpName:"Unique",category:"evaluation",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"UniqueV2",category:"evaluation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]}],tI=[{tfOpName:"PlaceholderWithDefault",category:"graph",inputs:[{start:0,name:"default",type:"tensor"}],attrs:[{tfName:"shape",name:"shape",type:"shape"},{tfName:"dtype",name:"dtype",type:"dtype"}]},{tfOpName:"Placeholder",category:"graph",attrs:[{tfName:"shape",name:"shape",type:"shape"},{tfName:"dtype",name:"dtype",type:"dtype"}]},{tfOpName:"Const",category:"graph"},{tfOpName:"Identity",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"IdentityN",category:"graph",inputs:[{start:0,end:0,name:"x",type:"tensors"}]},{tfOpName:"Snapshot",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"Rank",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"Size",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"Shape",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"ShapeN",category:"graph",inputs:[{start:0,end:0,name:"x",type:"tensors"}]},{tfOpName:"Print",category:"graph",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"data",type:"tensors"}],attrs:[{tfName:"message",name:"message",type:"string"},{tfName:"first_n",name:"firstN",type:"number",notSupported:!0},{tfName:"summarize",name:"summarize",type:"number",defaultValue:3}]},{tfOpName:"NoOp",category:"graph",inputs:[]},{tfOpName:"StopGradient",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"FakeQuantWithMinMaxVars",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"min",name:"min",type:"number"},{tfName:"max",name:"max",type:"number"}]}],nI=[{tfOpName:"HashTable",category:"hash_table",inputs:[],attrs:[{tfName:"shared_name",name:"sharedName",type:"string"},{tfName:"use_node_name_sharing",name:"useNodeNameSharing",type:"bool"},{tfName:"key_dtype",name:"keyDType",type:"dtype"},{tfName:"value_dtype",name:"valueDType",type:"dtype"}]},{tfOpName:"HashTableV2",category:"hash_table",inputs:[],attrs:[{tfName:"shared_name",name:"sharedName",type:"string"},{tfName:"use_node_name_sharing",name:"useNodeNameSharing",type:"bool"},{tfName:"key_dtype",name:"keyDType",type:"dtype"},{tfName:"value_dtype",name:"valueDType",type:"dtype"}]},{tfOpName:"LookupTableImport",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"values",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableImportV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"values",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableFind",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableFindV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableSize",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"}]},{tfOpName:"LookupTableSizeV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"}]},{tfOpName:"InitializeTable",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"values",type:"tensor"}]},{tfOpName:"InitializeTableV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"values",type:"tensor"}]}],rI=[{tfOpName:"ResizeBilinear",category:"image",inputs:[{start:0,name:"images",type:"tensor"},{start:1,name:"size",type:"number[]"}],attrs:[{tfName:"align_corners",name:"alignCorners",type:"bool"},{tfName:"half_pixel_centers",name:"halfPixelCenters",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ResizeNearestNeighbor",category:"image",inputs:[{start:0,name:"images",type:"tensor"},{start:1,name:"size",type:"number[]"}],attrs:[{tfName:"align_corners",name:"alignCorners",type:"bool"},{tfName:"half_pixel_centers",name:"halfPixelCenters",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"CropAndResize",category:"image",inputs:[{start:0,name:"image",type:"tensor"},{start:1,name:"boxes",type:"tensor"},{start:2,name:"boxInd",type:"tensor"},{start:3,name:"cropSize",type:"number[]"}],attrs:[{tfName:"method",name:"method",type:"string"},{tfName:"extrapolation_value",name:"extrapolationValue",type:"number"}]},{tfOpName:"ImageProjectiveTransformV3",category:"image",inputs:[{start:0,name:"images",type:"tensor"},{start:1,name:"transforms",type:"tensor"},{start:2,name:"outputShape",type:"number[]"},{start:3,name:"fillValue",type:"number"}],attrs:[{tfName:"interpolation",name:"interpolation",type:"string"},{tfName:"fill_mode",name:"fillMode",type:"string"}]}],sI=[{tfOpName:"Equal",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"NotEqual",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Greater",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"GreaterEqual",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Less",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LessEqual",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LogicalAnd",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LogicalNot",category:"logical",inputs:[{start:0,name:"a",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LogicalOr",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Select",category:"logical",inputs:[{start:0,name:"condition",type:"tensor"},{start:1,name:"a",type:"tensor"},{start:2,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"SelectV2",category:"logical",inputs:[{start:0,name:"condition",type:"tensor"},{start:1,name:"a",type:"tensor"},{start:2,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"BitwiseAnd",category:"logical",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"y",type:"tensor"}]}],aI=[{tfOpName:"_FusedMatMul",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"},{start:2,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"num_args",name:"numArgs",type:"number"},{tfName:"fused_ops",name:"fusedOps",type:"string[]",defaultValue:[]},{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:1e-4},{tfName:"transpose_a",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"transpose_b",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"leakyrelu_alpha",name:"leakyreluAlpha",type:"number",defaultValue:.2},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MatMul",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"transpose_a",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"transpose_b",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"BatchMatMul",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"adj_x",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"adj_y",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"BatchMatMulV2",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"adj_x",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"adj_y",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Transpose",category:"matrices",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"perm",type:"number[]"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Einsum",category:"matrices",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}],attrs:[{tfName:"equation",name:"equation",type:"string"},{tfName:"N",name:"n",type:"number",defaultValue:2},{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"MatrixBandPart",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"numLower",type:"tensor"},{start:1,name:"numUpper",type:"tensor"}]}],oI=[{tfOpName:"EuclideanNorm",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool",defaultValue:!1}]},{tfOpName:"FusedBatchNorm",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"scale",type:"tensor"},{start:2,name:"offset",type:"tensor"},{start:3,name:"mean",type:"tensor"},{start:4,name:"variance",type:"tensor"}],attrs:[{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:.001},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"FusedBatchNormV2",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"scale",type:"tensor"},{start:2,name:"offset",type:"tensor"},{start:3,name:"mean",type:"tensor"},{start:4,name:"variance",type:"tensor"}],attrs:[{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:.001},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"FusedBatchNormV3",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"scale",type:"tensor"},{start:2,name:"offset",type:"tensor"},{start:3,name:"mean",type:"tensor"},{start:4,name:"variance",type:"tensor"}],attrs:[{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:.001},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"LRN",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"depth_radius",name:"radius",type:"number",defaultValue:5},{tfName:"bias",name:"bias",type:"number",defaultValue:1},{tfName:"alpha",name:"alpha",type:"number",defaultValue:1},{tfName:"beta",name:"beta",type:"number",defaultValue:.5}]},{tfOpName:"Softmax",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"LogSoftmax",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"}]}],iI=[{tfOpName:"Bincount",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"size",type:"number"},{start:2,name:"weights",type:"tensor"}]},{tfOpName:"DenseBincount",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"size",type:"number"},{start:2,name:"weights",type:"tensor"}],attrs:[{tfName:"binary_output",name:"binaryOutput",type:"bool"}]},{tfOpName:"Max",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Mean",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Min",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Sum",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"All",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Any",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"ArgMax",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]},{tfOpName:"ArgMin",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]},{tfOpName:"Prod",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Cumprod",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}],attrs:[{tfName:"exclusive",name:"exclusive",type:"bool"},{tfName:"reverse",name:"reverse",type:"bool"}]},{tfOpName:"Cumsum",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}],attrs:[{tfName:"exclusive",name:"exclusive",type:"bool"},{tfName:"reverse",name:"reverse",type:"bool"}]}],uI=[{tfOpName:"ConcatV2",category:"slice_join",inputs:[{start:0,end:-1,name:"tensors",type:"tensors"},{start:-1,name:"axis",type:"number"}],attrs:[{tfName:"N",name:"n",type:"number",defaultValue:2}]},{tfOpName:"Concat",category:"slice_join",inputs:[{start:1,end:0,name:"tensors",type:"tensors"},{start:0,name:"axis",type:"number"}],attrs:[{tfName:"N",name:"n",type:"number",defaultValue:2}]},{tfOpName:"GatherV2",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"indices",type:"tensor"},{start:2,name:"axis",type:"number",defaultValue:0}],attrs:[{tfName:"batch_dims",name:"batchDims",type:"number",defaultValue:0}]},{tfOpName:"Gather",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"indices",type:"tensor"}],attrs:[{tfName:"validate_indices",name:"validateIndices",type:"bool",notSupported:!0}]},{tfOpName:"Reverse",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"dims",type:"bool[]"}]},{tfOpName:"ReverseV2",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}]},{tfOpName:"Slice",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"begin",type:"number[]"},{start:2,name:"size",type:"number[]"}]},{tfOpName:"StridedSlice",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"begin",type:"number[]"},{start:2,name:"end",type:"number[]"},{start:3,name:"strides",type:"number[]"}],attrs:[{tfName:"begin_mask",name:"beginMask",type:"number",defaultValue:0},{tfName:"end_mask",name:"endMask",type:"number",defaultValue:0},{tfName:"new_axis_mask",name:"newAxisMask",type:"number",defaultValue:0},{tfName:"ellipsis_mask",name:"ellipsisMask",type:"number",defaultValue:0},{tfName:"shrink_axis_mask",name:"shrinkAxisMask",type:"number",defaultValue:0}]},{tfOpName:"Pack",category:"slice_join",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}],attrs:[{tfName:"axis",name:"axis",type:"number",defaultValue:0}]},{tfOpName:"Unpack",category:"slice_join",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"axis",name:"axis",type:"number",defaultValue:0},{tfName:"num",name:"num",type:"number",defaultValue:0,notSupported:!0}]},{tfOpName:"Tile",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"reps",type:"number[]"}]},{tfOpName:"Split",category:"slice_join",inputs:[{start:0,name:"axis",type:"number",defaultValue:0},{start:1,name:"x",type:"tensor"}],attrs:[{tfName:"num_split",name:"numOrSizeSplits",type:"number",defaultValue:1}]},{tfOpName:"SplitV",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"numOrSizeSplits",type:"number[]"},{start:2,name:"axis",type:"number",defaultValue:0}]},{tfOpName:"ScatterNd",category:"slice_join",inputs:[{start:0,name:"indices",type:"tensor"},{start:1,name:"values",type:"tensor"},{start:2,name:"shape",type:"number[]"}]},{tfOpName:"GatherNd",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"indices",type:"tensor"}]},{tfOpName:"SparseToDense",category:"slice_join",inputs:[{start:0,name:"sparseIndices",type:"tensor"},{start:1,name:"outputShape",type:"number[]"},{start:2,name:"sparseValues",type:"tensor"},{start:3,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"validate_indices",name:"validateIndices",type:"bool",defaultValue:!1,notSupported:!0}]},{tfOpName:"TensorScatterUpdate",category:"slice_join",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"indices",type:"tensor"},{start:2,name:"values",type:"tensor"}]}],lI=[{tfOpName:"SparseFillEmptyRows",category:"sparse",inputs:[{start:0,name:"indices",type:"tensor"},{start:1,name:"values",type:"tensor"},{start:2,name:"denseShape",type:"tensor"},{start:3,name:"defaultValue",type:"tensor"}]},{tfOpName:"SparseReshape",category:"sparse",inputs:[{start:0,name:"inputIndices",type:"tensor"},{start:1,name:"inputShape",type:"tensor"},{start:2,name:"newShape",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"SparseSegmentMean",category:"sparse",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"indices",type:"tensor"},{start:2,name:"segmentIds",type:"tensor"}]},{tfOpName:"SparseSegmentSum",category:"sparse",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"indices",type:"tensor"},{start:2,name:"segmentIds",type:"tensor"}]}],cI=[{tfOpName:"FFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"IFFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"RFFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"fft_length",type:"number",notSupported:!0}]},{tfOpName:"IRFFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"fft_length",type:"number",notSupported:!0}]}],hI=[{tfOpName:"StaticRegexReplace",category:"string",inputs:[{start:0,name:"input",type:"tensor"}],attrs:[{tfName:"pattern",name:"pattern",type:"string"},{tfName:"rewrite",name:"rewrite",type:"string"},{tfName:"replace_global",name:"replaceGlobal",type:"bool"}]},{tfOpName:"StringNGrams",category:"string",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"dataSplits",type:"tensor"}],attrs:[{tfName:"separator",name:"separator",type:"string"},{tfName:"ngram_widths",name:"nGramWidths",type:"number[]"},{tfName:"left_pad",name:"leftPad",type:"string"},{tfName:"right_pad",name:"rightPad",type:"string"},{tfName:"pad_width",name:"padWidth",type:"number"},{tfName:"preserve_short_sequences",name:"preserveShortSequences",type:"bool"}],outputs:["ngrams","ngrams_splits"]},{tfOpName:"StringSplit",category:"string",inputs:[{start:0,name:"input",type:"tensor"},{start:1,name:"delimiter",type:"tensor"}],attrs:[{tfName:"skip_empty",name:"skipEmpty",type:"bool"}],outputs:["indices","values","shape"]},{tfOpName:"StringToHashBucketFast",category:"string",inputs:[{start:0,name:"input",type:"tensor"}],attrs:[{tfName:"num_buckets",name:"numBuckets",type:"number"}]}],dI=[{tfOpName:"Cast",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"SrcT",name:"sdtype",type:"dtype",notSupported:!0},{tfName:"DstT",name:"dtype",type:"dtype"}]},{tfOpName:"ExpandDims",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]},{tfOpName:"MirrorPad",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"padding",type:"number[]"}],attrs:[{tfName:"mode",name:"mode",type:"string"}]},{tfOpName:"Pad",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"padding",type:"number[]"}],attrs:[{tfName:"constant_value",name:"constantValue",type:"number",defaultValue:0}]},{tfOpName:"PadV2",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"padding",type:"number[]"},{start:2,name:"constantValue",type:"number",defaultValue:0}]},{tfOpName:"Reshape",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"shape",type:"number[]"}]},{tfOpName:"EnsureShape",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"shape",type:"number[]"}]},{tfOpName:"Squeeze",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"axis",tfDeprecatedName:"squeeze_dims",name:"axis",type:"number[]"}]},{tfOpName:"SpaceToBatchND",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"blockShape",type:"number[]"},{start:2,name:"paddings",type:"number[]"}]},{tfOpName:"BatchToSpaceND",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"blockShape",type:"number[]"},{start:2,name:"crops",type:"number[]"}]},{tfOpName:"DepthToSpace",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"block_size",name:"blockSize",type:"number"},{tfName:"data_format",name:"dataFormat",type:"string"}]},{tfOpName:"BroadcastTo",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"shape",type:"number[]"}],attrs:[]},{tfOpName:"BroadcastArgs",category:"transformation",inputs:[{start:0,name:"s0",type:"tensor"},{start:1,name:"s1",type:"tensor"}],attrs:[]}];class pI{static get Instance(){return this._instance||(this._instance=new this)}constructor(){const e=[].concat(...[l,c,h,d,p,f,m,g,y,x,b,v,w,k,S,C,I,T,$].map((e=>e.json)));this.opMappers=e.reduce(((e,t)=>(e[t.tfOpName]=t,e)),{})}transformGraph(e,t={}){const n=e.node,r=[],s=[],a=[],o=n.reduce(((e,t)=>(e[t.name]=this.mapNode(t),t.op.startsWith("Placeholder")?r.push(e[t.name]):"Const"===t.op?s.push(e[t.name]):null!=t.input&&0!==t.input.length||a.push(e[t.name]),e)),{});let i=[];const u=[];let l={},c={};null!=t&&(l=this.mapSignatureEntries(t.inputs),c=this.mapSignatureEntries(t.outputs));const h=Object.keys(o);h.forEach((e=>{const t=o[e];t.inputNames.forEach(((e,n)=>{const[r,,s]=WC(e),a=o[r];if(null!=a.outputs){const e=a.outputs.indexOf(s);if(-1!==e){const s=`${r}:${e}`;t.inputNames[n]=s}}t.inputs.push(a),a.children.push(t)}))})),0===Object.keys(c).length?h.forEach((e=>{const t=o[e];0===t.children.length&&u.push(t)})):Object.keys(c).forEach((e=>{const[t]=WC(e),n=o[t];null!=n&&(n.signatureKey=c[e],u.push(n))})),Object.keys(l).length>0?Object.keys(l).forEach((e=>{const[t]=WC(e),n=o[t];n&&(n.signatureKey=l[e],i.push(n))})):i=r;let d={};null!=e.library&&null!=e.library.function&&(d=e.library.function.reduce(((e,t)=>(e[t.signature.name]=this.mapFunction(t),e)),{}));const p={nodes:o,inputs:i,outputs:u,weights:s,placeholders:r,signature:t,functions:d};return a.length>0&&(p.initNodes=a),p}mapSignatureEntries(e){return Object.keys(e||{}).reduce(((t,n)=>(t[e[n].name]=n,t)),{})}mapNode(e){const t=BC(e.op)||this.opMappers[e.op]||{};null==e.attr&&(e.attr={});const n={name:e.name,op:e.op,category:t.category,inputNames:(e.input||[]).map((e=>e.startsWith("^")?e.slice(1):e)),inputs:[],children:[],inputParams:{},attrParams:{},rawAttrs:e.attr,outputs:t.outputs};return null!=t.inputs&&(n.inputParams=t.inputs.reduce(((e,t)=>(e[t.name]={type:t.type,inputIndexStart:t.start,inputIndexEnd:t.end},e)),{})),null!=t.attrs&&(n.attrParams=t.attrs.reduce(((t,n)=>{const r=n.type;let s;switch(n.type){case"string":s=mI(e.attr,n.tfName,n.defaultValue),void 0===s&&n.tfDeprecatedName&&(s=mI(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"string[]":s=II(e.attr,n.tfName,n.defaultValue),void 0===s&&n.tfDeprecatedName&&(s=II(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"number":s=yI(e.attr,n.tfName,n.defaultValue||0),void 0===s&&n.tfDeprecatedName&&(s=yI(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"number[]":s=CI(e.attr,n.tfName,n.defaultValue),void 0===s&&n.tfDeprecatedName&&(s=CI(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"bool":s=gI(e.attr,n.tfName,n.defaultValue),void 0===s&&n.tfDeprecatedName&&(s=gI(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"bool[]":s=$I(e.attr,n.tfName,n.defaultValue),void 0===s&&n.tfDeprecatedName&&(s=$I(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"shape":s=SI(e.attr,n.tfName,n.defaultValue),void 0===s&&n.tfDeprecatedName&&(s=SI(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"shape[]":s=TI(e.attr,n.tfName,n.defaultValue),void 0===s&&n.tfDeprecatedName&&(s=TI(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"dtype":s=vI(e.attr,n.tfName,n.defaultValue),void 0===s&&n.tfDeprecatedName&&(s=vI(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"dtype[]":s=wI(e.attr,n.tfName,n.defaultValue),void 0===s&&n.tfDeprecatedName&&(s=wI(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"func":s=bI(e.attr,n.tfName,n.defaultValue),void 0===s&&n.tfDeprecatedName&&(s=bI(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"tensor":case"tensors":break;default:throw new Error(`Unsupported param type: ${n.type} for op: ${e.op}`)}return t[n.name]={value:s,type:r},t}),{})),n}mapFunction(e){const t=e.nodeDef,n=[];let r={};null!=t&&(r=t.reduce(((e,t)=>(e[t.name]=this.mapNode(t),"Const"===t.op&&n.push(e[t.name]),e)),{}));const s=[],a=[];e.signature.inputArg.forEach((e=>{const[t]=WC(e.name),n={name:t,op:"Placeholder",inputs:[],inputNames:[],category:"graph",inputParams:{},attrParams:{dtype:{value:xI(e.type),type:"dtype"}},children:[]};n.signatureKey=e.name,s.push(n),r[t]=n})),Object.keys(r).forEach((e=>{const t=r[e];t.inputNames.forEach(((e,n)=>{const[s,,a]=WC(e),o=r[s];if(null!=o.outputs){const e=o.outputs.indexOf(a);if(-1!==e){const r=`${s}:${e}`;t.inputNames[n]=r}}t.inputs.push(o),o.children.push(t)}))}));const o=e.ret;e.signature.outputArg.forEach((e=>{const[t,n]=WC(o[e.name]),s=r[t];null!=s&&(s.defaultOutput=n,a.push(s))}));const i=this.mapArgsToSignature(e);return{nodes:r,inputs:s,outputs:a,weights:n,placeholders:[],signature:i}}mapArgsToSignature(e){return{methodName:e.signature.name,inputs:e.signature.inputArg.reduce(((e,t)=>(e[t.name]=this.mapArgToTensorInfo(t),e)),{}),outputs:e.signature.outputArg.reduce(((t,n)=>(t[n.name]=this.mapArgToTensorInfo(n,e.ret),t)),{})}}mapArgToTensorInfo(e,t){let n=e.name;return null!=t&&(n=t[n]),{name:n,dtype:e.type}}}function fI(e,t){const n=Array.isArray(e)?String.fromCharCode.apply(null,e):function(e){const t=fe().global;if(void 0!==t.atob)return t.atob(e);if("undefined"!=typeof Buffer)return new Buffer(e,"base64").toString();throw new Error("Unable to decode base64 in this environment. Missing built-in atob() or Buffer()")}(e);return t?n:n.toLowerCase()}function mI(e,t,n,r=!1){const s=e[t];return null!=s?fI(s.s,r):n}function gI(e,t,n){const r=e[t];return r?r.b:n}function yI(e,t,n){const r=e[t]||{},s=null!=r.i?r.i:null!=r.f?r.f:n;return"number"==typeof s?s:parseInt(s,10)}function xI(e){switch("string"==typeof e&&(e=PC[e]),e){case PC.DT_FLOAT:case PC.DT_HALF:return"float32";case PC.DT_INT32:case PC.DT_INT64:case PC.DT_INT8:case PC.DT_UINT8:return"int32";case PC.DT_BOOL:return"bool";case PC.DT_DOUBLE:return"float32";case PC.DT_STRING:return"string";default:return null}}function bI(e,t,n){const r=e[t];return r&&r.func?r.func.name:n}function vI(e,t,n){const r=e[t];return r&&r.type?xI(r.type):n}function wI(e,t,n){const r=e[t];return r&&r.list&&r.list.type?r.list.type.map((e=>xI(e))):n}function kI(e){if(!e.unknownRank)return null!=e.dim?e.dim.map((e=>"number"==typeof e.size?e.size:parseInt(e.size,10))):[]}function SI(e,t,n){const r=e[t];return r&&r.shape?kI(r.shape):n}function CI(e,t,n){const r=e[t];return r?((r.list.f&&r.list.f.length?r.list.f:r.list.i)||[]).map((e=>"number"==typeof e?e:parseInt(e,10))):n}function II(e,t,n,r=!1){const s=e[t];return s&&s.list&&s.list.s?s.list.s.map((e=>fI(e,r))):n}function TI(e,t,n){const r=e[t];return r&&r.list&&r.list.shape?r.list.shape.map((e=>kI(e))):n}function $I(e,t,n){const r=e[t];return r&&r.list&&r.list.b?r.list.b:n}class NI{constructor(e,t,n){this.node=e,this.tensorMap=t,this.context=n,this.inputs=[],this.attrs={},this.inputs=e.inputNames.map((e=>this.getInput(e))),null!=e.rawAttrs&&(this.attrs=Object.keys(e.rawAttrs).reduce(((e,t)=>(e[t]=this.getAttr(t),e)),{}))}getInput(e){return UC(e,this.tensorMap,this.context)}getAttr(e,t){const n=this.node.rawAttrs[e];if(null!=n.tensor)return UC(e,this.tensorMap,this.context);if(null!=n.i||null!=n.f)return yI(this.node.rawAttrs,e,t);if(null!=n.s)return mI(this.node.rawAttrs,e,t);if(null!=n.b)return gI(this.node.rawAttrs,e,t);if(null!=n.shape)return SI(this.node.rawAttrs,e,t);if(null!=n.type)return vI(this.node.rawAttrs,e,t);if(null!=n.list){if(null!=n.list.i||null!=n.list.f)return CI(this.node.rawAttrs,e,t);if(null!=n.list.s)return II(this.node.rawAttrs,e,t);if(null!=n.list.shape)return TI(this.node.rawAttrs,e,t);if(null!=n.list.b)return $I(this.node.rawAttrs,e,t);if(null!=n.list.type)return wI(this.node.rawAttrs,e,t)}return t}}function EI(e,t,n=""){if("number"!=typeof e&&"number"!=typeof t){D(e.length===t.length,(()=>n+` Shapes ${e} and ${t} must match`));for(let r=0;r<e.length;r++){const s=e[r],a=t[r];D(s<0||a<0||s===a,(()=>n+` Shapes ${e} and ${t} must match`))}}}function RI(e){return"number"!=typeof e&&!e.some((e=>e<0))}function _I(e,t,n){let r=AI(e,n);const s=!RI(r);if(s&&0===t.length)throw new Error(`Tried to calculate elements of an empty list with non-fully-defined elementShape: ${r}`);if(s&&t.forEach((e=>{r=AI(e.shape,r)})),!RI(r))throw new Error(`Non-fully-defined elementShape: ${r}`);return r}function AI(e,t){if("number"==typeof e)return t;if("number"==typeof t)return e;if(e.length!==t.length)throw new Error(`Incompatible ranks during merge: ${e} vs. ${t}`);const n=[];for(let r=0;r<e.length;++r){const s=e[r],a=t[r];if(s>=0&&a>=0&&s!==a)throw new Error(`Incompatible shape during merge: ${e} vs. ${t}`);n[r]=s>=0?s:a}return n}class OI{constructor(e,t,n,r,s,a,o){this.name=e,this.dtype=t,this.maxSize=n,this.elementShape=r,this.identicalElementShapes=s,this.dynamicSize=a,this.clearAfterRead=o,this.tensors=[],this.closed_=!1,this.idTensor=ho(0),Za(this.idTensor)}get id(){return this.idTensor.id}get closed(){return this.closed_}clearAndClose(e){this.tensors.forEach((t=>{null!=e&&e.has(t.tensor.id)||t.tensor.dispose()})),this.tensors=[],this.closed_=!0,this.idTensor.dispose()}size(){return this.tensors.length}read(e){if(this.closed_)throw new Error(`TensorArray ${this.name} has already been closed.`);if(e<0||e>=this.size())throw new Error(`Tried to read from index ${e}, but array size is: ${this.size()}`);const t=this.tensors[e];if(t.cleared)throw new Error(`TensorArray ${this.name}: Could not read index ${e} twice because it was cleared after a previous read (perhaps try setting clear_after_read = false?).`);return this.clearAfterRead&&(t.cleared=!0),t.read=!0,t.tensor}readMany(e){return e.map((e=>this.read(e)))}write(e,t){if(this.closed_)throw new Error(`TensorArray ${this.name} has already been closed.`);if(e<0||!this.dynamicSize&&e>=this.maxSize)throw new Error(`Tried to write to index ${e}, but array is not resizeable and size is: ${this.maxSize}`);const n=this.tensors[e]||{};if(t.dtype!==this.dtype)throw new Error(`TensorArray ${this.name}: Could not write to TensorArray index ${e},\n          because the value dtype is ${t.dtype}, but TensorArray dtype is ${this.dtype}.`);if(0!==this.size()||null!=this.elementShape&&0!==this.elementShape.length||(this.elementShape=t.shape),EI(this.elementShape,t.shape,`TensorArray ${this.name}: Could not write to TensorArray index ${e}.`),n.read)throw new Error(`TensorArray ${this.name}: Could not write to TensorArray index ${e}, because it has already been read.`);if(n.written)throw new Error(`TensorArray ${this.name}: Could not write to TensorArray index ${e}, because it has already been written.`);n.tensor=t,Za(t),n.written=!0,this.tensors[e]=n}writeMany(e,t){if(e.length!==t.length)throw new Error(`TensorArray ${this.name}: could not write multiple tensors,because the index size: ${e.length} is not the same as tensors size: ${t.length}.`);e.forEach(((e,n)=>this.write(e,t[n])))}gather(e,t){if(t&&t!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but gather requested dtype ${t}`);if(e)e=e.slice(0,this.size());else{e=[];for(let t=0;t<this.size();t++)e.push(t)}if(0===e.length)return js([],[0].concat(this.elementShape));const n=this.readMany(e);return EI(this.elementShape,n[0].shape,"TensorArray shape mismatch: "),Kc(n,0)}concat(e){if(e&&e!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but concat requested dtype ${e}`);if(0===this.size())return js([],[0].concat(this.elementShape));const t=[];for(let e=0;e<this.size();e++)t.push(e);const n=this.readMany(t);return EI(this.elementShape,n[0].shape,`TensorArray shape mismatch: tensor array shape (${this.elementShape}) vs first tensor shape (${n[0].shape})`),Xi(n,0)}scatter(e,t){if(t.dtype!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but tensor has dtype ${t.dtype}`);if(e.length!==t.shape[0])throw new Error(`Expected len(indices) == tensor.shape[0], but saw: ${e.length} vs. ${t.shape[0]}`);const n=Math.max(...e);if(!this.dynamicSize&&n>=this.maxSize)throw new Error(`Max index must be < array size (${n}  vs. ${this.maxSize})`);this.writeMany(e,ch(t,0))}split(e,t){if(t.dtype!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but tensor has dtype ${t.dtype}`);let n=0;const r=e.map((e=>(n+=e,n)));if(n!==t.shape[0])throw new Error(`Expected sum of lengths to be equal to\n          tensor.shape[0], but sum of lengths is\n        ${n}, and tensor's shape is: ${t.shape}`);if(!this.dynamicSize&&e.length!==this.maxSize)throw new Error(`TensorArray's size is not equal to the size of lengths (${this.maxSize} vs. ${e.length}), and the TensorArray is not marked as dynamically resizeable`);const s=0===n?0:t.size/n,a=[];Ya((()=>{t=ji(t,[1,n,s]);for(let n=0;n<e.length;++n){const o=[0,0===n?0:r[n-1],0],i=[1,e[n],s];a[n]=ji(Zi(t,o,i),this.elementShape)}return a}));const o=[];for(let t=0;t<e.length;t++)o[t]=t;this.writeMany(o,a)}}class FI{get id(){return this.idTensor.id}constructor(e,t,n,r=-1){this.tensors=e,this.elementShape=t,this.elementDtype=n,null!=e&&e.forEach((e=>{if(n!==e.dtype)throw new Error(`Invalid data types; op elements ${n}, but list elements ${e.dtype}`);EI(t,e.shape,"TensorList shape mismatch: "),Za(e)})),this.idTensor=ho(0),this.maxNumElements=r,Za(this.idTensor)}copy(){return new FI([...this.tensors],this.elementShape,this.elementDtype)}clearAndClose(e){this.tensors.forEach((t=>{null!=e&&e.has(t.id)||t.dispose()})),this.tensors.length=0,this.idTensor.dispose()}size(){return this.tensors.length}stack(e,t,n=-1){if(t!==this.elementDtype)throw new Error(`Invalid data types; op elements ${t}, but list elements ${this.elementDtype}`);if(-1!==n&&this.tensors.length!==n)throw new Error(`Operation expected a list with ${n} elements but got a list with ${this.tensors.length} elements.`);EI(e,this.elementShape,"TensorList shape mismatch: ");const r=_I(this.elementShape,this.tensors,e);return Ya((()=>{const e=this.tensors.map((e=>ji(e,r)));return Kc(e,0)}))}popBack(e,t){if(t!==this.elementDtype)throw new Error(`Invalid data types; op elements ${t}, but list elements ${this.elementDtype}`);if(0===this.size())throw new Error("Trying to pop from an empty list.");const n=_I(this.elementShape,this.tensors,e),r=this.tensors.pop();return r.kept=!1,EI(r.shape,e,"TensorList shape mismatch: "),ji(r,n)}pushBack(e){if(e.dtype!==this.elementDtype)throw new Error(`Invalid data types; op elements ${e.dtype}, but list elements ${this.elementDtype}`);if(EI(e.shape,this.elementShape,"TensorList shape mismatch: "),this.maxNumElements===this.size())throw new Error("Trying to push element into a full list.");Za(e),this.tensors.push(e)}resize(e){if(e<0)throw new Error(`TensorListResize expects size to be non-negative. Got: ${e}`);if(-1!==this.maxNumElements&&e>this.maxNumElements)throw new Error(`TensorListResize input size ${e} is greater maxNumElement ${this.maxNumElements}.`);const t=new FI([],this.elementShape,this.elementDtype,this.maxNumElements);t.tensors.length=e;for(let n=0;n<Math.min(this.tensors.length,e);++n)t.tensors[n]=this.tensors[n];return t}getItem(e,t,n){if(n!==this.elementDtype)throw new Error(`Invalid data types; op elements ${n}, but list elements ${this.elementDtype}`);if(e<0||e>this.tensors.length)throw new Error(`Trying to access element ${e} in a list with ${this.tensors.length} elements.`);if(null==this.tensors[e])throw new Error(`element at index ${e} is null.`);EI(this.tensors[e].shape,t,"TensorList shape mismatch: ");const r=_I(this.elementShape,this.tensors,t);return ji(this.tensors[e],r)}setItem(e,t){if(t.dtype!==this.elementDtype)throw new Error(`Invalid data types; op elements ${t.dtype}, but list elements ${this.elementDtype}`);if(e<0||-1!==this.maxNumElements&&e>=this.maxNumElements)throw new Error(`Trying to set element ${e} in a list with max ${this.maxNumElements} elements.`);EI(this.elementShape,t.shape,"TensorList shape mismatch: "),Za(t),null!=this.tensors[e]&&(this.tensors[e].kept=!1),this.tensors[e]=t}gather(e,t,n){if(t!==this.elementDtype)throw new Error(`Invalid data types; op elements ${t}, but list elements ${this.elementDtype}`);EI(this.elementShape,n,"TensorList shape mismatch: "),e=e.slice(0,this.size());const r=_I(this.elementShape,this.tensors,n);return 0===e.length?js([],[0].concat(r)):Ya((()=>{const t=e.map((e=>ji(this.tensors[e],r)));return Kc(t,0)}))}concat(e,t){if(e&&e!==this.elementDtype)throw new Error(`TensorList dtype is ${this.elementDtype} but concat requested dtype ${e}`);EI(this.elementShape,t,"TensorList shape mismatch: ");const n=_I(this.elementShape,this.tensors,t);return 0===this.size()?js([],[0].concat(n)):Ya((()=>{const e=this.tensors.map((e=>ji(e,n)));return Xi(e,0)}))}}function PI(e,t,n){const[r,s]=zC("fusedOps",e,t,n),a="biasadd"===r,o=!a,i="prelu"===s,u="fusedbatchnorm"===r,l=zC("numArgs",e,t,n);if(a){if(i&&2!==l)throw new Error("FusedConv2d and DepthwiseConv2d with BiasAdd and Prelu must have two extra arguments: bias and alpha.");if(!i&&a&&1!==l)throw new Error("FusedConv2d and DepthwiseConv2d with BiasAdd must have one extra argument: bias.")}if(u)throw new Error("FusedConv2d and DepthwiseConv2d with FusedBatchNorm is not supported");const c=zC("strides",e,t,n),h=jC(e,t,n),d=zC("dataFormat",e,t,n).toUpperCase(),p=zC("dilations",e,t,n);let[f,m]=zC("args",e,t,n);return o&&(m=f,f=void 0),{stride:c,pad:h,dataFormat:d,dilations:p,biasArg:f,preluArg:m,activationFunc:s,leakyreluAlpha:zC("leakyreluAlpha",e,t,n)}}function DI(e,t,n){return{boxes:zC("boxes",e,t,n),scores:zC("scores",e,t,n),maxOutputSize:zC("maxOutputSize",e,t,n),iouThreshold:zC("iouThreshold",e,t,n),scoreThreshold:zC("scoreThreshold",e,t,n),softNmsSigma:zC("softNmsSigma",e,t,n)}}class MI{get id(){return this.handle.id}constructor(e,t){this.keyDType=e,this.valueDType=t,this.handle=ho(0),this.tensorMap=new Map,Za(this.handle)}clearAndClose(){this.tensorMap.forEach((e=>e.dispose())),this.tensorMap.clear(),this.handle.dispose()}size(){return this.tensorMap.size}tensorSize(){return ho(this.size(),"int32")}async import(e,t){this.checkKeyAndValueTensor(e,t);const n=await e.data();return this.tensorMap.forEach((e=>e.dispose())),this.tensorMap.clear(),Ya((()=>{const e=ch(t),r=n.length,s=e.length;D(r===s,(()=>`The number of elements doesn't match, keys has ${r} elements, the values has ${s} elements.`));for(let t=0;t<r;t++){const r=n[t],s=e[t];Za(s),this.tensorMap.set(r,s)}return this.handle}))}async find(e,t){this.checkKeyAndValueTensor(e,t);const n=await e.data();return Ya((()=>{const e=[];for(let r=0;r<n.length;r++){const s=n[r],a=this.findWithDefault(s,t);e.push(a)}return Kc(e)}))}findWithDefault(e,t){const n=this.tensorMap.get(e);return null!=n?n:t}checkKeyAndValueTensor(e,t){if(e.dtype!==this.keyDType)throw new Error(`Expect key dtype ${this.keyDType}, but got ${e.dtype}`);if(t.dtype!==this.valueDType)throw new Error(`Expect value dtype ${this.valueDType}, but got ${t.dtype}`)}}function LI(e,t,n,r,s=Ya){const a=((e,t,n)=>{switch(e.category){case"arithmetic":return s((()=>((e,t,n,r=N)=>{switch(e.op){case"BiasAdd":case"AddV2":case"Add":return[r.add(zC("a",e,t,n),zC("b",e,t,n))];case"AddN":return[r.addN(zC("tensors",e,t,n))];case"FloorMod":case"Mod":return[r.mod(zC("a",e,t,n),zC("b",e,t,n))];case"Mul":return[r.mul(zC("a",e,t,n),zC("b",e,t,n))];case"RealDiv":case"Div":return[r.div(zC("a",e,t,n),zC("b",e,t,n))];case"DivNoNan":return[r.divNoNan(zC("a",e,t,n),zC("b",e,t,n))];case"FloorDiv":return[r.floorDiv(zC("a",e,t,n),zC("b",e,t,n))];case"Sub":return[r.sub(zC("a",e,t,n),zC("b",e,t,n))];case"Minimum":return[r.minimum(zC("a",e,t,n),zC("b",e,t,n))];case"Maximum":return[r.maximum(zC("a",e,t,n),zC("b",e,t,n))];case"Pow":return[r.pow(zC("a",e,t,n),zC("b",e,t,n))];case"SquaredDifference":return[r.squaredDifference(zC("a",e,t,n),zC("b",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"basic_math":return s((()=>((e,t,n,r=N)=>{switch(e.op){case"Abs":case"ComplexAbs":return[r.abs(zC("x",e,t,n))];case"Acos":return[r.acos(zC("x",e,t,n))];case"Acosh":return[r.acosh(zC("x",e,t,n))];case"Asin":return[r.asin(zC("x",e,t,n))];case"Asinh":return[r.asinh(zC("x",e,t,n))];case"Atan":return[r.atan(zC("x",e,t,n))];case"Atan2":return[r.atan2(zC("x",e,t,n),zC("y",e,t,n))];case"Atanh":return[r.atanh(zC("x",e,t,n))];case"Ceil":return[r.ceil(zC("x",e,t,n))];case"Complex":return[r.complex(zC("real",e,t,n),zC("imag",e,t,n))];case"Cos":return[r.cos(zC("x",e,t,n))];case"Cosh":return[r.cosh(zC("x",e,t,n))];case"Elu":return[r.elu(zC("x",e,t,n))];case"Erf":return[r.erf(zC("x",e,t,n))];case"Exp":return[r.exp(zC("x",e,t,n))];case"Expm1":return[r.expm1(zC("x",e,t,n))];case"Floor":return[r.floor(zC("x",e,t,n))];case"Log":return[r.log(zC("x",e,t,n))];case"Log1p":return[r.log1p(zC("x",e,t,n))];case"Imag":return[r.imag(zC("x",e,t,n))];case"Neg":return[r.neg(zC("x",e,t,n))];case"Reciprocal":return[r.reciprocal(zC("x",e,t,n))];case"Real":return[r.real(zC("x",e,t,n))];case"Relu":return[r.relu(zC("x",e,t,n))];case"Round":return[r.round(zC("x",e,t,n))];case"Selu":return[r.selu(zC("x",e,t,n))];case"Sigmoid":return[r.sigmoid(zC("x",e,t,n))];case"Sin":return[r.sin(zC("x",e,t,n))];case"Sign":return[r.sign(zC("x",e,t,n))];case"Sinh":return[r.sinh(zC("x",e,t,n))];case"Softplus":return[r.softplus(zC("x",e,t,n))];case"Sqrt":return[r.sqrt(zC("x",e,t,n))];case"Square":return[r.square(zC("x",e,t,n))];case"Tanh":return[r.tanh(zC("x",e,t,n))];case"Tan":return[r.tan(zC("x",e,t,n))];case"ClipByValue":return[r.clipByValue(zC("x",e,t,n),zC("clipValueMin",e,t,n),zC("clipValueMax",e,t,n))];case"Relu6":return[r.relu6(zC("x",e,t,n))];case"Rsqrt":return[r.rsqrt(UC(e.inputNames[0],t,n))];case"LeakyRelu":return[r.leakyRelu(zC("x",e,t,n),zC("alpha",e,t,n))];case"Prelu":return[r.prelu(zC("x",e,t,n),zC("alpha",e,t,n))];case"IsNan":return[r.isNaN(UC(e.inputNames[0],t,n))];case"IsInf":return[r.isInf(UC(e.inputNames[0],t,n))];case"IsFinite":return[r.isFinite(UC(e.inputNames[0],t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"control":return(async(e,t,n)=>{switch(e.op){case"If":case"StatelessIf":{const r=zC("thenBranch",e,t,n),s=zC("elseBranch",e,t,n),a=zC("cond",e,t,n),o=zC("args",e,t,n);return(await a.data())[0]?n.functionMap[r].executeFunctionAsync(o,n.tensorArrayMap,n.tensorListMap):n.functionMap[s].executeFunctionAsync(o,n.tensorArrayMap,n.tensorListMap)}case"While":case"StatelessWhile":{const r=zC("body",e,t,n),s=zC("cond",e,t,n),a=zC("args",e,t,n),o=await n.functionMap[s].executeFunctionAsync(a,n.tensorArrayMap,n.tensorListMap),i=a.map((e=>e.id));let u=await o[0].data();o.forEach((e=>{e.kept||-1!==i.indexOf(e.id)||e.dispose()}));let l=a;for(;u[0];){const e=l;l=await n.functionMap[r].executeFunctionAsync(l,n.tensorArrayMap,n.tensorListMap);const t=l.map((e=>e.id));e.forEach((e=>{e.kept||-1!==i.indexOf(e.id)||-1!==t.indexOf(e.id)||e.dispose()}));const a=await n.functionMap[s].executeFunctionAsync(l,n.tensorArrayMap,n.tensorListMap);u=await a[0].data(),a.forEach((e=>{e.kept||-1!==i.indexOf(e.id)||-1!==t.indexOf(e.id)||e.dispose()}))}return l}case"LoopCond":return[KC(zC("pred",e,t,n))];case"Switch":{const r=zC("pred",e,t,n);let s=zC("data",e,t,n);return s.kept||(s=KC(s)),(await r.data())[0]?[void 0,s]:[s,void 0]}case"Merge":{const r=e.inputNames.find((e=>void 0!==UC(e,t,n)));return r?[KC(UC(r,t,n))]:void 0}case"Enter":{const r=zC("frameName",e,t,n),s=zC("tensor",e,t,n);return n.enterFrame(r),[KC(s)]}case"Exit":{const r=zC("tensor",e,t,n);return n.exitFrame(),[KC(r)]}case"NextIteration":{const r=zC("tensor",e,t,n);return n.nextIteration(),[KC(r)]}case"TensorArrayV3":{const r=zC("size",e,t,n),s=zC("dtype",e,t,n),a=zC("elementShape",e,t,n),o=zC("dynamicSize",e,t,n),i=zC("clearAfterRead",e,t,n),u=zC("identicalElementShapes",e,t,n),l=zC("name",e,t,n),c=new OI(l,s,r,a,u,o,i);return n.addTensorArray(c),[c.idTensor,ho(1)]}case"TensorArrayWriteV3":{const r=zC("tensorArrayId",e,t,n),s=zC("index",e,t,n),a=zC("tensor",e,t,n),o=n.getTensorArray(r.id);return o.write(s,a),[o.idTensor]}case"TensorArrayReadV3":{const r=zC("tensorArrayId",e,t,n),s=zC("index",e,t,n);return[n.getTensorArray(r.id).read(s)]}case"TensorArrayGatherV3":{const r=zC("tensorArrayId",e,t,n),s=zC("indices",e,t,n),a=zC("dtype",e,t,n);return[n.getTensorArray(r.id).gather(s,a)]}case"TensorArrayScatterV3":{const r=zC("tensorArrayId",e,t,n),s=zC("indices",e,t,n),a=zC("tensor",e,t,n),o=n.getTensorArray(r.id);return o.scatter(s,a),[o.idTensor]}case"TensorArrayConcatV3":{const r=zC("tensorArrayId",e,t,n),s=n.getTensorArray(r.id),a=zC("dtype",e,t,n);return[s.concat(a)]}case"TensorArraySplitV3":{const r=zC("tensorArrayId",e,t,n),s=zC("tensor",e,t,n),a=zC("lengths",e,t,n),o=n.getTensorArray(r.id);return o.split(a,s),[o.idTensor]}case"TensorArraySizeV3":{const r=zC("tensorArrayId",e,t,n);return[ho(n.getTensorArray(r.id).size(),"int32")]}case"TensorArrayCloseV3":{const r=zC("tensorArrayId",e,t,n),s=n.getTensorArray(r.id);return s.clearAndClose(),[s.idTensor]}case"TensorListSetItem":{const r=zC("tensorListId",e,t,n),s=zC("index",e,t,n),a=zC("tensor",e,t,n),o=n.getTensorList(r.id);return o.setItem(s,a),[o.idTensor]}case"TensorListGetItem":{const r=zC("tensorListId",e,t,n),s=zC("index",e,t,n),a=zC("elementShape",e,t,n),o=zC("elementDType",e,t,n);return[n.getTensorList(r.id).getItem(s,a,o)]}case"TensorListScatterV2":case"TensorListScatter":{const r=zC("indices",e,t,n),s=function(e,t,n,r){if(t.length!==e.shape[0])throw new Error(`Expected len(indices) == tensor.shape[0], but saw: ${t.length} vs. ${e.shape[0]}`);const s=Math.max(...t);if(null!=r&&-1!==r&&s>=r)throw new Error(`Max index must be < array size (${s}  vs. ${r})`);const a=new FI([],n,e.dtype,r),o=ch(e,0);return t.forEach(((e,t)=>{a.setItem(e,o[t])})),a}(zC("tensor",e,t,n),r,zC("elementShape",e,t,n),zC("numElements",e,t,n));return n.addTensorList(s),[s.idTensor]}case"TensorListReserve":case"EmptyTensorList":{const r=zC("elementShape",e,t,n),s=zC("elementDType",e,t,n);let a;a="TensorListReserve"===e.op?"numElements":"maxNumElements";const o=zC(a,e,t,n),i=function(e,t,n,r){return new FI([],e,t,r)}(r,s,0,"TensorListReserve"===e.op?-1:o);return n.addTensorList(i),[i.idTensor]}case"TensorListGather":{const r=zC("tensorListId",e,t,n),s=zC("indices",e,t,n),a=zC("elementShape",e,t,n),o=zC("elementDType",e,t,n);return[n.getTensorList(r.id).gather(s,o,a)]}case"TensorListStack":{const r=zC("tensorListId",e,t,n),s=zC("elementShape",e,t,n),a=zC("elementDType",e,t,n),o=zC("numElements",e,t,n);return[n.getTensorList(r.id).stack(s,a,o)]}case"TensorListFromTensor":{const r=function(e,t,n){const r=e.dtype;if(e.shape.length<1)throw new Error(`Tensor must be at least a vector, but saw shape: ${e.shape}`);if(e.dtype!==n)throw new Error(`Invalid data types; op elements ${e.dtype}, but list elements ${n}`);EI(e.shape.slice(1),t,"TensorList shape mismatch: ");const s=ch(e);return new FI(s,t,r)}(zC("tensor",e,t,n),zC("elementShape",e,t,n),zC("elementDType",e,t,n));return n.addTensorList(r),[r.idTensor]}case"TensorListConcat":case"TensorListConcatV2":{const r=zC("tensorListId",e,t,n),s=n.getTensorList(r.id),a=zC("dtype",e,t,n),o=zC("elementShape",e,t,n);return[s.concat(a,o)]}case"TensorListPushBack":{const r=zC("tensorListId",e,t,n),s=zC("tensor",e,t,n),a=n.getTensorList(r.id);return a.pushBack(s),[a.idTensor]}case"TensorListPopBack":{const r=zC("tensorListId",e,t,n),s=zC("elementShape",e,t,n),a=zC("elementDType",e,t,n);return[n.getTensorList(r.id).popBack(s,a)]}case"TensorListSplit":{const r=zC("tensor",e,t,n),s=zC("elementShape",e,t,n),a=function(e,t,n){let r=0;const s=t.map((e=>(r+=e,r)));if(r!==e.shape[0])throw new Error(`Expected sum of lengths to be equal to\n          tensor.shape[0], but sum of lengths is\n        ${r}, and tensor's shape is: ${e.shape}`);const a=AI(e.shape.slice(1),n),o=0===r?0:e.size/r,i=Ya((()=>{const n=[];e=ji(e,[1,r,o]);for(let r=0;r<t.length;++r){const i=[0,0===r?0:s[r-1],0],u=[1,t[r],o];n[r]=ji(Zi(e,i,u),a)}return e.dispose(),n})),u=new FI([],n,e.dtype,t.length);for(let e=0;e<i.length;e++)u.setItem(e,i[e]);return u}(r,zC("lengths",e,t,n),s);return n.addTensorList(a),[a.idTensor]}case"TensorListLength":{const r=zC("tensorListId",e,t,n);return[ho(n.getTensorList(r.id).size(),"int32")]}case"TensorListResize":{const r=zC("tensorListId",e,t,n),s=zC("size",e,t,n),a=n.getTensorList(r.id).resize(s);return n.addTensorList(a),[a.idTensor]}default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n);case"convolution":return s((()=>((e,t,n,r=N)=>{switch(e.op){case"Conv1D":{const s=zC("stride",e,t,n),a=zC("pad",e,t,n),o=zC("dataFormat",e,t,n).toUpperCase(),i=zC("dilation",e,t,n);return[r.conv1d(zC("x",e,t,n),zC("filter",e,t,n),s,a,o,i)]}case"Conv2D":{const s=zC("strides",e,t,n),a=jC(e,t,n),o=zC("dataFormat",e,t,n).toUpperCase(),i=zC("dilations",e,t,n);return[r.conv2d(zC("x",e,t,n),zC("filter",e,t,n),[s[1],s[2]],a,o,[i[1],i[2]])]}case"_FusedConv2D":{const{stride:s,pad:a,dataFormat:o,dilations:i,biasArg:u,preluArg:l,activationFunc:c,leakyreluAlpha:h}=PI(e,t,n);return[r.fused.conv2d({x:zC("x",e,t,n),filter:zC("filter",e,t,n),strides:[s[1],s[2]],pad:a,dataFormat:o,dilations:[i[1],i[2]],bias:u,activation:c,preluActivationWeights:l,leakyreluAlpha:h})]}case"FusedDepthwiseConv2dNative":{const{stride:s,pad:a,dataFormat:o,dilations:i,biasArg:u,preluArg:l,activationFunc:c,leakyreluAlpha:h}=PI(e,t,n);return[r.fused.depthwiseConv2d({x:zC("x",e,t,n),filter:zC("filter",e,t,n),strides:[s[1],s[2]],pad:a,dataFormat:o,dilations:[i[1],i[2]],bias:u,activation:c,preluActivationWeights:l,leakyreluAlpha:h})]}case"Conv2DBackpropInput":case"Conv2dTranspose":{const s=zC("outputShape",e,t,n),a=zC("strides",e,t,n),o=jC(e,t,n);return[r.conv2dTranspose(zC("x",e,t,n),zC("filter",e,t,n),s,[a[1],a[2]],o)]}case"DepthwiseConv2dNative":case"DepthwiseConv2d":{const s=zC("strides",e,t,n),a=jC(e,t,n),o=zC("dilations",e,t,n),i=zC("dataFormat",e,t,n).toUpperCase();return[r.depthwiseConv2d(zC("input",e,t,n),zC("filter",e,t,n),[s[1],s[2]],a,i,[o[1],o[2]])]}case"Conv3D":{const s=zC("strides",e,t,n),a=zC("pad",e,t,n),o=zC("dataFormat",e,t,n).toUpperCase(),i=zC("dilations",e,t,n);return[r.conv3d(zC("x",e,t,n),zC("filter",e,t,n),[s[1],s[2],s[3]],a,o,[i[1],i[2],i[3]])]}case"AvgPool":{const s=zC("strides",e,t,n),a=zC("pad",e,t,n),o=zC("kernelSize",e,t,n);return[r.avgPool(zC("x",e,t,n),[o[1],o[2]],[s[1],s[2]],a)]}case"MaxPool":{const s=zC("strides",e,t,n),a=zC("pad",e,t,n),o=zC("kernelSize",e,t,n);return[r.maxPool(zC("x",e,t,n),[o[1],o[2]],[s[1],s[2]],a)]}case"MaxPoolWithArgmax":{const s=zC("strides",e,t,n),a=zC("pad",e,t,n),o=zC("kernelSize",e,t,n),i=zC("includeBatchInIndex",e,t,n),{result:u,indexes:l}=r.maxPoolWithArgmax(zC("x",e,t,n),[o[1],o[2]],[s[1],s[2]],a,i);return[u,l]}case"AvgPool3D":{const s=zC("strides",e,t,n),a=zC("pad",e,t,n),o=zC("kernelSize",e,t,n);return[r.avgPool3d(zC("x",e,t,n),[o[1],o[2],o[3]],[s[1],s[2],s[3]],a)]}case"MaxPool3D":{const s=zC("strides",e,t,n),a=zC("pad",e,t,n),o=zC("kernelSize",e,t,n);return[r.maxPool3d(zC("x",e,t,n),[o[1],o[2],o[3]],[s[1],s[2],s[3]],a)]}case"Dilation2D":{const s=zC("strides",e,t,n),a=zC("pad",e,t,n),o=zC("dilations",e,t,n),i=s[1],u=s[2],l=o[1],c=o[2];return[r.dilation2d(zC("x",e,t,n),zC("filter",e,t,n),[i,u],a,[l,c],"NHWC")]}default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"creation":return s((()=>((e,t,n,r=N)=>{switch(e.op){case"Fill":{const s=zC("shape",e,t,n),a=zC("dtype",e,t,n),o=zC("value",e,t,n);return[r.fill(s,o,a)]}case"LinSpace":{const s=zC("start",e,t,n),a=zC("stop",e,t,n),o=zC("num",e,t,n);return[r.linspace(s,a,o)]}case"Multinomial":{const s=zC("logits",e,t,n),a=zC("numSamples",e,t,n),o=zC("seed",e,t,n);return[r.multinomial(s,a,o)]}case"OneHot":{const s=zC("indices",e,t,n),a=zC("depth",e,t,n),o=zC("onValue",e,t,n),i=zC("offValue",e,t,n),u=zC("dtype",e,t,n);return[r.oneHot(s,a,o,i,u)]}case"Ones":return[r.ones(zC("shape",e,t,n),zC("dtype",e,t,n))];case"OnesLike":return[r.onesLike(zC("x",e,t,n))];case"RandomStandardNormal":return[r.randomStandardNormal(zC("shape",e,t,n),zC("dtype",e,t,n),zC("seed",e,t,n))];case"RandomUniform":return[r.randomUniform(zC("shape",e,t,n),zC("minval",e,t,n),zC("maxval",e,t,n),zC("dtype",e,t,n))];case"RandomUniformInt":return[r.randomUniformInt(zC("shape",e,t,n),zC("minval",e,t,n),zC("maxval",e,t,n),zC("seed",e,t,n))];case"Range":{const s=zC("start",e,t,n),a=zC("stop",e,t,n),o=zC("step",e,t,n);return[r.range(s,a,o,zC("dtype",e,t,n))]}case"TruncatedNormal":{const s=zC("shape",e,t,n),a=zC("mean",e,t,n),o=zC("stdDev",e,t,n),i=zC("seed",e,t,n);return[r.truncatedNormal(s,a,o,zC("dtype",e,t,n),i)]}case"Zeros":return[r.zeros(zC("shape",e,t,n),zC("dtype",e,t,n))];case"ZerosLike":return[r.zerosLike(zC("x",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"dynamic":return(async(e,t,n,r,s=N)=>{switch(e.op){case"NonMaxSuppressionV5":{const{boxes:r,scores:a,maxOutputSize:o,iouThreshold:i,scoreThreshold:u,softNmsSigma:l}=DI(e,t,n),c=await s.image.nonMaxSuppressionWithScoreAsync(r,a,o,i,u,l);return[c.selectedIndices,c.selectedScores]}case"NonMaxSuppressionV4":{const{boxes:r,scores:a,maxOutputSize:o,iouThreshold:i,scoreThreshold:u}=DI(e,t,n),l=zC("padToMaxOutputSize",e,t,n),c=await s.image.nonMaxSuppressionPaddedAsync(r,a,o,i,u,l);return[c.selectedIndices,c.validOutputs]}case"NonMaxSuppressionV3":case"NonMaxSuppressionV2":{const{boxes:r,scores:a,maxOutputSize:o,iouThreshold:i,scoreThreshold:u}=DI(e,t,n);return[await s.image.nonMaxSuppressionAsync(r,a,o,i,u)]}case"Where":{const r=s.cast(zC("condition",e,t,n),"bool"),a=[await s.whereAsync(r)];return r.dispose(),a}case"ListDiff":return s.setdiff1dAsync(zC("x",e,t,n),zC("y",e,t,n));default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n);case"evaluation":return s((()=>((e,t,n,r=N)=>{switch(e.op){case"LowerBound":{const s=zC("sortedSequence",e,t,n),a=zC("values",e,t,n);return[r.lowerBound(s,a)]}case"TopKV2":{const s=zC("x",e,t,n),a=zC("k",e,t,n),o=zC("sorted",e,t,n),i=r.topk(s,a,o);return[i.values,i.indices]}case"UpperBound":{const s=zC("sortedSequence",e,t,n),a=zC("values",e,t,n);return[r.upperBound(s,a)]}case"Unique":{const s=zC("x",e,t,n),a=r.unique(s);return[a.values,a.indices]}case"UniqueV2":{const s=zC("x",e,t,n),a=zC("axis",e,t,n),o=r.unique(s,a);return[o.values,o.indices]}default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"image":return s((()=>((e,t,n,r=N)=>{switch(e.op){case"ResizeBilinear":{const s=zC("images",e,t,n),a=zC("size",e,t,n),o=zC("alignCorners",e,t,n),i=zC("halfPixelCenters",e,t,n);return[r.image.resizeBilinear(s,[a[0],a[1]],o,i)]}case"ResizeNearestNeighbor":{const s=zC("images",e,t,n),a=zC("size",e,t,n),o=zC("alignCorners",e,t,n),i=zC("halfPixelCenters",e,t,n);return[r.image.resizeNearestNeighbor(s,[a[0],a[1]],o,i)]}case"CropAndResize":{const s=zC("image",e,t,n),a=zC("boxes",e,t,n),o=zC("boxInd",e,t,n),i=zC("cropSize",e,t,n),u=zC("method",e,t,n),l=zC("extrapolationValue",e,t,n);return[r.image.cropAndResize(s,a,o,i,u,l)]}case"ImageProjectiveTransformV3":{const s=zC("images",e,t,n),a=zC("transforms",e,t,n),o=zC("outputShape",e,t,n),i=zC("fillValue",e,t,n),u=zC("interpolation",e,t,n),l=zC("fillMode",e,t,n);return[r.image.transform(s,a,u.toLowerCase(),l.toLowerCase(),i,o)]}default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"graph":return s((()=>((e,t,n,r=N)=>{switch(e.op){case"Const":return t[e.name];case"PlaceholderWithDefault":const s=zC("default",e,t,n);return[UC(e.name,t,n)||s];case"Placeholder":return[UC(e.name,t,n)];case"Identity":case"StopGradient":case"FakeQuantWithMinMaxVars":case"Snapshot":return[KC(zC("x",e,t,n))];case"IdentityN":return zC("x",e,t,n).map((e=>KC(e)));case"Shape":return[r.tensor1d(zC("x",e,t,n).shape,"int32")];case"ShapeN":return zC("x",e,t,n).map((e=>r.tensor1d(e.shape)));case"Size":return[r.scalar(zC("x",e,t,n).size,"int32")];case"Rank":return[r.scalar(zC("x",e,t,n).rank,"int32")];case"NoOp":return[r.scalar(1)];case"Print":const a=zC("x",e,t,n),o=zC("data",e,t,n),i=zC("message",e,t,n),u=zC("summarize",e,t,n);console.warn("The graph has a tf.print() operation,usually used for debugging, which slows down performance."),console.log(i);for(let e=0;e<o.length;e++)console.log(Array.prototype.slice.call(o[e].dataSync()).slice(0,u));return[a];default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"logical":return s((()=>((e,t,n,r=N)=>{switch(e.op){case"Equal":return[r.equal(zC("a",e,t,n),zC("b",e,t,n))];case"NotEqual":return[r.notEqual(zC("a",e,t,n),zC("b",e,t,n))];case"Greater":return[r.greater(zC("a",e,t,n),zC("b",e,t,n))];case"GreaterEqual":return[r.greaterEqual(zC("a",e,t,n),zC("b",e,t,n))];case"Less":return[r.less(zC("a",e,t,n),zC("b",e,t,n))];case"LessEqual":return[r.lessEqual(zC("a",e,t,n),zC("b",e,t,n))];case"LogicalAnd":return[r.logicalAnd(zC("a",e,t,n),zC("b",e,t,n))];case"LogicalNot":return[r.logicalNot(zC("a",e,t,n))];case"LogicalOr":return[r.logicalOr(zC("a",e,t,n),zC("b",e,t,n))];case"Select":case"SelectV2":return[r.where(zC("condition",e,t,n),zC("a",e,t,n),zC("b",e,t,n))];case"BitwiseAnd":return[r.bitwiseAnd(zC("a",e,t,n),zC("b",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"matrices":return s((()=>((e,t,n,r=N)=>{switch(e.op){case"BatchMatMul":case"BatchMatMulV2":case"MatMul":return[r.matMul(zC("a",e,t,n),zC("b",e,t,n),zC("transposeA",e,t,n),zC("transposeB",e,t,n))];case"Einsum":return[r.einsum(zC("equation",e,t,n),...zC("tensors",e,t,n))];case"Transpose":return[r.transpose(zC("x",e,t,n),zC("perm",e,t,n))];case"_FusedMatMul":const[s,a]=zC("fusedOps",e,t,n),o="biasadd"===s,i="prelu"===a,u=zC("numArgs",e,t,n),l=zC("leakyreluAlpha",e,t,n);if(o){if(i&&2!==u)throw new Error("Fused MatMul with BiasAdd and Prelu must have two extra arguments: bias and alpha.");if(!i&&1!==u)throw new Error("Fused MatMul with BiasAdd must have one extra argument: bias.")}const[c,h]=zC("args",e,t,n);return[r.fused.matMul({a:zC("a",e,t,n),b:zC("b",e,t,n),transposeA:zC("transposeA",e,t,n),transposeB:zC("transposeB",e,t,n),bias:c,activation:a,preluActivationWeights:h,leakyreluAlpha:l})];case"MatrixBandPart":return[r.linalg.bandPart(zC("a",e,t,n),zC("numLower",e,t,n),zC("numUpper",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"normalization":return s((()=>((e,t,n,r=N)=>{switch(e.op){case"EuclideanNorm":return[r.euclideanNorm(zC("x",e,t,n),zC("axis",e,t,n),zC("keepDims",e,t,n))];case"FusedBatchNorm":case"FusedBatchNormV2":case"FusedBatchNormV3":return[r.batchNorm(zC("x",e,t,n),zC("mean",e,t,n),zC("variance",e,t,n),zC("offset",e,t,n),zC("scale",e,t,n),zC("epsilon",e,t,n))];case"LRN":return[r.localResponseNormalization(zC("x",e,t,n),zC("radius",e,t,n),zC("bias",e,t,n),zC("alpha",e,t,n),zC("beta",e,t,n))];case"Softmax":return[r.softmax(zC("x",e,t,n))];case"LogSoftmax":return[r.logSoftmax(zC("x",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"ragged":return s((()=>((e,t,n,r=N)=>{switch(e.op){case"RaggedGather":{const{outputNestedSplits:s,outputDenseValues:a}=r.raggedGather(zC("paramsNestedSplits",e,t,n),zC("paramsDenseValues",e,t,n),zC("indices",e,t,n),zC("outputRaggedRank",e,t,n));return s.concat(a)}case"RaggedRange":{const{rtNestedSplits:s,rtDenseValues:a}=r.raggedRange(zC("starts",e,t,n),zC("limits",e,t,n),zC("splits",e,t,n));return[s,a]}case"RaggedTensorToTensor":return[r.raggedTensorToTensor(zC("shape",e,t,n),zC("values",e,t,n),zC("defaultValue",e,t,n),zC("rowPartitionTensors",e,t,n),zC("rowPartitionTypes",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"reduction":return s((()=>((e,t,n,r=N)=>{switch(e.op){case"Max":{const s=zC("axis",e,t,n),a=zC("keepDims",e,t,n);return[r.max(zC("x",e,t,n),s,a)]}case"Mean":{const s=zC("axis",e,t,n),a=zC("keepDims",e,t,n);return[r.mean(zC("x",e,t,n),s,a)]}case"Min":{const s=zC("axis",e,t,n),a=zC("keepDims",e,t,n);return[r.min(zC("x",e,t,n),s,a)]}case"Sum":{const s=zC("axis",e,t,n),a=zC("keepDims",e,t,n);return[r.sum(zC("x",e,t,n),s,a)]}case"All":{const s=zC("axis",e,t,n),a=zC("keepDims",e,t,n);return[r.all(zC("x",e,t,n),s,a)]}case"Any":{const s=zC("axis",e,t,n),a=zC("keepDims",e,t,n);return[r.any(zC("x",e,t,n),s,a)]}case"ArgMax":{const s=zC("axis",e,t,n);return[r.argMax(zC("x",e,t,n),s)]}case"ArgMin":{const s=zC("axis",e,t,n);return[r.argMin(zC("x",e,t,n),s)]}case"Prod":{const s=zC("axis",e,t,n),a=zC("keepDims",e,t,n);return[r.prod(zC("x",e,t,n),s,a)]}case"Cumprod":{const s=zC("axis",e,t,n),a=zC("exclusive",e,t,n),o=zC("reverse",e,t,n);return[r.cumprod(zC("x",e,t,n),s,a,o)]}case"Cumsum":{const s=zC("axis",e,t,n),a=zC("exclusive",e,t,n),o=zC("reverse",e,t,n);return[r.cumsum(zC("x",e,t,n),s,a,o)]}case"Bincount":const s=zC("x",e,t,n),a=zC("weights",e,t,n),o=zC("size",e,t,n);return[r.bincount(s,a,o)];case"DenseBincount":{const s=zC("x",e,t,n),a=zC("weights",e,t,n),o=zC("size",e,t,n),i=zC("binaryOutput",e,t,n);return[r.denseBincount(s,a,o,i)]}default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"slice_join":return s((()=>((e,t,n,r=N)=>{switch(e.op){case"ConcatV2":case"Concat":{const s=zC("n",e,t,n),a=zC("axis",e,t,n);let o=zC("tensors",e,t,n);return o=o.slice(0,s),[r.concat(o,a)]}case"Gather":{const s=zC("x",e,t,n),a=zC("indices",e,t,n);return[r.gather(s,r.cast(a,"int32"),0)]}case"GatherV2":{const s=zC("axis",e,t,n),a=zC("batchDims",e,t,n),o=zC("x",e,t,n),i=zC("indices",e,t,n);return[r.gather(o,r.cast(i,"int32"),s,a)]}case"Reverse":{const s=zC("dims",e,t,n),a=[];for(let e=0;e<s.length;e++)s[e]&&a.push(e);const o=zC("x",e,t,n);return[r.reverse(o,a)]}case"ReverseV2":{const s=zC("axis",e,t,n),a=zC("x",e,t,n);return[r.reverse(a,s)]}case"Slice":{const s=zC("begin",e,t,n),a=zC("size",e,t,n);return[r.slice(zC("x",e,t,n),s,a)]}case"StridedSlice":{const s=zC("begin",e,t,n),a=zC("end",e,t,n),o=zC("strides",e,t,n),i=zC("beginMask",e,t,n),u=zC("endMask",e,t,n),l=zC("ellipsisMask",e,t,n),c=zC("newAxisMask",e,t,n),h=zC("shrinkAxisMask",e,t,n),d=zC("x",e,t,n);return[r.stridedSlice(d,s,a,o,i,u,l,c,h)]}case"Pack":return Ya((()=>{const s=zC("axis",e,t,n),a=zC("tensors",e,t,n),o=a[0].shape,i=r.squeeze(a[0]).shape,u=a.map((e=>{const t=z(e.shape,o);if(!t&&!z(r.squeeze(e).shape,i))throw new Error("the input tensors shape does not match");return t?e:r.reshape(e,o)}));return[r.stack(u,s)]}));case"Unpack":{const s=zC("axis",e,t,n),a=zC("tensor",e,t,n);return r.unstack(a,s)}case"Tile":{const s=zC("reps",e,t,n);return[r.tile(zC("x",e,t,n),s)]}case"Split":case"SplitV":{const s=zC("axis",e,t,n),a=zC("numOrSizeSplits",e,t,n),o=zC("x",e,t,n);return r.split(o,a,s)}case"ScatterNd":{const s=zC("indices",e,t,n),a=zC("values",e,t,n),o=zC("shape",e,t,n);return[r.scatterND(s,a,o)]}case"GatherNd":{const s=zC("x",e,t,n),a=zC("indices",e,t,n);return[r.gatherND(s,a)]}case"SparseToDense":{const s=zC("sparseIndices",e,t,n),a=zC("outputShape",e,t,n),o=zC("sparseValues",e,t,n),i=zC("defaultValue",e,t,n);return[r.sparseToDense(s,o,a,o.dtype===i.dtype?i:r.cast(i,o.dtype))]}case"TensorScatterUpdate":{const s=zC("indices",e,t,n),a=zC("values",e,t,n),o=zC("tensor",e,t,n);return[r.tensorScatterUpdate(o,s,a)]}default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"sparse":return s((()=>((e,t,n,r=N)=>{switch(e.op){case"SparseFillEmptyRows":{const{outputIndices:s,outputValues:a,emptyRowIndicator:o,reverseIndexMap:i}=r.sparse.sparseFillEmptyRows(zC("indices",e,t,n),zC("values",e,t,n),zC("denseShape",e,t,n),zC("defaultValue",e,t,n));return[s,a,o,i]}case"SparseReshape":{const{outputIndices:s,outputShape:a}=r.sparse.sparseReshape(zC("inputIndices",e,t,n),zC("inputShape",e,t,n),zC("newShape",e,t,n));return[s,a]}case"SparseSegmentMean":return[r.sparse.sparseSegmentMean(zC("data",e,t,n),zC("indices",e,t,n),zC("segmentIds",e,t,n))];case"SparseSegmentSum":return[r.sparse.sparseSegmentSum(zC("data",e,t,n),zC("indices",e,t,n),zC("segmentIds",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"spectral":return s((()=>((e,t,n,r=N)=>{switch(e.op){case"FFT":return[r.fft(zC("x",e,t,n))];case"IFFT":return[r.ifft(zC("x",e,t,n))];case"RFFT":return[r.rfft(zC("x",e,t,n))];case"IRFFT":return[r.irfft(zC("x",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"string":return s((()=>((e,t,n,r=N)=>{switch(e.op){case"StaticRegexReplace":return[r.string.staticRegexReplace(zC("input",e,t,n),zC("pattern",e,t,n),zC("rewrite",e,t,n),zC("replaceGlobal",e,t,n))];case"StringNGrams":{const{nGrams:s,nGramsSplits:a}=r.string.stringNGrams(zC("data",e,t,n),zC("dataSplits",e,t,n),zC("separator",e,t,n),zC("nGramWidths",e,t,n),zC("leftPad",e,t,n),zC("rightPad",e,t,n),zC("padWidth",e,t,n),zC("preserveShortSequences",e,t,n));return[s,a]}case"StringSplit":{const{indices:s,values:a,shape:o}=r.string.stringSplit(zC("input",e,t,n),zC("delimiter",e,t,n),zC("skipEmpty",e,t,n));return[s,a,o]}case"StringToHashBucketFast":return[r.string.stringToHashBucketFast(zC("input",e,t,n),zC("numBuckets",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"transformation":return s((()=>((e,t,n,r=N)=>{switch(e.op){case"Cast":return[r.cast(zC("x",e,t,n),zC("dtype",e,t,n))];case"ExpandDims":{const s=zC("axis",e,t,n);return[r.expandDims(zC("x",e,t,n),s)]}case"Squeeze":{const s=zC("axis",e,t,n);return[r.squeeze(zC("x",e,t,n),s)]}case"Reshape":return[r.reshape(zC("x",e,t,n),zC("shape",e,t,n))];case"EnsureShape":return[r.ensureShape(zC("x",e,t,n),zC("shape",e,t,n))];case"MirrorPad":return[r.mirrorPad(zC("x",e,t,n),zC("padding",e,t,n),zC("mode",e,t,n))];case"PadV2":case"Pad":return[r.pad(zC("x",e,t,n),zC("padding",e,t,n),zC("constantValue",e,t,n))];case"SpaceToBatchND":{const s=zC("blockShape",e,t,n),a=zC("paddings",e,t,n);return[r.spaceToBatchND(zC("x",e,t,n),s,a)]}case"BatchToSpaceND":{const s=zC("blockShape",e,t,n),a=zC("crops",e,t,n);return[r.batchToSpaceND(zC("x",e,t,n),s,a)]}case"DepthToSpace":{const s=zC("blockSize",e,t,n),a=zC("dataFormat",e,t,n).toUpperCase();return[r.depthToSpace(zC("x",e,t,n),s,a)]}case"BroadcastTo":return[r.broadcastTo(zC("x",e,t,n),zC("shape",e,t,n))];case"BroadcastArgs":return[r.broadcastArgs(zC("s0",e,t,n),zC("s1",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"hash_table":return(async(e,t,n,r)=>{switch(e.op){case"HashTable":case"HashTableV2":{const s=r.getHashTableHandleByName(e.name);if(null!=s)return[s];{const s=zC("keyDType",e,t,n),a=zC("valueDType",e,t,n),o=new MI(s,a);return r.addHashTable(e.name,o),[o.handle]}}case"InitializeTable":case"InitializeTableV2":case"LookupTableImport":case"LookupTableImportV2":{const s=zC("tableHandle",e,t,n,r),a=zC("keys",e,t,n),o=zC("values",e,t,n),i=r.getHashTableById(s.id);return[await i.import(a,o)]}case"LookupTableFind":case"LookupTableFindV2":{const s=zC("tableHandle",e,t,n,r),a=zC("keys",e,t,n),o=zC("defaultValue",e,t,n),i=r.getHashTableById(s.id);return[await i.find(a,o)]}case"LookupTableSize":case"LookupTableSizeV2":{const s=zC("tableHandle",e,t,n,r);return[r.getHashTableById(s.id).tensorSize()]}default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n,r);case"custom":const a=BC(e.op);if(a&&a.customExecutor)return a.customExecutor(new NI(e,t,n));throw TypeError(`Custom op ${e.op} is not registered.`);default:throw TypeError(`Unknown op '${e.op}'. File an issue at https://github.com/tensorflow/tfjs/issues so we can add it, or register a custom execution with tf.registerOp()`)}})(e,t,n);return ce(a)?a.then((e=>[].concat(e))):[].concat(a)}class BI{constructor(e={},t={},n={},r={},s){this.weightMap=e,this.tensorArrayMap=t,this.tensorListMap=n,this.functionMap=r,this.parseNodeNameCache=s,this.rootContext={id:0,frameName:"",iterationId:0},this.contexts=[this.rootContext],this.lastId=0,this.generateCurrentContextIds()}newFrame(e,t){return{id:e,frameName:t,iterationId:0}}set currentContext(e){this.contexts!==e&&(this.contexts=e,this.generateCurrentContextIds())}get currentContext(){return this.contexts}get currentContextId(){return this._currentContextIds[0]}get currentContextIds(){return this._currentContextIds}generateCurrentContextIds(){const e=[];for(let t=0;t<this.contexts.length-1;t++){const n=this.contexts.slice(0,this.contexts.length-t);e.push(this.contextIdforContexts(n))}e.push(""),this._currentContextIds=e}contextIdforContexts(e){return e?e.map((e=>0===e.id&&0===e.iterationId?"":`${e.frameName}-${e.iterationId}`)).join("/"):""}enterFrame(e){this.contexts&&(this.lastId++,this.contexts=this.contexts.slice(),this.contexts.push(this.newFrame(this.lastId,e)),this._currentContextIds.unshift(this.contextIdforContexts(this.contexts)))}exitFrame(){if(!(this.contexts&&this.contexts.length>1))throw new Error("Cannot exit frame, the context is empty");this.contexts=this.contexts.slice(),this.contexts.splice(-1),this.currentContextIds.shift()}nextIteration(){if(!(this.contexts&&this.contexts.length>0))throw new Error("Cannot increase frame iteration, the context is empty");{this.contexts=this.contexts.slice(),this.lastId++;const e=Object.assign({},this.contexts[this.contexts.length-1]);e.iterationId+=1,e.id=this.lastId,this.contexts.splice(-1,1,e),this._currentContextIds.splice(0,1,this.contextIdforContexts(this.contexts))}}getWeight(e){return this.weightMap[e]}addTensorArray(e){this.tensorArrayMap[e.id]=e}getTensorArray(e){return this.tensorArrayMap[e]}addTensorList(e){this.tensorListMap[e.id]=e}getTensorList(e){return this.tensorListMap[e]}dispose(e){for(const t in this.tensorArrayMap)this.tensorArrayMap[t].clearAndClose(e);for(const t in this.tensorListMap)this.tensorListMap[t].clearAndClose(e)}}function zI(e,t,n,r){const s=new Set,a=[];let o=null,i=null;const u=new Set,l=new Set(Object.keys(e).map((e=>HC(e)[0])));r=r||[];const c=new Set(r.map((e=>HC(e.name)[0]))),h=[...t];for(;h.length>0;){const e=h.pop();(HI(e)||jI(e)||KI(e))&&null==o&&(o=e,i=o.children.map((e=>e.name)).filter((e=>s.has(e)))),s.add(e.name),null==n[e.name]&&(l.has(e.name)||c.has(e.name)||(0!==e.inputs.length?e.inputs.forEach((e=>{u.has(e.name)||(u.add(e.name),h.push(e))})):a.push(e.name)))}return{inputs:e,outputs:t,usedNodes:s,missingInputs:a,dynamicNode:o,syncInputs:i}}class UI extends Error{constructor(e){super(`NodesExecutionOrderError: ${e}`)}}const VI=new Set(["Switch","Merge","Enter","Exit","NextIteration","StatelessIf","StatelessWhile","if","While"]),WI=new Set(["NonMaxSuppressionV2","NonMaxSuppressionV3","NonMaxSuppressionV5","Where"]),GI=new Set(["HashTable","HashTableV2","LookupTableImport","LookupTableImportV2","LookupTableFind","LookupTableFindV2","LookupTableSize","LookupTableSizeV2"]);function HI(e){return VI.has(e.op)}function jI(e){return WI.has(e.op)}function KI(e){return GI.has(e.op)}class qI{get weightIds(){return this.parent?this.parent.weightIds:this._weightIds}get functionExecutorMap(){return this.parent?this.parent.functionExecutorMap:this._functionExecutorMap}get weightMap(){return this.parent?this.parent.weightMap:this._weightMap}set weightMap(e){const t=Object.keys(e).map((t=>e[t].map((e=>e.id))));this._weightIds=[].concat(...t),this._weightMap=e}set resourceManager(e){this._resourceManager=e}get inputs(){return this._inputs.map((e=>({name:e.name,shape:e.attrParams.shape?e.attrParams.shape.value:void 0,dtype:e.attrParams.dtype?e.attrParams.dtype.value:void 0})))}get outputs(){return this._outputs.map((e=>({name:e.name,shape:e.attrParams.shape?e.attrParams.shape.value:void 0,dtype:e.attrParams.dtype?e.attrParams.dtype.value:void 0})))}get inputNodes(){return this._inputs.map((e=>e.signatureKey||e.name))}get outputNodes(){return this._outputs.map((e=>{const t=e.signatureKey||e.name;return e.defaultOutput?`${t}:${e.defaultOutput}`:t}))}get functions(){return Object.keys(this._functions).reduce(((e,t)=>(e[t]=this._functions[t].signature,e)),{})}constructor(e,t){this.graph=e,this.parent=t,this.compiledMap=new Map,this.parseNodeNameCache=new Map,this._weightMap={},this.SEPARATOR=",",this._functions={},this._functionExecutorMap={},this.keepIntermediateTensors=!1,this._outputs=e.outputs,this._inputs=e.inputs,this._initNodes=e.initNodes,this._signature=e.signature,this._functions=e.functions,null!=e.functions&&Object.keys(e.functions).forEach((t=>{this._functionExecutorMap[t]=new qI(e.functions[t],this)}))}getCompilationKey(e,t){const n=e.map((e=>e.name)).sort(),r=t.map((e=>e.name)).sort();return n.join(this.SEPARATOR)+"--"+r.join(this.SEPARATOR)}compile(e,t){const n=zI(e,t,this.weightMap,this._initNodes),{missingInputs:r,dynamicNode:s,syncInputs:a}=n;if(null!=s)throw new Error(`This execution contains the node '${s.name}', which has the dynamic op '${s.op}'. Please use model.executeAsync() instead. Alternatively, to avoid the dynamic ops, specify the inputs [${a}]`);if(r.length>0){const n=t.map((e=>e.name)),s=Object.keys(e);throw new Error(`Cannot compute the outputs [${n}] from the provided inputs [${s}]. Missing the following inputs: [${r}]`)}const o=function(e,t){const{usedNodes:n,inputs:r}=t,s=Object.keys(r).map((e=>HC(e)[0])).map((t=>e.nodes[t])),a=e.initNodes||[],o=e=>n.has("string"==typeof e?e:e.name);function i(e){return[...new Map(e.map((e=>[e.name,e]))).values()]}const u=i([...s,...e.weights,...a]).filter(o),l=i([...u,...Object.values(e.nodes)]).filter(o),c=new Map(l.map((e=>[e.name,e]))),h={};for(const e of l){h[e.name]=h[e.name]||0;for(const t of e.children)o(t)||(h[t.name]=Number.POSITIVE_INFINITY),h[t.name]=(h[t.name]||0)+1}const d=Object.entries(h).filter((([,e])=>0===e)).map((([e])=>e)),p=[...d];for(;d.length>0;){const e=d.pop(),t=c.get(e);for(const e of t.children.filter(o))0==--h[e.name]&&(p.push(e.name),d.push(e.name))}const f=function(e,t){const n=new Map(e.map((e=>[e.name,e]))),r=t.map((e=>e.name)),s=new Set(r);for(;r.length>0;){const e=r.pop(),t=n.get(e);for(const e of t.children)n.has(e.name)&&!s.has(e.name)&&(s.add(e.name),r.push(e.name))}return e.filter((e=>s.has(e.name)))}(p.map((e=>c.get(e))),u);return function(e,t){const n=new Map(e.map(((e,t)=>[e.name,t]))),r=new Set(t.map((e=>e.name))),s=e=>r.has("string"==typeof e?e:e.name),a=new Set(e.map((e=>e.name))),o=e=>a.has("string"==typeof e?e:e.name);for(const t of e){for(const e of t.children.filter(o)){if(!n.has(e.name))throw new UI(`Child ${e.name} of node ${t.name} is unreachable.`);if(n.get(t.name)>n.get(e.name))throw new UI(`Node ${t.name} is scheduled to run after its child ${e.name}.`)}if(!s(t))for(const e of t.inputs){if(!n.has(e.name))throw new UI(`Input ${e.name} of node ${t.name} is unreachable.`);if(n.get(e.name)>n.get(t.name))throw new UI(`Node ${t.name} is scheduled to run before its input ${e.name}.`)}}}(f,u),f}(this.graph,n),i=function(e){const t=new Map(e.map(((e,t)=>[e.name,t]))),n=Number.MAX_SAFE_INTEGER,r=e.map(((e,t)=>HI(e)?n:t)),s=e=>{const n=r[t.get(e.name)];return null==n?-1:n},a=e.map(((e,t)=>e.children.map(s).reduce(((e,t)=>Math.max(e,t)),r[t]))),o=new Map;for(let t=0;t<e.length;++t){const r=a[t];if(r===n)continue;const s=e[t],i=e[r];o.has(i.name)||o.set(i.name,[]),o.get(i.name).push(s)}return o}(o);return{orderedNodes:o,nodeLiveUntilMap:i}}cloneAndKeepTensor(e){if(null==e)return null;const t=e.clone();return Za(t),t}cloneTensorList(e){if(!e)return null;const t=e.map((e=>this.cloneAndKeepTensor(e)));return t}cloneTensorMap(e){return Object.fromEntries(Object.entries(e).map((([e,t])=>[e,this.cloneTensorList(t)])))}execute(e,t){this.disposeIntermediateTensors(),e=this.mapInputs(e);const n=Object.keys(e).sort();this.checkInputs(e),this.checkInputShapeAndType(e),t=this.mapOutputs(t),this.checkOutputs(t);const r=n.map((e=>this.graph.nodes[HC(e)[0]])),s=t.map((e=>HC(e)[0])),a=new Set(s);let o=s.map((e=>this.graph.nodes[e]));0===o.length&&(o=this._outputs);const i=this.getCompilationKey(r,o);let u=this.compiledMap.get(i);null==u&&(u=this.compile(e,o),this.compiledMap.set(i,u));try{this.keepIntermediateTensors=fe().getBool("KEEP_INTERMEDIATE_TENSORS")}catch(e){this.keepIntermediateTensors=!1,console.warn(e.message)}const l={},c={};return Ya((()=>{const n=new BI(this.weightMap,l,c,this.functionExecutorMap,this.parseNodeNameCache),r=Object.assign({},this.weightMap);this.keepIntermediateTensors&&(this.clonedTensorsMap=this.cloneTensorMap(this.weightMap)),Object.keys(e).forEach((t=>{const[s,a]=HC(t,n),o=[];o[a]=e[t],r[s]=o,this.keepIntermediateTensors&&(this.clonedTensorsMap[s]=this.cloneTensorList(o))}));const s=this.getFrozenTensorIds(r),{orderedNodes:o,nodeLiveUntilMap:i}=u;for(const e of o){if(r[e.name])continue;const t=LI(e,r,n,this._resourceManager);if(ce(t))throw new Error(`The execution of the op '${e.op}' returned a promise. Please use model.executeAsync() instead.`);r[e.name]=t,this.keepIntermediateTensors&&(this.clonedTensorsMap[e.name]=this.cloneTensorList(t)),this.checkTensorForDisposalWithNodeLiveUntilInfo(e,r,n,s,a,i.get(e.name))}return null==this.parent&&n.dispose(s),t.map((e=>UC(e,r,n)))}))}getFrozenTensorIds(e){const t=[].concat.apply([],Object.keys(e).map((t=>e[t])).map((e=>e.map((e=>e.id)))));return new Set(t)}checkTensorForDisposal(e,t,n,r,s,a,o){if(!HI(t)&&!a.has(e)){for(const r of n[e])null!=r&&(o[r.id]=(o[r.id]||0)+t.children.length);for(const e of t.inputs){if(HI(e))continue;const t=VC(e.name,n,r);if(null!=t)for(const e of t){if(!e||e.kept||s.has(e.id))continue;const t=o[e.id];1===t?(e.dispose(),delete o[e.id]):null!=t&&o[e.id]--}}}}checkTensorForDisposalWithNodeLiveUntilInfo(e,t,n,r,s,a){function o(e){return HI(e)||s.has(e.name)}if(!HI(e)&&null!=a)for(const e of a){if(o(e))continue;const s=VC(e.name,t,n);for(const e of s)!e||e.kept||r.has(e.id)||e.dispose()}}async executeAsync(e,t){return this._executeAsync(e,t)}disposeIntermediateTensors(){this.clonedTensorsMap&&(Object.values(this.clonedTensorsMap).forEach((e=>{for(const t of e)t&&!t.isDisposed&&t.dispose()})),this.clonedTensorsMap=null)}getIntermediateTensors(){return this.clonedTensorsMap}async _executeAsync(e,t,n=!1,r={},s={}){this.disposeIntermediateTensors(),n||(e=this.mapInputs(e),this.checkInputs(e),this.checkInputShapeAndType(e),t=this.mapOutputs(t),this.checkOutputs(t));try{this.keepIntermediateTensors=fe().getBool("KEEP_INTERMEDIATE_TENSORS")}catch(e){this.keepIntermediateTensors=!1,console.warn(e.message)}const a=new BI(this.weightMap,r,s,this.functionExecutorMap,this.parseNodeNameCache);this.keepIntermediateTensors&&(this.clonedTensorsMap=this.cloneTensorMap(this.weightMap));const o=await this.executeWithControlFlow(e,a,t,n),i=t.map((e=>UC(e,o,a))),u=i.map((e=>e.id)),l=Object.keys(e).map((t=>e[t].id)),c=new Set([...u,...l,...this.weightIds]);return Object.values(o).forEach((e=>{e.forEach((e=>{!e||e.isDisposed||c.has(e.id)||e.dispose()}))})),null==this.parent&&a.dispose(c),i}async executeFunctionAsync(e,t,n){const r=e.reduce(((e,t,n)=>(e[this.inputs[n].name]=t,e)),{});return this._executeAsync(r,this.outputNodes,!0,t,n)}async executeWithControlFlow(e,t,n,r){const s=Object.keys(e),a=s.map((e=>this.graph.nodes[HC(e)[0]])),o=n.map((e=>HC(e)[0])),i=new Set(o);let u=o.map((e=>this.graph.nodes[e]));0===u.length&&(u=this._outputs);const{usedNodes:l,missingInputs:c,dynamicNode:h,syncInputs:d}=zI(e,u,this.weightMap,this._initNodes),p=[...a,...this.graph.weights,...this._initNodes||[]].map((e=>({node:e,contexts:t.currentContext}))),f=Object.assign({},this.weightMap);Object.keys(e).forEach((t=>{const[n,r]=HC(t),s=[];s[r]=e[t],f[n]=s}));const m={},g=this.getFrozenTensorIds(f),y={};for(;p.length>0;){const e=this.processStack(a,p,t,f,y,g,i,m,l);await Promise.all(e)}null!=h||r||console.warn("This model execution did not contain any nodes with control flow or dynamic output shapes. You can use model.execute() instead.");const x=u.filter((e=>!HI(e)&&!UC(e.name,f,t))).map((e=>e.name));if(x.length>0){let e="";throw null!=h&&(e=`Alternatively, to avoid the dynamic ops, use model.execute() and specify the inputs [${d}]`),new Error(`Cannot compute the outputs [${x}] from the provided inputs [${s}]. Consider providing the following inputs: [${c}]. ${e}`)}return f}processStack(e,t,n,r,s,a,o,i,u){const l=[];for(;t.length>0;){const e=t.pop();n.currentContext=e.contexts;let c="";if("Enter"===e.node.op&&zC("isConstant",e.node,r,n)&&([c]=WC(e.node.name,n)),null==r[e.node.name]){const h=LI(e.node,r,n,this._resourceManager);c||([c]=WC(e.node.name,n));const d=n.currentContext;ce(h)?l.push(h.then((l=>(r[c]=l,this.keepIntermediateTensors&&(this.clonedTensorsMap[c]=this.cloneTensorList(l)),n.currentContext=d,this.checkTensorForDisposal(c,e.node,r,n,a,o,i),this.processChildNodes(e.node,t,n,r,s,u),l)))):(r[c]=h,this.keepIntermediateTensors&&(this.clonedTensorsMap[c]=this.cloneTensorList(h)),this.checkTensorForDisposal(c,e.node,r,n,a,o,i),this.processChildNodes(e.node,t,n,r,s,u))}else this.processChildNodes(e.node,t,n,r,s,u)}return l}processChildNodes(e,t,n,r,s,a){e.children.forEach((e=>{const[o]=WC(e.name,n);!s[o]&&a.has(e.name)&&("Merge"===e.op?e.inputNames.some((e=>!!UC(e,r,n)))&&(s[o]=!0,t.push({contexts:n.currentContext,node:e})):e.inputNames.every((e=>!!UC(e,r,n)))&&(s[o]=!0,t.push({contexts:n.currentContext,node:e})))}))}dispose(){Object.keys(this.weightMap).forEach((e=>this.weightMap[e].forEach((e=>e.dispose()))))}checkInputShapeAndType(e){Object.keys(e).forEach((t=>{const n=e[t],[r]=HC(t),s=this.graph.nodes[r];if(s.attrParams.shape&&s.attrParams.shape.value){const e=s.attrParams.shape.value;D(e.length===n.shape.length&&n.shape.every(((t,n)=>-1===e[n]||e[n]===t)),(()=>`The shape of dict['${s.name}'] provided in model.execute(dict) must be [${e}], but was [${n.shape}]`))}s.attrParams.dtype&&s.attrParams.dtype.value&&D(n.dtype===s.attrParams.dtype.value,(()=>`The dtype of dict['${s.name}'] provided in model.execute(dict) must be ${s.attrParams.dtype.value}, but was ${n.dtype}`))}))}mapInputs(e){var t,n;const r={};for(const s in e){const a=null===(n=null===(t=this._signature)||void 0===t?void 0:t.inputs)||void 0===n?void 0:n[s];null!=a?r[a.name]=e[s]:r[s]=e[s]}return r}checkInputs(e){const t=Object.keys(e).filter((e=>{const[t]=HC(e);return null==this.graph.nodes[t]}));if(t.length>0)throw new Error(`The dict provided in model.execute(dict) has keys: [${t}] that are not part of graph`)}mapOutputs(e){return e.map((e=>{var t,n;const r=null===(n=null===(t=this._signature)||void 0===t?void 0:t.outputs)||void 0===n?void 0:n[e];return null!=r?r.name:e}),{})}checkOutputs(e){e.forEach((e=>{const[t]=HC(e);if(!this.graph.nodes[t])throw new Error(`The output '${e}' is not found in the graph`)}))}}class XI{constructor(e={},t={}){this.hashTableNameToHandle=e,this.hashTableMap=t}addHashTable(e,t){this.hashTableNameToHandle[e]=t.handle,this.hashTableMap[t.id]=t}getHashTableHandleByName(e){return this.hashTableNameToHandle[e]}getHashTableById(e){return this.hashTableMap[e]}dispose(){for(const e in this.hashTableMap)this.hashTableMap[e].clearAndClose(),delete this.hashTableMap[e];for(const e in this.hashTableNameToHandle)this.hashTableNameToHandle[e].dispose(),delete this.hashTableNameToHandle[e]}}const YI="?tfjs-format=file",QI="model.json";class ZI{get modelVersion(){return this.version}get inputNodes(){return this.executor.inputNodes}get outputNodes(){return this.executor.outputNodes}get inputs(){return this.executor.inputs}get outputs(){return this.executor.outputs}get weights(){return this.executor.weightMap}get metadata(){return this.artifacts.userDefinedMetadata}get modelSignature(){return this.signature}get modelStructuredOutputKeys(){return this.structuredOutputKeys}constructor(e,t={},n=r){this.modelUrl=e,this.loadOptions=t,this.version="n/a",this.io=n,null==t&&(this.loadOptions={}),this.resourceManager=new XI}findIOHandler(){const e=this.modelUrl;if(null!=e.load)this.handler=e;else if(null!=this.loadOptions.requestInit)this.handler=this.io.browserHTTPRequest(e,this.loadOptions);else{const t=this.io.getLoadHandlers(e,this.loadOptions);if(0===t.length)t.push(this.io.browserHTTPRequest(e,this.loadOptions));else if(t.length>1)throw new Error(`Found more than one (${t.length}) load handlers for URL '${[e]}'`);this.handler=t[0]}}load(){if(this.findIOHandler(),null==this.handler.load)throw new Error("Cannot proceed with model loading because the IOHandler provided does not have the `load` method implemented.");const e=this.handler.load();return ce(e)?e.then((e=>this.loadSync(e))):this.loadSync(e)}loadSync(e){this.artifacts=e;const t=this.artifacts.modelTopology;let n=this.artifacts.signature;if(null!=this.artifacts.userDefinedMetadata){const e=this.artifacts.userDefinedMetadata;null!=e.signature&&(n=e.signature),null!=e.structuredOutputKeys&&(this.structuredOutputKeys=e.structuredOutputKeys)}this.signature=n,this.version=`${t.versions.producer}.${t.versions.minConsumer}`;const r=this.io.decodeWeights(this.artifacts.weightData,this.artifacts.weightSpecs);if(this.executor=new qI(pI.Instance.transformGraph(t,this.signature)),this.executor.weightMap=this.convertTensorMapToTensorsMap(r),this.executor.resourceManager=this.resourceManager,null!=e.modelInitializer&&null!=e.modelInitializer.node){const t=pI.Instance.transformGraph(e.modelInitializer);this.initializer=new qI(t),this.initializer.weightMap=this.executor.weightMap,this.initializer.resourceManager=this.resourceManager,this.initializerSignature=e.initializerSignature}return!0}async save(e,t){if("string"==typeof e){const t=this.io.getSaveHandlers(e);if(0===t.length)throw new Error(`Cannot find any save handlers for URL '${e}'`);if(t.length>1)throw new Error(`Found more than one (${t.length}) save handlers for URL '${e}'`);e=t[0]}if(null==e.save)throw new Error("GraphModel.save() cannot proceed because the IOHandler provided does not have the `save` attribute defined.");return e.save(this.artifacts)}addStructuredOutputNames(e){if(this.structuredOutputKeys){const t={};return(e instanceof ps?[e]:e).forEach(((e,n)=>t[this.structuredOutputKeys[n]]=e)),t}return e}predict(e,t){const n=this.execute(e,this.outputNodes);return this.addStructuredOutputNames(n)}async predictAsync(e,t){const n=await this.executeAsync(e,this.outputNodes);return this.addStructuredOutputNames(n)}normalizeInputs(e){var t;if(!(e instanceof ps||Array.isArray(e))){const n=null===(t=this.signature)||void 0===t?void 0:t.inputs;if(null!=n)for(const t in n){const r=n[t];null!=r.resourceId&&(e[t]=this.resourceIdToCapturedInput[r.resourceId])}return e}e=Array.isArray(e)?e:[e];const n=Object.keys(this.resourceIdToCapturedInput).length;if(e.length+n!==this.inputNodes.length)throw new Error(`Input tensor count mismatch, the graph model has ${this.inputNodes.length-n} non-resource placeholders, while there are ${e.length} input tensors provided.`);let r=0;return this.inputNodes.reduce(((t,n)=>{var s,a,o;const i=null===(o=null===(a=null===(s=this.signature)||void 0===s?void 0:s.inputs)||void 0===a?void 0:a[n])||void 0===o?void 0:o.resourceId;return t[n]=null!=i?this.resourceIdToCapturedInput[i]:e[r++],t}),{})}normalizeOutputs(e){return e=e||this.outputNodes,Array.isArray(e)?e:[e]}executeInitializerGraph(){return null==this.initializer?[]:null==this.initializerSignature?this.initializer.execute({},[]):this.initializer.execute({},Object.keys(this.initializerSignature.outputs))}async executeInitializerGraphAsync(){return null==this.initializer?[]:null==this.initializerSignature?this.initializer.executeAsync({},[]):this.initializer.executeAsync({},Object.keys(this.initializerSignature.outputs))}setResourceIdToCapturedInput(e){if(this.resourceIdToCapturedInput={},this.initializerSignature){const t=this.initializerSignature.outputs,n=Object.keys(t);for(let r=0;r<n.length;r++){const s=t[n[r]];this.resourceIdToCapturedInput[s.resourceId]=e[r]}}}execute(e,t){null==this.resourceIdToCapturedInput&&this.setResourceIdToCapturedInput(this.executeInitializerGraph()),e=this.normalizeInputs(e),t=this.normalizeOutputs(t);const n=this.executor.execute(e,t);return n.length>1?n:n[0]}async executeAsync(e,t){null==this.resourceIdToCapturedInput&&this.setResourceIdToCapturedInput(await this.executeInitializerGraphAsync()),e=this.normalizeInputs(e),t=this.normalizeOutputs(t);const n=await this.executor.executeAsync(e,t);return n.length>1?n:n[0]}getIntermediateTensors(){return this.executor.getIntermediateTensors()}disposeIntermediateTensors(){this.executor.disposeIntermediateTensors()}convertTensorMapToTensorsMap(e){return Object.keys(e).reduce(((t,n)=>(t[n]=[e[n]],t)),{})}dispose(){this.executor.dispose(),this.initializer&&(this.initializer.dispose(),this.resourceIdToCapturedInput&&Qa(this.resourceIdToCapturedInput)),this.resourceManager.dispose()}}async function JI(e,t={},n=r){if(null==e)throw new Error("modelUrl in loadGraphModel() cannot be null. Please provide a url or an IOHandler that loads the model");null==t&&(t={}),t.fromTFHub&&"string"==typeof e&&(e=function(e){return e.endsWith("/")||(e+="/"),`${e}${QI}${YI}`}(e));const s=new ZI(e,t,n);return await s.load(),s}var eT=function(e,t){return(eT=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var n in t)Object.prototype.hasOwnProperty.call(t,n)&&(e[n]=t[n])})(e,t)};function tT(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Class extends value "+String(t)+" is not a constructor or null");function n(){this.constructor=e}eT(e,t),e.prototype=null===t?Object.create(t):(n.prototype=t.prototype,new n)}var nT=function(){return(nT=Object.assign||function(e){for(var t,n=1,r=arguments.length;n<r;n++)for(var s in t=arguments[n])Object.prototype.hasOwnProperty.call(t,s)&&(e[s]=t[s]);return e}).apply(this,arguments)};function rT(e,t,n,r){return new(n||(n=Promise))((function(s,a){function o(e){try{u(r.next(e))}catch(e){a(e)}}function i(e){try{u(r.throw(e))}catch(e){a(e)}}function u(e){var t;e.done?s(e.value):(t=e.value,t instanceof n?t:new n((function(e){e(t)}))).then(o,i)}u((r=r.apply(e,t||[])).next())}))}function sT(e,t){var n,r,s,a,o={label:0,sent:function(){if(1&s[0])throw s[1];return s[1]},trys:[],ops:[]};return a={next:i(0),throw:i(1),return:i(2)},"function"==typeof Symbol&&(a[Symbol.iterator]=function(){return this}),a;function i(a){return function(i){return function(a){if(n)throw new TypeError("Generator is already executing.");for(;o;)try{if(n=1,r&&(s=2&a[0]?r.return:a[0]?r.throw||((s=r.return)&&s.call(r),0):r.next)&&!(s=s.call(r,a[1])).done)return s;switch(r=0,s&&(a=[2&a[0],s.value]),a[0]){case 0:case 1:s=a;break;case 4:return o.label++,{value:a[1],done:!1};case 5:o.label++,r=a[1],a=[0];continue;case 7:a=o.ops.pop(),o.trys.pop();continue;default:if(!((s=(s=o.trys).length>0&&s[s.length-1])||6!==a[0]&&2!==a[0])){o=0;continue}if(3===a[0]&&(!s||a[1]>s[0]&&a[1]<s[3])){o.label=a[1];break}if(6===a[0]&&o.label<s[1]){o.label=s[1],s=a;break}if(s&&o.label<s[2]){o.label=s[2],o.ops.push(a);break}s[2]&&o.ops.pop(),o.trys.pop();continue}a=t.call(e,o)}catch(e){a=[6,e],r=0}finally{n=s=0}if(5&a[0])throw a[1];return{value:a[0]?a[1]:void 0,done:!0}}([a,i])}}}function aT(e,t,n){if(n||2===arguments.length)for(var r,s=0,a=t.length;s<a;s++)!r&&s in t||(r||(r=Array.prototype.slice.call(t,0,s)),r[s]=t[s]);return e.concat(r||Array.prototype.slice.call(t))}var oT=["nose","left_eye","right_eye","left_ear","right_ear","left_shoulder","right_shoulder","left_elbow","right_elbow","left_wrist","right_wrist","left_hip","right_hip","left_knee","right_knee","left_ankle","right_ankle"],iT=["nose","left_eye_inner","left_eye","left_eye_outer","right_eye_inner","right_eye","right_eye_outer","left_ear","right_ear","mouth_left","mouth_right","left_shoulder","right_shoulder","left_elbow","right_elbow","left_wrist","right_wrist","left_pinky","right_pinky","left_index","right_index","left_thumb","right_thumb","left_hip","right_hip","left_knee","right_knee","left_ankle","right_ankle","left_heel","right_heel","left_foot_index","right_foot_index"],uT={left:[1,2,3,7,9,11,13,15,17,19,21,23,25,27,29,31],right:[4,5,6,8,10,12,14,16,18,20,22,24,26,28,30,32],middle:[0]},lT={left:[1,3,5,7,9,11,13,15],right:[2,4,6,8,10,12,14,16],middle:[0]},cT=[[0,1],[0,2],[1,3],[2,4],[5,6],[5,7],[5,11],[6,8],[6,12],[7,9],[8,10],[11,12],[11,13],[12,14],[13,15],[14,16]],hT=[[0,1],[0,4],[1,2],[2,3],[3,7],[4,5],[5,6],[6,8],[9,10],[11,12],[11,13],[11,23],[12,14],[14,16],[12,24],[13,15],[15,17],[16,18],[16,20],[15,17],[15,19],[15,21],[16,22],[17,19],[18,20],[23,25],[23,24],[24,26],[25,27],[26,28],[27,29],[28,30],[27,31],[28,32],[29,31],[30,32]];function dT(e){return e instanceof SVGAnimatedLength?e.baseVal.value:e}function pT(e){return rT(this,void 0,void 0,(function(){var t,n;return sT(this,(function(r){switch(r.label){case 0:return t=document.createElement("canvas"),e instanceof ps?[4,Zo(e,t)]:[3,2];case 1:return r.sent(),[3,3];case 2:t.width=dT(e.width),t.height=dT(e.height),n=t.getContext("2d"),e instanceof ImageData?n.putImageData(e,0,0):n.drawImage(e,0,0),r.label=3;case 3:return[2,t]}}))}))}function fT(e){return rT(this,void 0,void 0,(function(){var t,n,r,s,a,o;return sT(this,(function(i){switch(i.label){case 0:return e instanceof ps?(t=e.shape.slice(0,2),n=t[0],r=t[1],s=ImageData.bind,[4,Zo(e)]):[3,2];case 1:return[2,new(s.apply(ImageData,[void 0,i.sent(),r,n]))];case 2:return a=document.createElement("canvas"),o=a.getContext("2d"),a.width=dT(e.width),a.height=dT(e.height),o.drawImage(e,0,0),[2,o.getImageData(0,0,a.width,a.height)]}}))}))}function mT(e){return rT(this,void 0,void 0,(function(){var t;return sT(this,(function(n){switch(n.label){case 0:return e instanceof SVGImageElement||e instanceof OffscreenCanvas?[4,pT(e)]:[3,2];case 1:return t=n.sent(),[3,3];case 2:t=e,n.label=3;case 3:return[2,Jo(t,4)]}}))}))}function gT(e){if(e<0||e>=256)throw new Error("Mask value must be in range [0, 255] but got ".concat(e));if(!Number.isInteger(e))throw new Error("Mask value must be an integer but got ".concat(e))}var yT={runtime:"mediapipe",enableSmoothing:!0,enableSegmentation:!1,smoothSegmentation:!0,modelType:"full"},xT=function(){function e(e){this.mask=e}return e.prototype.toCanvasImageSource=function(){return rT(this,void 0,void 0,(function(){return sT(this,(function(e){return[2,this.mask]}))}))},e.prototype.toImageData=function(){return rT(this,void 0,void 0,(function(){return sT(this,(function(e){return[2,fT(this.mask)]}))}))},e.prototype.toTensor=function(){return rT(this,void 0,void 0,(function(){return sT(this,(function(e){return[2,mT(this.mask)]}))}))},e.prototype.getUnderlyingType=function(){return"canvasimagesource"},e}();function bT(e){return gT(e),"person"}var vT=function(){function e(e){var t,n=this;switch(this.width=0,this.height=0,this.selfieMode=!1,this.poseSolution=new MC.Pose({locateFile:function(t,n){if(e.solutionPath){var r=e.solutionPath.replace(/\/+$/,"");return"".concat(r,"/").concat(t)}return"".concat(n,"/").concat(t)}}),e.modelType){case"lite":t=0;break;case"heavy":t=2;break;default:t=1}this.poseSolution.setOptions({modelComplexity:t,smoothLandmarks:e.enableSmoothing,enableSegmentation:e.enableSegmentation,smoothSegmentation:e.smoothSegmentation,selfieMode:this.selfieMode}),this.poseSolution.onResults((function(e){if(n.height=e.image.height,n.width=e.image.width,null==e.poseLandmarks)n.poses=[];else{var t=n.translateOutput(e.poseLandmarks,e.poseWorldLandmarks);e.segmentationMask&&(t.segmentation={maskValueToLabel:bT,mask:new xT(e.segmentationMask)}),n.poses=[t]}}))}return e.prototype.translateOutput=function(e,t){var n=this,r={keypoints:e.map((function(e,t){return{x:e.x*n.width,y:e.y*n.height,z:e.z,score:e.visibility,name:iT[t]}}))};return null!=t&&(r.keypoints3D=t.map((function(e,t){return{x:e.x,y:e.y,z:e.z,score:e.visibility,name:iT[t]}}))),r},e.prototype.estimatePoses=function(e,t,n){return rT(this,void 0,void 0,(function(){var r,s;return sT(this,(function(a){switch(a.label){case 0:return t&&t.flipHorizontal&&t.flipHorizontal!==this.selfieMode&&(this.selfieMode=t.flipHorizontal,this.poseSolution.setOptions({selfieMode:this.selfieMode})),e instanceof ps?(s=ImageData.bind,[4,Zo(e)]):[3,2];case 1:return r=new(s.apply(ImageData,[void 0,a.sent(),e.shape[1],e.shape[0]])),[3,3];case 2:r=e,a.label=3;case 3:return e=r,[4,this.poseSolution.send({image:e},n)];case 4:return a.sent(),[2,this.poses]}}))}))},e.prototype.dispose=function(){this.poseSolution.close()},e.prototype.reset=function(){this.poseSolution.reset()},e.prototype.initialize=function(){return this.poseSolution.initialize()},e}();function wT(e){return rT(this,void 0,void 0,(function(){var t,n;return sT(this,(function(r){switch(r.label){case 0:return t=function(e){if(null==e)return nT({},yT);var t=nT({},e);return t.runtime="mediapipe",null==t.enableSegmentation&&(t.enableSegmentation=yT.enableSegmentation),null==t.enableSmoothing&&(t.enableSmoothing=yT.enableSmoothing),null==t.smoothSegmentation&&(t.smoothSegmentation=yT.smoothSegmentation),null==t.modelType&&(t.modelType=yT.modelType),t}(e),[4,(n=new vT(t)).initialize()];case 1:return r.sent(),[2,n]}}))}))}function kT(e){return e instanceof ps?{height:e.shape[0],width:e.shape[1]}:{height:e.height,width:e.width}}function ST(e){return e-2*Math.PI*Math.floor((e+Math.PI)/(2*Math.PI))}function CT(e){return e instanceof ps?e:Jo(e)}function IT(e,t,n){return TT(n,"inputResolution"),[1/n.width*e[0][0]*t.width,1/n.height*e[0][1]*t.width,e[0][3]*t.width,1/n.width*e[1][0]*t.height,1/n.height*e[1][1]*t.height,e[1][3]*t.height,0,0]}function TT(e,t){D(0!==e.width,(function(){return"".concat(t," width cannot be 0.")})),D(0!==e.height,(function(){return"".concat(t," height cannot be 0.")}))}function $T(e,t,n){var r=n.rotationVectorStartKeypointIndex,s=n.rotationVectorEndKeypointIndex,a=e.locationData,o=a.relativeKeypoints[r].x*t.width,i=a.relativeKeypoints[r].y*t.height,u=a.relativeKeypoints[s].x*t.width,l=a.relativeKeypoints[s].y*t.height,c=2*Math.sqrt((u-o)*(u-o)+(l-i)*(l-i)),h=function(e,t,n){var r,s=e.locationData,a=n.rotationVectorStartKeypointIndex,o=n.rotationVectorEndKeypointIndex;r=n.rotationVectorTargetAngle?n.rotationVectorTargetAngle:Math.PI*n.rotationVectorTargetAngleDegree/180;var i=s.relativeKeypoints[a].x*t.width,u=s.relativeKeypoints[a].y*t.height,l=s.relativeKeypoints[o].x*t.width,c=s.relativeKeypoints[o].y*t.height;return ST(r-Math.atan2(-(c-u),l-i))}(e,t,n);return{xCenter:o/t.width,yCenter:i/t.height,width:c/t.width,height:c/t.height,rotation:h}}function NT(e){if(16!==e.length)throw new Error("Array length must be 16 but got ".concat(e.length));return[[e[0],e[1],e[2],e[3]],[e[4],e[5],e[6],e[7]],[e[8],e[9],e[10],e[11]],[e[12],e[13],e[14],e[15]]]}function ET(e,t,n,r,s,a,o){return e[t][s]*(e[n][a]*e[r][o]-e[n][o]*e[r][a])}function RT(e,t,n){var r=(t+1)%4,s=(t+2)%4,a=(t+3)%4,o=(n+1)%4,i=(n+2)%4,u=(n+3)%4;return ET(e,r,s,a,o,i,u)+ET(e,s,a,r,o,i,u)+ET(e,a,r,s,o,i,u)}function _T(e,t,n){void 0===n&&(n={ignoreRotation:!1});for(var r=[],s=0,a=e;s<a.length;s++){var o=a[s],i=o.x-.5,u=o.y-.5,l=n.ignoreRotation?0:t.rotation,c=Math.cos(l)*i-Math.sin(l)*u,h=Math.sin(l)*i+Math.cos(l)*u;c=c*t.width+t.xCenter,h=h*t.height+t.yCenter;var d=o.z*t.width,p=nT({},o);p.x=c,p.y=h,p.z=d,r.push(p)}return r}function AT(e,t){var n=function(e,t,n,r){var s=(r-n)/255;return{scale:s,offset:n-0*s}}(0,0,t[0],t[1]);return Ya((function(){return ro(oo(e,n.scale),n.offset)}))}function OT(e,t,n){var r,s,a,o,i,u,l,c,h,d,p,f,m=t.outputTensorSize,g=t.keepAspectRatio,y=t.borderMode,x=t.outputTensorFloatRange,b=kT(e),v=function(e,t){return t?{xCenter:t.xCenter*e.width,yCenter:t.yCenter*e.height,width:t.width*e.width,height:t.height*e.height,rotation:t.rotation}:{xCenter:.5*e.width,yCenter:.5*e.height,width:e.width,height:e.height,rotation:0}}(b,n),w=function(e,t,n){if(void 0===n&&(n=!1),!n)return{top:0,left:0,right:0,bottom:0};var r=t.height,s=t.width;TT(t,"targetSize"),TT(e,"roi");var a,o,i=r/s,u=e.height/e.width,l=0,c=0;return i>u?(a=e.width,o=e.width*i,c=(1-u/i)/2):(a=e.height/i,o=e.height,l=(1-i/u)/2),e.width=a,e.height=o,{top:c,left:l,right:l,bottom:c}}(v,m,g),k=(r=v,s=b.width,a=b.height,o=r.width,i=r.height,u=Math.cos(r.rotation),l=Math.sin(r.rotation),c=r.xCenter,h=r.yCenter,d=1/s,p=1/a,(f=new Array(16))[0]=o*u*1*d,f[1]=-i*l*d,f[2]=0,f[3]=(-.5*o*u*1+.5*i*l+c)*d,f[4]=o*l*1*p,f[5]=i*u*p,f[6]=0,f[7]=(-.5*i*u-.5*o*l*1+h)*p,f[8]=0,f[9]=0,f[10]=o*d,f[11]=0,f[12]=0,f[13]=0,f[14]=0,f[15]=1,NT(f));return{imageTensor:Ya((function(){var t=CT(e),n=Zc(IT(k,b,m),[1,8]),r="zero"===y?"constant":"nearest",s=$d.transform(tl(ja(t,"float32")),n,"bilinear",r,0,[m.height,m.width]);return null!=x?AT(s,x):s})),padding:w,transformationMatrix:k}}function FT(e,t,n,r){return 1===r?.5*(e+t):e+(t-e)*n/(r-1)}function PT(e){return null!=e&&null!=e.currentTime}function DT(e){for(var t={locationData:{relativeKeypoints:[]}},n=Number.MAX_SAFE_INTEGER,r=Number.MIN_SAFE_INTEGER,s=Number.MAX_SAFE_INTEGER,a=Number.MIN_SAFE_INTEGER,o=0;o<e.length;++o){var i=e[o];n=Math.min(n,i.x),r=Math.max(r,i.x),s=Math.min(s,i.y),a=Math.max(a,i.y),t.locationData.relativeKeypoints.push({x:i.x,y:i.y})}return t.locationData.relativeBoundingBox={xMin:n,yMin:s,xMax:r,yMax:a,width:r-n,height:a-s},t}function MT(e,t,n,r){return rT(this,void 0,void 0,(function(){var r,s,a,o,i;return sT(this,(function(u){switch(u.label){case 0:return e.sort((function(e,t){return Math.max.apply(Math,t.score)-Math.max.apply(Math,e.score)})),r=Zc(e.map((function(e){return[e.locationData.relativeBoundingBox.yMin,e.locationData.relativeBoundingBox.xMin,e.locationData.relativeBoundingBox.yMax,e.locationData.relativeBoundingBox.xMax]}))),s=Qc(e.map((function(e){return e.score[0]}))),[4,$d.nonMaxSuppressionAsync(r,s,t,n)];case 1:return[4,(a=u.sent()).array()];case 2:return o=u.sent(),i=e.filter((function(e,t){return o.indexOf(t)>-1})),Qa([r,s,a]),[2,i]}}))}))}function LT(e,t){return e.map((function(e){var n=nT(nT({},e),{x:e.x*t.width,y:e.y*t.height});return null!=e.z&&(n.z=e.z*t.width),n}))}function BT(e,t,n){return rT(this,void 0,void 0,(function(){var r,s,a,o,i,u,l,c,h,d,p,f,m,g,y,x,b,v,w,k,S,C,I,T;return sT(this,(function($){switch($.label){case 0:if(r=jc(t,[0]),s=r.shape,a=s[0],o=s[1],i=s[2],e.length!==i)throw new Error("Expected heatmap to have same number of channels as the number of landmarks. But got landmarks length: "+"".concat(e.length,", heatmap length: ").concat(i));return u=[],[4,r.buffer()];case 1:for(l=$.sent(),c=0;c<e.length;c++)if(h=e[c],d=nT({},h),u.push(d),p=Math.trunc(d.x*o),f=Math.trunc(d.y*a),!(p<0||p>=o||f<0||p>=a)){for(m=Math.trunc((n.kernelSize-1)/2),g=Math.max(0,p-m),y=Math.min(o,p+m+1),x=Math.max(0,f-m),b=Math.min(a,f+m+1),v=0,w=0,k=0,S=0,C=x;C<b;++C)for(I=g;I<y;++I)T=l.get(C,I,c),v+=T,S=Math.max(S,T),w+=I*T,k+=C*T;S>=n.minConfidenceToRefine&&v>0&&(d.x=w/o/v,d.y=k/a/v)}return r.dispose(),[2,u]}}))}))}function zT(e,t){var n=t.left,r=t.top,s=t.left+t.right,a=t.top+t.bottom;return e.map((function(e){return nT(nT({},e),{x:(e.x-n)/(1-s),y:(e.y-r)/(1-a),z:e.z/(1-s)})}))}function UT(e,t,n){return rT(this,void 0,void 0,(function(){var r,s,a,o,i;return sT(this,(function(u){switch(u.label){case 0:return r=e[0],s=e[1],a=function(e,t,n){return Ya((function(){var r,s,a,o;n.reverseOutputOrder?(s=jc(Zi(e,[0,n.boxCoordOffset+0],[-1,1])),r=jc(Zi(e,[0,n.boxCoordOffset+1],[-1,1])),o=jc(Zi(e,[0,n.boxCoordOffset+2],[-1,1])),a=jc(Zi(e,[0,n.boxCoordOffset+3],[-1,1]))):(r=jc(Zi(e,[0,n.boxCoordOffset+0],[-1,1])),s=jc(Zi(e,[0,n.boxCoordOffset+1],[-1,1])),a=jc(Zi(e,[0,n.boxCoordOffset+2],[-1,1])),o=jc(Zi(e,[0,n.boxCoordOffset+3],[-1,1]))),s=ro(oo(ao(s,n.xScale),t.w),t.x),r=ro(oo(ao(r,n.yScale),t.h),t.y),n.applyExponentialOnBoxSize?(a=oo(el(ao(a,n.hScale)),t.h),o=oo(el(ao(o,n.wScale)),t.w)):(a=oo(ao(a,n.hScale),t.h),o=oo(ao(o,n.wScale),t.h));var i=wo(r,ao(a,2)),u=wo(s,ao(o,2)),l=ro(r,ao(a,2)),c=ro(s,ao(o,2)),h=Xi([ji(i,[n.numBoxes,1]),ji(u,[n.numBoxes,1]),ji(l,[n.numBoxes,1]),ji(c,[n.numBoxes,1])],1);if(n.numKeypoints)for(var d=0;d<n.numKeypoints;++d){var p=n.keypointCoordOffset+d*n.numValuesPerKeypoint,f=void 0,m=void 0;n.reverseOutputOrder?(f=jc(Zi(e,[0,p],[-1,1])),m=jc(Zi(e,[0,p+1],[-1,1]))):(m=jc(Zi(e,[0,p],[-1,1])),f=jc(Zi(e,[0,p+1],[-1,1])));var g=ro(oo(ao(f,n.xScale),t.w),t.x),y=ro(oo(ao(m,n.yScale),t.h),t.y);h=Xi([h,ji(g,[n.numBoxes,1]),ji(y,[n.numBoxes,1])],1)}return h}))}(s,t,n),o=Ya((function(){var e=r;return n.sigmoidScore?(null!=n.scoreClippingThresh&&(e=hu(r,-n.scoreClippingThresh,n.scoreClippingThresh)),e=Qi(e)):e})),[4,VT(a,o,n)];case 1:return i=u.sent(),Qa([a,o]),[2,i]}}))}))}function VT(e,t,n){return rT(this,void 0,void 0,(function(){var r,s,a,o,i,u,l,c,h,d,p,f;return sT(this,(function(m){switch(m.label){case 0:return r=[],[4,e.data()];case 1:return s=m.sent(),[4,t.data()];case 2:for(a=m.sent(),o=0;o<n.numBoxes;++o)if(!(null!=n.minScoreThresh&&a[o]<n.minScoreThresh||(i=o*n.numCoords,u=WT(s[i+0],s[i+1],s[i+2],s[i+3],a[o],n.flipVertically,o),(l=u.locationData.relativeBoundingBox).width<0||l.height<0))){if(n.numKeypoints>0)for((c=u.locationData).relativeKeypoints=[],h=n.numKeypoints*n.numValuesPerKeypoint,d=0;d<h;d+=n.numValuesPerKeypoint)p=i+n.keypointCoordOffset+d,f={x:s[p+0],y:n.flipVertically?1-s[p+1]:s[p+1]},c.relativeKeypoints.push(f);r.push(u)}return[2,r]}}))}))}function WT(e,t,n,r,s,a,o){return{score:[s],ind:o,locationData:{relativeBoundingBox:{xMin:t,yMin:a?1-n:e,xMax:r,yMax:a?1-e:n,width:r-t,height:n-e}}}}function GT(e,t){return"none"===e?t:function(e){return 1/(1+Math.exp(-e))}(t)}function HT(e,t,n,r){return rT(this,void 0,void 0,(function(){var s,a,o,i,u,l,c,h;return sT(this,(function(d){switch(d.label){case 0:return n=n||t.flipHorizontally||!1,r=r||t.flipVertically||!1,s=e.size,a=s/t.numLandmarks,[4,e.data()];case 1:for(o=d.sent(),i=[],u=0;u<t.numLandmarks;++u)l=u*a,(h={x:0,y:0}).x=n?t.inputImageWidth-o[l]:o[l],a>1&&(h.y=r?t.inputImageHeight-o[l+1]:o[l+1]),a>2&&(h.z=o[l+2]),a>3&&(h.score=GT(t.visibilityActivation,o[l+3])),i.push(h);for(c=0;c<i.length;++c)(h=i[c]).x=h.x/t.inputImageWidth,h.y=h.y/t.inputImageHeight,h.z=h.z/t.inputImageWidth/(t.normalizeZ||1);return[2,i]}}))}))}function jT(e,t,n){var r=e.width,s=e.height,a=e.rotation;if(null==n.rotation&&null==n.rotationDegree||(a=function(e,t){return null!=t.rotation?e+=t.rotation:null!=t.rotationDegree&&(e+=Math.PI*t.rotationDegree/180),ST(e)}(a,n)),0===a)e.xCenter=e.xCenter+r*n.shiftX,e.yCenter=e.yCenter+s*n.shiftY;else{var o=(t.width*r*n.shiftX*Math.cos(a)-t.height*s*n.shiftY*Math.sin(a))/t.width,i=(t.width*r*n.shiftX*Math.sin(a)+t.height*s*n.shiftY*Math.cos(a))/t.height;e.xCenter=e.xCenter+o,e.yCenter=e.yCenter+i}if(n.squareLong){var u=Math.max(r*t.width,s*t.height);r=u/t.width,s=u/t.height}else if(n.squareShort){var l=Math.min(r*t.width,s*t.height);r=l/t.width,s=l/t.height}return e.width=r*n.scaleX,e.height=s*n.scaleY,e}var KT=function(){function e(e){this.alpha=e,this.initialized=!1}return e.prototype.apply=function(e,t){var n;return this.initialized?n=null==t?this.storedValue+this.alpha*(e-this.storedValue):this.storedValue+this.alpha*t*Math.asinh((e-this.storedValue)/t):(n=e,this.initialized=!0),this.rawValue=e,this.storedValue=n,n},e.prototype.applyWithAlpha=function(e,t,n){return this.alpha=t,this.apply(e,n)},e.prototype.hasLastRawValue=function(){return this.initialized},e.prototype.lastRawValue=function(){return this.rawValue},e.prototype.reset=function(){this.initialized=!1},e}(),qT=function(){function e(e){this.frequency=e.frequency,this.minCutOff=e.minCutOff,this.beta=e.beta,this.thresholdCutOff=e.thresholdCutOff,this.thresholdBeta=e.thresholdBeta,this.derivateCutOff=e.derivateCutOff,this.x=new KT(this.getAlpha(this.minCutOff)),this.dx=new KT(this.getAlpha(this.derivateCutOff)),this.lastTimestamp=0}return e.prototype.apply=function(e,t,n){if(null==e)return e;var r=Math.trunc(t);if(this.lastTimestamp>=r)return e;0!==this.lastTimestamp&&0!==r&&(this.frequency=1/(1e-6*(r-this.lastTimestamp))),this.lastTimestamp=r;var s=this.x.hasLastRawValue()?(e-this.x.lastRawValue())*n*this.frequency:0,a=this.dx.applyWithAlpha(s,this.getAlpha(this.derivateCutOff)),o=this.minCutOff+this.beta*Math.abs(a),i=null!=this.thresholdCutOff?this.thresholdCutOff+this.thresholdBeta*Math.abs(a):null;return this.x.applyWithAlpha(e,this.getAlpha(o),i)},e.prototype.getAlpha=function(e){return 1/(1+this.frequency/(2*Math.PI*e))},e}(),XT=function(){function e(e){this.config=e}return e.prototype.apply=function(e,t,n){var r=this;if(null==e)return this.reset(),null;this.initializeFiltersIfEmpty(e);var s=1;if(!this.config.disableValueScaling){if(n<this.config.minAllowedObjectScale)return aT([],e,!0);s=1/n}return e.map((function(e,n){var a=nT(nT({},e),{x:r.xFilters[n].apply(e.x,t,s),y:r.yFilters[n].apply(e.y,t,s)});return null!=e.z&&(a.z=r.zFilters[n].apply(e.z,t,s)),a}))},e.prototype.reset=function(){this.xFilters=null,this.yFilters=null,this.zFilters=null},e.prototype.initializeFiltersIfEmpty=function(e){var t=this;null!=this.xFilters&&this.xFilters.length===e.length||(this.xFilters=e.map((function(e){return new qT(t.config)})),this.yFilters=e.map((function(e){return new qT(t.config)})),this.zFilters=e.map((function(e){return new qT(t.config)})))},e}(),YT=function(){function e(e){this.config=e,this.window=[],this.lowPassFilter=new KT(1),this.lastValue=0,this.lastValueScale=1,this.lastTimestamp=-1}return e.prototype.apply=function(e,t,n){if(null==e)return e;var r,s=Math.trunc(t);if(this.lastTimestamp>=s)return e;if(-1===this.lastTimestamp)r=1;else{for(var a=e*n-this.lastValue*this.lastValueScale,o=s-this.lastTimestamp,i=a,u=o,l=(1+this.window.length)*(1e6/30),c=0,h=this.window;c<h.length;c++){var d=h[c];if(u+d.duration>l)break;i+=d.distance,u+=d.duration}var p=i/(1e-6*u);r=1-1/(1+this.config.velocityScale*Math.abs(p)),this.window.unshift({distance:a,duration:o}),this.window.length>this.config.windowSize&&this.window.pop()}return this.lastValue=e,this.lastValueScale=n,this.lastTimestamp=s,this.lowPassFilter.applyWithAlpha(e,r)},e}(),QT=function(){function e(e){this.config=e}return e.prototype.apply=function(e,t,n){var r=this;if(null==e)return this.reset(),null;var s=1;if(!this.config.disableValueScaling){if(n<this.config.minAllowedObjectScale)return aT([],e,!0);s=1/n}return this.initializeFiltersIfEmpty(e),e.map((function(e,n){var a=nT(nT({},e),{x:r.xFilters[n].apply(e.x,t,s),y:r.yFilters[n].apply(e.y,t,s)});return null!=e.z&&(a.z=r.zFilters[n].apply(e.z,t,s)),a}))},e.prototype.reset=function(){this.xFilters=null,this.yFilters=null,this.zFilters=null},e.prototype.initializeFiltersIfEmpty=function(e){var t=this;null!=this.xFilters&&this.xFilters.length===e.length||(this.xFilters=e.map((function(e){return new YT(t.config)})),this.yFilters=e.map((function(e){return new YT(t.config)})),this.zFilters=e.map((function(e){return new YT(t.config)})))},e}(),ZT=function(){function e(e){if(null!=e.velocityFilter)this.keypointsFilter=new QT(e.velocityFilter);else{if(null==e.oneEuroFilter)throw new Error("Either configure velocityFilter or oneEuroFilter, but got "+"".concat(e,"."));this.keypointsFilter=new XT(e.oneEuroFilter)}}return e.prototype.apply=function(e,t,n,r,s){if(void 0===r&&(r=!1),null==e)return this.keypointsFilter.reset(),null;var a=null!=s?function(e,t){return(e.width*t.width+e.height*t.height)/2}(s,n):1,o=r?LT(e,n):e,i=this.keypointsFilter.apply(o,t,a);return r?function(e,t){return e.map((function(e){var n=nT(nT({},e),{x:e.x/t.width,y:e.y/t.height});return null!=e.z&&(e.z=e.z/t.width),n}))}(i,n):i},e}(),JT=function(){function e(e){this.alpha=e.alpha}return e.prototype.apply=function(e){var t=this;if(null==e)return this.visibilityFilters=null,null;null!=this.visibilityFilters&&this.visibilityFilters.length===e.length||(this.visibilityFilters=e.map((function(e){return new KT(t.alpha)})));for(var n=[],r=0;r<e.length;++r){var s=e[r],a=nT({},s);a.score=this.visibilityFilters[r].apply(s.score),n.push(a)}return n},e}(),e$={reduceBoxesInLowestlayer:!1,interpolatedScaleAspectRatio:1,featureMapHeight:[],featureMapWidth:[],numLayers:5,minScale:.1484375,maxScale:.75,inputSizeHeight:224,inputSizeWidth:224,anchorOffsetX:.5,anchorOffsetY:.5,strides:[8,16,32,32,32],aspectRatios:[1],fixedAnchorSize:!0},t$={runtime:"tfjs",modelType:"full",enableSmoothing:!0,enableSegmentation:!1,smoothSegmentation:!0,detectorModelUrl:"https://tfhub.dev/mediapipe/tfjs-model/blazepose_3d/detector/1",landmarkModelUrl:"https://tfhub.dev/mediapipe/tfjs-model/blazepose_3d/landmark/full/2"},n$={maxPoses:1,flipHorizontal:!1},r$={applyExponentialOnBoxSize:!1,flipVertically:!1,ignoreClasses:[],numClasses:1,numBoxes:2254,numCoords:12,boxCoordOffset:0,keypointCoordOffset:4,numKeypoints:4,numValuesPerKeypoint:2,sigmoidScore:!0,scoreClippingThresh:100,reverseOutputOrder:!0,xScale:224,yScale:224,hScale:224,wScale:224,minScoreThresh:.5},s$={shiftX:0,shiftY:0,scaleX:1.25,scaleY:1.25,squareLong:!0},a$={outputTensorSize:{width:224,height:224},keepAspectRatio:!0,outputTensorFloatRange:[-1,1],borderMode:"zero"},o$={outputTensorSize:{width:256,height:256},keepAspectRatio:!0,outputTensorFloatRange:[0,1],borderMode:"zero"},i$={numLandmarks:39,inputImageWidth:256,inputImageHeight:256,visibilityActivation:"sigmoid",flipHorizontally:!1,flipVertically:!1},u$={numLandmarks:39,inputImageWidth:1,inputImageHeight:1,visibilityActivation:"sigmoid",flipHorizontally:!1,flipVertically:!1},l$={kernelSize:7,minConfidenceToRefine:.5},c$={alpha:.1},h$={oneEuroFilter:{frequency:30,minCutOff:.05,beta:80,derivateCutOff:1,minAllowedObjectScale:1e-6}},d$={oneEuroFilter:{frequency:30,minCutOff:.01,beta:10,derivateCutOff:1,minAllowedObjectScale:1e-6}},p$={oneEuroFilter:{frequency:30,minCutOff:.1,beta:40,derivateCutOff:1,minAllowedObjectScale:1e-6,disableValueScaling:!0}},f$={activation:"none"},m$={combineWithPreviousRatio:.7},g$=function(){function e(e){this.mask=e}return e.prototype.toCanvasImageSource=function(){return rT(this,void 0,void 0,(function(){return sT(this,(function(e){return[2,pT(this.mask)]}))}))},e.prototype.toImageData=function(){return rT(this,void 0,void 0,(function(){return sT(this,(function(e){return[2,fT(this.mask)]}))}))},e.prototype.toTensor=function(){return rT(this,void 0,void 0,(function(){return sT(this,(function(e){return[2,this.mask]}))}))},e.prototype.getUnderlyingType=function(){return"tensor"},e}();function y$(e){return gT(e),"person"}var x$=function(){function e(e,t,n,r,s,a){this.detectorModel=e,this.landmarkModel=t,this.enableSmoothing=n,this.enableSegmentation=r,this.smoothSegmentation=s,this.modelType=a,this.regionOfInterest=null,this.prevFilteredSegmentationMask=null,this.anchors=function(e){null==e.reduceBoxesInLowestLayer&&(e.reduceBoxesInLowestLayer=!1),null==e.interpolatedScaleAspectRatio&&(e.interpolatedScaleAspectRatio=1),null==e.fixedAnchorSize&&(e.fixedAnchorSize=!1);for(var t=[],n=0;n<e.numLayers;){for(var r=[],s=[],a=[],o=[],i=n;i<e.strides.length&&e.strides[i]===e.strides[n];){var u=FT(e.minScale,e.maxScale,i,e.strides.length);if(0===i&&e.reduceBoxesInLowestLayer)a.push(1),a.push(2),a.push(.5),o.push(.1),o.push(u),o.push(u);else{for(var l=0;l<e.aspectRatios.length;++l)a.push(e.aspectRatios[l]),o.push(u);if(e.interpolatedScaleAspectRatio>0){var c=i===e.strides.length-1?1:FT(e.minScale,e.maxScale,i+1,e.strides.length);o.push(Math.sqrt(u*c)),a.push(e.interpolatedScaleAspectRatio)}}i++}for(var h=0;h<a.length;++h){var d=Math.sqrt(a[h]);r.push(o[h]/d),s.push(o[h]*d)}var p=0,f=0;if(e.featureMapHeight.length>0)p=e.featureMapHeight[n],f=e.featureMapWidth[n];else{var m=e.strides[n];p=Math.ceil(e.inputSizeHeight/m),f=Math.ceil(e.inputSizeWidth/m)}for(var g=0;g<p;++g)for(var y=0;y<f;++y)for(var x=0;x<r.length;++x){var b={xCenter:(y+e.anchorOffsetX)/f,yCenter:(g+e.anchorOffsetY)/p,width:0,height:0};e.fixedAnchorSize?(b.width=1,b.height=1):(b.width=s[x],b.height=r[x]),t.push(b)}n=i}return t}(e$);var o=Qc(this.anchors.map((function(e){return e.width}))),i=Qc(this.anchors.map((function(e){return e.height}))),u=Qc(this.anchors.map((function(e){return e.xCenter}))),l=Qc(this.anchors.map((function(e){return e.yCenter})));this.anchorTensor={x:u,y:l,w:o,h:i},this.prevFilteredSegmentationMask=this.enableSegmentation?Zc([],[0,0]):null}return e.prototype.estimatePoses=function(e,t,n){return rT(this,void 0,void 0,(function(){var r,s,a,o,i,u,l,c,h,d,p,f,m,g,y,x,b,v,w,k,S,C,I;return sT(this,(function(T){switch(T.label){case 0:return r=function(e){var t;if(null==(t=null==e?n$:nT({},e)).maxPoses&&(t.maxPoses=1),t.maxPoses<=0)throw new Error("Invalid maxPoses ".concat(t.maxPoses,". Should be > 0."));if(t.maxPoses>1)throw new Error("Multi-pose detection is not implemented yet. Please set maxPoses to 1.");return t}(t),null==e?(this.reset(),[2,[]]):(this.maxPoses=r.maxPoses,this.timestamp=null!=n?1e3*n:PT(e)?1e6*e.currentTime:null,s=kT(e),a=Ya((function(){return ja(CT(e),"float32")})),null!=(o=this.regionOfInterest)?[3,2]:[4,this.detectPose(a)]);case 1:if(0===(i=T.sent()).length)return this.reset(),a.dispose(),[2,[]];u=i[0],o=this.poseDetectionToRoi(u,s),T.label=2;case 2:return[4,this.poseLandmarksByRoi(o,a)];case 3:return l=T.sent(),a.dispose(),null==l?(this.reset(),[2,[]]):(c=l.landmarks,h=l.auxiliaryLandmarks,d=l.poseScore,p=l.worldLandmarks,f=l.segmentationMask,m=this.poseLandmarkFiltering(c,h,p,s),g=m.actualLandmarksFiltered,y=m.auxiliaryLandmarksFiltered,x=m.actualWorldLandmarksFiltered,b=this.poseLandmarksToRoi(y,s),this.regionOfInterest=b,v=this.smoothSegmentation&&null!=f?this.poseSegmentationFiltering(f):f,null!=(w=null!=g?LT(g,s):null)&&w.forEach((function(e,t){e.name=iT[t]})),null!=(k=x)&&k.forEach((function(e,t){e.name=iT[t]})),S={score:d,keypoints:w,keypoints3D:k},null!==v&&(C=Ya((function(){var e=tl(v,2),t=Xl(e,[[0,0],[0,0],[0,1]]);return zl(t,[[0,0],[0,0],[0,2]],"symmetric")})),this.smoothSegmentation||Qa(v),I={maskValueToLabel:y$,mask:new g$(C)},S.segmentation=I),[2,[S]])}}))}))},e.prototype.poseSegmentationFiltering=function(e){var t=this.prevFilteredSegmentationMask;return 0===t.size?this.prevFilteredSegmentationMask=e:(this.prevFilteredSegmentationMask=function(e,t,n){return"webgl"===eo()?function(e,t,n){var r=n.combineWithPreviousRatio.toFixed(2),s={variableNames:["prevMask","newMask"],outputShape:e.shape,userCode:"\n  void main() {\n      ivec2 coords = getOutputCoords();\n      int height = coords[0];\n      int width = coords[1];\n\n      float prevMaskValue = getPrevMask(height, width);\n      float newMaskValue = getNewMask(height, width);\n\n      /*\n      * Assume p := newMaskValue\n      * H(p) := 1 + (p * log(p) + (1-p) * log(1-p)) / log(2)\n      * uncertainty alpha(p) =\n      *   Clamp(1 - (1 - H(p)) * (1 - H(p)), 0, 1) [squaring the\n      * uncertainty]\n      *\n      * The following polynomial approximates uncertainty alpha as a\n      * function of (p + 0.5):\n      */\n      const float c1 = 5.68842;\n      const float c2 = -0.748699;\n      const float c3 = -57.8051;\n      const float c4 = 291.309;\n      const float c5 = -624.717;\n      float t = newMaskValue - 0.5;\n      float x = t * t;\n\n      float uncertainty =\n        1.0 - min(1.0, x * (c1 + x * (c2 + x * (c3 + x * (c4 + x * c5)))));\n\n      float outputValue = newMaskValue + (prevMaskValue - newMaskValue) *\n                             (uncertainty * ".concat(r,");\n\n      setOutput(outputValue);\n    }\n")},a=no();return Ya((function(){var n=a.compileAndRun(s,[e,t]);return Xa().makeTensorFromDataId(n.dataId,n.shape,n.dtype)}))}(e,t,n):Ya((function(){var r=wo(t,.5),s=uo(r),a=wo(1,Bl(1,oo(s,ro(5.68842,oo(s,ro(-.748699,oo(s,ro(-57.8051,oo(s,ro(291.309,oo(s,-624.717)))))))))));return ro(t,oo(wo(e,t),oo(a,n.combineWithPreviousRatio)))}))}(t,e,m$),Qa(e)),Qa(t),this.prevFilteredSegmentationMask},e.prototype.dispose=function(){this.detectorModel.dispose(),this.landmarkModel.dispose(),Qa([this.anchorTensor.x,this.anchorTensor.y,this.anchorTensor.w,this.anchorTensor.h,this.prevFilteredSegmentationMask])},e.prototype.reset=function(){this.regionOfInterest=null,this.enableSegmentation&&(Qa(this.prevFilteredSegmentationMask),this.prevFilteredSegmentationMask=Zc([],[0,0])),this.visibilitySmoothingFilterActual=null,this.visibilitySmoothingFilterAuxiliary=null,this.landmarksSmoothingFilterActual=null,this.landmarksSmoothingFilterAuxiliary=null},e.prototype.detectPose=function(e){return rT(this,void 0,void 0,(function(){var t,n,r,s,a,o,i,u,l,c;return sT(this,(function(h){switch(h.label){case 0:return t=OT(e,a$),n=t.imageTensor,r=t.padding,s=this.detectorModel.predict(n),a=function(e){return Ya((function(){var t=function(e){return Ya((function(){return[Zi(e,[0,0,0],[1,-1,1]),Zi(e,[0,0,1],[1,-1,-1])]}))}(e),n=t[0],r=t[1];return{boxes:jc(r),logits:jc(n)}}))}(s),o=a.boxes,[4,UT([i=a.logits,o],this.anchorTensor,r$)];case 1:return 0===(u=h.sent()).length?(Qa([n,s,i,o]),[2,u]):[4,MT(u,this.maxPoses,.3)];case 2:return l=h.sent(),c=function(e,t){void 0===e&&(e=[]);for(var n=t.left,r=t.top,s=t.left+t.right,a=t.top+t.bottom,o=0;o<e.length;o++){var i=e[o],u=i.locationData.relativeBoundingBox,l=(u.xMin-n)/(1-s),c=(u.yMin-r)/(1-a),h=u.width/(1-s),d=u.height/(1-a);u.xMin=l,u.yMin=c,u.width=h,u.height=d,u.xMax=l+h,u.yMax=c+d;var p=i.locationData.relativeKeypoints;p&&p.forEach((function(e){var t=(e.x-n)/(1-s),o=(e.y-r)/(1-a);e.x=t,e.y=o}))}return e}(l,r),Qa([n,s,i,o]),[2,c]}}))}))},e.prototype.poseDetectionToRoi=function(e,t){return jT($T(e,t,{rotationVectorEndKeypointIndex:1,rotationVectorStartKeypointIndex:0,rotationVectorTargetAngleDegree:90}),t,s$)},e.prototype.poseLandmarksByRoi=function(e,t){return rT(this,void 0,void 0,(function(){var n,r,s,a,o,i,u,l,c,h,d,p,f,m;return sT(this,(function(g){switch(g.label){case 0:if(n=kT(t),r=OT(t,o$,e),s=r.imageTensor,a=r.padding,o=r.transformationMatrix,"lite"!==this.modelType&&"full"!==this.modelType&&"heavy"!==this.modelType)throw new Error("Model type must be one of lite, full or heavy,"+"but got ".concat(this.modelType));return i=["ld_3d","output_poseflag","activation_heatmap","world_3d"],this.enableSegmentation&&i.push("activation_segmentation"),u=this.landmarkModel.execute(s,i),[4,this.tensorsToPoseLandmarksAndSegmentation(u)];case 1:return null==(l=g.sent())?(Qa(u),Qa(s),[2,null]):(c=l.landmarks,h=l.auxiliaryLandmarks,d=l.poseScore,p=l.worldLandmarks,f=l.segmentationMask,[4,this.poseLandmarksAndSegmentationInverseProjection(n,e,a,o,c,h,p,f)]);case 2:return m=g.sent(),Qa(u),Qa(s),[2,nT({poseScore:d},m)]}}))}))},e.prototype.poseLandmarksAndSegmentationInverseProjection=function(e,t,n,r,s,a,o,i){return rT(this,void 0,void 0,(function(){var u,l,c,h,d,p;return sT(this,(function(f){return u=zT(s,n),l=zT(a,n),c=_T(u,t),h=_T(l,t),d=function(e,t){for(var n=[],r=0,s=e;r<s.length;r++){var a=s[r],o=a.x,i=a.y,u=t.rotation,l=Math.cos(u)*o-Math.sin(u)*i,c=Math.sin(u)*o+Math.cos(u)*i,h=nT({},a);h.x=l,h.y=c,n.push(h)}return n}(o,t),p=null,this.enableSegmentation&&(p=Ya((function(){var t=i.shape,n=t[0],s=t[1],a=function(e){var t=NT(new Array(16).fill(0));t[0][0]=RT(e,0,0),t[1][0]=-RT(e,0,1),t[2][0]=RT(e,0,2),t[3][0]=-RT(e,0,3),t[0][2]=RT(e,2,0),t[1][2]=-RT(e,2,1),t[2][2]=RT(e,2,2),t[3][2]=-RT(e,2,3),t[0][1]=-RT(e,1,0),t[1][1]=RT(e,1,1),t[2][1]=-RT(e,1,2),t[3][1]=RT(e,1,3),t[0][3]=-RT(e,3,0),t[1][3]=RT(e,3,1),t[2][3]=-RT(e,3,2),t[3][3]=RT(e,3,3);for(var n=e[0][0]*t[0][0]+e[1][0]*t[0][1]+e[2][0]*t[0][2]+e[3][0]*t[0][3],r=0;r<t.length;r++)for(var s=0;s<t.length;s++)t[r][s]/=n;return t}(r),o=Zc(IT(a,{width:s,height:n},e),[1,8]),u=[1,n,s,1];return jc($d.transform(ji(i,u),o,"bilinear","constant",0,[e.height,e.width]),[0,3])})),Qa(i)),[2,{landmarks:c,auxiliaryLandmarks:h,worldLandmarks:d,segmentationMask:p}]}))}))},e.prototype.tensorsToPoseLandmarksAndSegmentation=function(e){return rT(this,void 0,void 0,(function(){var t,n,r,s,a,o,i,u,l,c,h,d,p;return sT(this,(function(f){switch(f.label){case 0:return t=e[0],n=e[1],r=e[2],s=e[3],a=this.enableSegmentation?e[4]:null,[4,n.data()];case 1:return(o=f.sent()[0])<.5?[2,null]:[4,HT(t,i$)];case 2:return[4,BT(f.sent(),r,l$)];case 3:return i=f.sent(),u=i.slice(0,33),l=i.slice(33,35),[4,HT(s,u$)];case 4:return c=f.sent(),h=c.slice(0,33),d=function(e,t,n){void 0===n&&(n=!0);for(var r=[],s=0;s<e.length;s++){var a=nT({},t[s]);n&&(a.score=e[s].score),r.push(a)}return r}(u,h,!0),p=this.enableSegmentation?function(e,t,n){return Ya((function(){var n=jc(e,[0]),r=n.shape[2];if(1===r){var s=n;switch(t.activation){case"none":break;case"sigmoid":s=Qi(s);break;case"softmax":throw new Error("Softmax activation requires two channels.");default:throw new Error("Activation not supported (".concat(t.activation,")"))}return jc(s,[2])}throw new Error("Unsupported number of tensor channels ".concat(r))}))}(a,f$):null,[2,{landmarks:u,auxiliaryLandmarks:l,poseScore:o,worldLandmarks:d,segmentationMask:p}]}}))}))},e.prototype.poseLandmarksToRoi=function(e,t){return jT($T(DT(e),t,{rotationVectorStartKeypointIndex:0,rotationVectorEndKeypointIndex:1,rotationVectorTargetAngleDegree:90}),t,s$)},e.prototype.poseLandmarkFiltering=function(e,t,n,r){var s,a,o;if(null!=this.timestamp&&this.enableSmoothing){var i=$T(DT(t),r,{rotationVectorEndKeypointIndex:0,rotationVectorStartKeypointIndex:1,rotationVectorTargetAngleDegree:90});null==this.visibilitySmoothingFilterActual&&(this.visibilitySmoothingFilterActual=new JT(c$)),s=this.visibilitySmoothingFilterActual.apply(e),null==this.visibilitySmoothingFilterAuxiliary&&(this.visibilitySmoothingFilterAuxiliary=new JT(c$)),a=this.visibilitySmoothingFilterAuxiliary.apply(t),o=this.visibilitySmoothingFilterActual.apply(n),null==this.landmarksSmoothingFilterActual&&(this.landmarksSmoothingFilterActual=new ZT(h$)),s=this.landmarksSmoothingFilterActual.apply(s,this.timestamp,r,!0,i),null==this.landmarksSmoothingFilterAuxiliary&&(this.landmarksSmoothingFilterAuxiliary=new ZT(d$)),a=this.landmarksSmoothingFilterAuxiliary.apply(a,this.timestamp,r,!0,i),null==this.worldLandmarksSmoothingFilterActual&&(this.worldLandmarksSmoothingFilterActual=new ZT(p$)),o=this.worldLandmarksSmoothingFilterActual.apply(n,this.timestamp)}else s=e,a=t,o=n;return{actualLandmarksFiltered:s,auxiliaryLandmarksFiltered:a,actualWorldLandmarksFiltered:o}},e}();function b$(e){return rT(this,void 0,void 0,(function(){var t,n,r,s,a,o;return sT(this,(function(i){switch(i.label){case 0:return t=function(e){var t=nT({},null==e?t$:e);if(null==t.enableSmoothing&&(t.enableSmoothing=t$.enableSmoothing),null==t.enableSegmentation&&(t.enableSegmentation=t$.enableSegmentation),null==t.smoothSegmentation&&(t.smoothSegmentation=t$.smoothSegmentation),null==t.modelType&&(t.modelType=t$.modelType),null==t.detectorModelUrl&&(t.detectorModelUrl=t$.detectorModelUrl),null==t.landmarkModelUrl)switch(t.modelType){case"lite":t.landmarkModelUrl="https://tfhub.dev/mediapipe/tfjs-model/blazepose_3d/landmark/lite/2";break;case"heavy":t.landmarkModelUrl="https://tfhub.dev/mediapipe/tfjs-model/blazepose_3d/landmark/heavy/2";break;default:t.landmarkModelUrl="https://tfhub.dev/mediapipe/tfjs-model/blazepose_3d/landmark/full/2"}return t}(e),n="string"==typeof t.detectorModelUrl&&t.detectorModelUrl.indexOf("https://tfhub.dev")>-1,r="string"==typeof t.landmarkModelUrl&&t.landmarkModelUrl.indexOf("https://tfhub.dev")>-1,[4,Promise.all([JI(t.detectorModelUrl,{fromTFHub:n}),JI(t.landmarkModelUrl,{fromTFHub:r})])];case 1:return s=i.sent(),a=s[0],o=s[1],[2,new x$(a,o,t.enableSmoothing,t.enableSegmentation,t.smoothSegmentation,t.modelType)]}}))}))}var v$,w$,k$,S$=function(){function e(e){!function(e){if(e.maxTracks<1)throw new Error("Must specify 'maxTracks' to be at least 1, but "+"encountered ".concat(e.maxTracks));if(e.maxAge<=0)throw new Error("Must specify 'maxAge' to be positive, but "+"encountered ".concat(e.maxAge));if(void 0!==e.keypointTrackerParams){if(e.keypointTrackerParams.keypointConfidenceThreshold<0||e.keypointTrackerParams.keypointConfidenceThreshold>1)throw new Error("Must specify 'keypointConfidenceThreshold' to be in the range [0, 1], but encountered "+"".concat(e.keypointTrackerParams.keypointConfidenceThreshold));if(e.keypointTrackerParams.minNumberOfKeypoints<1)throw new Error("Must specify 'minNumberOfKeypoints' to be at least 1, but "+"encountered ".concat(e.keypointTrackerParams.minNumberOfKeypoints));for(var t=0,n=e.keypointTrackerParams.keypointFalloff;t<n.length;t++){var r=n[t];if(r<=0)throw new Error("Must specify each keypoint falloff parameterto be positive "+"but encountered ".concat(r))}}}(e),this.tracks=[],this.maxTracks=e.maxTracks,this.maxAge=1e3*e.maxAge,this.minSimilarity=e.minSimilarity,this.nextID=1}return e.prototype.apply=function(e,t){this.filterOldTracks(t);var n=this.computeSimilarity(e);return this.assignTracks(e,n,t),this.updateTracks(t),e},e.prototype.getTracks=function(){return this.tracks.slice()},e.prototype.getTrackIDs=function(){return new Set(this.tracks.map((function(e){return e.id})))},e.prototype.filterOldTracks=function(e){var t=this;this.tracks=this.tracks.filter((function(n){return e-n.lastTimestamp<=t.maxAge}))},e.prototype.assignTracks=function(e,t,n){for(var r=Array.from(Array(t[0].length).keys()),s=[],a=0,o=Array.from(Array(e.length).keys());a<o.length;a++){var i=o[a];if(0!==r.length){for(var u=-1,l=-1,c=0,h=r;c<h.length;c++){var d=h[c],p=t[i][d];p>=this.minSimilarity&&p>l&&(u=d,l=p)}if(u>=0){var f=this.tracks[u];f=Object.assign(f,this.createTrack(e[i],n,f.id)),e[i].id=f.id;var m=r.indexOf(u);r.splice(m,1)}else s.push(i)}else s.push(i)}for(var g=0,y=s;g<y.length;g++){i=y[g];var x=this.createTrack(e[i],n);this.tracks.push(x),e[i].id=x.id}},e.prototype.updateTracks=function(e){this.tracks.sort((function(e,t){return t.lastTimestamp-e.lastTimestamp})),this.tracks=this.tracks.slice(0,this.maxTracks)},e.prototype.createTrack=function(e,t,n){var r={id:n||this.nextTrackID(),lastTimestamp:t,keypoints:aT([],e.keypoints,!0).map((function(e){return nT({},e)}))};return void 0!==e.box&&(r.box=nT({},e.box)),r},e.prototype.nextTrackID=function(){var e=this.nextID;return this.nextID+=1,e},e.prototype.remove=function(){for(var e=[],t=0;t<arguments.length;t++)e[t]=arguments[t];this.tracks=this.tracks.filter((function(t){return!e.includes(t.id)}))},e.prototype.reset=function(){this.tracks=[]},e}(),C$=function(e){function t(t){return e.call(this,t)||this}return tT(t,e),t.prototype.computeSimilarity=function(e){var t=this;return 0===e.length||0===this.tracks.length?[[]]:e.map((function(e){return t.tracks.map((function(n){return t.iou(e,n)}))}))},t.prototype.iou=function(e,t){var n=Math.max(e.box.xMin,t.box.xMin),r=Math.max(e.box.yMin,t.box.yMin),s=Math.min(e.box.xMax,t.box.xMax),a=Math.min(e.box.yMax,t.box.yMax);if(n>=s||r>=a)return 0;var o=(s-n)*(a-r);return o/(e.box.width*e.box.height+t.box.width*t.box.height-o)},t}(S$),I$=function(e){function t(t){var n=e.call(this,t)||this;return n.keypointThreshold=t.keypointTrackerParams.keypointConfidenceThreshold,n.keypointFalloff=t.keypointTrackerParams.keypointFalloff,n.minNumKeyoints=t.keypointTrackerParams.minNumberOfKeypoints,n}return tT(t,e),t.prototype.computeSimilarity=function(e){if(0===e.length||0===this.tracks.length)return[[]];for(var t=[],n=0,r=e;n<r.length;n++){for(var s=r[n],a=[],o=0,i=this.tracks;o<i.length;o++){var u=i[o];a.push(this.oks(s,u))}t.push(a)}return t},t.prototype.oks=function(e,t){for(var n=this.area(t.keypoints)+1e-6,r=0,s=0,a=0;a<e.keypoints.length;++a){var o=e.keypoints[a],i=t.keypoints[a];if(!(o.score<this.keypointThreshold||i.score<this.keypointThreshold)){s+=1;var u=Math.pow(o.x-i.x,2)+Math.pow(o.y-i.y,2),l=2*this.keypointFalloff[a];r+=Math.exp(-1*u/(2*n*Math.pow(l,2)))}}return s<this.minNumKeyoints?0:r/s},t.prototype.area=function(e){var t=this,n=e.filter((function(e){return e.score>t.keypointThreshold})),r=Math.min.apply(Math,aT([1],n.map((function(e){return e.x})),!1)),s=Math.max.apply(Math,aT([0],n.map((function(e){return e.x})),!1)),a=Math.min.apply(Math,aT([1],n.map((function(e){return e.y})),!1));return(s-r)*(Math.max.apply(Math,aT([0],n.map((function(e){return e.y})),!1))-a)},t}(S$);function T$(e){switch(e){case w$.BlazePose:return iT.reduce((function(e,t,n){return e[t]=n,e}),{});case w$.PoseNet:case w$.MoveNet:return oT.reduce((function(e,t,n){return e[t]=n,e}),{});default:throw new Error("Model ".concat(e," is not supported."))}}(k$=v$||(v$={})).Keypoint="keypoint",k$.BoundingBox="boundingBox",function(e){e.MoveNet="MoveNet",e.BlazePose="BlazePose",e.PoseNet="PoseNet"}(w$||(w$={})),Object.freeze({__proto__:null,getKeypointIndexBySide:function(e){switch(e){case w$.BlazePose:return uT;case w$.PoseNet:case w$.MoveNet:return lT;default:throw new Error("Model ".concat(e," is not supported."))}},getAdjacentPairs:function(e){switch(e){case w$.BlazePose:return hT;case w$.PoseNet:case w$.MoveNet:return cT;default:throw new Error("Model ".concat(e," is not supported."))}},getKeypointIndexByName:T$});var $$=["SinglePose.Lightning","SinglePose.Thunder","MultiPose.Lightning"],N$={modelType:"SinglePose.Lightning",enableSmoothing:!0},E$={},R$={frequency:30,minCutOff:2.5,beta:300,derivateCutOff:2.5,thresholdCutOff:.5,thresholdBeta:5,disableValueScaling:!0},_$={maxTracks:18,maxAge:1e3,minSimilarity:.2,keypointTrackerParams:{keypointConfidenceThreshold:.3,keypointFalloff:[.026,.025,.025,.035,.035,.079,.079,.072,.072,.062,.062,.107,.107,.087,.087,.089,.089],minNumberOfKeypoints:4}},A$={maxTracks:18,maxAge:1e3,minSimilarity:.15,trackerParams:{}};function O$(e,t){var n,r,s,a;return e?t.width>t.height?(n=1,r=t.height/t.width,s=0,a=(t.width/2-t.height/2)/t.width):(n=t.width/t.height,r=1,s=(t.height/2-t.width/2)/t.height,a=0):t.width>t.height?(n=t.width/t.height,r=1,s=(t.height/2-t.width/2)/t.height,a=0):(n=1,r=t.height/t.width,s=0,a=(t.width/2-t.height/2)/t.width),{yMin:s,xMin:a,yMax:s+n,xMax:a+r,height:n,width:r}}function F$(e,t){var n={maxTracks:e.maxTracks,maxAge:e.maxAge,minSimilarity:e.minSimilarity};return null!=t.maxTracks&&(n.maxTracks=t.maxTracks),null!=t.maxAge&&(n.maxAge=t.maxAge),null!=t.minSimilarity&&(n.minSimilarity=t.minSimilarity),n}var P$=function(){function e(e,t){this.moveNetModel=e,this.modelInputResolution={height:0,width:0},this.keypointIndexByName=T$(w$.MoveNet),"SinglePose.Lightning"===t.modelType?(this.modelInputResolution.width=192,this.modelInputResolution.height=192):"SinglePose.Thunder"===t.modelType&&(this.modelInputResolution.width=256,this.modelInputResolution.height=256),this.multiPoseModel="MultiPose.Lightning"===t.modelType,this.multiPoseModel||(this.keypointFilter=new XT(R$),this.cropRegionFilterYMin=new KT(.9),this.cropRegionFilterXMin=new KT(.9),this.cropRegionFilterYMax=new KT(.9),this.cropRegionFilterXMax=new KT(.9)),this.enableSmoothing=t.enableSmoothing,t.minPoseScore?this.minPoseScore=t.minPoseScore:this.minPoseScore=.25,t.multiPoseMaxDimension?this.multiPoseMaxDimension=t.multiPoseMaxDimension:this.multiPoseMaxDimension=256,this.enableTracking=t.enableTracking,this.multiPoseModel&&this.enableTracking&&(t.trackerType===v$.Keypoint?this.tracker=new I$(t.trackerConfig):t.trackerType===v$.BoundingBox&&(this.tracker=new C$(t.trackerConfig)),this.enableSmoothing&&(this.keypointFilterMap=new Map))}return e.prototype.runSinglePersonPoseModel=function(e){return rT(this,void 0,void 0,(function(){var t,n,r,s,a;return sT(this,(function(o){switch(o.label){case 0:if(4!==(t=this.moveNetModel.execute(e)).shape.length||1!==t.shape[0]||1!==t.shape[1]||17!==t.shape[2]||3!==t.shape[3])throw t.dispose(),new Error("Unexpected output shape from model: [".concat(t.shape,"]"));return"webgpu"===eo()?[3,1]:(n=t.dataSync(),[3,3]);case 1:return[4,t.data()];case 2:n=o.sent(),o.label=3;case 3:for(t.dispose(),r={keypoints:[],score:0},s=0,a=0;a<17;++a)r.keypoints[a]={y:n[3*a],x:n[3*a+1],score:n[3*a+2]},r.keypoints[a].score>.2&&(++s,r.score+=r.keypoints[a].score);return s>0&&(r.score/=s),[2,r]}}))}))},e.prototype.runMultiPersonPoseModel=function(e){return rT(this,void 0,void 0,(function(){var t,n,r,s,a,o,i,u;return sT(this,(function(l){switch(l.label){case 0:if(3!==(t=this.moveNetModel.execute(e)).shape.length||1!==t.shape[0]||56!==t.shape[2])throw t.dispose(),new Error("Unexpected output shape from model: [".concat(t.shape,"]"));return"webgpu"===eo()?[3,1]:(n=t.dataSync(),[3,3]);case 1:return[4,t.data()];case 2:n=l.sent(),l.label=3;case 3:for(t.dispose(),r=[],s=n.length/56,a=0;a<s;++a)for(r[a]={keypoints:[]},o=56*a+51,r[a].box={yMin:n[o],xMin:n[o+1],yMax:n[o+2],xMax:n[o+3],width:n[o+3]-n[o+1],height:n[o+2]-n[o]},i=56*a+55,r[a].score=n[i],r[a].keypoints=[],u=0;u<17;++u)r[a].keypoints[u]={y:n[56*a+3*u],x:n[56*a+3*u+1],score:n[56*a+3*u+2]};return[2,r]}}))}))},e.prototype.estimatePoses=function(e,t,n){return void 0===t&&(t=E$),rT(this,void 0,void 0,(function(){var r,s,a,o,i,u;return sT(this,(function(l){switch(l.label){case 0:return t=function(e){return null==e?E$:nT({},e)}(t),null==e?(this.reset(),[2,[]]):(null==n?PT(e)&&(n=1e6*e.currentTime):n*=1e3,r=CT(e),s=kT(r),a=tl(r,0),e instanceof ps||r.dispose(),o=[],this.multiPoseModel?[3,2]:[4,this.estimateSinglePose(a,s,n)]);case 1:return o=l.sent(),[3,4];case 2:return[4,this.estimateMultiplePoses(a,s,n)];case 3:o=l.sent(),l.label=4;case 4:for(i=0;i<o.length;++i)for(u=0;u<o[i].keypoints.length;++u)o[i].keypoints[u].name=oT[u],o[i].keypoints[u].y*=s.height,o[i].keypoints[u].x*=s.width;return[2,o]}}))}))},e.prototype.estimateSinglePose=function(e,t,n){return rT(this,void 0,void 0,(function(){var r,s,a,o,i=this;return sT(this,(function(u){switch(u.label){case 0:return this.cropRegion||(this.cropRegion=O$(null==this.cropRegion,t)),r=Ya((function(){var t=Zc([[i.cropRegion.yMin,i.cropRegion.xMin,i.cropRegion.yMax,i.cropRegion.xMax]]),n=Dl([1],"int32"),r=[i.modelInputResolution.height,i.modelInputResolution.width];return ja($d.cropAndResize(e,t,n,r,"bilinear",0),"int32")})),e.dispose(),[4,this.runSinglePersonPoseModel(r)];case 1:if(s=u.sent(),r.dispose(),s.score<this.minPoseScore)return this.reset(),[2,[]];for(a=0;a<s.keypoints.length;++a)s.keypoints[a].y=this.cropRegion.yMin+s.keypoints[a].y*this.cropRegion.height,s.keypoints[a].x=this.cropRegion.xMin+s.keypoints[a].x*this.cropRegion.width;return null!=n&&this.enableSmoothing&&(s.keypoints=this.keypointFilter.apply(s.keypoints,n,1)),o=function(e,t,n,r){for(var s={},a=0,o=oT;a<o.length;a++){var i=o[a];s[i]=[t[n[i]].y*r.height,t[n[i]].x*r.width]}if(function(e,t){return(e[t.left_hip].score>.2||e[t.right_hip].score>.2)&&(e[t.left_shoulder].score>.2||e[t.right_shoulder].score>.2)}(t,n)){var u=(s.left_hip[0]+s.right_hip[0])/2,l=(s.left_hip[1]+s.right_hip[1])/2,c=function(e,t,n,r,s){for(var a=["left_shoulder","right_shoulder","left_hip","right_hip"],o=0,i=0,u=0;u<a.length;u++)(p=Math.abs(r-n[a[u]][0]))>o&&(o=p),(f=Math.abs(s-n[a[u]][1]))>i&&(i=f);for(var l=0,c=0,h=0,d=Object.keys(n);h<d.length;h++){var p,f,m=d[h];e[t[m]].score<.2||((p=Math.abs(r-n[m][0]))>l&&(l=p),(f=Math.abs(s-n[m][1]))>c&&(c=f))}return[o,i,l,c]}(t,n,s,u,l),h=c[0],d=c[1],p=c[2],f=c[3],m=Math.max(1.9*d,1.9*h,1.2*p,1.2*f),g=[u-(m=Math.min(m,Math.max(l,r.width-l,u,r.height-u))),l-m];if(m>Math.max(r.width,r.height)/2)return O$(null==e,r);var y=2*m;return{yMin:g[0]/r.height,xMin:g[1]/r.width,yMax:(g[0]+y)/r.height,xMax:(g[1]+y)/r.width,height:(g[0]+y)/r.height-g[0]/r.height,width:(g[1]+y)/r.width-g[1]/r.width}}return O$(null==e,r)}(this.cropRegion,s.keypoints,this.keypointIndexByName,t),this.cropRegion=this.filterCropRegion(o),[2,[s]]}}))}))},e.prototype.estimateMultiplePoses=function(e,t,n){return rT(this,void 0,void 0,(function(){var r,s,a,o,i,u,l,c,h,d,p,f=this;return sT(this,(function(m){switch(m.label){case 0:return t.width>t.height?(s=this.multiPoseMaxDimension,a=Math.round(this.multiPoseMaxDimension*t.height/t.width),r=$d.resizeBilinear(e,[a,s]),i=s,u=32*Math.ceil(a/32),o=Xl(r,[[0,0],[0,u-a],[0,0],[0,0]])):(s=Math.round(this.multiPoseMaxDimension*t.width/t.height),a=this.multiPoseMaxDimension,r=$d.resizeBilinear(e,[a,s]),i=32*Math.ceil(s/32),u=a,o=Xl(r,[[0,0],[0,0],[0,i-s],[0,0]])),r.dispose(),e.dispose(),l=ja(o,"int32"),o.dispose(),[4,this.runMultiPersonPoseModel(l)];case 1:for(c=m.sent(),l.dispose(),c=c.filter((function(e){return e.score>=f.minPoseScore})),d=0;d<c.length;++d)for(h=0;h<c[d].keypoints.length;++h)c[d].keypoints[h].y*=u/a,c[d].keypoints[h].x*=i/s;if(this.enableTracking&&(this.tracker.apply(c,n),this.enableSmoothing)){for(d=0;d<c.length;++d)this.keypointFilterMap.has(c[d].id)||this.keypointFilterMap.set(c[d].id,new XT(R$)),c[d].keypoints=this.keypointFilterMap.get(c[d].id).apply(c[d].keypoints,n,1);p=this.tracker.getTrackIDs(),this.keypointFilterMap.forEach((function(e,t){p.has(t)||f.keypointFilterMap.delete(t)}))}return[2,c]}}))}))},e.prototype.filterCropRegion=function(e){if(e){var t=this.cropRegionFilterYMin.apply(e.yMin),n=this.cropRegionFilterXMin.apply(e.xMin),r=this.cropRegionFilterYMax.apply(e.yMax),s=this.cropRegionFilterXMax.apply(e.xMax);return{yMin:t,xMin:n,yMax:r,xMax:s,height:r-t,width:s-n}}return this.cropRegionFilterYMin.reset(),this.cropRegionFilterXMin.reset(),this.cropRegionFilterYMax.reset(),this.cropRegionFilterXMax.reset(),null},e.prototype.dispose=function(){this.moveNetModel.dispose()},e.prototype.reset=function(){this.cropRegion=null,this.resetFilters()},e.prototype.resetFilters=function(){this.keypointFilter.reset(),this.cropRegionFilterYMin.reset(),this.cropRegionFilterXMin.reset(),this.cropRegionFilterYMax.reset(),this.cropRegionFilterXMax.reset()},e}();function D$(e){return void 0===e&&(e=N$),rT(this,void 0,void 0,(function(){var t,n,r,s;return sT(this,(function(a){switch(a.label){case 0:return t=function(e){var t,n=null==e?N$:nT({},e);if(null==n.modelType)n.modelType="SinglePose.Lightning";else if($$.indexOf(n.modelType)<0)throw new Error("Invalid architecture ".concat(n.modelType,". ")+"Should be one of ".concat($$));if(null==n.enableSmoothing&&(n.enableSmoothing=!0),null!=n.minPoseScore&&(n.minPoseScore<0||n.minPoseScore>1))throw new Error("minPoseScore should be between 0.0 and 1.0");if(null!=n.multiPoseMaxDimension&&(n.multiPoseMaxDimension%32!=0||n.multiPoseMaxDimension<32))throw new Error("multiPoseMaxDimension must be a multiple of 32 and higher than 0");if("MultiPose.Lightning"===n.modelType&&null==n.enableTracking&&(n.enableTracking=!0),"MultiPose.Lightning"===n.modelType&&!0===n.enableTracking)if(null==n.trackerType&&(n.trackerType=v$.BoundingBox),n.trackerType===v$.Keypoint)null!=n.trackerConfig?n.trackerConfig=function(e){var t=F$(_$,e);return t.keypointTrackerParams=nT({},_$.keypointTrackerParams),null!=e.keypointTrackerParams&&(null!=e.keypointTrackerParams.keypointConfidenceThreshold&&(t.keypointTrackerParams.keypointConfidenceThreshold=e.keypointTrackerParams.keypointConfidenceThreshold),null!=e.keypointTrackerParams.keypointFalloff&&(t.keypointTrackerParams.keypointFalloff=e.keypointTrackerParams.keypointFalloff),null!=e.keypointTrackerParams.minNumberOfKeypoints&&(t.keypointTrackerParams.minNumberOfKeypoints=e.keypointTrackerParams.minNumberOfKeypoints)),t}(n.trackerConfig):n.trackerConfig=_$;else{if(n.trackerType!==v$.BoundingBox)throw new Error("Tracker type not supported by MoveNet");null!=n.trackerConfig?n.trackerConfig=(t=n.trackerConfig,F$(A$,t)):n.trackerConfig=A$}return n}(e),r=!0,t.modelUrl?(r="string"==typeof t.modelUrl&&t.modelUrl.indexOf("https://tfhub.dev")>-1,[4,JI(t.modelUrl,{fromTFHub:r})]):[3,2];case 1:return n=a.sent(),[3,4];case 2:return s=void 0,"SinglePose.Lightning"===t.modelType?s="https://tfhub.dev/google/tfjs-model/movenet/singlepose/lightning/4":"SinglePose.Thunder"===t.modelType?s="https://tfhub.dev/google/tfjs-model/movenet/singlepose/thunder/4":"MultiPose.Lightning"===t.modelType&&(s="https://tfhub.dev/google/tfjs-model/movenet/multipose/lightning/1"),[4,JI(s,{fromTFHub:r})];case 3:n=a.sent(),a.label=4;case 4:return"webgl"===eo()&&fe().set("TOPK_LAST_DIM_CPU_HANDOFF_SIZE_THRESHOLD",0),[2,new P$(n,t)]}}))}))}var M$={architecture:"MobileNetV1",outputStride:16,multiplier:.75,inputResolution:{height:257,width:257}},L$=["MobileNetV1","ResNet50"],B$={MobileNetV1:[8,16],ResNet50:[16]},z$=[8,16,32],U$={MobileNetV1:[.5,.75,1],ResNet50:[1]},V$=[1,2,4],W$={maxPoses:1,flipHorizontal:!1},G$={maxPoses:5,flipHorizontal:!1,scoreThreshold:.5,nmsRadius:20},H$=[-123.15,-115.9,-103.06];function j$(e){return Math.floor(e/2)}var K$=function(){function e(e,t){this.priorityQueue=new Array(e),this.numberOfElements=-1,this.getElementValue=t}return e.prototype.enqueue=function(e){this.priorityQueue[++this.numberOfElements]=e,this.swim(this.numberOfElements)},e.prototype.dequeue=function(){var e=this.priorityQueue[0];return this.exchange(0,this.numberOfElements--),this.sink(0),this.priorityQueue[this.numberOfElements+1]=null,e},e.prototype.empty=function(){return-1===this.numberOfElements},e.prototype.size=function(){return this.numberOfElements+1},e.prototype.all=function(){return this.priorityQueue.slice(0,this.numberOfElements+1)},e.prototype.max=function(){return this.priorityQueue[0]},e.prototype.swim=function(e){for(;e>0&&this.less(j$(e),e);)this.exchange(e,j$(e)),e=j$(e)},e.prototype.sink=function(e){for(;2*e<=this.numberOfElements;){var t=2*e;if(t<this.numberOfElements&&this.less(t,t+1)&&t++,!this.less(e,t))break;this.exchange(e,t),e=t}},e.prototype.getValueAt=function(e){return this.getElementValue(this.priorityQueue[e])},e.prototype.less=function(e,t){return this.getValueAt(e)<this.getValueAt(t)},e.prototype.exchange=function(e,t){var n=this.priorityQueue[e];this.priorityQueue[e]=this.priorityQueue[t],this.priorityQueue[t]=n},e}();function q$(e,t,n,r,s,a){for(var o=a.shape,i=o[0],u=o[1],l=!0,c=Math.max(n-s,0),h=Math.min(n+s+1,i),d=c;d<h;++d){for(var p=Math.max(r-s,0),f=Math.min(r+s+1,u),m=p;m<f;++m)if(a.get(d,m,e)>t){l=!1;break}if(!l)break}return l}function X$(e){return rT(this,void 0,void 0,(function(){return sT(this,(function(t){return[2,Promise.all(e.map((function(e){return e.buffer()})))]}))}))}function Y$(e,t,n,r){return{y:r.get(e,t,n),x:r.get(e,t,n+17)}}function Q$(e,t,n){var r=Y$(e.heatmapY,e.heatmapX,e.id,n),s=r.y,a=r.x;return{x:e.heatmapX*t+a,y:e.heatmapY*t+s}}function Z$(e,t,n,r){var s=n.x,a=n.y;return e.some((function(e){var n,o,i,u,l=e.keypoints;return n=a,o=s,(i=l[r].y-n)*i+(u=l[r].x-o)*u<=t}))}var J$=oT.reduce((function(e,t,n){return e[t]=n,e}),{}),eN=[["nose","left_eye"],["left_eye","left_ear"],["nose","right_eye"],["right_eye","right_ear"],["nose","left_shoulder"],["left_shoulder","left_elbow"],["left_elbow","left_wrist"],["left_shoulder","left_hip"],["left_hip","left_knee"],["left_knee","left_ankle"],["nose","right_shoulder"],["right_shoulder","right_elbow"],["right_elbow","right_wrist"],["right_shoulder","right_hip"],["right_hip","right_knee"],["right_knee","right_ankle"]].map((function(e){var t=e[0],n=e[1];return[J$[t],J$[n]]})),tN=eN.map((function(e){return e[1]})),nN=eN.map((function(e){return e[0]}));function rN(e,t,n){return e<t?t:e>n?n:e}function sN(e,t,n,r){return{y:rN(Math.round(e.y/t),0,n-1),x:rN(Math.round(e.x/t),0,r-1)}}function aN(e,t){return{x:e.x+t.x,y:e.y+t.y}}function oN(e,t,n,r,s,a,o,i){void 0===i&&(i=2);for(var u=r.shape,l=u[0],c=u[1],h={y:t.y,x:t.x},d=aN(h,function(e,t,n){var r=n.shape[2]/2;return{y:n.get(t.y,t.x,e),x:n.get(t.y,t.x,r+e)}}(e,sN(h,a,l,c),o)),p=0;p<i;p++){var f=sN(d,a,l,c),m=Y$(f.y,f.x,n,s);d=aN({x:f.x*a,y:f.y*a},{x:m.x,y:m.y})}var g=sN(d,a,l,c),y=r.get(g.y,g.x,n);return{y:d.y,x:d.x,name:oT[n],score:y}}function iN(e,t,n,r,s,a){var o=t.shape[2],i=tN.length,u=new Array(o),l=e.part,c=e.score,h=Q$(l,r,n);u[l.id]={score:c,name:oT[l.id],y:h.y,x:h.x};for(var d=i-1;d>=0;--d){var p=tN[d],f=nN[d];u[p]&&!u[f]&&(u[f]=oN(d,u[p],f,t,n,r,a))}for(d=0;d<i;++d)p=nN[d],f=tN[d],u[p]&&!u[f]&&(u[f]=oN(d,u[p],f,t,n,r,s));return u}function uN(e,t,n){return n.reduce((function(n,r,s){var a=r.y,o=r.x,i=r.score;return Z$(e,t,{y:a,x:o},s)||(n+=i),n}),0)/n.length}function lN(e,t,n,r,s,a,o,i){return void 0===o&&(o=.5),void 0===i&&(i=20),rT(this,void 0,void 0,(function(){var u,l,c,h,d,p,f,m,g,y,x,b;return sT(this,(function(v){switch(v.label){case 0:return[4,X$([e,t,n,r])];case 1:for(u=v.sent(),l=u[0],c=u[1],h=u[2],d=u[3],p=[],f=function(e,t,n){for(var r=n.shape,s=r[0],a=r[1],o=r[2],i=new K$(s*a*o,(function(e){return e.score})),u=0;u<s;++u)for(var l=0;l<a;++l)for(var c=0;c<o;++c){var h=n.get(u,l,c);h<e||q$(c,h,u,l,1,n)&&i.enqueue({score:h,part:{heatmapY:u,heatmapX:l,id:c}})}return i}(o,0,l),m=i*i;p.length<a&&!f.empty();)g=f.dequeue(),y=Q$(g.part,s,c),Z$(p,m,y,g.part.id)||(x=iN(g,l,c,s,h,d),b=uN(p,m,x),p.push({keypoints:x,score:b}));return[2,p]}}))}))}const cN=fe();cN.registerFlag("WEBGPU_DEFERRED_SUBMIT_BATCH_SIZE",(()=>15)),cN.registerFlag("WEBGPU_CPU_FORWARD",(()=>!0)),cN.registerFlag("WEBGPU_MATMUL_PROGRAM_TYPE",(()=>-1)),cN.registerFlag("WEBGPU_USE_NAIVE_CONV2D_TRANSPOSE",(()=>!1)),cN.registerFlag("WEBGPU_USE_LOW_POWER_GPU",(()=>!1)),cN.registerFlag("WEBGPU_CPU_HANDOFF_SIZE_THRESHOLD",(()=>1e3)),cN.registerFlag("WEBGPU_USE_PROFILE_TOOL",(()=>!1)),cN.registerFlag("WEBGPU_IMPORT_EXTERNAL_TEXTURE",(()=>!0)),cN.registerFlag("WEBGPU_USE_NAIVE_CONV2D_DEBUG",(()=>!1)),cN.registerFlag("WEBGPU_THRESHOLD_TO_INCREASE_WORKGROUPS_FOR_MATMUL",(()=>0)),cN.registerFlag("WEBGPU_CONV_SEPARATE_IM2COL_SHADER",(()=>!1));class hN{constructor(e){e&&(this.vendor=e.vendor,this.architecture=e.architecture,this.intelGPUGeneration=this.getIntelGPUGeneration())}getIntelGPUGeneration(){if(this.isIntel()){if(this.architecture.startsWith("gen"))return Number(this.architecture.match(/\d+/));if(this.architecture.startsWith("xe"))return 12}return 0}isIntel(){return"intel"===this.vendor}}class dN{constructor(e){this.device=e,this.numUsedBuffers=0,this.numFreeBuffers=0,this.freeBuffers=new Map,this.usedBuffers=new Map,this.numBytesUsed=0,this.numBytesAllocated=0}acquireUploadBuffer(e,t){return this.acquireBuffer(e,t,!0)}acquireBuffer(e,t,n=!1){const r=pN(e,t);if(this.freeBuffers.has(r)||this.freeBuffers.set(r,[]),this.usedBuffers.has(r)||this.usedBuffers.set(r,[]),this.numBytesUsed+=e,this.numUsedBuffers++,this.freeBuffers.get(r).length>0){this.numFreeBuffers--;const e=this.freeBuffers.get(r).shift();return this.usedBuffers.get(r).push(e),e}this.numBytesAllocated+=e;const s=this.device.createBuffer({size:e,usage:t,mappedAtCreation:n});return this.usedBuffers.get(r).push(s),s}releaseBuffer(e,t,n){if(0===this.freeBuffers.size)return;const r=pN(t,n);this.freeBuffers.has(r)||this.freeBuffers.set(r,[]),this.freeBuffers.get(r).push(e),this.numFreeBuffers++,this.numUsedBuffers--;const s=this.usedBuffers.get(r),a=s.indexOf(e);if(a<0)throw new Error("Cannot release a buffer that was never provided by this buffer manager");s.splice(a,1),this.numBytesUsed-=t}releaseUploadBuffer(e,t,n){e.mapAsync(GPUMapMode.WRITE).then((()=>{this.releaseBuffer(e,t,n)}),(e=>{}))}getNumUsedBuffers(){return this.numUsedBuffers}getNumFreeBuffers(){return this.numFreeBuffers}dispose(){this.freeBuffers.forEach(((e,t)=>{e.forEach((e=>{e.destroy()}))})),this.usedBuffers.forEach(((e,t)=>{e.forEach((e=>{e.destroy()}))})),this.freeBuffers=new Map,this.usedBuffers=new Map,this.numUsedBuffers=0,this.numFreeBuffers=0,this.numBytesUsed=0,this.numBytesAllocated=0}}function pN(e,t){return`${e}_${t}`}class fN{constructor(e){this.device=e,this.numUsedTextures=0,this.numFreeTextures=0,this.freeTextures=new Map,this.usedTextures=new Map,this.numBytesUsed=0,this.numBytesAllocated=0}acquireTexture(e,t,n,r){const s=e*t*gN(n),a=mN(e,t,n,r);if(this.freeTextures.has(a)||this.freeTextures.set(a,[]),this.usedTextures.has(a)||this.usedTextures.set(a,[]),this.numBytesUsed+=s,this.numUsedTextures++,this.freeTextures.get(a).length>0){this.numFreeTextures--;const e=this.freeTextures.get(a).shift();return this.usedTextures.get(a).push(e),e}this.numBytesAllocated+=s;const o=this.device.createTexture({size:[e,t],format:n,usage:r});return this.usedTextures.get(a).push(o),o}releaseTexture(e,t,n,r,s){if(0===this.freeTextures.size)return;const a=mN(t,n,r,s);this.freeTextures.has(a)||this.freeTextures.set(a,[]),this.freeTextures.get(a).push(e),this.numFreeTextures++,this.numUsedTextures--;const o=this.usedTextures.get(a),i=o.indexOf(e);if(i<0)throw new Error("Cannot release a texture that was never provided by this texture manager");o.splice(i,1);const u=t*n*gN(r);this.numBytesUsed-=u}getNumUsedTextures(){return this.numUsedTextures}getNumFreeTextures(){return this.numFreeTextures}dispose(){this.freeTextures.forEach(((e,t)=>{e.forEach((e=>{e.destroy()}))})),this.usedTextures.forEach(((e,t)=>{e.forEach((e=>{e.destroy()}))})),this.freeTextures=new Map,this.usedTextures=new Map,this.numUsedTextures=0,this.numFreeTextures=0,this.numBytesUsed=0,this.numBytesAllocated=0}}function mN(e,t,n,r){return`${e}_${t}_${n}_${r}`}function gN(e){if("rgba8unorm"===e)return 16;throw new Error(e+" is not supported!")}function yN(e,t){if(Math.max(...e)>3)throw new Error("Cannot symbolically compute strides for rank > 4 tensor.");const n=e.length,r=e.map((e=>`${t}[${e}]`)),s=new Array(n-1);s[n-2]=r[n-1];for(let e=n-3;e>=0;--e)s[e]=`(${s[e+1]} * ${r[e+1]})`;return s}const xN=(e,t,n)=>"int32"===n?`atomicAdd(${e}, bitcast<i32>(${t}));`:`\n          {\n            var oldValue = 0;\n            loop {\n              let newValueF32 = bitcast<f32>(oldValue) + (${t});\n              let newValue = bitcast<i32>(newValueF32);\n              let res = atomicCompareExchangeWeak(${e}, oldValue, newValue);\n              if res.exchanged {\n                break;\n              }\n              oldValue = res.old_value;\n            }\n          }`;function bN(e){if(e<=1)return"i32";if(2===e)return"vec2<i32>";if(3===e)return"vec3<i32>";if(4===e)return"vec4<i32>";if(5===e)return"vec5";if(6===e)return"vec6";throw Error(`GPU for rank ${e} is not yet supported`)}function vN(e){if(0===e)return"x";if(1===e)return"y";if(2===e)return"z";if(3===e)return"w";if(4===e)return"u";if(5===e)return"v";throw Error(`Index ${e} is not yet supported`)}function wN(...e){let t;switch(e.length){case 0:t="\n        fn main()\n      ";break;case 1:t=`\n        fn main(${e[0]} : i32)\n      `;break;default:throw Error("Unreachable")}return t}function kN(e,t){let n;return n=`\n     ${function(e){return`\n  @compute @workgroup_size(${e.workgroupSize[0]}, ${e.workgroupSize[1]}, ${e.workgroupSize[2]})\n`}(t)}\n      fn _start(@builtin(local_invocation_id) LocalId : vec3<u32>,\n                @builtin(global_invocation_id) GlobalId : vec3<u32>,\n                @builtin(local_invocation_index) LocalIndex: u32,\n                @builtin(workgroup_id) WorkgroupId : vec3<u32>,\n                @builtin(num_workgroups) NumWorkgroups : vec3<u32>) {\n        localId = LocalId;\n        localIndex = LocalIndex;\n        globalId = GlobalId;\n        numWorkgroups = NumWorkgroups;\n        workgroupId = WorkgroupId;\n        ${e?"main(getGlobalIndex());":"main();"};\n      }\n    `,n}const SN="\n  struct vec5 {x: i32, y: i32, z: i32, w: i32, u: i32};\n  struct vec6 {x: i32, y: i32, z: i32, w: i32, u: i32, v: i32};\n\n  // Checks whether coordinates lie within the bounds of the shape.\n  fn coordsInBounds2D(coord : vec2<i32>, shape : vec2<i32>) -> bool {\n    return all(coord >= vec2<i32>(0)) && all(coord < shape);\n  }\n  fn coordsInBounds3D(coord : vec3<i32>, shape : vec3<i32>) -> bool {\n    return all(coord >= vec3<i32>(0)) && all(coord < shape);\n  }\n  fn coordsInBounds4D(coord : vec4<i32>, shape : vec4<i32>) -> bool {\n    return all(coord >= vec4<i32>(0)) && all(coord < shape);\n  }\n\n  fn getIndexFromCoords1D(coord : i32, shape : i32) -> i32 {\n    return coord;\n  }\n  fn getIndexFromCoords2D(coords : vec2<i32>, shape : vec2<i32>) -> i32 {\n    return dot(coords, vec2<i32>(shape.y, 1));\n  }\n  fn getIndexFromCoords3D(coords : vec3<i32>, shape : vec3<i32>) -> i32 {\n    return dot(coords, vec3<i32>(shape.y * shape.z, shape.z, 1));\n  }\n  fn getIndexFromCoords4D(coords : vec4<i32>, shape : vec4<i32>) -> i32 {\n    return dot(coords, vec4<i32>(\n        shape.y * shape.z * shape.w, shape.z * shape.w, shape.w, 1));\n  }\n  fn getIndexFromCoords5D(coords : vec5, shape : vec5) -> i32 {\n    let shapeStrides: vec5 = vec5(shape.y * shape.z * shape.w * shape.u, shape.z * shape.w * shape.u, shape.w * shape.u, shape.u, 1);\n    return coords.x*shapeStrides.x + coords.y*shapeStrides.y + coords.z*shapeStrides.z + coords.w*shapeStrides.w + coords.u*shapeStrides.u;\n  }\n  fn getIndexFromCoords6D(coords : vec6, shape : vec6) -> i32 {\n    let shapeStrides: vec6 = vec6(shape.y * shape.z * shape.w * shape.u * shape.v, shape.z * shape.w * shape.u * shape.v, shape.w * shape.u * shape.v, shape.u * shape.v, shape.v, 1);\n    return coords.x*shapeStrides.x + coords.y*shapeStrides.y + coords.z*shapeStrides.z + coords.w*shapeStrides.w + coords.u*shapeStrides.u + coords.v*shapeStrides.v;\n  }\n\n  fn idiv(a: i32, b: i32, sign: f32) -> i32 {\n    var res: i32 = a / b;\n    let modulo: i32 = a % b;\n    if (sign < 0. && modulo != 0) {\n      res = res - 1;\n    }\n    return res;\n  }\n\n  // NaN defination in IEEE 754-1985 is :\n  //   - sign = either 0 or 1.\n  //   - biased exponent = all 1 bits.\n  //   - fraction = anything except all 0 bits (since all 0 bits represents infinity).\n  // https://en.wikipedia.org/wiki/IEEE_754-1985#Representation_of_non-numbers\n  fn isnan(val: f32) -> bool {\n    let floatToUint: u32 = bitcast<u32>(val);\n    return (floatToUint & 0x7fffffffu) > 0x7f800000u;\n  }\n  fn isnanVec4(val : vec4<f32>) -> vec4<bool> {\n    let floatToUint: vec4<u32> = bitcast<vec4<u32>>(val);\n    return (floatToUint & vec4<u32>(0x7fffffffu)) > vec4<u32>(0x7f800000u);\n  }\n";function CN(e){const t=e.length;if(t<=1)return"fn getCoordsFromIndex(index : i32) -> i32 { return index; }";const n=ne(e),r=bN(t),s=[];for(let e=0;e<t;e++)s.push("d"+e);if(1===n.length)return"    fn getCoordsFromIndex(index : i32) -> vec2<i32> {\n      let d0 = index / uniforms.outShapeStrides; let d1 = index - d0 * uniforms.outShapeStrides;\n      return vec2<i32>(d0, d1);\n    }";let a;return a="var index2 = index;"+n.map(((e,t)=>`let ${s[t]} = index2 / uniforms.outShapeStrides.${vN(t)}; ${t===n.length-1?`let ${s[t+1]} = index2 - ${s[t]} * uniforms.outShapeStrides.${vN(t)}`:`index2 = index2 - ${s[t]} * uniforms.outShapeStrides.${vN(t)}`};`)).join(""),`\n    fn getCoordsFromIndex(index : i32) -> ${r} {\n      ${a}\n      return ${r}(${s.join(",")});\n    }\n  `}function IN(e){let t="";switch(e){case 0:case 1:t+="\n        fn getOutputIndexFromCoords(coords : i32) -> i32 {\n          return coords;\n        }\n        ";break;case 2:t+="\n        fn getOutputIndexFromCoords(coords : vec2<i32>) -> i32 {\n          return dot(coords, vec2<i32>(uniforms.outShapeStrides, 1));\n        }\n        ";break;case 3:t+="\n        fn getOutputIndexFromCoords(coords : vec3<i32>) -> i32 {\n          return dot(coords, vec3<i32>(uniforms.outShapeStrides.x, uniforms.outShapeStrides.y, 1));\n        }\n        ";break;case 4:t+="\n        fn getOutputIndexFromCoords(coords : vec4<i32>) -> i32 {\n          return dot(coords, vec4<i32>(\n            uniforms.outShapeStrides.x, uniforms.outShapeStrides.y, uniforms.outShapeStrides.z, 1));\n        }\n        ";break;case 5:t+="\n        fn getOutputIndexFromCoords(coords : vec5) -> i32 {\n          return coords.x * uniforms.outShapeStrides.x +\n              coords.y * uniforms.outShapeStrides.y +\n              coords.z * uniforms.outShapeStrides.z +\n              coords.w * uniforms.outShapeStrides.w +\n              coords.u;\n        }\n        ";break;case 6:t+="\n        fn getOutputIndexFromCoords(coords : vec6) -> i32 {\n          return coords.x * uniforms.outShapeStrides.x +\n              coords.y * uniforms.outShapeStrides.y +\n              coords.z * uniforms.outShapeStrides.z +\n              coords.w * uniforms.outShapeStrides.w +\n              coords.u * uniforms.outShapeStrides.u +\n              coords.v;\n        }\n        ";break;default:D(!1,(()=>`Unsupported ${e}D shape`))}return t}function TN(e){return 1===e.dispatch[1]&&1===e.dispatch[2]}function $N(e,t){return"float32"===e?t?"vec4<f32>":"f32":"int32"===e||"bool"===e?t?"vec4<i32>":"i32":e}function NN(e){return!(e.dispatchLayout.hasOwnProperty("y")&&0!==e.dispatchLayout.y.length||e.dispatchLayout.hasOwnProperty("z")&&0!==e.dispatchLayout.z.length)}const EN=e=>{let t=1;for(let n=0;n<e.length;n++)t*=e[n];return t};function RN(e,t,n=[1,1,1],r=[1,1,1]){const[s,a,o]=[Math.ceil(EN(e.x.map((e=>t[e])))/(n[0]*r[0])),e.y?Math.ceil(EN(e.y.map((e=>t[e])))/(n[1]*r[1])):1,e.z?Math.ceil(EN(e.z.map((e=>t[e])))/(n[2]*r[2])):1];return[s,a,o]}function _N(e,t,n=!1){if(n)return[8,8,1];const r=EN(e.x.map((e=>t[e]))),s=EN(e.y.map((e=>t[e])));return r<=4?[4,16,1]:s<=4?[16,4,1]:[16,16,1]}function AN(e,t,n=!1){if(n)return[4,4,1];const r=EN(e.x.map((e=>t[e]))),s=EN(e.y.map((e=>t[e])));return r<=4?[1,2,1]:s<=4?[2,1,1]:[2,2,1]}function ON(e){return{x:e.map(((e,t)=>t))}}function FN(e){if("float32"===e||"int32"===e||"bool"===e||"string"===e)return 4;if("complex64"===e)return 8;throw new Error("Unknown dtype "+e)}function PN(){return("undefined"!=typeof window||"undefined"!=typeof WorkerGlobalScope)&&!!navigator.gpu}var DN;!function(e){e[e.MatMulReduceProgram=0]="MatMulReduceProgram",e[e.MatMulSplitKProgram=1]="MatMulSplitKProgram",e[e.MatMulSmallOutputSizeProgram=2]="MatMulSmallOutputSizeProgram",e[e.MatMulPackedProgram=3]="MatMulPackedProgram",e[e.MatMulMax=4]="MatMulMax"}(DN||(DN={}));const MN=fe().getNumber("WEBGPU_CPU_HANDOFF_SIZE_THRESHOLD");class LN extends R{constructor(e,t){if(super(),this.commandQueueOwnedIds=new WeakSet,this.dispatchNumberInEncoder=0,this.disposed=!1,this.downloadWaitMs=0,this.tensorDataPendingDisposal=[],this.stagingPendingDisposal=[],this.uniformPendingDisposal=[],this.uploadWaitMs=0,!PN())throw new Error("WebGPU is not supported on this device");this.pipelineCache={},this.device=e,this.queue=e.queue,this.currentCommandEncoder=null,this.currentComputePass=null,this.supportTimeQuery=e.features.has("timestamp-query-inside-passes"),this.adapterInfo=new hN(t),this.thresholdToIncreaseWorkgroups=this.adapterInfo.intelGPUGeneration>=12?16:8,this.bufferManager=new dN(this.device),this.textureManager=new fN(this.device),this.tensorMap=new E(this,Xa()),this.supportTimeQuery&&(this.querySet=this.device.createQuerySet({type:"timestamp",count:2})),fe().getBool("WEBGPU_USE_PROFILE_TOOL")&&(this.dummyCanvas=document.createElement("canvas"),this.dummyCanvas.width=1,this.dummyCanvas.height=1,this.dummyContext=this.dummyCanvas.getContext("webgpu"),this.dummyContext.configure({device:e,format:"bgra8unorm"}),document.body.appendChild(this.dummyCanvas))}nextDataId(){return LN.nextDataId++}floatPrecision(){return 32}defaultGpuBufferUsage(){return GPUBufferUsage.STORAGE|GPUBufferUsage.COPY_SRC|GPUBufferUsage.COPY_DST}disposeData(e,t=!1){if(this.tensorDataPendingDisposal.indexOf(e)>=0)return!1;if(!this.tensorMap.has(e))return!0;const n=this.tensorMap.get(e);if(this.decRef(e),!t&&n.refCount>0)return!1;if(this.commandQueueOwnedIds.has(e))return this.tensorDataPendingDisposal.push(e),!1;const{complexTensorInfos:r}=this.tensorMap.get(e);return null!=r&&(this.disposeData(r.real.dataId,t),this.disposeData(r.imag.dataId,t)),this.releaseResource(e),this.tensorMap.delete(e),!0}memory(){return{numBytesInGPU:this.bufferManager.numBytesUsed,numBytesAllocatedInGPU:this.bufferManager.numBytesAllocated,unreliable:!1}}releaseResource(e){const t=this.tensorMap.get(e);if(t&&t.resourceInfo)if(t.external)t.resourceInfo=null;else{if("texture"in t.resourceInfo){const e=t.resourceInfo;e.texture instanceof GPUTexture&&this.textureManager.releaseTexture(e.texture,e.width,e.height,e.format,e.usage),e.texture=null}else{const e=t.resourceInfo;this.bufferManager.releaseBuffer(e.buffer,e.size,e.usage),e.buffer=null}t.resourceInfo=null}}refCount(e){return this.tensorMap.has(e)?this.tensorMap.get(e).refCount:0}incRef(e){this.tensorMap.get(e).refCount++}decRef(e){this.tensorMap.has(e)&&this.tensorMap.get(e).refCount--}write(e,t,n){if("complex64"===n&&null!=e)throw new Error("Cannot write to a complex64 dtype. Please use tf.complex(real, imag).");const r={id:this.nextDataId()};return this.tensorMap.set(r,{dtype:n,shape:t,values:e,refCount:1}),r}move(e,t,n,r,s){if("complex64"===r)throw new Error("Cannot write to a complex64 dtype. Please use tf.complex(real, imag).");this.tensorMap.set(e,{dtype:r,shape:n,values:t,refCount:s})}submitQueue(){this.ensureComputePassEnded(),this.queue.submit([this.currentCommandEncoder.finish()]),this.currentCommandEncoder=null,this.dispatchNumberInEncoder=0,this.commandQueueOwnedIds=new WeakSet,this.tensorDataPendingDisposal.forEach((e=>{this.releaseResource(e),this.tensorMap.delete(e)})),this.uniformPendingDisposal.forEach((e=>this.bufferManager.releaseBuffer(e.buffer,e.size,e.usage))),this.stagingPendingDisposal.forEach((e=>this.bufferManager.releaseUploadBuffer(e.buffer,e.size,e.usage))),this.tensorDataPendingDisposal=[],this.uniformPendingDisposal=[],this.stagingPendingDisposal=[]}ensureCommandEncoderReady(){this.currentCommandEncoder||(this.currentCommandEncoder=this.device.createCommandEncoder())}ensureComputePassEnded(){this.currentComputePass&&(this.currentComputePass.end(),this.currentComputePass=null)}getComputePass(){return this.currentComputePass||(this.currentComputePass=this.currentCommandEncoder.beginComputePass()),this.currentComputePass}async getBufferData(e,t){const n=this.bufferManager.acquireBuffer(t,GPUBufferUsage.COPY_DST|GPUBufferUsage.MAP_READ);this.ensureCommandEncoderReady(),this.ensureComputePassEnded(),this.currentCommandEncoder.copyBufferToBuffer(e,0,n,0,t),this.submitQueue(),await n.mapAsync(GPUMapMode.READ);const r=n.getMappedRange().slice(0);return n.unmap(),null!=n&&this.bufferManager.releaseBuffer(n,t,GPUBufferUsage.COPY_DST|GPUBufferUsage.MAP_READ),fe().getBool("WEBGPU_USE_PROFILE_TOOL")&&(D(void 0!==this.dummyContext,(()=>"Fail to get context for profiling tool")),this.dummyContext.getCurrentTexture()),r}convertAndCacheOnCPU(e,t){const n=this.tensorMap.get(e);return this.releaseResource(e),n.values=t,n.values}readSync(e){const t=this.tensorMap.get(e),{values:n}=t;if(null==n)throw new Error("WebGPU readSync is only available for CPU-resident tensors.");return n}async read(e){if(!this.tensorMap.has(e))throw new Error(`Tensor ${e} was not registered!`);const t=this.tensorMap.get(e),{values:n}=t;if(null!=n)return this.convertAndCacheOnCPU(e,n);let r;if("complex64"===t.dtype){const e=await Promise.all([this.read(t.complexTensorInfos.real.dataId),this.read(t.complexTensorInfos.imag.dataId)]);r=rp(e[0],e[1])}else{const e=t.resourceInfo;r=function(e,t){if(Array.isArray(e))return e;if("float32"===t)return e instanceof Float32Array?e:new Float32Array(e);if("int32"===t)return e instanceof Int32Array?e:new Int32Array(e);if("bool"===t||"string"===t)return Uint8Array.from(new Int32Array(e));throw new Error(`Unknown dtype ${t}`)}(await this.getBufferData(e.buffer,e.size),t.dtype)}return this.convertAndCacheOnCPU(e,r),r}copyBuffer(e,t,n){const r=this.bufferManager.acquireBuffer(t,n);return this.ensureCommandEncoderReady(),this.ensureComputePassEnded(),this.currentCommandEncoder.copyBufferToBuffer(e,0,r,0,t),this.submitQueue(),r}createTensorFromGPUData(e,t,n){let r=e.buffer;if("complex64"===n)throw new Error("Cannot write to a complex64 dtype. ");const s={id:this.nextDataId()};this.tensorMap.set(s,{dtype:n,shape:t,values:null,refCount:1,external:e.zeroCopy});const a=this.tensorMap.get(s),o=FN(a.dtype)*B(a.shape);if(e.buffer.size<o)throw new Error(`GPUBuffer size(${e.buffer.size}) is smaller than tensor size(${o})!`);if((e.buffer.usage&(GPUBufferUsage.STORAGE|GPUBufferUsage.COPY_SRC))!=(GPUBufferUsage.STORAGE|GPUBufferUsage.COPY_SRC))throw new Error("GPUBuffer.usage should include GPUBufferUsage.STORAGE | GPUBufferUsage.COPY_SRC!");return!0!==e.zeroCopy&&(r=this.copyBuffer(r,o,r.usage)),a.resourceInfo={size:r.size,usage:r.usage,buffer:r},Xa().makeTensorFromDataId(s,t,n,this)}readToGPU(e){const t=this.tensorMap.get(e),{values:n,dtype:r,shape:s,resourceInfo:a}=t;if("complex64"===r)throw new Error("Does not support reading buffer for complex64 dtype.");if(null==a)throw null!=n?new Error("Data is not on GPU but on CPU."):new Error("There is no data on GPU or CPU.");const o=a.size,i=this.bufferManager.acquireBuffer(o,a.usage);this.ensureCommandEncoderReady(),this.ensureComputePassEnded(),this.currentCommandEncoder.copyBufferToBuffer(a.buffer,0,i,0,o),this.submitQueue();const u=this.makeTensorInfo(s,r),l=Xa().makeTensorFromTensorInfo(u);return this.tensorMap.get(u.dataId).resourceInfo={size:o,usage:this.defaultGpuBufferUsage(),buffer:i},{tensorRef:l,buffer:i,bufSize:o}}bufferSync(e){const t=this.readSync(e.dataId);if("string"===e.dtype)try{const n=t.map((e=>Xr(e)));return Ha(e.shape,e.dtype,n)}catch(e){throw new Error("Failed to decode encoded string bytes into utf-8")}return Ha(e.shape,e.dtype,t)}async time(e){this.supportTimeQuery||console.warn("This device doesn't support timestamp-query-inside-passes extension. Start Chrome browser with flag --disable-dawn-features=disallow_unsafe_apis then try again. Otherwise, zero will be shown for the kernel time when profiling mode is enabled. Using performance.now is not workable for webgpu since it doesn't support synchronous data read from GPU.");const t=this.activeTimers,n=[];let r=!1;null==this.programTimersStack?(this.programTimersStack=n,r=!0):this.activeTimers.push(n),this.activeTimers=n,e();const s=Qr(this.activeTimers.map((e=>e.query))).filter((e=>null!=e)),a=Qr(this.activeTimers.map((e=>e.name))).filter((e=>null!=e));this.activeTimers=t,r&&(this.programTimersStack=null);const o={uploadWaitMs:this.uploadWaitMs,downloadWaitMs:this.downloadWaitMs,kernelMs:null,wallMs:null},i=await Promise.all(s);return o.kernelMs=P(i),o.getExtraProfileInfo=()=>i.map(((e,t)=>({name:a[t],ms:e}))).map((e=>`${e.name}: ${e.ms}`)).join(", "),this.uploadWaitMs=0,this.downloadWaitMs=0,o}makeTensorInfo(e,t,n){return"string"===t&&null!=n&&n.length>0&&Z(n[0])&&(n=n.map((e=>qr(e)))),{dataId:this.write(n,e,t),shape:e,dtype:t}}tensorToBinding(e){if(!e)return null;const t=this.tensorMap.get(e.dataId);if("texture"in t.resourceInfo){const e=t.resourceInfo;return e.texture instanceof GPUExternalTexture?e.texture:e.texture.createView()}const n=t.resourceInfo;return{offset:0,size:n.size,buffer:n.buffer}}async getQueryTime(e){return this.supportTimeQuery?this.getTimeFromQuerySet(e):0}uploadToGPU(e){const t=this.tensorMap.get(e);if(t.resourceInfo)return;const n=FN(t.dtype)*B(t.shape),r=this.bufferManager.acquireBuffer(n,this.defaultGpuBufferUsage());if(t.resourceInfo={size:n,usage:this.defaultGpuBufferUsage(),buffer:r},t.values){const e=this.bufferManager.acquireUploadBuffer(n,GPUBufferUsage.MAP_WRITE|GPUBufferUsage.COPY_SRC),s=e.getMappedRange();"int32"===t.dtype||"bool"===t.dtype?new Int32Array(s).set(t.values):new Float32Array(s).set(t.values),e.unmap(),this.ensureCommandEncoderReady(),this.ensureComputePassEnded(),this.currentCommandEncoder.copyBufferToBuffer(e,0,r,0,n);const a={size:n,usage:GPUBufferUsage.MAP_WRITE|GPUBufferUsage.COPY_SRC,buffer:e};this.stagingPendingDisposal.push(a)}}makeUniforms(e){let t=0,n=0;const r=[];let s=1;e.forEach((e=>{let a;switch(0===e.data.length&&(e.data=[1]),e.data.length){case 1:a=4;break;case 2:a=8;break;case 3:case 4:case 5:case 6:a=16;break;default:D(!1,(()=>`Unsupported ${e.data.length}D shape`))}5!==n&&6!==n||(a=16),a>s&&(s=a),t=Math.ceil(t/a)*a,n=e.data.length,r.push(t),t+=4*e.data.length})),t=Math.ceil(t/s)*s;const a=new ArrayBuffer(t);e.forEach(((e,t)=>{const n=r[t];"int32"===e.type?new Int32Array(a,n,e.data.length).set(e.data):"uint32"===e.type?new Uint32Array(a,n,e.data.length).set(e.data):new Float32Array(a,n,e.data.length).set(e.data)}));const o=this.bufferManager.acquireBuffer(t,GPUBufferUsage.COPY_DST|GPUBufferUsage.UNIFORM);this.queue.writeBuffer(o,0,a,0,t);const i={size:t,usage:GPUBufferUsage.COPY_DST|GPUBufferUsage.UNIFORM,buffer:o};return this.uniformPendingDisposal.push(i),{offset:0,size:t,buffer:o}}runWebGPUProgram(e,t,n,r,s){if(s||(s=this.makeTensorInfo(e.outputShape,n)),0===B(s.shape))return this.tensorMap.get(s.dataId).values=q(s.dtype,0),s;this.uploadToGPU(s.dataId),e.dispatch=((e,t)=>{const n=e.limits.maxComputeWorkgroupsPerDimension,r=t.dispatchLayout,s=t.dispatch;if(s.every((e=>e<=n)))return s;D(s[0]>n&&void 0===r.y&&void 0===r.z,(()=>"Dispatch size exceeds WebGPU limits in Y or Z dimension."));let a=Math.ceil(Math.sqrt(s[0]));return a>n?(a=Math.ceil(Math.cbrt(s[0])),D(a<=n,(()=>"Total dispatch size exceeds WebGPU maximum.")),[a,a,a]):[a,a,1]})(this.device,e);let a=[],o=[];if(!e.isFromPixels){a.push({type:"float32",data:[NaN]},{type:"float32",data:[1/0]}),o=t.concat(s).map((e=>e.shape));const n="int32";o.map((e=>{a.push({type:n,data:e})}));const r=ne(s.shape);if(a.push({type:n,data:r}),e.size){const t=B(e.outputShape);a.push({type:n,data:[e.isVec4?t/4:t]})}}const i=t.map(((t,n)=>{if("complex64"===t.dtype)throw new Error("GPGPUProgram does not support complex64 input. For complex64 dtypes, please separate the program into real and imaginary parts.");return this.uploadToGPU(t.dataId),{dtype:this.tensorMap.get(t.dataId).dtype,shape:t.shape,name:e.variableNames[n]}})),u=function(e,t,n,r){let s=e.shaderKey;if(e.isFromPixels)return s;const a=n.map((e=>e.dtype)).concat(r.dtype),o=n.map((e=>So(e.shape,r.shape))),i=n.map((e=>z(e.shape,r.shape))).join("_"),u=o.map((e=>e.join("_"))).join(";"),l=TN(e)?"flatDispatch":"";return s+="_"+(e.workgroupSize?e.workgroupSize.join(","):"")+t.map((e=>e.length)).join(",")+a.join(",")+e.variableNames.join(",")+u+i+l,s}(e,o,i,s);let l;u in this.pipelineCache?l=this.pipelineCache[u]:(l=((e,t,n,r)=>{const s=function(e,t,n){const r=[],s=n.workgroupSize[0]*n.workgroupSize[1]*n.workgroupSize[2];if(r.push(`\n\n      var<private> localId: vec3<u32>;\n      var<private> localIndex: u32;\n      var<private> globalId: vec3<u32>;\n      var<private> numWorkgroups: vec3<u32>;\n      var<private> workgroupId: vec3<u32>;\n\n      // Only used when the y/z dimension of workgroup size is 1.\n      fn getGlobalIndex() -> i32 {\n        ${TN(n)?"  return i32(globalId.x);":`  return i32((workgroupId.z * numWorkgroups.x * numWorkgroups.y +\n                workgroupId.y * numWorkgroups.x + workgroupId.x) * ${s}u +\n                localIndex);\n        `}\n      }\n    `),n.isFromPixels){r.push(`\n        struct Uniform {\n          size            : i32,\n          numChannels     : i32,\n          outShapeStrides : vec2<i32>,\n        };\n\n        @group(0) @binding(0) var<storage, read_write> result: array<${$N(t.dtype,n.isVec4)}>;\n        @group(0) @binding(2) var<uniform> uniforms: Uniform;\n      `);const e=NN(n);return[SN,r.join("\n"),CN(t.shape),n.getUserCode(),kN(e,n)].join("\n")}let a="struct Uniforms { NAN : f32, INFINITY : f32, ";n.variableNames.forEach(((t,n)=>{const r=bN(e[n].shape.length);a+=`${t.charAt(0).toLowerCase()+t.slice(1)}Shape : ${r}, `}));const o=bN(t.shape.length);a+=`outShape : ${o}, `;const i=bN(t.shape.length-1);a+=`\n         outShapeStrides: ${i}, `,n.size&&(a+="size : i32, "),n.uniforms&&(a+=n.uniforms),a+="};",a=function(e){return(e=e.replace(/(\w+)\s*:\s*vec(5|6)/g,(e=>"@align(16) "+e))).replace(/vec(5|6)\s*,\s*(\w+)/g,((e,t,n)=>`vec${t}, @align(16) ${n}`))}(a),r.push(a),n.atomic?r.push("\n      @group(0) @binding(0) var<storage, read_write> result: array<atomic<i32>>;\n    "):r.push(`\n      @group(0) @binding(0) var<storage, read_write> result: array<${$N(t.dtype,n.isVec4)}>;\n    `),n.variableNames.forEach(((t,s)=>{r.push(`\n      @group(0) @binding(${1+s}) var<storage, read> ${t}: array<${n.variableTypes?n.variableTypes[s]:$N(e[s].dtype,n.isVec4)}>;\n        `)})),""!==a&&r.push(`\n      @group(0) @binding(${1+n.variableNames.length}) var<uniform> uniforms: Uniforms;\n      `);const u=function(e,t){const{x:n,y:r=[],z:s=[]}=t,a=e.length,o=n.length+r.length+s.length;if(o!==a)return"";if(n.length===a)return`fn getOutputCoords() -> ${bN(a)}{\n    let globalIndex = getGlobalIndex();\n    return getCoordsFromIndex(globalIndex);\n  }\n  `;let i="";const u=[n,r,s];for(let e=0;e<u.length;e++){const t=u[e];if(0!==t.length)if(1===t.length)i+=`let d${t[0]} = i32(globalId[${e}]);`;else{const n=yN(t,"uniforms.outShape");i+=`var index${e} = i32(globalId[${e}]);`;for(let r=0;r<n.length;r++)i+=`let d${t[r]} = index${e} / ${n[r]};`,r===n.length-1?i+=`let d${t[r+1]} = index${e} - d${t[r]} * ${n[r]};`:i+=`index${e} = index${e} - d${t[r]} * ${n[r]};`}}const l=[];for(let e=0;e<o;e++)l.push("d"+e);const c=bN(o);let h=`fn getOutputCoords() -> ${c} {\n  ${i}\n`;return 0===l.length?h+=`return ${c}(0); }`:h+=`return ${c}(${l.join(",")}); }`,h}(t.shape,n.dispatchLayout),l=[SN,r.join("\n")+"\n  fn isinf(val: f32) -> bool {\n    return abs(val) == uniforms.INFINITY;\n  }\n",CN(t.shape),u,IN(t.shape.length)];n.atomic||l.push(function(e,t,n){const r=e.length,s=$N(t,n);let a;if(a=n?`fn setOutputAtIndex(flatIndex : i32, value : vec4<f32>) {\n      result[flatIndex] = ${s}(value);\n    }\n    fn setOutputAtIndexI32(flatIndex : i32, value : vec4<i32>) {\n      result[flatIndex] = ${s}(value);\n    }`:`fn setOutputAtIndex(flatIndex : i32, value : f32) {\n      result[flatIndex] = ${s}(value);\n    }\n    fn setOutputAtIndexI32(flatIndex : i32, value : i32) {\n      result[flatIndex] = ${s}(value);\n    }`,r>=2){const e=["d0","d1","d2","d3","d4","d5"].slice(0,r),t=bN(r);a+=n?`\n      fn setOutputAtCoords(${e.map((e=>e+" : i32")).join(", ")}, value : vec4<f32>) {\n        let flatIndex = getOutputIndexFromCoords(${t}(${e.join(", ")}));\n        setOutputAtIndex(flatIndex / 4, value);\n      }\n      fn setOutputAtCoordsI32(${e.map((e=>e+" : i32")).join(", ")}, value : vec4<i32>) {\n        let flatIndex = getOutputIndexFromCoords(${t}(${e.join(", ")}));\n        setOutputAtIndexI32(flatIndex / 4, value);\n      }\n    `:`\n      fn setOutputAtCoords(${e.map((e=>e+" : i32")).join(", ")}, value : f32) {\n        let flatIndex = getOutputIndexFromCoords(${t}(${e.join(", ")}));\n        setOutputAtIndex(flatIndex, value);\n      }\n      fn setOutputAtCoordsI32(${e.map((e=>e+" : i32")).join(", ")}, value : i32) {\n        let flatIndex = getOutputIndexFromCoords(${t}(${e.join(", ")}));\n        setOutputAtIndexI32(flatIndex, value);\n      }\n    `}return a}(t.shape,t.dtype,n.isVec4));const c=e.map(((e,r)=>function(e,t,n,r){let s=function(e,t){const n=e.name,r=e.shape.length,s=bN(r),a="get"+n.charAt(0).toUpperCase()+n.slice(1),o=["d0","d1","d2","d3","d4","d5"].slice(0,r),i=o.map((e=>e+" : i32")).join(", ");if(r<1)return t?`\n        fn ${a}() -> vec4<f32> {\n          return vec4<f32>(${n}[0]);\n        }\n      `:`\n      fn ${a}() ->f32 {\n        return f32(${n}[0]);\n      }\n    `;const u=`uniforms.${n.charAt(0).toLowerCase()+n.slice(1)}Shape`;let l=r+"D";return 0===r&&(l="1D"),t?`\n      fn ${a}(${i}) -> vec4<f32> {\n        return vec4<f32>(${n}[getIndexFromCoords${l}(${s}(${o.join(",")}),\n          ${u}) / 4]);\n      }\n      `:`\n    fn ${a}(${i}) -> f32 {\n      return f32(${n}[getIndexFromCoords${l}(${s}(${o.join(",")}),\n        ${u})]);\n    }\n   `}(e,n);return e.shape.length<=t.length&&(s+=function(e,t,n,r){const s=e.name,a=s.charAt(0).toUpperCase()+s.slice(1),o="get"+a+"ByOutput",i=e.shape.length,u=t.length,l=bN(u);if(z(e.shape,t)&&r)return n?`\n      fn ${o}Index(globalIndex : i32) -> vec4<f32> {\n        return vec4<f32>(${s}[globalIndex]);\n      }\n\n      fn ${o}Coords(coords : ${l}) -> vec4<f32> {\n        return vec4<f32>(${s}[${u>1?"getOutputIndexFromCoords(coords)":"coords"} / 4]);\n      }\n      `:`\n    fn ${o}Index(globalIndex : i32) -> f32 {\n      return f32(${s}[globalIndex]);\n    }\n\n    fn ${o}Coords(coords : ${l}) -> f32 {\n      return f32(${s}[${u>1?"getOutputIndexFromCoords(coords)":"coords"}]);\n    }\n    `;const c=So(e.shape,t),h=u-i;let d="";if(0===i)return n?`\n    fn ${o}Index(globalIndex : i32) -> vec4<f32> {\n      return get${a}();\n    }\n\n    fn ${o}Coords(coords : ${l}) -> vec4<f32> {\n      return get${a}();\n    }\n  `:`\n    fn ${o}Index(globalIndex : i32) -> f32{\n      return get${a}();\n    }\n\n    fn ${o}Coords(coords : ${l}) -> f32{\n      return get${a}();\n    }\n  `;d=u<2&&c.length>=1?"coords = 0;":c.map((e=>`coords.${vN(e+h)} = 0;`)).join("\n");let p="";if(u<2&&i>0)p="coords";else if(u>1){const t=bN(i),n=e.shape.map(((e,t)=>"coords."+vN(t+h))).join(", ");p=`${t}(${n})`}else p="coords";const f=`uniforms.${s.charAt(0).toLowerCase()+s.slice(1)}Shape`,m=i+"D";return n?`\n    fn ${o}Index(globalIndex : i32) -> vec4<f32> {\n      var coords = getCoordsFromIndex(globalIndex);\n      ${d}\n      return ${s}[getIndexFromCoords${m}(${p}, ${f}) / 4];\n    }\n\n    fn ${o}Coords(coordsIn : ${l}) -> vec4<f32> {\n      var coords = coordsIn;\n      ${d}\n      return ${s}[getIndexFromCoords${m}(${p}, ${f}) / 4];\n    }\n  `:`\n  fn ${o}Index(globalIndex : i32) -> f32 {\n    var coords = getCoordsFromIndex(globalIndex);\n    ${d}\n    return f32(${s}[getIndexFromCoords${m}(${p}, ${f})]);\n  }\n\n  fn ${o}Coords(coordsIn : ${l}) -> f32 {\n    var coords = coordsIn;\n    ${d}\n    return f32(${s}[getIndexFromCoords${m}(${p}, ${f})]);\n  }\n`}(e,t,n,r)),s}(e,t.shape,n.variableTypes?"vec4<f32>"===n.variableTypes[r]:n.isVec4,n.dispatchLayout.x.length===t.shape.length))).join("\n");l.push(c),l.push(n.getUserCode());const h=NN(n);return l.push(kN(h,n)),l.join("\n")}(n,{dtype:r.dtype,shape:r.shape},t),a=e.createShaderModule({code:s,label:t.constructor.name});return e.createComputePipeline({compute:{module:a,entryPoint:"_start"},label:t.constructor.name,layout:"auto"})})(this.device,e,i,s),this.pipelineCache[u]=l),r&&(a=[...a,...r]);const c=[this.tensorToBinding(s),...t.map((e=>this.tensorToBinding(e))),this.makeUniforms(a)],h=this.device.createBindGroup({layout:l.getBindGroupLayout(0),entries:c.map(((e,t)=>({binding:t,resource:e})))});this.ensureCommandEncoderReady();const d=this.getComputePass(),p=null!=this.activeTimers;return p&&this.supportTimeQuery&&d.writeTimestamp(this.querySet,0),d.setPipeline(l),d.setBindGroup(0,h),d.dispatchWorkgroups(e.dispatch[0],e.dispatch[1],e.dispatch[2]),p&&this.supportTimeQuery&&d.writeTimestamp(this.querySet,1),this.dispatchNumberInEncoder++,t.forEach((e=>{this.commandQueueOwnedIds.add(e.dataId)})),this.commandQueueOwnedIds.add(s.dataId),fe().get("WEBGPU_DEFERRED_SUBMIT_BATCH_SIZE")<=this.dispatchNumberInEncoder&&this.submitQueue(),p&&this.activeTimers.push({name:e.constructor.name,query:this.getQueryTime(this.querySet)}),s}async getTimeFromQuerySet(e){const t=this.bufferManager.acquireBuffer(16,GPUBufferUsage.COPY_SRC|GPUBufferUsage.QUERY_RESOLVE),n=this.bufferManager.acquireBuffer(16,GPUBufferUsage.MAP_READ|GPUBufferUsage.COPY_DST);this.ensureCommandEncoderReady(),this.ensureComputePassEnded(),this.currentCommandEncoder.resolveQuerySet(e,0,2,t,0),this.currentCommandEncoder.copyBufferToBuffer(t,0,n,0,16),this.submitQueue(),await n.mapAsync(GPUMapMode.READ);const r=new BigUint64Array(n.getMappedRange()),s=Number(r[1]-r[0]);return n.unmap(),this.bufferManager.releaseBuffer(n,16,GPUBufferUsage.MAP_READ|GPUBufferUsage.COPY_DST),this.bufferManager.releaseBuffer(t,16,GPUBufferUsage.COPY_SRC|GPUBufferUsage.QUERY_RESOLVE),s/1e6}shouldExecuteOnCPU(e,t=MN){return fe().getBool("WEBGPU_CPU_FORWARD")&&e.every((e=>null==this.tensorMap.get(e.dataId).resourceInfo&&B(e.shape)<t))}numDataIds(){return this.tensorMap.numDataIds()-this.tensorDataPendingDisposal.length}dispose(){this.disposed||(this.bufferManager.dispose(),this.textureManager.dispose(),this.disposed=!0)}}var BN;LN.nextDataId=0,PN()&&to("webgpu",(async()=>{fe().set("CHECK_COMPUTATION_FOR_ERRORS",!1);const e={powerPreference:fe().get("WEBGPU_USE_LOW_POWER_GPU")?"low-power":"high-performance"},t=await navigator.gpu.requestAdapter(e),n={};t.features.has("timestamp-query-inside-passes")&&(n.requiredFeatures=["timestamp-query-inside-passes"]);const r=t.limits;n.requiredLimits={maxComputeWorkgroupStorageSize:r.maxComputeWorkgroupStorageSize,maxComputeWorkgroupsPerDimension:r.maxComputeWorkgroupsPerDimension,maxStorageBufferBindingSize:r.maxStorageBufferBindingSize};const s=await t.requestDevice(n),a=await t.requestAdapterInfo();return new LN(s,a)}),3),function(e){e[e.ADD=0]="ADD",e[e.ATAN2=1]="ATAN2",e[e.COMPLEX_MULTIPLY_IMAG=2]="COMPLEX_MULTIPLY_IMAG",e[e.COMPLEX_MULTIPLY_REAL=3]="COMPLEX_MULTIPLY_REAL",e[e.DIV=4]="DIV",e[e.EQUAL=5]="EQUAL",e[e.GREATER=6]="GREATER",e[e.GREATER_EQUAL=7]="GREATER_EQUAL",e[e.INT_DIV=8]="INT_DIV",e[e.LESS=9]="LESS",e[e.LESS_EQUAL=10]="LESS_EQUAL",e[e.LOGICAL_AND=11]="LOGICAL_AND",e[e.LOGICAL_OR=12]="LOGICAL_OR",e[e.MAX=13]="MAX",e[e.MIN=14]="MIN",e[e.MOD=15]="MOD",e[e.MUL=16]="MUL",e[e.NOT_EQUAL=17]="NOT_EQUAL",e[e.POW=18]="POW",e[e.PRELU=19]="PRELU",e[e.SQUARED_DIFFERENCE=20]="SQUARED_DIFFERENCE",e[e.SUB=21]="SUB"}(BN||(BN={}));const zN="\n  if (isnan(a)) { return a; }\n  if (isnan(b)) { return b; }\n  ",UN="\n  resultTemp = select(\n      resultTemp, vec4<f32>(valueForNaN),\n      vec4<bool>(isNaN) | isnanVec4(a) | isnanVec4(b));\n  ",VN=`\n  ${zN}\n  if (b == 0.) {\n    return uniforms.NAN;\n  }\n  var resultTemp = a % b;\n  if ((a < 0. && b < 0.) || (a >= 0. && b > 0.)) {\n    return resultTemp;\n  } else {\n    return (resultTemp + b) % b;\n  }\n`,WN=`\n  let isNaN = !vec4<bool>(b);\n  let valueForNaN = uniforms.NAN;\n  var resultTemp = vec4<f32>(a % b);\n  ${UN}\n\n  if (!((a[0] < 0. && b[0] < 0.) || (a[0] >= 0. && b[0] > 0.))) {\n    resultTemp[0] = (resultTemp[0] + b[0]) % b[0];\n  }\n  if (!((a[1] < 0. && b[1] < 0.) || (a[1] >= 0. && b[1] > 0.))) {\n    resultTemp[1] = (resultTemp[1] + b[1]) % b[1];\n  }\n  if (!((a[2] < 0. && b[2] < 0.) || (a[2] >= 0. && b[2] > 0.))) {\n    resultTemp[2] = (resultTemp[2] + b[2]) % b[2];\n  }\n  if (!((a[3] < 0. && b[3] < 0.) || (a[3] >= 0. && b[3] > 0.))) {\n    resultTemp[3] = (resultTemp[3] + b[3]) % b[3];\n  }\n\n  return resultTemp;\n`,GN=`\n  var resultTemp = vec4<f32>(a != b);\n  let valueForNaN = 1.0;\n  ${UN}\n\n  return resultTemp;\n`,HN=`\n  let isModRound1Bool = vec4<i32>(round(abs(b) % vec4<f32>(2.0))) == vec4<i32>(1);\n  let isModRound1 = vec4<f32>(isModRound1Bool);\n  let multiplier = sign(a) * isModRound1 + (vec4<f32>(1.0) - isModRound1);\n  var resultTemp = multiplier * pow(abs(a), b);\n\n  // Ensure that a^0 = 1, including 0^0 = 1 as this correspond to TF and JS\n  let isExpZero = b == vec4<f32>(0.0);\n  if (isExpZero.r) {\n    resultTemp.r = 1.0;\n  }\n  if (isExpZero.g) {\n    resultTemp.g = 1.0;\n  }\n  if (isExpZero.b) {\n    resultTemp.b = 1.0;\n  }\n  if (isExpZero.a) {\n    resultTemp.a = 1.0;\n  }\n  let isNaN = (a < vec4<f32>(0.0)) & (floor(b) < b);\n  let valueForNaN = uniforms.NAN;\n  ${UN}\n  return resultTemp;\n`;function jN(e,t,n="uniforms.NAN"){const r=t?UN:zN;return t?`\n    let valueForNaN = ${n};\n    var resultTemp = vec4<f32>(${e}(a, b));\n    `+r+"\n    return resultTemp;\n  ":r+`\n    return ${e}(a, b);\n  `}function KN(e,t){switch(e){case BN.ADD:return"return a + b;";case BN.ATAN2:return jN("atan2",t);case BN.COMPLEX_MULTIPLY_IMAG:return"return areal * bimag + aimag * breal;";case BN.COMPLEX_MULTIPLY_REAL:return"return areal * breal - aimag * bimag;";case BN.DIV:return"return a / b;";case BN.EQUAL:return t?"return vec4<f32>(a == b);":"return f32(a == b);";case BN.GREATER:return t?"return vec4<f32>(a > b);":"return f32(a > b);";case BN.GREATER_EQUAL:return t?"return vec4<f32>(a >= b);":"return f32(a >= b);";case BN.INT_DIV:return t?"\n  let ia = vec4<i32>(round(a));\n  let ib = vec4<i32>(round(b));\n  let cond = ib != vec4<i32>(0);\n  var resultTemp = vec4<i32>(0);\n  let s = sign(a) * sign(b);\n\n  // Windows (D3D) wants guaranteed non-zero int division at compile-time.\n  if (cond[0]) {\n    resultTemp[0] = idiv(ia[0], ib[0], s[0]);\n  }\n  if (cond[1]) {\n    resultTemp[1] = idiv(ia[1], ib[1], s[1]);\n  }\n  if (cond[2]) {\n    resultTemp[2] = idiv(ia[2], ib[2], s[2]);\n  }\n  if (cond[3]) {\n    resultTemp[3] = idiv(ia[3], ib[3], s[3]);\n  }\n  return vec4<f32>(resultTemp);\n":"\n  let s = sign(a) * sign(b);\n  let ia = i32(round(a));\n  let ib = i32(round(b));\n  return f32(idiv(ia, ib, s));\n";case BN.LESS:return t?"return vec4<f32>(a < b);":"return f32(a < b);";case BN.LESS_EQUAL:return t?"return vec4<f32>(a <= b);":"return f32(a <= b);";case BN.LOGICAL_AND:return t?"return (vec4<f32>(a >= vec4<f32>(1.0)) *\n  vec4<f32>(b >= vec4<f32>(1.0)));":"return f32(a >= 1.0 && b >= 1.0);";case BN.LOGICAL_OR:return t?"return min(vec4<f32>(a >= vec4<f32>(1.0)) +\n  vec4<f32>(b >= vec4<f32>(1.0)), vec4<f32>(1.0));":"return f32(a >= 1.0 || b >= 1.0);";case BN.MAX:return jN("max",t);case BN.MIN:return jN("min",t);case BN.MOD:return t?WN:VN;case BN.MUL:return"return a * b;";case BN.NOT_EQUAL:return t?GN:"\n  if (isnan(a) || isnan(b)) {\n    return 1.0;\n  }\n  return f32(a != b);\n";case BN.POW:return t?HN:"\n  if(a < 0.0 && floor(b) < b) {\n    return uniforms.NAN;\n  }\n  if (b == 0.0) {\n    return 1.0;\n  }\n  if (round(abs(b) % 2.0) != 1.0) {\n    return pow(abs(a), b);\n  }\n  return sign(a) * pow(abs(a), b);\n";case BN.PRELU:return t?"\n  let aLessThanZero = vec4<f32>(a < vec4<f32>(0.0));\n  return (aLessThanZero * (b * a)) + ((vec4<f32>(1.0) - aLessThanZero) * a);\n":"if (a < 0.0) { return b * a; }  return a;";case BN.SQUARED_DIFFERENCE:return"return (a - b) * (a - b);";case BN.SUB:return"return a - b;";default:throw new Error(`BinaryType ${e} is not implemented!`)}}var qN;!function(e){e[e.ABS=0]="ABS",e[e.ACOS=1]="ACOS",e[e.ACOSH=2]="ACOSH",e[e.ASIN=3]="ASIN",e[e.ASINH=4]="ASINH",e[e.ATAN=5]="ATAN",e[e.ATANH=6]="ATANH",e[e.CEIL=7]="CEIL",e[e.COS=8]="COS",e[e.COSH=9]="COSH",e[e.ELU=10]="ELU",e[e.ERF=11]="ERF",e[e.EXP=12]="EXP",e[e.EXPM1=13]="EXPM1",e[e.FLOOR=14]="FLOOR",e[e.IS_FINITE=15]="IS_FINITE",e[e.IS_INF=16]="IS_INF",e[e.IS_NAN=17]="IS_NAN",e[e.LINEAR=18]="LINEAR",e[e.LOG=19]="LOG",e[e.LOG1P=20]="LOG1P",e[e.LOGICAL_NOT=21]="LOGICAL_NOT",e[e.NEG=22]="NEG",e[e.RELU=23]="RELU",e[e.RELU6=24]="RELU6",e[e.LEAKYRELU=25]="LEAKYRELU",e[e.RECIPROCAL=26]="RECIPROCAL",e[e.ROUND=27]="ROUND",e[e.RSQRT=28]="RSQRT",e[e.SELU=29]="SELU",e[e.SIGMOID=30]="SIGMOID",e[e.SIGN=31]="SIGN",e[e.SIN=32]="SIN",e[e.SINH=33]="SINH",e[e.SOFTPLUS=34]="SOFTPLUS",e[e.SQRT=35]="SQRT",e[e.SQUARE=36]="SQUARE",e[e.STEP=37]="STEP",e[e.TAN=38]="TAN",e[e.TANH=39]="TANH",e[e.TO_INT=40]="TO_INT"}(qN||(qN={}));const XN=`\n  // Error function is calculated approximately with elementary function.\n  // See "Handbook of Mathematical Functions with Formulas,\n  // Graphs, and Mathematical Tables", Abramowitz and Stegun.\n  let p = ${Qd};\n  let a1 = ${Zd};\n  let a2 = ${Jd};\n  let a3 = ${ep};\n  let a4 = ${tp};\n  let a5 = ${np};\n\n  let sign = sign(a);\n  let absA = abs(a);\n  let t = 1.0 / (1.0 + p * absA);\n  return sign * (1.0 - (((((a5 * t + a4) * t) + a3) * t + a2) * t + a1) * t * exp(-absA * absA));\n`,YN=`\n  if (a >= 0.0) {\n    return ${Yd} * a;\n  } else {\n    return ${Xd} * (exp(a) - 1.0);\n  }\n`;function QN(e,t){switch(e){case qN.ABS:return"return abs(a);";case qN.ACOS:return"\n  if (abs(a) > 1.) {\n    return uniforms.NAN;\n  }\n  return acos(a);\n";case qN.ACOSH:return"\n  if (a < 1.) {\n    return uniforms.NAN;\n  }\n  return acosh(a);\n";case qN.ASIN:return"\n  if (abs(a) > 1.) {\n    return uniforms.NAN;\n  }\n  return asin(a);\n";case qN.ASINH:return"return asinh(a);";case qN.ATAN:return"\n  if (isnan(a)) {\n    return uniforms.NAN;\n  }\n  return atan(a);\n";case qN.ATANH:return"\n  if (abs(a) > 1.) {\n    return uniforms.NAN;\n  }\n  if (a == 1.) {\n    return uniforms.INFINITY;\n  }\n  if (a == -1.) {\n    return -uniforms.INFINITY;\n  }\n  return atanh(a);\n";case qN.COS:return"return cos(a);";case qN.COSH:return"\n  let e2x = exp(-a);\n  return (e2x + 1.0 / e2x) / 2.0;\n";case qN.CEIL:return"return ceil(a);";case qN.ELU:return t?"\n  var resFloat = exp(a) - vec4<f32>(1.0);\n  if (a.r >= 0.0) {\n    resFloat.r = a.r;\n  }\n  if (a.g >= 0.0) {\n    resFloat.g = a.g;\n  }\n  if (a.b >= 0.0) {\n    resFloat.b = a.b;\n  }\n  if (a.a >= 0.0) {\n    resFloat.a = a.a;\n  }\n  return resFloat;\n":"if (a >= 0.0) { return a; }  return (exp(a) - 1.0);";case qN.ERF:return XN;case qN.EXP:return"return exp(a);";case qN.EXPM1:return"return exp(a) - 1.0;";case qN.FLOOR:return"return floor(a);";case qN.IS_FINITE:return"return f32(!isnan(a) && !isinf(a));";case qN.IS_INF:return"return f32(isinf(a));";case qN.IS_NAN:return"return f32(isnan(a));";case qN.LINEAR:return"return a;";case qN.LOG:return"if (a < 0.0) { return uniforms.NAN; }\n  return log(a);";case qN.LOG1P:return"\n  if (isnan(a)) { return a; }\n  return log(1.0 + a);\n";case qN.LOGICAL_NOT:return"return f32(!(a >= 1.0));";case qN.NEG:return"return -a;";case qN.LEAKYRELU:return t?"\n  let aLessThanZero = vec4<f32>(a < vec4<f32>(0.0));\n  return (aLessThanZero * (uniforms.alpha * a)) + ((vec4<f32>(1.0) - aLessThanZero) * a);\n":"if (a < 0.0) { return uniforms.alpha * a; } return a;";case qN.RECIPROCAL:return"return 1.0 / a;";case qN.RELU:return t?"\n  return select(a, vec4<f32>(0.0), a < vec4<f32>(0.0));\n":"return select(a, 0.0, a < 0.0);";case qN.RELU6:return t?"return clamp(a, vec4<f32>(0.0, 0.0, 0.0, 0.0), vec4<f32>(6.0, 6.0, 6.0, 6.0));":"return clamp(a, 0.0, 6.0);";case qN.ROUND:return"return round(a);";case qN.RSQRT:return"return inverseSqrt(a);";case qN.SELU:return YN;case qN.SIGMOID:return"return 1.0 / (1.0 + exp(-1.0 * a));";case qN.SIGN:return"return sign(a);";case qN.SIN:return"return sin(a);";case qN.SINH:return"\n  let e2x = exp(a);\n  return (e2x - 1.0 / e2x) / 2.0;\n";case qN.SOFTPLUS:return"\n  let epsilon = 1.1920928955078125e-7;\n  let threshold = log(epsilon) + 2.0;\n\n  let too_large = a > -threshold;\n  let too_small = a < threshold;\n  let exp_a = exp(a);\n\n  if (too_large) {\n    return a;\n  } else if (too_small) {\n    return exp_a;\n  } else {\n    return log(exp_a + 1.0);\n  }\n";case qN.SQRT:return"return sqrt(a);";case qN.SQUARE:return"return a * a;";case qN.STEP:return"\n  if (isnan(a)) {\n    return a;\n  }\n\n  return select(uniforms.stepAlpha, 1.0, a > 0.0);\n";case qN.TAN:return"return tan(a);";case qN.TANH:return"\n  let e2x = exp(-2.0 * abs(a));\n  return sign(a) * (1.0 - e2x) / (1.0 + e2x);\n";case qN.TO_INT:return"return f32(i32((a)));";default:throw new Error(`BinaryType ${e} is not implemented!`)}}const ZN=e=>{switch(e){case 1:return"f32";case 2:return"vec2<f32>";case 3:return"vec3<f32>";case 4:return"vec4<f32>";default:throw new Error(e+"-component is not supported.")}};function JN(e,t=!1,n=!1,r=3){if(null===e)return"";let s="";if("linear"===e)s=QN(qN.LINEAR);else if("relu"===e)s=QN(qN.RELU,n);else if("elu"===e)s=QN(qN.ELU,n);else if("relu6"===e)s=QN(qN.RELU6,n);else if("prelu"===e)s=KN(BN.PRELU,n);else if("sigmoid"===e)s=QN(qN.SIGMOID,n);else{if("leakyrelu"!==e)throw new Error(`Activation ${e} has not been implemented for the WebGPU backend.`);s=QN(qN.LEAKYRELU,n)}const a=ZN(n?4:1);let o="";return o=t?`\n      fn activation(a : ${a}, coords : vec${r}<i32>) -> ${a} {\n        let b = getPreluActivationWeightsByOutputCoords(coords);\n        ${s}\n      }`:`\n      fn activation(a : ${a}, coords : vec${r}<i32>) -> ${a} {\n        ${s}\n      }`,o}function eE(e,t){return`\n      ${e?"value = value + getBiasByOutputCoords(coords);":""}\n      ${t?"value = activation(value, coords);":""}\n      `}function tE(e,t,n=!1,r=!1,s=!1,a=1){D(e&&1===a||!e,(()=>`transposeA ${e} is not compatible with component size ${a}`));const o=`\n      ${e?"value = getA(batch, col, row);":"value = getA(batch, row, col);"}\n\n    `,i=t?"value = getB(batch, col, row);":"value = getB(batch, row, col);";return`\n  fn mm_readA(batch: i32, row: i32, colIn: i32) -> ${ZN(a)} {\n    var value = ${ZN(a)}(0.0);\n    let col = colIn * ${a};\n    ${n&&s?o:`\n    ${e?"if(row < uniforms.dimAOuter && col < uniforms.dimInner)":"if(row < uniforms.aShape[1] && col < uniforms.aShape[2])"}\n    {\n      ${o}\n    }\n    `}\n    return value;\n  }\n\n  fn mm_readB(batch: i32, row: i32, colIn: i32) -> ${ZN(a)} {\n    let col = colIn * ${a};\n    var value = ${ZN(a)}(0.0);\n    ${i}\n    return value;\n  }\n  `}function nE(e,t,n,r,s=!1,a=!1,o=!1,i=1){return`\n  ${tE(n,r,s,a,o,i)}\n  fn mm_write(batch: i32, row: i32, colIn: i32, valueIn: ${ZN(i)}) {\n    let col = colIn * ${i};\n    ${s&&a?"":"if (row < uniforms.dimAOuter && col < uniforms.dimBOuter)"}\n    {\n      var value = valueIn;\n      let coords = vec3<i32>(batch, row, col);\n      ${eE(e,t)}\n      setOutputAtCoords(coords[0], coords[1], coords[2], value);\n    }\n  }\n  `}function rE(e,t,n=!1,r=32,s=!1,a=32,o=!1,i=!1){const u=t[1]*e[1],l=t[0]*e[0],c=n?u:r,h=n?r:u,d=c/t[0],p=r/t[1],f=e[1];return D((n&&4===d&&4===e[1]||!n&&(3===d||4===d))&&c%t[0]==0&&r%t[1]==0&&4===e[0],(()=>`If transposeA ${n} is true, innerElementSize ${d} and workPerThread[1] ${e[1]} must be 4.\n          Otherwise, innerElementSize ${d} must be 3 or 4.\n      tileAWidth ${c} must be divisible by workgroupSize[0]${t[0]}. tileInner ${r} must be divisible by workgroupSize[1] ${t[1]}. colPerThread ${e[0]} must be 4.`)),`\n  var<workgroup> mm_Asub : array<array<vec${d}<f32>, ${c/d}>, ${h}>;\n  var<workgroup> mm_Bsub : array<array<vec4<f32>, ${l/e[0]}>, ${r}>;\n\n  ${wN()} {\n    let localRow = i32(localId.y);\n    let tileRow = ${o?"0":"localRow * "+f};\n    let tileCol = i32(localId.x);\n\n    let globalRow = ${o?"0":"i32(globalId.y) * "+f};\n    let globalCol = i32(globalId.x);\n    let batch = ${s?"0":"i32(globalId.z)"};\n    let batchA = ${s||!i?"batch":"batch % uniforms.aShape[0]"};\n    let batchB = ${s||!i?"batch":"batch % uniforms.bShape[0]"};\n    let globalRowStart = i32(workgroupId.y) * ${u};\n\n    let numTiles = ${s?""+Math.ceil(a/r):`(uniforms.dimInner - 1) / ${r} + 1`};\n    var kStart = ${s?"i32(globalId.z) * "+a:"0"};\n\n    var acc: array<vec4<f32>, ${f}>;\n\n    // Loop over shared dimension.\n    let tileRowB = localRow * ${p};\n    for (var t = 0; t < numTiles; t++) {\n        // Load one tile of A into local memory.\n        for (var innerRow = 0; innerRow < ${f}; innerRow++) {\n            let inputRow = tileRow + innerRow;\n            let inputCol = tileCol;\n            ${((e,t)=>e?`\n        mm_Asub[inputRow][inputCol] = mm_readA(batchA,\n          kStart + inputRow,\n          globalRowStart / ${t} + inputCol);\n        `:`\n        mm_Asub[inputRow][inputCol] = mm_readA(batchA,\n          globalRow + innerRow,\n          kStart / ${t} + inputCol);\n        `)(n,d)}\n        }\n\n        // Load one tile of B into local memory.\n        for (var innerRow = 0; innerRow < ${p}; innerRow++) {\n            let inputRow = tileRowB + innerRow;\n            let inputCol = tileCol;\n            mm_Bsub[inputRow][inputCol] = mm_readB(batchB, kStart + inputRow, globalCol);\n        }\n        kStart = kStart + ${r};\n        workgroupBarrier();\n\n        // Compute acc values for a single thread.\n        for (var k = 0; k < ${r/d}; k++) {\n            let BCached0 = mm_Bsub[k * ${d}][tileCol];\n            let BCached1 = mm_Bsub[k * ${d} + 1][tileCol];\n            let BCached2 = mm_Bsub[k * ${d} + 2][tileCol];\n            ${3===d?"":`let BCached3 = mm_Bsub[k * ${d} + 3][tileCol];`}\n\n            ${((e,t,n)=>e?`\n        let ACached0 = mm_Asub[k * ${t}][localRow];\n        let ACached1 = mm_Asub[k * ${t} + 1][localRow];\n        let ACached2 = mm_Asub[k * ${t} + 2][localRow];\n        ${3===t?"":`let ACached3 = mm_Asub[k * ${t} + 3][localRow];`}\n        for (var i = 0; i < ${n}; i++) {\n          acc[i] = BCached0 * ACached0[i] + acc[i];\n          acc[i] = BCached1 * ACached1[i] + acc[i];\n          acc[i] = BCached2 * ACached2[i] + acc[i];\n          ${3===t?"":"acc[i] = BCached3 * ACached3[i] + acc[i];"}\n        }`:`\n        for (var i = 0; i < ${n}; i++) {\n          let ACached = mm_Asub[tileRow + i][k];\n          acc[i] = BCached0 * ACached.x + acc[i];\n          acc[i] = BCached1 * ACached.y + acc[i];\n          acc[i] = BCached2 * ACached.z + acc[i];\n          ${3===t?"":"acc[i] = BCached3 * ACached.w + acc[i];"}\n        }`)(n,d,f)}\n        }\n\n        workgroupBarrier();\n    }\n\n    for (var innerRow = 0; innerRow < ${f}; innerRow++) {\n        mm_write(batch, globalRow + innerRow, globalCol, acc[innerRow]);\n    }\n  }`}const sE=e=>e?"\n        mm_Asub[inputRow][inputCol] = mm_readA(batchA,\n          kStart + inputRow,\n          globalRowStart + inputCol);\n        ":"\n        mm_Asub[inputRow][inputCol] = mm_readA(batchA,\n          globalRowStart + inputRow,\n          kStart + inputCol);\n        ";function aE(e,t,n=!1,r=32,s=!1,a=32,o=!1,i=!1){const u=e[1]*t[1],l=e[0]*t[0],c=n?u:r,h=n?r:u;D(h%t[1]==0&&c%t[0]==0&&r%t[1]==0,(()=>`tileAHight ${h} must be divisible by workgroupSize[1]${t[1]}, tileAWidth ${c} must be divisible by workgroupSize[0]${t[0]}, tileInner ${r} must be divisible by workgroupSize[1]${t[1]}`));const d=h/t[1],p=c/t[0],f=r/t[1],m=e[1],g=e[0],y=o?`\n      let localRow = i32(localId.y);\n      let localCol = i32(localId.x);\n      let globalRowStart = i32(workgroupId.y) * ${u};\n      let globalColStart = i32(workgroupId.x) * ${l};\n\n      // Loop over shared dimension.\n      for (var t = 0; t < numTiles; t++) {\n        // Load one tile of A into local memory.\n        for (var inputRow = localRow; inputRow < ${h}; inputRow = inputRow + ${t[1]}) {\n          for (var inputCol = localCol; inputCol < ${c}; inputCol = inputCol + ${t[0]}) {\n            ${sE(n)}\n          }\n        }\n        // Load one tile of B into local memory.\n        for (var inputRow = localRow; inputRow < ${r}; inputRow = inputRow + ${t[1]}) {\n              for (var inputCol = localCol; inputCol < ${l}; inputCol = inputCol + ${t[0]}) {\n            mm_Bsub[inputRow][inputCol] = mm_readB(batchB,\n              kStart + inputRow,\n              globalColStart + inputCol);\n          }\n        }\n        kStart = kStart + ${r};\n        workgroupBarrier();\n\n        // Compute acc values for a single thread.\n        var BCached : array<f32, ${g}>;\n        for (var k = 0; k < ${r}; k++) {\n          for (var inner = 0; inner < ${g}; inner++) {\n            BCached[inner] = mm_Bsub[k][localCol + inner * ${t[0]}];\n          }\n          for (var innerRow = 0; innerRow < ${m}; innerRow++) {\n            let ACached = ${n?`mm_Asub[k][localRow + innerRow * ${t[1]}];`:`mm_Asub[localRow + innerRow * ${t[1]}][k];`}\n            for (var innerCol = 0; innerCol < ${g}; innerCol++) {\n              acc[innerRow][innerCol] = acc[innerRow][innerCol] +\n                  ACached * BCached[innerCol];\n            }\n          }\n        }\n        workgroupBarrier();\n      }\n      for (var innerRow = 0; innerRow < ${m}; innerRow++) {\n        let gRow = globalRowStart + localRow + innerRow * ${t[1]};\n        for (var innerCol = 0; innerCol < ${g}; innerCol++) {\n          let gCol = globalColStart + localCol + innerCol * ${t[0]};\n          mm_write(batch, gRow, gCol, acc[innerRow][innerCol]);\n        }\n      }\n      `:`\n  let tileRow = i32(localId.y) * ${m};\n  let tileCol = i32(localId.x) * ${g};\n\n  let globalRow = i32(globalId.y) * ${m};\n  let globalCol = i32(globalId.x) * ${g};\n  let globalRowStart = i32(workgroupId.y) * ${u};\n\n  let tileRowA = i32(localId.y) * ${d};\n  let tileColA = i32(localId.x) * ${p};\n  let tileRowB = i32(localId.y) * ${f};\n  // Loop over shared dimension.\n  for (var t = 0; t < numTiles; t++) {\n    // Load one tile of A into local memory.\n    for (var innerRow = 0; innerRow < ${d}; innerRow++) {\n      for (var innerCol = 0; innerCol < ${p}; innerCol++) {\n        let inputRow = tileRowA + innerRow;\n        let inputCol = tileColA + innerCol;\n        ${sE(n)}\n      }\n    }\n\n    // Load one tile of B into local memory.\n    for (var innerRow = 0; innerRow < ${f}; innerRow++) {\n      for (var innerCol = 0; innerCol < ${g}; innerCol++) {\n        let inputRow = tileRowB + innerRow;\n        let inputCol = tileCol + innerCol;\n        mm_Bsub[inputRow][inputCol] = mm_readB(batchB,\n          kStart + inputRow,\n          globalCol + innerCol);\n      }\n    }\n    kStart = kStart + ${r};\n    workgroupBarrier();\n\n    // Compute acc values for a single thread.\n    var BCached : array<f32, ${g}>;\n    for (var k = 0; k < ${r}; k++) {\n      for (var inner = 0; inner < ${g}; inner++) {\n        BCached[inner] = mm_Bsub[k][tileCol + inner];\n      }\n\n      for (var innerRow = 0; innerRow < ${m}; innerRow++) {\n        ${(e=>e?"let ACached = mm_Asub[k][tileRow + innerRow];":"let ACached = mm_Asub[tileRow + innerRow][k];")(n)}\n        for (var innerCol = 0; innerCol < ${g}; innerCol++) {\n          acc[innerRow][innerCol] = acc[innerRow][innerCol] + ACached * BCached[innerCol];\n        }\n      }\n    }\n\n    workgroupBarrier();\n  }\n\n  for (var innerRow = 0; innerRow < ${m}; innerRow++) {\n    for (var innerCol = 0; innerCol < ${g}; innerCol++) {\n      mm_write(batch, globalRow + innerRow, globalCol + innerCol,\n          acc[innerRow][innerCol]);\n    }\n  }\n  `;return`\n    var<workgroup> mm_Asub : array<array<f32, ${c}>, ${h}>;\n    var<workgroup> mm_Bsub : array<array<f32, ${l}>, ${r}>;\n\n    ${wN()} {\n      let batch = ${s?"0":"i32(globalId.z)"};\n      let batchA = ${s||!i?"batch":"batch % uniforms.aShape[0]"};\n      let batchB = ${s||!i?"batch":"batch % uniforms.bShape[0]"};\n      let numTiles = ${s?""+Math.ceil(a/r):`(uniforms.dimInner - 1) / ${r} + 1`};\n      var kStart = ${s?"i32(globalId.z) * "+a:"0"};\n\n      var acc : array<array<f32, ${g}>, ${m}>;\n\n      // Without this initialization strange values show up in acc.\n      for (var innerRow = 0; innerRow < ${m}; innerRow++) {\n        for (var innerCol = 0; innerCol < ${g}; innerCol++) {\n          acc[innerRow][innerCol] = 0.0;\n        }\n      }\n      ${y}\n    }\n  `}class oE{constructor(e,t,n=!1,r=!1,s=null,a=null,o=null,i=!1){this.variableNames=["A","B"],this.uniforms="dimAOuter : i32, dimBOuter : i32, dimInner : i32,",this.outputShape=t,this.dispatchLayout={x:[2],y:[1],z:[0]};const u=n?e[1]:e[2];if(this.isVec4=(u%4==0&&!n||t[1]%4==0&&n)&&t[2]%4==0&&!r,this.isVectorA=1===t[1]&&!n,!this.isVec4&&this.isVectorA)this.elementsPerThread=[1,1,1],this.workgroupSize=[32,1,1];else{const e=function(e,t,n,r=!1){const s=[8,8,1],a=[4,4,1];return r||(e<=8&&(a[1]=1),t<=16&&n<=16&&(s[0]=4)),{workgroupSize:s,elementsPerThread:a}}(t[1],u,t[2],n);this.workgroupSize=e.workgroupSize,this.elementsPerThread=e.elementsPerThread}this.dispatch=RN(this.dispatchLayout,this.outputShape,this.workgroupSize,this.elementsPerThread);const l=null!=s,c=null!=o;l&&this.variableNames.push("bias"),c&&this.variableNames.push("preluActivationWeights"),this.sequentialAccessByThreads=i,this.transposeA=n,this.transposeB=r,this.addBias=l,this.activation=a,this.hasPreluActivationWeights=c,[this.fitAOuter,this.fitBOuter,this.fitInner]=this.getShapeFit(t[1],t[2],u),this.shaderKey=`matMulPacked_${this.elementsPerThread}_${n}_${r}_${this.activation}_${this.fitAOuter}_${this.fitBOuter}_${this.fitInner}_${this.isVec4}_${this.isVectorA}_${this.sequentialAccessByThreads}`}getShapeFit(e,t,n){const r=this.workgroupSize[1]*this.elementsPerThread[1],s=this.workgroupSize[0]*this.elementsPerThread[0];return!this.isVec4&&this.isVectorA?this.tileInner=4*this.workgroupSize[0]:this.tileInner=s,[e%r==0,t%s==0,n%this.tileInner==0]}getUserCode(){return`\n      ${JN(this.activation,this.hasPreluActivationWeights,this.isVec4)}\n      ${nE(this.addBias,this.activation,!1,this.transposeB,this.fitAOuter,this.fitBOuter,this.fitInner,this.isVec4?4:1)}\n      ${this.isVec4?rE(this.elementsPerThread,this.workgroupSize,this.transposeA,this.tileInner,!1,null,this.isVectorA,!0):this.isVectorA?function(e,t=!1){D(1===e[1]&&1===e[2],(()=>`A linear work group size is required. But got ${e}.`));const n=4*e[0];return`\n    var<workgroup> mm_Asub : array<vec4<f32>, ${e[0]}>;\n\n    ${wN()} {\n      let tileCol = i32(localId.x);\n      let globalCol = i32(globalId.x);\n      let globalRow = i32(globalId.y);\n\n      let numTiles = (uniforms.dimInner - 1) / ${n} + 1;\n      let batch = i32(globalId.z);\n      let batchA = batch % uniforms.aShape[0];\n      let batchB = batch % uniforms.bShape[0];\n      // Without this initialization strange values show up in acc.\n      var acc = 0.0;\n\n      // Loop over shared dimension.\n      for (var t = 0; t < numTiles; t++) {\n        // Load one tile of A into local memory.\n        let colA = t * ${n} + tileCol * 4;\n        mm_Asub[tileCol] = vec4<f32>(${(e=>e?"\n      mm_readA(batchA, colA, globalRow),\n      mm_readA(batchA, colA + 1, globalRow),\n      mm_readA(batchA, colA + 2, globalRow),\n      mm_readA(batchA, colA + 3, globalRow)\n  ":"\n      mm_readA(batchA, globalRow, colA),\n      mm_readA(batchA, globalRow, colA + 1),\n      mm_readA(batchA, globalRow, colA + 2),\n      mm_readA(batchA, globalRow, colA + 3)\n  ")(t)});\n        workgroupBarrier();\n\n        // Compute acc values for a single thread.\n        for (var k = 0; k < ${n/4}; k++) {\n          let rowB = t * ${n} + k * 4;\n          let BCached = vec4<f32>(mm_readB(batchB, rowB, globalCol),\n                              mm_readB(batchB, rowB + 1, globalCol),\n                              mm_readB(batchB, rowB + 2, globalCol),\n                              mm_readB(batchB, rowB + 3, globalCol));\n\n          let ACached = mm_Asub[k];\n          acc = acc + dot(ACached, BCached);\n        }\n\n        workgroupBarrier();\n      }\n\n      mm_write(batch, globalRow, globalCol, acc);\n    }\n  `}(this.workgroupSize,this.transposeA):aE(this.elementsPerThread,this.workgroupSize,this.transposeA,this.tileInner,!1,null,this.sequentialAccessByThreads,!0)}\n    `}}class iE{constructor(e,t=!1,n=!1,r=null,s=null,a=null){this.variableNames=["A","B"],this.uniforms="dimAOuter : i32, dimBOuter : i32, dimInner : i32,",this.workgroupSize=[256,1,1],this.outputShape=e,this.dispatchLayout={x:[],y:[1,2],z:[0]},this.dispatch=RN(this.dispatchLayout,this.outputShape,this.workgroupSize);const o=null!=r,i=null!=a;o&&this.variableNames.push("bias"),i&&this.variableNames.push("preluActivationWeights"),this.transposeA=t,this.transposeB=n,this.addBias=o,this.activation=s,this.hasPreluActivationWeights=i,this.shaderKey=`matMulReduce_${this.activation}_${t}_${n}`}getUserCode(){var e;return`\n      ${JN(this.activation,this.hasPreluActivationWeights)}\n      ${nE(this.addBias,this.activation,this.transposeA,this.transposeB)}\n      ${e=this.workgroupSize[0],`\n    var<workgroup> sumValues : array<f32, ${e}>;\n    ${wN()} {\n      let coords = getOutputCoords();\n      let batch = coords[0];\n      let batchA = batch % uniforms.aShape[0];\n      let batchB = batch % uniforms.bShape[0];\n      let row = coords[1];\n      let col = coords[2];\n      var sum = 0.0;\n      let Length = uniforms.dimInner;\n      for (var k = i32(localId.x); k < Length; k = k + ${e}) {\n        let dataA = mm_readA(batchA, row, k);\n        let dataB = mm_readB(batchB, k, col);\n        sum = sum + dataA * dataB;\n      }\n      sumValues[localId.x] = sum;\n      workgroupBarrier();\n\n      for(var currentSize = ${e/2}u; currentSize > 1u;\n          currentSize = currentSize / 2u) {\n        if (localId.x < currentSize)\n        {\n          sumValues[localId.x] = sumValues[localId.x] + sumValues[localId.x + currentSize];\n        }\n        workgroupBarrier();\n      }\n\n      if (localId.x == 0u) {\n        sum = sumValues[0] + sumValues[1];\n        mm_write(batch, row, col, sum);\n      }\n    }\n  `}\n    `}}class uE{constructor(e,t,n,r=!1,s=!1,a=null,o=null,i=null){this.variableNames=["A","B"],this.uniforms="dimAOuter : i32, dimBOuter : i32, dimInner : i32,",this.workgroupSize=[16,8,1],this.outputShape=n,this.dispatchLayout={x:[2],y:[1],z:[0]},this.dispatch=[Math.ceil(n[2]/this.workgroupSize[0]),Math.ceil(n[1]/this.workgroupSize[1]),n[0]];const u=null!=a;u&&this.variableNames.push("bias");const l=null!=i;l&&this.variableNames.push("preluActivationWeights"),this.transposeA=r,this.transposeB=s,this.addBias=u,this.activation=o,this.hasPreluActivationWeights=l,this.shaderKey=`matMulSmallOutputSize_${this.activation}_${r}_${s}`}getUserCode(){return`\n      ${JN(this.activation,this.hasPreluActivationWeights)}\n      ${nE(this.addBias,this.activation,this.transposeA,this.transposeB)}\n      ${function(e){const t=e[1],n=e[0],r=t>n?t:n;return`\n  var<workgroup> mm_Asub : array<array<f32, ${r}>, ${t}>;\n  var<workgroup> mm_Bsub : array<array<f32, ${n}>, ${r}>;\n\n  // If the output size is small for matrix multiplication, avoid to use vec4\n  // and handle some elements per thread to optimally utilize the ALU.\n  // Read data from global memory to registers firstly, then store them into\n  // shared memory, so it is instruction-Level parallelism for arithmetic\n  // operations and others handle IO operations between barrier api, makes ALU\n  // and load/store units work simultaneously, could improves the performance.\n  ${wN()} {\n    let tileRow = i32(localId.y);\n    let tileCol = i32(localId.x);\n    let globalRow = i32(globalId.y);\n    let globalCol = i32(globalId.x);\n    let batch = i32(globalId.z);\n    let batchA = batch % uniforms.aShape[0];\n    let batchB = batch % uniforms.bShape[0];\n\n    // uniforms.dimInner should be greater than 0.\n    let numTiles = (uniforms.dimInner - 1) / ${r} + 1;\n    var acc = 0.0;\n\n    var globalColA = tileCol;\n    var globalRowB = 0;\n    var regA = mm_readA(batchA, globalRow, globalColA);\n    var regB0 = mm_readB(batchB, globalRowB + 2 * tileRow, globalCol);\n    var regB1 = mm_readB(batchB, globalRowB + 2 * tileRow + 1, globalCol);\n    globalColA = globalColA + ${r};\n    globalRowB = globalRowB + ${r};\n\n    for (var t = 0; t < numTiles; t = t + 1) {\n      mm_Asub[tileRow][tileCol] = regA;\n      mm_Bsub[2 * tileRow][tileCol] = regB0;\n      mm_Bsub[2 * tileRow + 1][tileCol] = regB1;\n\n      workgroupBarrier();\n\n      regA = mm_readA(batchA, globalRow, globalColA);\n      regB0 = mm_readB(batchB, globalRowB + 2 * tileRow, globalCol);\n      regB1 = mm_readB(batchB, globalRowB + 2 * tileRow + 1, globalCol);\n      globalColA = globalColA + ${r};\n      globalRowB = globalRowB + ${r};\n\n      for (var k = 0; k < ${r}; k = k + 1) {\n        acc = acc + mm_Asub[tileRow][k] * mm_Bsub[k][tileCol];\n      }\n      workgroupBarrier();\n    }\n\n    mm_write(batch, globalRow, globalCol, acc);\n  }\n  `}(this.workgroupSize)}\n    `}}class lE{constructor(e,t,n=!1,r=!1){this.variableNames=["A","B"],this.uniforms="dimAOuter : i32, dimBOuter : i32, dimInner : i32,",this.workgroupSize=[8,8,1],this.atomic=!0,this.isVec4=!1,this.splitedDimInner=128,D(1===e[0],(()=>"MatMulSplitKProgram only supports batch = 1.")),this.outputShape=e,this.dispatchLayout={x:[2],y:[1],z:[0,3]},this.isVec4=(n&&this.outputShape[1]%4==0||!n&&t%4==0)&&this.outputShape[2]%4==0,this.elementsPerThread=[4,4,this.splitedDimInner],this.isVec4||(this.outputShape[1]<16&&(this.elementsPerThread[1]=1),this.outputShape[2]<16&&(this.elementsPerThread[0]=1)),this.dispatch=RN(this.dispatchLayout,[this.outputShape[0],this.outputShape[1],this.outputShape[2],t],this.workgroupSize,this.elementsPerThread),this.transposeA=n,this.transposeB=r,this.shaderKey=`matMulSplitK_${n}_${r}_${this.elementsPerThread}_${this.isVec4}`}getUserCode(){const e=this.isVec4?4:1;return`\n      ${tE(!1,this.transposeB,!1,!1,!1,e)}\n      fn mm_write(batch: i32, row : i32, colIn : i32, value : ${ZN(e)}) {\n        let col = colIn * ${e};\n        if (row < uniforms.dimAOuter && col < uniforms.dimBOuter) {\n          let coords = vec3<i32>(batch, row, col);\n          let flatIndex = getOutputIndexFromCoords(coords);\n          // The problem is that we should initialize output to zero before using.\n          // Otherwise, the original value will be added to the result.\n          for (var i = 0; i < ${e}; i = i + 1) {\n            ${xN("&result[flatIndex + i]",e>1?"value[i]":"value","float32")}\n          }\n        }\n      }\n      ${this.isVec4?rE(this.elementsPerThread,this.workgroupSize,this.transposeA,32,!0,this.splitedDimInner):aE(this.elementsPerThread,this.workgroupSize,this.transposeA,32,!0,this.splitedDimInner)}\n    `}}class cE{constructor(e,t=null,n=null,r=null){this.uniforms="",this.variableNames=["x"],this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=e,this.dispatchLayout=ON(this.outputShape),this.dispatch=RN(this.dispatchLayout,this.outputShape,this.workgroupSize),this.addBias=null!=t,this.hasPreluActivationWeights=null!=r,this.activation=n,this.addBias&&this.variableNames.push("bias"),this.hasPreluActivationWeights&&this.variableNames.push("preluActivationWeights"),this.shaderKey="biasActivation_"+n}getUserCode(){return`\n    ${JN(this.activation,this.hasPreluActivationWeights)}\n    ${wN("index")} {\n      if (index < uniforms.size) {\n        let coords = getCoordsFromIndex(index);\n        var value = getXByOutputIndex(index);\n        ${eE(this.addBias,this.activation)}\n        setOutputAtIndex(index, value);\n      }\n    }\n    `}}class hE{constructor(e){this.variableNames=[],this.outputShape=[],this.uniforms="value : f32,",this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=e,this.dispatchLayout=ON(this.outputShape),this.dispatch=RN(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey="fill"}getUserCode(){return`\n    ${wN("index")} {\n      if (index < uniforms.size) {\n        setOutputAtIndex(index, uniforms.value);\n      }\n    }\n  `}}function dE(e){const{backend:t,attrs:n}=e,{shape:r,value:s}=n;let{dtype:a}=n;if(a=a||J(s),"string"===a){const e=X(a,B(r));return e.fill(s),t.makeTensorInfo(r,a,e)}{const e=new hE(r),n=[{type:"float32",data:[s]}];return t.runWebGPUProgram(e,[],a,n)}}const pE={kernelName:vt,backendName:"webgpu",kernelFunc:dE};function fE(e){const{inputs:t,attrs:n}=e,{x:r}=t,{shape:s}=n,a=B(r.shape),o=H(s,a),i=B(o);return D(a===i,(()=>`The new shape (${o}) has ${i} elements and the old shape (${r.shape}) has ${a} elements. The new shape and old shape must have the same number of elements.`)),e.backend.incRef(r.dataId),{dataId:r.dataId,shape:o,dtype:r.dtype}}const mE={kernelName:Sn,backendName:"webgpu",kernelFunc:fE};function gE({a:e,b:t,transposeA:n,transposeB:r,backend:s,bias:a=null,preluActivationWeights:o=null,leakyreluAlpha:i=0,activation:u=null}){const l=e.shape.length,c=t.shape.length,h=n?e.shape[l-2]:e.shape[l-1],d=r?t.shape[c-1]:t.shape[c-2],p=n?e.shape[l-1]:e.shape[l-2],f=r?t.shape[c-2]:t.shape[c-1],m=e.shape.slice(0,-2),g=t.shape.slice(0,-2),y=B(m),x=B(g),b=Io(e.shape.slice(0,-2),t.shape.slice(0,-2)).concat([p,f]);D(h===d,(()=>`Error in matMul: inner shapes (${h}) and (${d}) of Tensors with shapes ${e.shape} and ${t.shape} and transposeA=${n} and transposeB=${r} must match.`));const v=n?[y,h,p]:[y,p,h],w=r?[x,f,d]:[x,d,f],k=fE({inputs:{x:e},backend:s,attrs:{shape:v}}),S=fE({inputs:{x:t},backend:s,attrs:{shape:w}}),C=[k,S],I=Math.max(y,x),T=[k,S],$=[{type:"int32",data:[p]},{type:"int32",data:[f]},{type:"int32",data:[h]}];let N,E;const R=[I,p,f];let _=fe().get("WEBGPU_MATMUL_PROGRAM_TYPE");if(_<0){const e=fe().getNumber("WEBGPU_THRESHOLD_TO_INCREASE_WORKGROUPS_FOR_MATMUL"),t=e>0?e:s.thresholdToIncreaseWorkgroups,n=I*Math.ceil(p/32)*Math.ceil(f/32);_=n<=t||p<=8&&n<=2*t?I*p*f<=128?DN.MatMulReduceProgram:1===I&&d>=2e3?DN.MatMulSplitKProgram:DN.MatMulSmallOutputSizeProgram:DN.MatMulPackedProgram}switch(_){case DN.MatMulReduceProgram:N=new iE(R,n,r,a,u,o);break;case DN.MatMulSplitKProgram:if(E=dE({backend:s,attrs:{shape:R,value:0,dtype:e.dtype}}),N=new lE(R,d,n,r),a||u){E=s.runWebGPUProgram(N,T,e.dtype,$,E);const t=new cE(E.shape,a,u,o);let n=null;const r=[E];a&&r.push(a),o&&r.push(o),"leakyrelu"===u&&(n=[{type:"float32",data:[i]}],t.uniforms+=" alpha : f32,");const l=s.runWebGPUProgram(t,r,E.dtype,n);C.push(E);const c=fE({inputs:{x:l},backend:s,attrs:{shape:b}});C.push(l);for(const e of C)s.disposeData(e.dataId);return c}break;case DN.MatMulSmallOutputSizeProgram:N=new uE(v,w,R,n,r,a,u,o);break;case DN.MatMulPackedProgram:const t=s.adapterInfo.isIntel();N=new oE(v,R,n,r,a,u,o,t);break;default:throw new Error(`Unsupported MatMulProgramType ${_}.`)}a&&T.push(a),o&&T.push(o),"leakyrelu"===u&&($.push({type:"float32",data:[i]}),N.uniforms+=" alpha : f32,"),E=s.runWebGPUProgram(N,T,e.dtype,$,E);const A=fE({inputs:{x:E},backend:s,attrs:{shape:b}});C.push(E);for(const e of C)s.disposeData(e.dataId);return A}const yE={kernelName:xr,backendName:"webgpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{a:s,b:a,bias:o,preluActivationWeights:i}=t,{transposeA:u,transposeB:l,activation:c,leakyreluAlpha:h}=r;return gE({a:s,b:a,transposeA:u,transposeB:l,backend:n,bias:o,preluActivationWeights:i,leakyreluAlpha:h,activation:c})}};class xE{constructor(e,t,n){this.variableNames=["AReal","AImag","BReal","BImag"],this.workgroupSize=[128,1,1],this.size=!0,this.outputShape=Io(t,n),this.dispatchLayout=ON(this.outputShape),this.dispatch=RN(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey="binaryOpComplex_"+e,this.op=e}getUserCode(){return`\n      fn binaryOpComplex(\n          areal : f32, aimag : f32, breal : f32, bimag : f32) -> f32 {\n        ${KN(this.op,!1)}\n      }\n\n      ${wN("index")} {\n        if(index < uniforms.size) {\n          let areal = getARealByOutputIndex(index);\n          let aimag = getAImagByOutputIndex(index);\n          let breal = getBRealByOutputIndex(index);\n          let bimag = getBImagByOutputIndex(index);\n          setOutputAtIndex(index, binaryOpComplex(areal, aimag, breal, bimag));\n        }\n      }\n    `}}class bE{constructor(e,t,n){this.size=!0,this.variableNames=["A","B"],this.outputShape=Io(t,n),this.dispatchLayout=ON(this.outputShape),this.op=e,this.useSharedMemoryWithA=t.length<=1&&n.length>1&&t[0]<128,this.useSharedMemoryWithB=n.length<=1&&t.length>1&&n[0]<128,this.useSharedMemoryWithA||this.useSharedMemoryWithB?(this.isVec4=!1,this.lastDimensionSize=this.useSharedMemoryWithB?n[0]:t[0],this.shaderKey=`binary_${this.type}_${e}_${this.lastDimensionSize}_${this.useSharedMemoryWithB}`,this.type="shared",this.workgroupSize=[256,1,1],this.workPerThread=1):(z(t,n)&&B(t)%4==0?(this.isVec4=!0,this.type="vec4",this.workPerThread=4):(this.isVec4=!1,this.type="plain",this.workPerThread=1),this.shaderKey=`binary_${this.type}_${e}`,this.workgroupSize=[128,1,1]),this.dispatch=RN(this.dispatchLayout,this.outputShape,this.workgroupSize,[this.workPerThread,1,1])}getUserCode(){let e;const t=this.isVec4?"vec4<f32>":"f32",n=`\n    fn binaryOperation(a : ${t}, b : ${t}) -> ${t} {\n      let isNaN = false;\n      {\n        ${KN(this.op,this.isVec4)}\n      }\n    };\n    `;if("shared"===this.type){const t=this.lastDimensionSize>1?`coords[${this.outputShape.length-1}]`:"0",r=this.useSharedMemoryWithB?`let a = getAByOutputIndex(index);\n          let b = sharedBuf[${t}];`:`let a = sharedBuf[${t}];\n          let b = getBByOutputIndex(index);`;e=`\n        ${n}\n        var<workgroup> sharedBuf : array<f32, ${this.lastDimensionSize}>;\n        ${wN("index")} {\n          // Fill in the shared memory buffer.\n          let localIndex = i32(localId.x);\n          if(localIndex < ${this.lastDimensionSize}) {\n            sharedBuf[localIndex] = f32(${this.useSharedMemoryWithB?"B":"A"}[localIndex]);\n          }\n          workgroupBarrier();\n\n          if(index < uniforms.size) {\n            let coords = getCoordsFromIndex(index);\n            ${r}\n            setOutputAtIndex(index, binaryOperation(a, b));\n          }\n        }\n        `}else e=`\n       ${n}\n       ${wN("index")} {\n         if (index < uniforms.size) {\n           let a = getAByOutputIndex(index);\n           let b = getBByOutputIndex(index);\n           setOutputAtIndex(index, binaryOperation(a, b));\n         }\n       }\n       `;return e}}function vE(e){const{inputs:t}=e,{x:n}=t;return e.backend.incRef(n.dataId),{dataId:n.dataId,shape:n.shape,dtype:n.dtype}}const wE={kernelName:Et,backendName:"webgpu",kernelFunc:vE};function kE(e){const{inputs:t,backend:n}=e,{real:r,imag:s}=t,a=n.makeTensorInfo(r.shape,"complex64"),o=n.tensorMap.get(a.dataId),i=vE({inputs:{x:r},backend:n}),u=vE({inputs:{x:s},backend:n});return o.complexTensorInfos={real:i,imag:u},a}const SE={kernelName:Ge,backendName:"webgpu",kernelFunc:kE};class CE{constructor(e,t,n=""){this.variableNames=["A"],this.size=!0,this.workgroupSize=[128,1,1],this.outputShape=e,this.dispatchLayout=ON(this.outputShape),this.dispatch=RN(this.dispatchLayout,this.outputShape,this.workgroupSize),this.op=t,""!==n&&(this.uniforms=n),this.shaderKey="unary_"+t}getUserCode(){return`\n      fn unaryOperation(a : f32) -> f32 {\n        ${QN(this.op,!1)}\n      }\n      ${wN("index")} {\n        if (index < uniforms.size) {\n          let a = getAByOutputIndex(index);\n          setOutputAtIndex(index, unaryOperation(a));\n        }\n      }\n      `}}function IE({opType:e,cpuKernelImpl:t,dtype:n}){return({inputs:r,backend:s})=>{const{x:a}=r,o=s,i=n||a.dtype;if(o.shouldExecuteOnCPU([a])&&null!=t){const e=o.tensorMap.get(a.dataId),n=t(e.values,i);return o.makeTensorInfo(a.shape,i,n)}const u=new CE(a.shape,e);return o.runWebGPUProgram(u,[a],i)}}function TE({opType:e,cpuKernelImpl:t,supportsComplex:n=!1,dtype:r}){return({inputs:s,backend:a})=>{const{a:o,b:i}=s,u=a;if(n&&"complex64"===o.dtype){const t=u.tensorMap.get(o.dataId),n=u.tensorMap.get(i.dataId);let r,s;if(e!==BN.MUL)[r,s]=[[t.complexTensorInfos.real,n.complexTensorInfos.real],[t.complexTensorInfos.imag,n.complexTensorInfos.imag]].map((t=>{const[n,r]=t,s={dataId:n.dataId,dtype:n.dtype,shape:o.shape},a={dataId:r.dataId,dtype:r.dtype,shape:i.shape},l=new bE(e,o.shape,i.shape);return u.runWebGPUProgram(l,[s,a],ws(n.dtype,r.dtype))}));else{const e=new xE(BN.COMPLEX_MULTIPLY_REAL,o.shape,i.shape),a=new xE(BN.COMPLEX_MULTIPLY_IMAG,o.shape,i.shape),l=[{dataId:t.complexTensorInfos.real.dataId,dtype:t.complexTensorInfos.real.dtype,shape:o.shape},{dataId:t.complexTensorInfos.imag.dataId,dtype:t.complexTensorInfos.imag.dtype,shape:o.shape},{dataId:n.complexTensorInfos.real.dataId,dtype:n.complexTensorInfos.real.dtype,shape:i.shape},{dataId:n.complexTensorInfos.imag.dataId,dtype:n.complexTensorInfos.imag.dtype,shape:i.shape}];r=u.runWebGPUProgram(e,l,"float32"),s=u.runWebGPUProgram(a,l,"float32")}const a=kE({inputs:{real:r,imag:s},backend:u});return u.disposeData(r.dataId),u.disposeData(s.dataId),a}const l=r||ws(o.dtype,i.dtype);if(("string"===o.dtype||"string"===i.dtype||u.shouldExecuteOnCPU([o,i]))&&null!=t){const e=u.tensorMap.get(o.dataId).values,n=u.tensorMap.get(i.dataId).values,r="string"===o.dtype?Mp(e):e,s="string"===o.dtype?Mp(n):n,[a,c]=t(o.shape,i.shape,r,s,l);return u.makeTensorInfo(c,l,a)}const c=new bE(e,o.shape,i.shape);return u.runWebGPUProgram(c,[o,i],l)}}function $E(e){return(t,n,r,s,a)=>{const o=Io(t,n),i=o.length,u=ne(o),l=q(a,B(o)),c=t.length,h=n.length,d=ne(t),p=ne(n),f=So(t,o),m=So(n,o);if(f.length+m.length===0)for(let t=0;t<l.length;++t)l[t]=e(r[t%r.length],s[t%s.length]);else for(let t=0;t<l.length;++t){const n=le(t,i,u),a=n.slice(-c);f.forEach((e=>a[e]=0));const o=ue(a,c,d),g=n.slice(-h);m.forEach((e=>g[e]=0));const y=ue(g,h,p);l[t]=e(r[o],s[y])}return[l,o]}}const NE=$E(((e,t)=>e+t));function EE(e){return(t,n,r)=>{const s=q(n,t.length);for(let n=0;n<t.length;++n)s[n]=e(t[n],r);return s}}const RE=EE((e=>Math.ceil(e))),_E=$E(((e,t)=>e===t?1:0)),AE=EE((e=>Math.exp(e))),OE=EE((e=>Math.expm1(e))),FE=EE((e=>Math.floor(e))),PE=$E(((e,t)=>e>t?1:0)),DE=$E(((e,t)=>e>=t?1:0)),ME=$E(((e,t)=>e<t?1:0)),LE=$E(((e,t)=>e<=t?1:0)),BE=EE((e=>Math.log(e))),zE=$E(((e,t)=>Math.max(e,t))),UE=$E(((e,t)=>Math.min(e,t))),VE=$E(((e,t)=>e*t)),WE=$E(((e,t)=>e!==t?1:0));function GE(e,t){const n=e.slice(0,t);for(;n.length<t;)n.push(1);for(let r=t;r<e.length;r++)n[t-1]*=e[r];return n}var HE=Pd;class jE{constructor(e,t,n,r,s,a,o,i,u,l){this.shape=e,this.shapeShape=t,this.values=n,this.valuesShape=r,this.valuesDType=s,this.defaultValue=a,this.defaultValueShape=o,this.rowPartitionValues=i,this.rowPartitionValuesShapes=u,this.rowPartitionTypes=Md(l),this.raggedRank=Ld(this.rowPartitionTypes)}getRowPartitionTypeByDimension(e){return this.rowPartitionTypes[0]===HE.FIRST_DIM_SIZE?this.rowPartitionTypes[e+1]:this.rowPartitionTypes[e]}getRowPartitionTensor(e){return this.rowPartitionTypes[0]===HE.FIRST_DIM_SIZE?this.rowPartitionValues[e+1]:this.rowPartitionValues[e]}getMaxWidth(e){const t=this.getRowPartitionTensor(e-1);switch(this.getRowPartitionTypeByDimension(e-1)){case HE.VALUE_ROWIDS:return jE.getMaxWidthValueRowID(t);case HE.ROW_SPLITS:return jE.getMaxWidthRowSplit(t);default:throw new Error("Cannot handle partition type "+HE[this.getRowPartitionTypeByDimension(e-1)])}}static getMaxWidthRowSplit(e){const t=e.length;if(0===t||1===t)return 0;let n=0;for(let r=0;r<t-1;++r){const t=e[r+1]-e[r];t>n&&(n=t)}return n}static getMaxWidthValueRowID(e){const t=e.length;if(0===t)return 0;let n=0,r=e[0],s=0;for(let a=1;a<t;++a){const t=e[a];t!==r&&(r=t,s=Math.max(a-n,s),n=a)}return Math.max(t-n,s)}tensorShapeFromTensor(e,t,n=!0){if(0===t.length){if(-1===e[0])return[];throw new Error("The only valid scalar shape tensor is the fully unknown shape specified as -1.")}return qE(e,n)}calculateOutputSize(e){const t=this.valuesShape;Bd(this.defaultValueShape,t);const n=this.tensorShapeFromTensor(this.shape,this.shapeShape),r=Dd(this.raggedRank,n,t);r[0]<0&&(r[0]=e);for(let e=1;e<=this.raggedRank;++e)r[e]<0&&(r[e]=this.getMaxWidth(e));return r}calculateFirstParentOutputIndex(e,t,n){const r=Math.min(e,n),s=[];let a=0;for(let e=0;e<r;++e,a+=t)s.push(a);for(let t=r;t<e;++t)s.push(-1);return D(s.length===e,(()=>"Final length of result must be equal to firstDimension.")),s}calculateOutputIndexRowSplit(e,t,n,r){const s=e.length,a=[];for(let o=0;o<s-1;++o){const s=e[o+1]-e[o];let i=Math.min(r,s),u=t[o];-1===u&&(i=0);for(let e=0;e<i;++e)a.push(u),u+=n;for(let e=0;e<s-i;++e)a.push(-1)}if(s>0&&a.length!==e[s-1])throw new Error("Invalid row split size.");return a}calculateOutputIndexValueRowID(e,t,n,r){const s=e.length,a=[];if(0===s)return[];let o=0,i=e[0];if(i>=t.length)throw new Error(`Got currentValueRowId=${i}, which is not less than ${t.length}`);let u=t[i];a.push(u);for(let l=1;l<s;++l){const s=e[l];if(s===i)u>=0&&(++o,o<r?u+=n:u=-1);else{if(o=0,i=s,s>=t.length)throw new Error(`Got nextValueRowId=${s} which is not less than ${t.length}`);u=t[s]}a.push(u)}if(a.length!==e.length)throw new Error("Invalid row ids.");return a}calculateOutputIndex(e,t,n,r){const s=this.getRowPartitionTensor(e),a=this.getRowPartitionTypeByDimension(e);switch(a){case HE.VALUE_ROWIDS:return this.calculateOutputIndexValueRowID(s,t,n,r);case HE.ROW_SPLITS:if(s.length-1>t.length)throw new Error(`Row partition size is greater than output size: ${s.length-1} > ${t.length}`);return this.calculateOutputIndexRowSplit(s,t,n,r);default:throw new Error("Unsupported partition type: "+HE[a])}}getFirstDimensionSize(){const e=this.rowPartitionValues[0];if(0===this.rowPartitionTypes.length)throw new Error("No row_partition_types given.");const t=this.rowPartitionTypes[0];switch(t){case HE.FIRST_DIM_SIZE:return e[0];case HE.VALUE_ROWIDS:throw new Error("Cannot handle VALUE_ROWIDS in first dimension.");case HE.ROW_SPLITS:return this.rowPartitionValuesShapes[0][0]-1;default:throw new Error("Cannot handle type "+HE[t])}}compute(){if(this.rowPartitionValues[0].length<=0)throw new Error("Invalid first partition input. Tensor requires at least one element.");const e=this.getFirstDimensionSize(),t=this.calculateOutputSize(e),n=new Array(this.raggedRank+1);n[n.length-1]=1;for(let e=n.length-2;e>=0;--e)n[e]=n[e+1]*t[e+1];const r=qE(t,!1),s=X(this.valuesDType,B(r));if(n[0]*t[0]>0){let a=this.calculateFirstParentOutputIndex(e,n[0],t[0]);for(let e=1;e<=this.raggedRank;++e)a=this.calculateOutputIndex(e-1,a,n[e],t[e]);this.setOutput(this.raggedRank,a,s,r)}return[r,s]}setOutput(e,t,n,r){if(0===n.length)return;const s=this.values,a=n;let o=r.slice();o=o.slice(e+1);const i=B(o),u=t.length;let l=this.defaultValue;if(l.length!==i&&1!==l.length){const e=this.defaultValueShape;Ya((()=>{const t=ji(l,e),n=lu(t,o);l=n.dataSync()}))}let c=0,h=0,d=0;for(let e=0;e<=u;++e){let r=e<u?t[e]:-1;if(r!==d){if(h<d){const e=s.subarray(c*i);KE(a.subarray(h*i),e,(d-h)*i)}if(e>=u){const e=n.length;r=Math.floor(e/i)}if(r>d)if(1===this.defaultValue.length)a.subarray(d*i,r*i).fill(this.defaultValue[0]),d=r;else for(;r>d;)KE(a.slice(d*i),l,i),++d;r<0?(c=e+1,h=d):(c=e,h=d,d=h+1)}else++d}}}function KE(e,t,n){for(let r=0;r<n;r++)e[r]=t[r]}function qE(e,t){const n=[];for(let r of e){if(r<0){if(!t)throw new Error(`Dimension ${r} must be >= 0`);if(r<-1)throw new Error(`Dimension ${r} must be >= -1`);r=-1}n.push(r)}return n}const XE=EE((e=>1/Math.sqrt(e))),YE=EE((e=>1/(1+Math.exp(-e)))),QE=EE((e=>Math.sqrt(e))),ZE=$E(((e,t)=>{const n=e-t;return n*n}));class JE{constructor(e,t,n,r,s,a){this.separator=qr(e),this.nGramWidths=t,this.leftPad=qr(n),this.rightPad=qr(r),this.padWidth=s,this.preserveShort=a}getPadWidth(e){return Math.min(this.padWidth<0?e-1:this.padWidth,e-1)}getNumNGrams(e,t){const n=this.getPadWidth(t);return Math.max(0,e+2*n-t+1)}createNGrams(e,t,n,r,s,a){for(let o=0;o<s;++o){const i=this.getPadWidth(a),u=Math.max(0,i-o),l=Math.max(0,i-(s-(o+1))),c=a-(u+l),h=t+(u>0?0:o-i);let d=0;d+=u*this.leftPad.length;for(let t=0;t<c;++t)d+=e[h+t].length;d+=l*this.rightPad.length,d+=(u+l+c-1)*this.separator.length,n[r+o]=new Uint8Array(d);const p=n[r+o];let f=0;const m=e=>e.forEach((e=>p[f++]=e));for(let e=0;e<u;++e)m(this.leftPad),m(this.separator);for(let t=0;t<c-1;++t)m(e[h+t]),m(this.separator);if(c>0){m(e[h+c-1]);for(let e=0;e<l;++e)m(this.separator),m(this.rightPad)}else{for(let e=0;e<l-1;++e)m(this.rightPad),m(this.separator);m(this.rightPad)}}}compute(e,t){const n=e.length,r=t.length;if(r>0){let e=t[0];if(0!==e)throw new Error("First split value must be 0, got "+e);for(let s=1;s<r;++s){let r=t[s]>=e;if(r=r&&t[s]<=n,!r)throw new Error(`Invalid split value ${t[s]}, must be in [${e}, ${n}]`);e=t[s]}if(e!==n)throw new Error(`Last split value must be data size. Expected ${n}, got ${e}`)}const s=r-1,a=X("int32",r);if(0===n||0===r){const e=new Array(n);for(let e=0;e<=s;++e)a[e]=0;return[e,a]}a[0]=0;for(let e=1;e<=s;++e){const n=t[e]-t[e-1];let r=0;this.nGramWidths.forEach((e=>{r+=this.getNumNGrams(n,e)})),this.preserveShort&&n>0&&0===r&&(r=1),a[e]=a[e-1]+r}const o=new Array(a[s]);for(let n=0;n<s;++n){const r=t[n];let s=a[n];if(this.nGramWidths.forEach((a=>{const i=t[n+1]-t[n],u=this.getNumNGrams(i,a);this.createNGrams(e,r,o,s,u,a),s+=u})),this.preserveShort&&s===a[n]){const a=t[n+1]-t[n];if(0===a)continue;const i=a+2*this.padWidth,u=1;this.createNGrams(e,r,o,s,u,i)}}return[o,a]}}function eR(e,t,n,r){if(!e.length)return;if(0===t.length){for(let t=0;t<e.length;++t)r.push(e.subarray(t,t+1));return}if(1===t.length){const s=t[0];let a=e.indexOf(s);for(;-1!==a;){const t=e.subarray(0,a);n&&0===t.length||r.push(t),a=(e=e.subarray(a+1)).indexOf(s)}return void(n&&0===e.length||r.push(e))}let s=0;for(let a=0;a<e.length+1;a++)if(a===e.length||-1!==t.indexOf(e[a])){const t=e.subarray(s,a);n&&0===t.length||r.push(t),s=a+1}}const tR=$E(((e,t)=>e-t)),nR=(e,t)=>{const n=t.value-e.value;return 0===n?e.index-t.index:n};function rR(e,t,n=0,r=e.length-1){for(;r>n;){if(r-n>600){const s=r-n+1,a=t-n+1,o=Math.log(s),i=.5*Math.exp(2*o/3),u=.5*Math.sqrt(o*i*(s-i)/s)*Math.sign(a-s/2);rR(e,t,Math.max(n,Math.floor(t-a*i/s+u)),Math.min(r,Math.floor(t+(s-a)*i/s+u)))}const s=e[t];let a=n,o=r;for(F(e,n,t),nR(e[r],s)>0&&F(e,n,r);a<o;){for(F(e,a,o),a++,o--;nR(e[a],s)<0;)a+=1;for(;nR(e[o],s)>0;)o-=1}0===nR(e[n],s)?F(e,n,o):(o+=1,F(e,o,r)),o<=t&&(n=o+1),t<=o&&(r=o-1)}}var sR=Object.freeze({__proto__:null,simpleAbsImpl:function(e){const t=new Float32Array(e.length);for(let n=0;n<e.length;++n)t[n]=Math.abs(e[n]);return t},addImpl:NE,bincountImpl:function(e,t,n,r,s){const a=B(r),o=oe(s,n);for(let n=0;n<e.length;n++){const r=e[n];if(r<0)throw new Error("Input x must be non-negative!");r>=s||(o[r]+=a>0?t[n]:1)}return o},bincountReduceImpl:function(e,t,n,r=!1){const s=e.shape[0],a=e.shape[1],o=Ha([s,n],t.dtype);for(let i=0;i<s;i++)for(let s=0;s<a;s++){const a=e.get(i,s);if(a<0)throw new Error("Input x must be non-negative!");a>=n||(r?o.set(1,i,a):t.size>0?o.set(o.get(i,a)+t.get(i,s),i,a):o.set(o.get(i,a)+1,i,a))}return o},castImpl:function(e,t,n,r){if("int32"===r)return[t,"int32",Int32Array.from(e)];if("bool"===r){const r=jr([0],n),[s,a]=$E(((e,t)=>e!==t?1:0))(t,[],e,r,"bool");return[a,"bool",s]}throw new Error(`Error in Cast: failed to cast ${n} to ${r}`)},ceilImpl:RE,concatImpl:function(e,t,n,r){const s=X(n,B(t));if(r&&"string"!==n){let t=0;e.forEach((e=>{const n=B(e.shape);s.set(e.vals,t),t+=n}))}else{let r=0;e.forEach((e=>{const a="string"===n?Mp(e.vals):e.vals;let o=0;for(let n=0;n<e.shape[0];++n){const i=n*t[1]+r;for(let t=0;t<e.shape[1];++t)s[i+t]=a[o++]}r+=e.shape[1]}))}return s},equalImpl:_E,expImpl:AE,expm1Impl:OE,floorImpl:FE,gatherNdImpl:function(e,t,n,r,s,a,o,i,u){const l=Ha([r,a],n);for(let n=0;n<r;n++){const r=[];let c=0;for(let t=0;t<s;t++){const a=e[n*s+t];c+=a*o[t],r.push(a)}if(c<0||c>=u/a)throw new Error(`Invalid indices: ${r} does not index into ${i}`);for(let e=0;e<a;e++)l.values[n*a+e]=t.get(...t.indexToLoc(c*a+e))}return l},gatherV2Impl:function(e,t,n){const r=Ha(n,e.dtype);for(let n=0;n<r.size;++n){const s=r.indexToLoc(n).slice(),a=s[0],o=s[2],i=t.locToIndex([a,o]);s[2]=t.values[i];const u=e.locToIndex(s);0<=u&&u<e.values.length&&(r.values[n]=e.values[u])}return r},greaterImpl:PE,greaterEqualImpl:DE,lessImpl:ME,lessEqualImpl:LE,linSpaceImpl:function(e,t,n){const r=(t-e)/(n-1),s=oe(n,"float32");s[0]=e;for(let e=1;e<s.length;e++)s[e]=s[e-1]+r;return s},logImpl:BE,maxImpl:function(e,t,n,r){const s=q(r,B(n));for(let n=0;n<s.length;++n){const r=n*t;let a=e[r];for(let n=0;n<t;++n){const t=e[r+n];(Number.isNaN(t)||t>a)&&(a=t)}s[n]=a}return s},maximumImpl:zE,minimumImpl:UE,multiplyImpl:VE,negImpl:function(e,t,n){const r=Hr(-1,n);return VE([],t,r,e,n)},notEqualImpl:WE,prodImpl:function(e,t,n,r){const[s,a]=Vu(e,r),o=ws(t,"int32"),i=oe(B(s),o),u=B(a);for(let e=0;e<i.length;++e){const t=e*u;let r=1;for(let e=0;e<u;++e)r*=n[t+e];i[e]=r}return{outVals:i,outShape:s,outDtype:o}},raggedGatherImpl:function(e,t,n,r,s,a,o,i){if(0===e.length)throw new Error("paramsNestedSplits must be non empty");if(0===t[0].length)throw new Error("Split tensors must not be scalars");if(function(e,t,n){e.forEach(((e,r)=>{if(e<0||e>=n){const s=le(r,t.length,ne(t)).join(",");throw new Error(`indices[${s}] = ${e} is not in [0, ${n})`)}}))}(a,o,t[0][0]-1),0===r.length)throw new Error("params.rank must be nonzero");const u=r[0],{outSplits:l,valueSlices:c,numValues:h}=function(e,t,n,r){const s=[];let a=0;const o=t.length-1+n.length,i=new Array(o).fill(null).map((()=>[0]));!function(e,t){for(let n=0;n<e.length;++n){const r=e[n],s=n===e.length-1?t:e[n+1].length;if(0===r.length)throw new Error("Ragged splits may not be empty");if(r[0]<0)throw new Error("Ragged splits must be non-negative");if(r[r.length-1]>s)throw new Error("Ragged splits must not point past values");for(let e=1;e<r.length;++e)if(r[e-1]>r[e])throw new Error("Ragged splits must be sorted in ascending order")}}(n,r);let u=1;for(let e=0;e<t.length-1;++e){u*=t[e];const n=t[e+1];for(let t=1;t<u+1;++t)i[e].push(t*n)}for(let r=0;r<e.length;++r){let o=e[r],u=e[r]+1;for(let e=0;e<n.length;++e){const r=n[e],s=e+t.length-1;if(s>=0){const e=i[s],t=e[e.length-1]-r[o];for(let e=o;e<u;++e)i[s].push(r[e+1]+t)}o=r[o],u=r[u]}u!==o&&(s.push([o,u]),a+=u-o)}return{outSplits:i,valueSlices:s,numValues:a}}(a,o,e,u),d=function(e){const t=[];for(let n=0;n<e.length;++n){const r=X("int32",e[n].length);t.push(r),e[n].forEach(((e,t)=>r[t]=e))}return t}(l),p=function(e,t,n,r,s){const a=t.slice();a[0]=s;const o=X(n,B(a)),i=e.length;return function(e,t,n,r,s,a){const o=GE(t,2)[1],i=GE(a,2)[1];let u=0;for(const t of n)for(let n=t[0];n<t[1];++n){for(let t=0;t<r;++t)s[u*i+t]=e[n*o+t];++u}}(e,t,r,0===i?0:i/t[0],o,a),[o,a]}(n,r,s,c,h);return[d,p[0],p[1]]},raggedRangeImpl:function(e,t,n,r,s,a,o){if(t.length>1)throw new Error("starts must be a scalar or vector");if(s.length>1)throw new Error("limits must be a scalar or vector");if(o.length>1)throw new Error("deltas must be a scalar or vector");const i=0===t.length,u=0===s.length,l=0===o.length,c=[];i||c.push(t[0]),u||c.push(s[0]),l||c.push(o[0]);for(let e=1;e<c.length;++e)if(c[e]!==c[e-1])throw new Error("starts, limits, and deltas must have the same shape");const h=0===c.length?1:c[0],d=X("int32",h+1);d[0]=0;for(let t=0;t<h;++t){const n=i?e[0]:e[t],s=u?r[0]:r[t],o=l?a[0]:a[t];if(0===o)throw new Error("Requires delta != 0");let c;if(o>0&&s<n||o<0&&s>n)c=0;else if(c=Math.ceil(Math.abs((s-n)/o)),c>2147483647)throw new Error("Requires ((limit - start) / delta) <= 2147483647");d[t+1]=d[t]+c}const p=X(n,d[h]);let f=0;for(let t=0;t<h;++t){const n=d[t+1]-d[t];let r=i?e[0]:e[t];const s=l?a[0]:a[t];for(let e=0;e<n;++e)p[f++]=r,r+=s}return[d,p]},raggedTensorToTensorImpl:function(e,t,n,r,s,a,o,i,u,l){return new jE(e,t,n,r,s,a,o,i,u,l).compute()},rangeImpl:function(e,t,n,r){if(e===t||e<t&&n<0||t<e&&n>1)return oe(0,r);const s=oe(Math.abs(Math.ceil((t-e)/n)),r);t<e&&1===n&&(n=-1),s[0]=e;for(let e=1;e<s.length;e++)s[e]=s[e-1]+n;return s},rsqrtImpl:XE,scatterImpl:function(e,t,n,r,s,a,o,i,u,l){const c=[r/s,s],h=e.values,d=t.values;if(0===r)return Ha(n,t.dtype);const p=Ha(c,t.dtype);"string"==typeof u||"number"==typeof u?p.values.fill(u):"boolean"==typeof u&&p.values.fill(+u);for(let e=0;e<a;e++){const a=[];let u=0;for(let t=0;t<o;t++){const n=h[e*o+t];a.push(n),u+=n*i[t]}if(u<0||u>=r/s)throw new Error(`Invalid indices: ${a} does not index into ${n}`);for(let n=0;n<s;n++)l?p.values[u*s+n]+=d[e*s+n]:p.values[u*s+n]=0===t.rank?d[0]:d[e*s+n]}return p},sigmoidImpl:YE,sliceImpl:function(e,t,n,r,s){const a=fi(r,t,n),o=B(n),i=ne(r);if(a){const n=mi(t,i);return"string"===s?e.slice(n,n+o):e.subarray(n,n+o)}const u=Ha(r,s,"string"===s?Mp(e):e),l=Ha(n,s);for(let e=0;e<l.size;++e){const n=l.indexToLoc(e),r=n.map(((e,n)=>e+t[n]));l.set(u.get(...r),...n)}return"string"===s?Lp(l.values):l.values},sparseFillEmptyRowsImpl:function(e,t,n,r,s,a,o){const i=t[0],u=a[0],l=new Array(u),c=new Array(i),h=t[1];if(0===u){if(0!==i)throw new Error(kp(i));return[X(n,0),[0,h],X(s,0),l,c]}let d=!0,p=0;const f=new Array(u).fill(0);for(let t=0;t<i;++t){const n=e[t*h];if(n<0)throw new Error(Sp(t,n));if(n>=u)throw new Error(Cp(t,n,u));++f[n],d=d&&n>=p,p=n}let m=!0;for(let e=0;e<u;++e){const t=0===f[e];l[e]=t,m=m&&!t,f[e]=Math.max(f[e],1),e>0&&(f[e]+=f[e-1])}if(m&&d){const t=e,n=r;for(let e=0;e<i;++e)c[e]=e;return[t,[i,h],n,l,c]}{const t=f[u-1],a=X(n,t*h),d=X(s,t),p=new Array(u).fill(0);for(let t=0;t<i;++t){const n=e[t*h],s=p[n],o=(0===n?0:f[n-1])+s;p[n]++;for(let n=0;n<h;++n)a[o*h+n]=e[t*h+n];d[o]=r[t],c[t]=o}for(let e=0;e<u;++e)if(0===p[e]){const t=0===e?0:f[e-1];a[t*h+0]=e;for(let e=1;e<h;++e)a[t*h+e]=0;d[t]=o}return[a,[t,h],d,l,c]}},sparseReshapeImpl:function(e,t,n,r,s){const a=B(r),o=t[0],i=s.length,u=[];let l=1,c=-1;for(let e=0;e<i;++e){const t=s[e];if(-1===t){if(-1!==c)throw new Error(Ip(c,e));c=e,u.push(1)}else{if(t<0)throw new Error(Tp(e,t));l*=t,u.push(t)}}if(-1!==c){if(l<=0)throw new Error("reshape cannot infer the missing input size for an empty tensor unless all specified input sizes are non-zero");const e=Math.trunc(a/l);if(l*e!==a)throw new Error(Np(r,u));u[c]=e}if(B(u)!==a)throw new Error(Ep(r,u));const h=r.length,d=[];if(h>0){d[h-1]=1;for(let e=h-2;e>=0;--e)d[e]=d[e+1]*r[e+1]}const p=[];if(i>0){p[i-1]=1;for(let e=i-2;e>=0;--e)p[e]=p[e+1]*u[e+1]}const f=X(n,o*i);for(let t=0;t<o;++t){let n=0;for(let r=0;r<h;++r)n+=e[t*h+r]*d[r];for(let e=0;e<i;++e)f[t*i+e]=Math.trunc(n/p[e]),n%=p[e]}return[f,[o,i],u]},sparseSegmentReductionImpl:function(e,t,n,r,s,a=!1,o=0){const i=r.length,u=[t[0],e.length/t[0]],l=u[1],c=i>0?s[i-1]+1:0;if(c<0)throw new Error("segment ids must be >= 0");const h=t.slice();h[0]=c;const d=h.reduce(((e,t)=>e*t),1),p=X(n,d);if(0===i)return c>0&&p.fill(o),[p,h];if(c<=0)throw new Error("segment ids must be >= 0");let f=0,m=1,g=0,y=s[f];for(;;){let t=0;if(m<i){if(t=s[m],y===t){++m;continue}if(y>=t)throw new Error("segment ids are not increasing")}if(y<0||y>=c)throw new Error(Ap(y,c));y>g&&p.fill(o,g*l,y*l);for(let t=f;t<m;++t){const n=r[t];if(n<0||n>=u[0])throw new Error(Op(t,r[t],u[0]));for(let t=0;t<l;t++)p[y*l+t]+=e[n*l+t]}if(a)for(let e=0;e<l;e++)p[y*l+e]/=m-f;if(f=m,++m,g=y+1,y=t,m>i)break}return g<c&&p.fill(o,g*l,c*l),[p,h]},sqrtImpl:QE,squaredDifferenceImpl:ZE,stridedSliceImpl:function(e,t,n,r){const s=Ha(e,t.dtype);for(let e=0;e<s.size;e++){const a=s.indexToLoc(e),o=new Array(a.length);for(let e=0;e<o.length;e++)o[e]=a[e]*n[e]+r[e];s.set(t.get(...o),...a)}return s},stringNGramsImpl:function(e,t,n,r,s,a,o,i){return new JE(n,r,s,a,o,i).compute(e,t)},stringSplitImpl:function(e,t,n){const r=e.length,s=[];let a=0,o=0;const i=new Array(r);for(let u=0;u<r;++u){const r=s.length;eR(e[u],t,n,s);const l=s.length-r;i[u]=l,a+=l,o=Math.max(o,l)}const u=X("int32",2*a),l=new Array(a),c=[r,o];let h=0;for(let e=0;e<r;++e)for(let t=0;t<i[e];++t)u[2*h]=e,u[2*h+1]=t,l[h]=s[h],++h;return[u,l,c]},stringToHashBucketFastImpl:function(e,t){const n=X("int32",e.length);for(let r=0;r<e.length;++r)n[r]=Gr(e[r]).modulo(t).getLowBitsUnsigned();return n},subImpl:tR,tileImpl:function(e,t){const n=new Array(e.rank);for(let r=0;r<n.length;r++)n[r]=e.shape[r]*t[r];const r=Ha(n,e.dtype);for(let t=0;t<r.values.length;++t){const n=r.indexToLoc(t),s=new Array(e.rank);for(let t=0;t<s.length;t++)s[t]=n[t]%e.shape[t];const a=e.locToIndex(s);r.values[t]=e.values[a]}return r},topKImpl:function(e,t,n,r,s){const a=t[t.length-1],[o,i]=[e.length/a,a],u=q(n,o*r),l=q("int32",o*r);for(let t=0;t<o;t++){const n=t*i,a=e.subarray(n,n+i);let o=new Array(a.length);a.forEach(((e,t)=>o[t]={value:e,index:t})),r<o.length&&(rR(o,r),o=o.slice(0,r)),s&&o.sort(nR);const c=t*r,h=u.subarray(c,c+r),d=l.subarray(c,c+r);for(let e=0;e<r;e++)h[e]=o[e].value,d[e]=o[e].index}const c=t.slice();return c[c.length-1]=r,[Ha(c,n,u),Ha(c,"int32",l)]},transposeImpl:function(e,t,n,r,s){const a=t.length,o=B(t),i=ne(t),u=ne(s),l=q(n,B(s));for(let t=0;t<o;++t){const n=le(t,a,i),s=new Array(n.length);for(let e=0;e<s.length;e++)s[e]=n[r[e]];l[ue(s,a,u)]=e[t]}return l},uniqueImpl:function(e,t,n,r){const s=j(t,n)[0],a=[1,n[0],1];for(let e=0;e<s;e++)a[0]*=n[e];a[1]=n[s];for(let e=s+1;e<n.length;e++)a[2]*=n[e];const o={},i=new Int32Array(n[s]),u=new ls(a,r,e),l=[],c=1===a[0]&&1===a[2];for(let t=0;t<n[s];t++){let n;if(c)n=e[t].toString();else{const e=[];for(let n=0;n<a[0];n++)for(let r=0;r<a[2];r++)e.push(u.get(n,t,r));n=e.join(",")}if(void 0!==o[n])i[t]=o[n];else{const e=Object.keys(o).length;o[n]=e,i[t]=e,l.push(t)}}const h=a.slice();h[1]=Object.keys(o).length;const d=new ls(h,r);l.forEach(((e,t)=>{for(let n=0;n<a[0];n++)for(let r=0;r<a[2];r++)d.set(u.get(n,e,r),n,t,r)}));const p=n.slice();return p[s]=h[1],{outputValues:d.values,outputShape:p,indices:i}}});const{addImpl:aR,castImpl:oR,ceilImpl:iR,concatImpl:uR,equalImpl:lR,expImpl:cR,expm1Impl:hR,floorImpl:dR,gatherNdImpl:pR,gatherV2Impl:fR,greaterEqualImpl:mR,greaterImpl:gR,lessEqualImpl:yR,lessImpl:xR,logImpl:bR,maxImpl:vR,maximumImpl:wR,minimumImpl:kR,multiplyImpl:SR,negImpl:CR,notEqualImpl:IR,prodImpl:TR,rangeImpl:$R,rsqrtImpl:NR,scatterImpl:ER,simpleAbsImpl:RR,sliceImpl:_R,stridedSliceImpl:AR,stringNGramsImpl:OR,subImpl:FR,tileImpl:PR,topKImpl:DR,transposeImpl:MR,uniqueImpl:LR}=sR,BR={kernelName:be,backendName:"webgpu",kernelFunc:IE({opType:qN.ABS,cpuKernelImpl:RR})},zR={kernelName:ve,backendName:"webgpu",kernelFunc:IE({opType:qN.ACOS})},UR={kernelName:we,backendName:"webgpu",kernelFunc:IE({opType:qN.ACOSH})},VR={kernelName:ke,backendName:"webgpu",kernelFunc:TE({opType:BN.ADD,cpuKernelImpl:aR,supportsComplex:!0})};class WR{constructor(e){this.workPerThread=1,this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=e[0],this.variableNames=e.map(((e,t)=>"T"+t)),this.dispatchLayout=ON(this.outputShape),this.dispatch=RN(this.dispatchLayout,this.outputShape,this.workgroupSize,[this.workPerThread,1,1]),this.shaderKey="addN"}getUserCode(){const e=[];this.variableNames.forEach((t=>{e.push(`let v${t} = get${t}ByOutputCoords(coords);`)}));const t=this.variableNames.map((e=>"v"+e)).join(" + ");return`\n      ${wN("index")} {\n        for (var i = 0; i < ${this.workPerThread}; i = i + 1) {\n          let flatIndex = index * ${this.workPerThread} + i;\n          if (flatIndex < uniforms.size) {\n            let coords = getCoordsFromIndex(flatIndex);\n            ${e.join("\n        ")}\n            setOutputAtIndex(flatIndex, ${t});\n          }\n        }\n      }\n    `}}const GR={kernelName:Se,backendName:"webgpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,r=t;if(1===r.length)return vE({inputs:{x:r[0]},backend:n});const s=r.map((e=>e.dtype)).reduce(((e,t)=>ws(e,t))),a=r.map((e=>e.shape)),o=new WR(a);return n.runWebGPUProgram(o,r,s)}};class HR{constructor(e,t){this.variableNames=["A"],this.workgroupSize=[16,16,1];const n=new Array(e.length);for(let r=0;r<n.length;r++)n[r]=e[t[r]];this.outputShape=n,this.dispatchLayout={x:[0],y:[1]},this.dispatch=RN(this.dispatchLayout,this.outputShape,this.workgroupSize,[1,1,1]),this.shaderKey="transposeShared"}getUserCode(){D(this.workgroupSize[0]===this.workgroupSize[1],(()=>`Must be a square tile, current tile shape is ${this.workgroupSize[0]} x ${this.workgroupSize[1]}`));const e=this.workgroupSize[0];return`\n      var<workgroup> tile : array<array<f32, ${this.workgroupSize[0]+1}>, ${this.workgroupSize[0]}>;\n      ${wN()} {\n        var x = i32(workgroupId.x) * ${e} + i32(localId.x);\n        var y = i32(workgroupId.y) * ${e} + i32(localId.y);\n        let width = uniforms.outShape[0];\n        let height = uniforms.outShape[1];\n        if (x < width && y < height) {\n          tile[localId.y][localId.x] = f32(A[y * width + x]);\n        }\n        workgroupBarrier();\n\n        x = i32(workgroupId.y) * ${e} + i32(localId.x);\n        y = i32(workgroupId.x) * ${e} + i32(localId.y);\n        if (x < height && y < width) {\n          setOutputAtIndex((y * height + x), tile[localId.x]\n            [localId.y]);\n        }\n      }\n    `}}class jR{constructor(e,t){this.variableNames=["A"],this.workPerThread=1,this.workgroupSize=[64,1,1],this.size=!0;const n=new Array(e.length);for(let r=0;r<n.length;r++)n[r]=e[t[r]];this.outputShape=n,this.dispatchLayout=ON(this.outputShape),this.dispatch=RN(this.dispatchLayout,this.outputShape,this.workgroupSize,[this.workPerThread,1,1]),this.newDim=t,this.shaderKey="transpose_"+t}getUserCode(){const e=bN(this.outputShape.length),t=function(e){const t=e.length;if(t>6)throw Error(`Transpose for rank ${t} is not yet supported`);const n=new Array(t);for(let t=0;t<e.length;t++)n[e[t]]="resRC."+vN(t);return n.join()}(this.newDim);return`\n      ${wN("index")} {\n        for(var i = 0; i < ${this.workPerThread}; i = i + 1) {\n          let flatIndex = index * ${this.workPerThread} + i;\n          if(flatIndex < uniforms.size) {\n            let resRC = getCoordsFromIndex(flatIndex);\n            setOutputAtIndex(flatIndex, A[getIndexFromCoords${this.outputShape.length}D(\n              ${e}(${t}), uniforms.aShape)]);\n          }\n        }\n      }\n    `}}function KR(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{perm:a}=r,o=n,i=s.shape.length,u=new Array(i);for(let e=0;e<u.length;e++)u[e]=s.shape[a[e]];if(n.shouldExecuteOnCPU([s])){const e=o.tensorMap.get(s.dataId).values,t=MR(e,s.shape,s.dtype,a,u);return n.makeTensorInfo(u,s.dtype,t)}if(2===s.shape.length&&z(a,[1,0])){const e=new HR(s.shape,a);return o.runWebGPUProgram(e,[s],s.dtype)}const l=new jR(s.shape,a);return o.runWebGPUProgram(l,[s],s.dtype)}const qR={kernelName:cr,backendName:"webgpu",kernelFunc:KR};class XR{constructor(e,t){this.workgroupSize=[64,1,1],this.variableNames=["x"],this.uniforms="reduceSize : i32,",this.size=!0,this.inputShape=[e.batchSize,e.inSize];const[n]=Vu(this.inputShape,[1]);this.outputShape=0===n.length?[1]:n,this.dispatchLayout=ON(this.outputShape),this.dispatch=RN(this.dispatchLayout,this.outputShape,[1,1,1]),this.reduceType=t,this.shaderKey="reduce_"+t}getUserCode(){let e="",t="0.0";const n=this.workgroupSize[0];"min"===this.reduceType||"max"===this.reduceType?(e=`\n         if (isnan(candidate)) {\n          bestValue = uniforms.NAN;\n         } else if (!isnan(bestValue) && candidate ${"min"===this.reduceType?"<":">"} bestValue)\n           {  bestValue = candidate; }`,t="f32(x[offset])"):"sum"===this.reduceType||"mean"===this.reduceType?e=" bestValue = bestValue + candidate; ":"prod"===this.reduceType?(e=" bestValue = bestValue * candidate; ",t="1.0"):"all"===this.reduceType?(e=" bestValue = f32(bestValue >= 1.0 && candidate >= 1.0); ",t="1.0"):"any"===this.reduceType&&(e=" bestValue = f32(bestValue >= 1.0 || candidate >= 1.0); ",t="0.0");const r="mean"===this.reduceType?"setOutputAtIndex(outputIndex, bestValue / f32(uniforms.reduceSize));":"setOutputAtIndex(outputIndex, bestValue);";return`\n       fn DIV_CEIL(a : u32, b : u32) -> u32 {\n        return ((a - 1u) / b + 1u);\n       }\n\n       \n         var<workgroup> xBestValues : array<f32, ${n}>;\n       \n       fn getOffset(outputIndex : i32) -> i32 {\n         let outputCoords = getCoordsFromIndex(outputIndex);\n         let offset = ${1===this.outputShape.length?"outputCoords":"outputCoords[0]"} * uniforms.reduceSize;\n          return offset;\n       }\n       ${wN("index")} {\n         let outputIndex = index / ${n};\n         let offset = getOffset(outputIndex);\n         var bestValue = ${t};\n         let Length = uniforms.reduceSize;\n         let WorkPerThread = DIV_CEIL(u32(Length), ${n}u);\n         for (var k = i32(localId.x); k < Length && outputIndex < uniforms.size;\n             k = k + ${n}) {\n           let candidate = f32(x[offset + k]);\n           ${e}\n         }\n         xBestValues[localId.x] = bestValue;\n         workgroupBarrier();\n\n         var reduceSize = min(u32(Length), ${n}u);\n         for (var currentSize = reduceSize / 2u; reduceSize > 1u;\n             currentSize = reduceSize / 2u) {\n           let interval = DIV_CEIL(reduceSize, 2u);\n           if (localId.x < currentSize) {\n            let candidate = xBestValues[localId.x + interval];\n            ${e}\n            xBestValues[localId.x] = bestValue;\n           }\n           reduceSize = interval;\n           workgroupBarrier();\n         }\n\n         if (localId.x == 0u && outputIndex < uniforms.size) {\n          ${r}\n        }\n       }\n     `}}function YR(e,t,n,r,s){const a=e.shape.length,o=[],i=j(t,e.shape);let u=i;const l=Hu(u,a);let c=e;null!=l&&(c=KR({inputs:{x:e},attrs:{perm:l},backend:s}),u=Ku(u.length,a),o.push(c)),Gu(r,u,a);const[h,d]=Vu(c.shape,u);let p,f=h;if(n&&(f=Wu(h,i)),"max"!==r&&"prod"!==r||!s.shouldExecuteOnCPU([c])){const t=B(d),n={windowSize:t,inSize:t,batchSize:B(c.shape)/t,outSize:1},a="mean"===r?"float32":ks(e.dtype),i=[{type:"int32",data:[t]}],u=new XR(n,r),l=s.runWebGPUProgram(u,[c],a,i);o.push(l),p=fE({inputs:{x:l},attrs:{shape:f},backend:s})}else{const t=s.tensorMap.get(c.dataId).values;switch(r){case"max":const n=vR(t,B(d),f,e.dtype);p=s.makeTensorInfo(f,e.dtype,n);break;case"prod":const{outVals:a,outShape:o,outDtype:i}=TR(c.shape,c.dtype,t,u);p=s.makeTensorInfo(o,i,a);break;default:throw new Error(r+" CPU implementation is not yet supported.")}}return o.forEach((e=>s.disposeData(e.dataId))),p}const QR={kernelName:Ce,backendName:"webgpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{keepDims:a,axis:o}=r;return YR(s,o,a,"all",n)}},ZR={kernelName:Ie,backendName:"webgpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{keepDims:a,axis:o}=r;return YR(s,o,a,"any",n)}};class JR{constructor(e,t,n){this.workgroupSize=[64,1,1],this.variableNames=["x"],this.uniforms="infinityValue : f32,",this.size=!0;const r=[t];this.op="min"===n?"<":">";const[s,a]=Vu(e,r);this.outputShape=0===s.length?[1]:s,this.dispatchLayout=ON(this.outputShape),B(a)<32||B(s)>1e3?(this.type="plain",this.dispatch=RN(this.dispatchLayout,this.outputShape,this.workgroupSize)):(this.type="shared",this.dispatch=RN(this.dispatchLayout,this.outputShape,[1,1,1])),this.inputShape=e,this.shaderKey=`argMinMax_${this.op}_${this.type}`}getUserCode(){const e=this.workgroupSize[0],t=()=>1===this.inputShape.length?"uniforms.xShape":"uniforms.xShape."+vN(this.inputShape.length-1),n=()=>{let e="";if(1===this.outputShape.length)1!==this.inputShape.length&&(e+="outputCoords,");else for(let t=0;t<this.outputShape.length;t++)e+=`outputCoords.${vN(t)},`;return e};return"shared"===this.type?`\n      fn DIV_CEIL(a : u32, b : u32) -> u32 {\n        return ((a - 1u) / b + 1u);\n      }\n\n      \n      var<workgroup> xBestIndices : array<i32, ${e}>;\n      var<workgroup> xBestValues : array<f32, ${e}>;\n    \n\n      ${wN("index")} {\n        let outputIndex = index / ${e};\n        let reduceLength = ${t()};\n\n        var bestIndex = i32(localId.x);\n        var bestValue = uniforms.infinityValue;\n        let outputCoords = getCoordsFromIndex(outputIndex);\n        for (var k = i32(localId.x); k < reduceLength && outputIndex < uniforms.size;\n            k = k + ${e}) {\n          let candidate = getX(${n()} k);\n          if (!isnan(candidate) && candidate ${this.op} bestValue) {\n            bestValue = candidate;\n            bestIndex = k;\n          }\n        }\n        xBestValues[localId.x] = bestValue;\n        xBestIndices[localId.x] = bestIndex;\n        workgroupBarrier();\n\n        var reduceSize = min(u32(reduceLength), ${e}u);\n        for (var currentSize = reduceSize / 2u; reduceSize > 1u;\n            currentSize = reduceSize / 2u) {\n          let interval = DIV_CEIL(reduceSize, 2u);\n          if (localId.x < currentSize) {\n            let candidate = xBestValues[localId.x + interval];\n            if (candidate ${this.op} bestValue) {\n              bestValue = candidate;\n              xBestValues[localId.x] = bestValue;\n              xBestIndices[localId.x] = xBestIndices[localId.x + interval];\n            }\n          }\n          reduceSize = interval;\n          workgroupBarrier();\n        }\n\n        if (localId.x == 0u && outputIndex < uniforms.size) {\n          setOutputAtIndexI32(outputIndex, xBestIndices[localId.x]);\n        }\n      }\n    `:`\n      ${wN("index")} {\n        if (index < uniforms.size) {\n          let outputCoords = getCoordsFromIndex(index);\n          var bestIndex = 0;\n          var bestValue = getX(${n()} 0);\n          let reduceLength = ${t()};\n          for (var i = 1; i < reduceLength; i++) {\n            let candidate = getX(${n()} i);\n            if (candidate ${this.op} bestValue) {\n              bestValue = candidate;\n              bestIndex = i;\n            }\n          }\n          setOutputAtIndexI32(index, bestIndex);\n        }\n      }\n      `}}const e_={kernelName:Te,backendName:"webgpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{axis:a}=r;let o=j(a,s.shape);const i=Hu(o,s.shape.length);let u=s;const l=[];null!=i&&(u=KR({inputs:{x:s},backend:n,attrs:{perm:i}}),l.push(u),o=Ku(o.length,u.shape.length)),Gu("argMax",[o[0]],u.shape.length);const c=new JR(u.shape,o[0],"max"),h=[{type:"float32",data:[Number.NEGATIVE_INFINITY]}],d=n.runWebGPUProgram(c,[u],"int32",h);return l.forEach((e=>n.disposeData(e.dataId))),d}},t_={kernelName:$e,backendName:"webgpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{axis:a}=r;let o=j(a,s.shape);const i=Hu(o,s.shape.length);let u=s;const l=[];null!=i&&(u=KR({inputs:{x:s},backend:n,attrs:{perm:i}}),l.push(u),o=Ku(o.length,u.shape.length)),Gu("argMin",[o[0]],u.shape.length);const c=new JR(u.shape,o[0],"min"),h=[{type:"float32",data:[Number.POSITIVE_INFINITY]}],d=n.runWebGPUProgram(c,[u],"int32",h);return l.forEach((e=>n.disposeData(e.dataId))),d}},n_={kernelName:Ne,backendName:"webgpu",kernelFunc:IE({opType:qN.ASIN})},r_={kernelName:Ee,backendName:"webgpu",kernelFunc:IE({opType:qN.ASINH})},s_={kernelName:Re,backendName:"webgpu",kernelFunc:IE({opType:qN.ATAN})},a_={kernelName:Ae,backendName:"webgpu",kernelFunc:TE({opType:BN.ATAN2})},o_={kernelName:_e,backendName:"webgpu",kernelFunc:IE({opType:qN.ATANH})};class i_{constructor(e,t){this.variableNames=["x"],this.uniforms="stride : vec2<i32>, pad : vec2<i32>, dilation : vec2<i32>, convDims : vec2<i32>, filterDims : vec2<i32>,",this.workgroupSize=[128,1,1],this.size=!0,this.outputShape=e.outShape,this.dispatchLayout=ON(this.outputShape),this.dispatch=RN(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey="pool2D_"+t,this.poolType=t}getUserCode(){let e="resultValue = max(value, resultValue);";"avg"===this.poolType&&(e="resultValue = resultValue + value; count = count + 1.0;");let t="resultValue";return"avg"===this.poolType&&(t="resultValue / max(count, 1.0)"),`\n      ${wN("index")} {\n      if (index < uniforms.size) {\n        let coords = getCoordsFromIndex(index);\n          let batch = coords[0];\n          let xRCCorner = vec2<i32>(coords.yz) * uniforms.stride - uniforms.pad;\n          let xRCorner = xRCCorner.x;\n          let xCCorner = xRCCorner.y;\n\n          var resultValue = ${"avg"===this.poolType?"0.0":"-1.0 / pow(10.0, -20.0)"};\n          var count = 0.0;\n\n          for (var wR = 0; wR < uniforms.filterDims.x; wR = wR + uniforms.dilation.x) {\n            let xR = xRCorner + wR;\n\n            if (xR < 0 || xR >= uniforms.convDims.x) {\n              continue;\n            }\n\n            for (var wC = 0; wC < uniforms.filterDims.y; wC = wC + uniforms.dilation.y) {\n              let xC = xCCorner + wC;\n              if (xC < 0 || xC >= uniforms.convDims.y) {\n                continue;\n              }\n\n              let value = getX(batch, xR, xC, coords[3]);\n              ${e}\n            }\n          }\n\n          setOutputAtIndex(index, ${t});\n        }\n      }\n    `}}class u_{constructor(e){this.variableNames=["x"],this.uniforms="stride : vec2<i32>,",this.workgroupSize=[256,1,1],this.size=!0,this.outputShape=e.outShape,this.dispatchLayout=ON(this.outputShape),this.dispatch=RN(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey="poolWithFilterSizeEqualsOne"}getUserCode(){return`\n      ${wN("index")} {\n        if (index < uniforms.size) {\n          let coords = getCoordsFromIndex(index);\n          let batch = coords[0];\n          let d = coords[3];\n\n          let xRCCorner = coords.yz * uniforms.stride;\n          let xRCorner = xRCCorner.x;\n          let xCCorner = xRCCorner.y;\n\n          let value = getX(batch, xRCorner, xCCorner, d);\n          setOutputAtIndex(index, value);\n        }\n      }\n    `}}function l_(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{reductionIndices:a,keepDims:o}=r;return YR(s,a,o,"max",n)}const c_={kernelName:Ht,backendName:"webgpu",kernelFunc:l_};function h_(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{keepDims:a,axis:o}=r;return YR(s,o,a,"mean",n)}const d_={kernelName:Yt,backendName:"webgpu",kernelFunc:h_};function p_(e,t,n,r){if(1===t.filterWidth&&1===t.filterHeight&&z(t.inShape,t.outShape))return vE({inputs:{x:e},backend:r});if(t.filterWidth===t.inWidth&&t.filterHeight===t.inHeight&&1===t.batchSize&&"VALID"===t.padInfo.type){const s=e.shape.length,a=fE({inputs:{x:e},backend:r,attrs:{shape:[e.shape[s-3]*e.shape[s-2],e.shape[s-1]]}});let o;"avg"===n?o=h_({inputs:{x:a},backend:r,attrs:{axis:0,keepDims:!1}}):(D("max"===n,(()=>"Invalid pool type "+n)),o=l_({inputs:{x:a},backend:r,attrs:{reductionIndices:0,keepDims:!1}}));const i=fE({inputs:{x:o},backend:r,attrs:{shape:t.outShape}});return r.disposeData(a.dataId),r.disposeData(o.dataId),i}let s;const a=[{type:"int32",data:[t.strideHeight,t.strideWidth]}];return 1===t.filterHeight&&1===t.filterWidth?s=new u_(t):("avg"===n?s=new i_(t,"avg"):(D("max"===n,(()=>"Invalid pool type "+n)),s=new i_(t,"max")),a.push({type:"int32",data:[t.padInfo.top,t.padInfo.left]},{type:"int32",data:[t.dilationHeight,t.dilationWidth]},{type:"int32",data:[t.inHeight,t.inWidth]},{type:"int32",data:[t.effectiveFilterHeight,t.effectiveFilterWidth]})),r.runWebGPUProgram(s,[e],e.dtype,a)}const f_={kernelName:Oe,backendName:"webgpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{filterSize:a,strides:o,pad:i,dimRoundingMode:u}=r;return p_(s,Ai(s.shape,a,o,1,i,u),"avg",n)}};class m_{constructor(e){this.variableNames=["dy"],this.uniforms="stride : vec2<i32>, pads : vec2<i32>, dilation : vec2<i32>, filterDims : vec2<i32>,\n       outHeight : i32, outWidth : i32, avgMultiplier : f32,",this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=e.inShape,this.dispatchLayout=ON(this.outputShape),this.dispatch=RN(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey="avg_pool2d_backprop"}getUserCode(){return`\n      ${wN("index")} {\n      if (index < uniforms.size) {\n        let coords = getCoordsFromIndex(index);\n        let batch = coords[0];\n        let d = coords[3];\n\n        let dyRCCorner = vec2<i32>(coords.yz) - uniforms.pads;\n        let dyRCorner = dyRCCorner.x;\n        let dyCCorner = dyRCCorner.y;\n\n        // Convolve dy(?, ?, d) with pos mask(:, :, d) to get dx(xR, xC, d).\n        // ? = to be determined. : = across all values in that axis.\n        var dotProd = 0.0;\n        for (var wR = 0; wR < uniforms.filterDims[0]; wR = wR + uniforms.dilation[0]) {\n          let dyR = f32(dyRCorner + wR) / f32(uniforms.stride[0]);\n\n          if (dyR < 0.0 || dyR >= f32(uniforms.outHeight) || fract(dyR) > 0.0) {\n            continue;\n          }\n          let idyR = i32(dyR);\n\n          for (var wC = 0; wC < uniforms.filterDims[1]; wC = wC + uniforms.dilation[1]) {\n            let dyC = f32(dyCCorner + wC) / f32(uniforms.stride[1]);\n\n            if (dyC < 0.0 || dyC >= f32(uniforms.outWidth) || fract(dyC) > 0.0) {\n              continue;\n            }\n            let idyC = i32(dyC);\n\n            let dyValue = getDy(batch, idyR, idyC, d);\n\n            dotProd = dotProd + dyValue * uniforms.avgMultiplier;\n          }\n        }\n        setOutputAtIndex(index, dotProd);\n      }\n    }\n    `}}const g_={kernelName:Fe,backendName:"webgpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:s,input:a}=t,o=a;var i;i=[s,a],Array.isArray(i)||(i=[i]),i.forEach((e=>{null!=e&&D("complex64"!==e.dtype,(()=>"avgPoolGrad does not support complex64 tensors in the WebGPU backend."))}));const{filterSize:u,strides:l,pad:c}=r,h=Ai(o.shape,u,l,1,c),d=new m_(h),p=1/(h.filterHeight*h.filterWidth),f=[{type:"int32",data:[h.strideHeight,h.strideWidth]},{type:"int32",data:[h.effectiveFilterHeight-1-h.padInfo.top,h.effectiveFilterWidth-1-h.padInfo.left]},{type:"int32",data:[h.dilationHeight,h.dilationWidth]},{type:"int32",data:[h.effectiveFilterHeight,h.effectiveFilterWidth]},{type:"int32",data:[h.outHeight]},{type:"int32",data:[h.outWidth]},{type:"float32",data:[p]}];return n.runWebGPUProgram(d,[s],o.dtype,f)}},y_={kernelName:De,backendName:"webgpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{a:s,b:a}=t,{transposeA:o,transposeB:i}=r;return gE({a:s,b:a,transposeA:o,transposeB:i,backend:n})}};class x_{constructor(e,t){this.variableNames=["source"],this.workPerThread=1,this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=t,this.rank=t.length,this.dispatchLayout=ON(this.outputShape),this.dispatch=RN(this.dispatchLayout,this.outputShape,this.workgroupSize,[this.workPerThread,1,1]),this.start=e,this.uniforms=`start : ${bN(e.length)}, `,this.shaderKey="slice"}getUserCode(){const e=bN(this.rank),t=function(e){if(1===e)return"sourceLoc";if(e<=6)return b_.slice(0,e).map((e=>"sourceLoc."+e)).join(",");throw Error(`Slicing for rank ${e} is not yet supported`)}(this.rank);let n;return n=1===this.start.length?this.outputShape.map(((e,t)=>"sourceLoc = uniforms.start + coords;")):this.outputShape.map(((e,t)=>`sourceLoc.${b_[t]} = uniforms.start.${vN(t)} + coords.${b_[t]};`)),`\n      ${wN("index")} {\n        if (index < uniforms.size) {\n          var sourceLoc : ${e};\n          let coords = getCoordsFromIndex(index);\n          ${n.join("\n")}\n          setOutputAtIndex(index, getSource(${t}));\n        }\n      }\n    `}}const b_=["x","y","z","w","u","v"];function v_(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{begin:a,size:o}=r,[i,u]=gi(s,a,o);if(ni(s,i,u),n.shouldExecuteOnCPU([s])||"string"===s.dtype){const e=n.tensorMap.get(s.dataId),t=_R(e.values,i,u,s.shape,s.dtype);return n.makeTensorInfo(u,s.dtype,t)}if(0===B(u))return n.makeTensorInfo(u,s.dtype,[]);const l=new x_(i,u),c=[{type:"int32",data:i}];return n.runWebGPUProgram(l,[s],s.dtype,c)}const w_={kernelName:Pn,backendName:"webgpu",kernelFunc:v_},k_={kernelName:Me,backendName:"webgpu",kernelFunc:e=>{const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{blockShape:a,crops:o}=r;D(s.shape.length<=4,(()=>"batchToSpaceND for rank > 4 with a WebGPU backend not implemented yet"));const i=a.reduce(((e,t)=>e*t)),u=Wd(s.shape,a,i),l=Gd(u.length,a.length),c=Hd(s.shape,a,i),h=jd(o,a.length),d=Kd(c,o,a.length),p=[],f=fE({inputs:{x:s},backend:n,attrs:{shape:u}}),m=KR({inputs:{x:f},backend:n,attrs:{perm:l}}),g=fE({inputs:{x:m},backend:n,attrs:{shape:c}}),y=v_({inputs:{x:g},backend:n,attrs:{begin:h,size:d}});return p.push(f),p.push(m),p.push(g),p.forEach((e=>n.disposeData(e.dataId))),y}},S_=`\n  fn bincount_write(index: i32, value: f32) {\n    ${xN("&result[index]","value","float32")}\n  }\n`;class C_{constructor(e,t,n=!1){this.outputShape=[],this.variableNames=["x"],this.uniforms="binCountSize : i32,",this.workgroupSize=[64,1,1],this.atomic=!0,this.hasWeights=!0,this.binaryOutput=!1,this.outputShape=e,this.rank=e.length,this.dispatchLayout=ON(this.outputShape),this.dispatch=RN(this.dispatchLayout,this.outputShape,this.workgroupSize),this.binaryOutput=n,n&&(this.atomic=!1),this.hasWeights=t,this.hasWeights&&this.variableNames.push("w"),this.shaderKey=`bincount_${this.hasWeights}_${this.binaryOutput}_${this.rank}`}getUserCode(){return`\n    ${this.binaryOutput?"\n  fn bincount_write(index: i32, value: f32) {\n    atomicStore(&result[index], bitcast<i32>(value));\n  }\n":S_}\n  ${wN("index")} {\n    ${1===this.rank?`if (index < uniforms.xShape) {\n      let indexVal = i32(getX(index));\n      if (indexVal < uniforms.binCountSize) {\n        let value = ${this.binaryOutput?1:this.hasWeights?"getW(index)":"1."};\n        bincount_write(indexVal, value);\n      }\n    }`:`let coord = getCoordsFromIndex(index);\n    if (coordsInBounds2D(coord, uniforms.xShape)) {\n      let indexVal = i32(getX(coord[0], coord[1]));\n      if (indexVal < uniforms.binCountSize) {\n        let value = ${this.binaryOutput?1:this.hasWeights?"getW(coord[0], coord[1])":"1."};\n        bincount_write(coord.x * uniforms.binCountSize + indexVal, value);\n      }\n    }`}\n  }\n  `}}const I_={kernelName:Le,backendName:"webgpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,weights:a}=t,{size:o}=r,i=B(s.shape),u=B(a.shape)>0,l=[o],c=a.dtype,h=dE({backend:n,attrs:{shape:l,value:0,dtype:c}}),d=new C_([i],u),p=[{type:"int32",data:[o]}],f=u?[s,a]:[s];return n.runWebGPUProgram(d,f,c,p,h)}},T_=TE({opType:BN.NOT_EQUAL,dtype:"bool",cpuKernelImpl:IR}),$_={kernelName:sn,backendName:"webgpu",kernelFunc:T_};function N_(e){const{inputs:t,backend:n}=e,{input:r}=t;return vE({inputs:{x:n.tensorMap.get(r.dataId).complexTensorInfos.real},backend:n})}const E_={kernelName:vn,backendName:"webgpu",kernelFunc:N_},R_={kernelName:Ue,backendName:"webgpu",kernelFunc:function e(t){const{inputs:n,backend:r,attrs:s}=t,{x:a}=n,{dtype:o}=s;if("complex64"===o){if("complex64"===a.dtype)return vE({inputs:{x:a},backend:r});const t=Dl(a.shape),n=e({inputs:{x:a},backend:r,attrs:{dtype:"float32"}}),s=kE({inputs:{real:n,imag:t},backend:r});return t.dispose(),r.disposeData(n.dataId),s}if("complex64"===a.dtype){const t=N_({inputs:{input:a},backend:r}),n=e({inputs:{x:t},backend:r,attrs:{dtype:o}});return r.disposeData(t.dataId),n}if(!Y(a.dtype,o)){const e=vE({inputs:{x:a},backend:r});return{dataId:e.dataId,shape:e.shape,dtype:o}}if(r.shouldExecuteOnCPU([a])){const e=r.tensorMap.get(a.dataId).values,[t,n,s]=oR(e,a.shape,a.dtype,o);return r.makeTensorInfo(t,n,s)}if("int32"===o)return function(e,t){const n=new CE(e.shape,qN.TO_INT),r=t.runWebGPUProgram(n,[e],"int32");return{dataId:r.dataId,shape:r.shape,dtype:r.dtype}}(a,r);if("bool"===o){const e=r.makeTensorInfo([],"bool",q("bool",1)),t=T_({inputs:{a,b:e},backend:r});return r.disposeData(e.dataId),t}throw new Error(`Error in Cast: failed to cast ${a.dtype} to ${o}`)}},__={kernelName:Ve,backendName:"webgpu",kernelFunc:IE({opType:qN.CEIL,cpuKernelImpl:iR})};class A_{constructor(e){this.variableNames=["A"],this.uniforms="minVal : f32, maxVal : f32,",this.workPerThread=4,this.workgroupSize=[64,1,1],this.isVec4=!0,this.size=!0,this.outputShape=e,this.dispatchLayout=ON(this.outputShape),this.dispatch=RN(this.dispatchLayout,this.outputShape,this.workgroupSize,[this.workPerThread,1,1]),this.shaderKey="clipVec4"}getUserCode(){return`\n      ${wN("index")} {\n        if(index < uniforms.size) {\n          let value = getAByOutputIndex(index);\n          var clampedValue = clamp(\n              value, vec4<f32>(uniforms.minVal), vec4<f32>(uniforms.maxVal));\n          clampedValue = select(clampedValue, value, isnanVec4(value));\n          setOutputAtIndex(index, clampedValue);\n        }\n      }\n    `}}class O_{constructor(e){this.variableNames=["A"],this.uniforms="minVal : f32, maxVal : f32,",this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=e,this.dispatchLayout=ON(this.outputShape),this.dispatch=RN(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey="clip"}getUserCode(){return`\n      ${wN("index")} {\n        if(index < uniforms.size) {\n          let value = getAByOutputIndex(index);\n          if (isnan(value)) {\n            setOutputAtIndex(index, value);\n            return;\n          }\n          setOutputAtIndex(index, clamp(value, uniforms.minVal, uniforms.maxVal));\n        }\n      }\n    `}}const F_={kernelName:We,backendName:"webgpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{clipValueMin:a,clipValueMax:o}=r;let i;const u=[{type:"float32",data:[a]},{type:"float32",data:[o]}];return i=B(s.shape)%4==0?new A_(s.shape):new O_(s.shape),n.runWebGPUProgram(i,[s],s.dtype,u)}};class P_{constructor(e){this.uniforms="",this.workPerThread=1,this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=Fd(e,1),this.variableNames=e.map(((e,t)=>"T"+t)),this.dispatchLayout=ON(this.outputShape),this.dispatch=RN(this.dispatchLayout,this.outputShape,this.workgroupSize,[this.workPerThread,1,1]),this.offsetLength=e.length-1;for(let e=0;e<this.offsetLength;e++)this.uniforms+=`offset${e} : i32,`;this.shaderKey="concat"}getUserCode(){const e=[];if(this.offsetLength>0){e.push("if (yC < uniforms.offset0){ setOutputAtCoords(coords.x, coords.y, getT0(yR, yC)); }");for(let t=1;t<this.offsetLength;t++)e.push(`else if (yC < uniforms.offset${[t]}){ setOutputAtCoords(coords.x, coords.y, getT${t}(yR, yC - uniforms.offset${t-1})); }`);const t=this.offsetLength,n=this.offsetLength-1;e.push(`else { setOutputAtCoords(coords.x, coords.y, getT${t}(yR, yC - uniforms.offset${n})); }`)}else e.push("setOutputAtCoords(coords.x, coords.y, getT0(yR, yC));");return`\n      ${wN("index")} {\n        for(var i = 0; i < ${this.workPerThread}; i = i + 1) {\n          let flatIndex = index * ${this.workPerThread} + i;\n          if(flatIndex < uniforms.size) {\n            let coords = getCoordsFromIndex(flatIndex);\n            let yR = coords.x;\n            let yC = coords.y;\n\n            ${e.join("\n        ")}\n          }\n        }\n      }\n    `}}function D_(e){const{inputs:t,backend:n}=e,{input:r}=t;return vE({inputs:{x:n.tensorMap.get(r.dataId).complexTensorInfos.imag},backend:n})}const M_={kernelName:_t,backendName:"webgpu",kernelFunc:D_};function L_(e,t,n){const r=e[0].dtype;if("complex64"===r){const r=e.map((e=>N_({inputs:{input:e},backend:n}))),s=e.map((e=>D_({inputs:{input:e},backend:n}))),a=L_(r,t,n),o=L_(s,t,n),i=kE({inputs:{real:a,imag:o},backend:n});return r.forEach((e=>n.disposeData(e.dataId))),s.forEach((e=>n.disposeData(e.dataId))),n.disposeData(a.dataId),n.disposeData(o.dataId),i}let s=n.shouldExecuteOnCPU(e);if("string"===r&&(s=!0),s){const s=e.map((e=>{const r=B(e.shape.slice(t));return fE({inputs:{x:e},backend:n,attrs:{shape:[-1,r]}})})),a=s.map((e=>({vals:n.readSync(e.dataId),shape:e.shape}))),o=Fd(s.map((e=>e.shape)),1),i=1===s[0].shape[0],u=uR(a,o,r,i),l=Fd(e.map((e=>e.shape)),t),c=n.makeTensorInfo(l,r,u);return s.forEach((e=>n.disposeData(e.dataId))),c}const a=n.device.limits.maxStorageBuffersPerShaderStage-1;if(e.length>a){const r=[];for(let s=0;s<e.length;s+=a){const o=e.slice(s,s+a);r.push(L_(o,t,n))}const s=L_(r,t,n);for(const e of r)n.disposeData(e.dataId);return s}const{tensors2D:o,outShape:i}=function(e,t,n){const r=Fd(e.map((e=>e.shape)),t);return{tensors2D:e.map((e=>fE({inputs:{x:e},backend:n,attrs:{shape:[B(e.shape.slice(0,t)),B(e.shape.slice(t))]}}))),outShape:r}}(e,t,n),u=o.map((e=>e.shape)),l=new P_(u),c=[],h=new Array(u.length-1);if(h.length>0){h[0]=u[0][1],c.push({type:"int32",data:[h[0]]});for(let e=1;e<h.length;e++)h[e]=h[e-1]+u[e][1],c.push({type:"int32",data:[h[e]]})}const d=n.runWebGPUProgram(l,o,o[0].dtype,c);o.forEach((e=>n.disposeData(e.dataId)));const p=fE({inputs:{x:d},backend:n,attrs:{shape:i}});return n.disposeData(d.dataId),p}function B_(e){const{inputs:t,backend:n,attrs:r}=e,{axis:s}=r,a=j(s,t[0].shape)[0],o=t.map((e=>e.shape));Od(o,a);const i=Fd(t.map((e=>e.shape)),a);if(0===B(i))return n.makeTensorInfo(i,t[0].dtype,[]);const u=t.filter((e=>B(e.shape)>0));return 1===u.length?vE({inputs:{x:u[0]},backend:n}):L_(u,a,n)}const z_={kernelName:je,backendName:"webgpu",kernelFunc:B_};class U_{constructor(e,t,n,r,s=!1,a=null,o=!1,i=!1){this.variableNames=["x","W"],this.uniforms="filterDims : vec2<i32>, pad : vec2<i32>, stride : vec2<i32>, dilation : vec2<i32>, dimAOuter : i32, dimBOuter : i32, dimInner : i32,",this.outputShape=e.outShape,this.isChannelsLast="channelsLast"===e.dataFormat,this.isVec4=((e.inChannels%4==0||e.inChannels%3==0)&&this.isChannelsLast||e.outWidth%4==0&&!this.isChannelsLast)&&e.outChannels%4==0,this.dispatchLayout=this.isChannelsLast?{x:[3],y:[1,2],z:[0]}:{x:[2,3],y:[1],z:[0]},this.workgroupSize=_N(this.dispatchLayout,this.outputShape,this.isVec4),this.elementsPerThread=AN(this.dispatchLayout,this.outputShape,this.isVec4),this.dispatch=RN(this.dispatchLayout,this.outputShape,this.workgroupSize,this.elementsPerThread),this.isVec4?(this.isChannelsLast&&e.inChannels%4!=0?(this.innerElementSize=3,this.variableTypes=["f32","vec4<f32>"]):(this.innerElementSize=4,this.variableTypes=["vec4<f32>","vec4<f32>"]),s&&(this.variableNames.push("bias"),this.variableTypes.push("vec4<f32>")),o&&(this.variableNames.push("preluActivationWeights"),this.variableTypes.push("vec4<f32>"))):(this.innerElementSize=this.elementsPerThread[0],s&&this.variableNames.push("bias"),o&&this.variableNames.push("preluActivationWeights")),this.sequentialAccessByThreads=i,this.addBias=s,this.activation=a,this.hasPreluActivationWeights=o,this.tileAOuter=this.workgroupSize[1]*this.elementsPerThread[1],this.tileBOuter=this.workgroupSize[0]*this.elementsPerThread[0],this.tileInner=Math.max(this.workgroupSize[0]*this.innerElementSize,this.workgroupSize[1]),this.fitAOuter=t%this.tileAOuter==0,this.fitBOuter=n%this.tileBOuter==0,this.fitInner=r%this.tileInner==0,this.shaderKey=`conv2DMM_${this.elementsPerThread}_${this.activation}}_${this.fitAOuter}_${this.fitBOuter}_${this.fitInner}_${this.isVec4}_${this.innerElementSize}_${this.isChannelsLast}_${this.sequentialAccessByThreads}`}getUserCode(){const e=this.isVec4?rE(this.elementsPerThread,this.workgroupSize,!this.isChannelsLast,this.tileInner):aE(this.elementsPerThread,this.workgroupSize,!this.isChannelsLast,this.tileInner,!1,null,this.sequentialAccessByThreads),t=this.isVec4?[this.innerElementSize,4,4]:[1,1,1];return`\n    ${function(e,t,n,r,s=!1,a=null,o=!1,i=4,u=4,l=4){const c=e?"\n      let coord = vec4<i32>(batch, xRow, xCol, xCh);\n      ":"\n      let coord = vec4<i32>(batch, xCh, xRow, xCol);\n      ",h=e?"\n      let coords = vec4<i32>(\n        batch,\n        row / outWidth,\n        row % outWidth,\n        col);\n      ":"\n      let coords = vec4<i32>(\n        batch,\n        row,\n        col / outWidth,\n        col % outWidth);\n      ",d=e?"uniforms.xShape[1]":"uniforms.xShape[2]",p=e?"uniforms.xShape[2]":"uniforms.xShape[3]",f=e?"row":"col",m=e?"col":"row",g=`\n      let inChannels = uniforms.wShape[2];\n      let outWidth = ${e?"uniforms.outShape[2]":"uniforms.outShape[3]"};\n      let outRow = ${f} / outWidth;\n      let outCol = ${f} % outWidth;\n\n      let WRow = ${m} / (uniforms.filterDims[1] * inChannels);\n      let WCol = ${m} / inChannels % uniforms.filterDims[1];\n      let xRow = outRow * uniforms.stride[0] + uniforms.dilation[0] * WRow - uniforms.pad[0];\n      let xCol = outCol * uniforms.stride[1] + uniforms.dilation[1] * WCol - uniforms.pad[1];\n      let xCh = ${m} % inChannels;\n      var resData = ${ZN(i)}(0.0);\n      // The bounds checking is always needed since we use it to pad zero for\n      // the 'same' padding type.\n      if (xRow >= 0 && xRow < ${d} && xCol >= 0 && xCol < ${p}) {\n        ${c}\n        let xIndex = getIndexFromCoords4D(coord, uniforms.xShape);\n        ${(e=>{switch(e){case 1:return"resData = x[xIndex];";case 3:return"resData = vec3<f32>(x[xIndex], x[xIndex + 1], x[xIndex + 2]);";case 4:return"resData = x[xIndex / 4];";default:throw new Error(`innerElementSize ${e} is not supported.`)}})(i)}\n      }\n      return resData;`,y=e?t&&r?`\n      let col = colIn * ${i};\n      ${g}`:`\n      let col = colIn * ${i};\n      if (row < uniforms.dimAOuter && col < uniforms.dimInner) {\n        ${g}\n      }\n      return ${ZN(i)}(0.0);`:r&&n?`\n      let col = colIn * ${i};\n      ${g}`:`\n      let col = colIn * ${i};\n      if (row < uniforms.dimInner && col < uniforms.dimBOuter) {\n        ${g}\n      }\n      return ${ZN(i)}(0.0);`,x=""+(e=>{switch(e){case 1:return"return W[row * uniforms.wShape[3] + colIn];";case 4:return"return W[row * uniforms.wShape[3] / 4 + colIn];";default:throw new Error(`innerElementSize ${e} is not supported.`)}})(u),b=ZN(l),v=ZN(e?i:u),w=ZN(e?u:i);return`\n      ${JN(a,o,4===l,4)}\n      fn mm_readA(batch: i32, row : i32, colIn : i32) -> ${v} {\n        ${e?y:x}\n      }\n\n      fn mm_readB(batch: i32, row : i32, colIn : i32) -> ${w} {\n        ${e?x:y}\n      }\n\n      fn mm_write(batch: i32, row : i32, colIn : i32, valueIn : ${b}) {\n        let col = colIn * ${l};\n        if (row < uniforms.dimAOuter && col < uniforms.dimBOuter)\n        {\n        var value = valueIn;\n        let outWidth = ${e?"uniforms.outShape[2]":"uniforms.outShape[3]"};\n        ${h}\n        ${eE(s,a)}\n        setOutputAtCoords(coords[0], coords[1], coords[2], coords[3], value);\n        }\n      }`}(this.isChannelsLast,this.fitAOuter,this.fitBOuter,this.fitInner,this.addBias,this.activation,this.hasPreluActivationWeights,t[0],t[1],t[2])}\n    ${e}\n  `}}class V_{constructor(e,t=!1,n=null,r=!1){this.variableNames=["x","W"],this.uniforms="filterDims: vec2<i32>, pad: vec2<i32>, stride: vec2<i32>, dilation: vec2<i32>,",this.workgroupSize=[4,4,8],this.outputShape=e.outShape,this.isChannelsLast="channelsLast"===e.dataFormat,this.dispatchLayout=this.isChannelsLast?{x:[2],y:[1],z:[0,3]}:{x:[3],y:[2],z:[0,1]},this.dispatch=RN(this.dispatchLayout,this.outputShape,this.workgroupSize),this.addBias=t,this.activation=n,this.hasPreluActivationWeights=r,t&&this.variableNames.push("bias"),r&&this.variableNames.push("preluActivationWeights"),this.shaderKey=`conv2dnaive_${this.activation}_${this.isChannelsLast}`}getUserCode(){return`\n       ${JN(this.activation,this.hasPreluActivationWeights,!1,4)}\n       fn readInp(batch : i32, row : i32, col : i32, chan : i32) -> f32{\n         let coords = vec4<i32>(batch, row, col, chan);\n         if (coordsInBounds4D(coords, uniforms.xShape)) {\n           return  getX(batch, row, col, chan);\n         } else {\n          return 0.0;\n         }\n       }\n       fn readFilt(row : i32, col : i32, xChannel : i32, outChannel : i32) -> f32{\n         let coords = vec4<i32>(row, col, xChannel, outChannel);\n         if(coordsInBounds4D(coords, uniforms.wShape)) {\n           return getW(row, col, xChannel, outChannel);\n          } else {\n            return 0.0;\n          }\n       }\n       fn writeResult(batch : i32, row : i32, col : i32, chan : i32, valueIn : f32) {\n         let coords = ${this.isChannelsLast?"vec4<i32>(batch, row, col, chan);":"vec4<i32>(batch, chan, row, col);"}\n         if (coordsInBounds4D(coords, uniforms.outShape)) {\n           var value = valueIn;\n           ${eE(this.addBias,this.activation)}\n           setOutputAtCoords(coords.x, coords.y, coords.z, coords.w, value);\n         }\n       }\n       ${wN("index")} {\n         let coords = getOutputCoords();\n         let batch = coords[0];\n         let outChannel = ${this.isChannelsLast?"coords[3];":"coords[1];"}\n         let outRow = ${this.isChannelsLast?"coords[1];":"coords[2];"}\n         let outCol = ${this.isChannelsLast?"coords[2];":"coords[3];"}\n         var acc : f32 = 0.0;\n         for (var row = 0; row < uniforms.filterDims[0]; row = row + 1) {\n           for (var col = 0; col < uniforms.filterDims[1]; col = col + 1) {\n             let xRow = outRow * uniforms.stride[0] + uniforms.dilation[0] * row - uniforms.pad[0];\n             let xCol = outCol * uniforms.stride[1] + uniforms.dilation[1] * col - uniforms.pad[1];\n             for (var xChannel = 0; xChannel < ${this.isChannelsLast?"uniforms.xShape[3];":"uniforms.xShape[1];"} xChannel = xChannel + 1) {\n               ${this.isChannelsLast?"let v = readInp(batch, xRow, xCol, xChannel);":"let v = readInp(batch, xChannel, xRow, xCol);"}\n               let f = readFilt(row, col, xChannel, outChannel);\n               acc = acc + v * f;\n             }\n           }\n         }\n         writeResult(batch, outRow, outCol, outChannel, acc);\n       }\n     `}}class W_{constructor(e,t){this.variableNames=["x"],this.uniforms="pad : vec2<i32>, stride : vec2<i32>, dilation : vec2<i32>, outWidth : i32, itemsPerBlockRow : i32,\n       inChannels : i32,",this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=e,this.dispatchLayout=ON(this.outputShape),this.dispatch=RN(this.dispatchLayout,this.outputShape,this.workgroupSize),this.isChannelsLast=t,this.shaderKey="im2col_"+this.isChannelsLast}getUserCode(){const e=this.isChannelsLast?1:2,t=this.isChannelsLast?2:3,n=this.isChannelsLast?"coords[1]":"coords[2]",r=this.isChannelsLast?"coords[2]":"coords[1]",s=this.isChannelsLast?"getX(batch, xRow, xCol, ch)":"getX(batch, ch, xRow, xCol)";return`\n    ${wN("index")} {\n      let coords = getCoordsFromIndex(index);\n      if(index < uniforms.size) {\n        let batch = coords[0];\n        let row = ${n};\n        let col = ${r};\n        let offsetY = (row / uniforms.outWidth) * uniforms.stride[0] - uniforms.pad[0];\n        let xRow = offsetY + uniforms.dilation[0] * (col / uniforms.itemsPerBlockRow);\n        var value = 0.0;\n        if(xRow < uniforms.xShape[${e}] && xRow >= 0) {\n          let offsetX = (row % uniforms.outWidth) * uniforms.stride[1] -\n              uniforms.pad[1];\n          let xCol = offsetX + uniforms.dilation[1] * ((col %\n              uniforms.itemsPerBlockRow) / uniforms.inChannels);\n          let ch = col % uniforms.inChannels;\n          if(xCol < uniforms.xShape[${t}] && xCol >= 0) {\n            value = ${s};\n          }\n        }\n        setOutputAtIndex(index, value);\n      }\n    }\n   `}}function G_(e,t){const n=e.length;return n>=3?t?[...e.slice(0,-3),e[n-3]*e[n-2],e[n-1]]:[...e.slice(0,-3),e[n-3],e[n-2]*e[n-1]]:!t&&1===n&&e[0]>1?[e[0],1]:null}function H_({x:e,filter:t,convInfo:n,backend:r,bias:s=null,preluActivationWeights:a=null,leakyreluAlpha:o=0,activation:i=null}){const u=null!=s,l=null!=a,c="channelsLast"===n.dataFormat,h=c&&n.filterHeight===n.inHeight&&n.filterWidth===n.inWidth&&"VALID"===n.padInfo.type,d=fe().getBool("WEBGPU_USE_NAIVE_CONV2D_DEBUG");if(!d&&(h||1===n.filterHeight&&1===n.filterWidth&&1===n.dilationHeight&&1===n.dilationWidth&&1===n.strideHeight&&1===n.strideWidth&&("SAME"===n.padInfo.type||"VALID"===n.padInfo.type)))return function({x:e,filter:t,convInfo:n,backend:r,bias:s=null,preluActivationWeights:a=null,leakyreluAlpha:o=0,activation:i=null}){const u="channelsLast"===n.dataFormat,l=!u,c=[];let h,d;if(u&&n.filterHeight===n.inHeight&&n.filterWidth===n.inWidth&&"VALID"===n.padInfo.type){const s=n.inHeight*n.inWidth*n.inChannels;h=fE({inputs:{x:e},backend:r,attrs:{shape:[1,n.batchSize,s]}}),d=fE({inputs:{x:t},backend:r,attrs:{shape:[1,s,n.outChannels]}})}else h=fE({inputs:{x:e},backend:r,attrs:{shape:u?[n.batchSize,n.inHeight*n.inWidth,n.inChannels]:[n.batchSize,n.inChannels,n.inHeight*n.inWidth]}}),d=fE({inputs:{x:t},backend:r,attrs:{shape:[1,n.inChannels,n.outChannels]}});if(c.push(h),c.push(d),null!=a){const e=G_(a.shape,u);null!=e&&(a=fE({inputs:{x:a},backend:r,attrs:{shape:e}}),c.push(a))}if(null!=s){const e=G_(s.shape,u);null!=e&&(s=fE({inputs:{x:s},backend:r,attrs:{shape:e}}),c.push(s))}const p=gE({a:u?h:d,b:u?d:h,transposeA:l,transposeB:!1,backend:r,bias:s,activation:i,preluActivationWeights:a,leakyreluAlpha:o}),f=fE({inputs:{x:p},backend:r,attrs:{shape:n.outShape}});c.push(p);for(const e of c)r.disposeData(e.dataId);return f}({x:e,filter:t,convInfo:n,backend:r,bias:s,activation:i,preluActivationWeights:a,leakyreluAlpha:o});const p=fe().getNumber("WEBGPU_THRESHOLD_TO_INCREASE_WORKGROUPS_FOR_MATMUL"),f=p>0?p:r.thresholdToIncreaseWorkgroups,m=n.batchSize*Math.ceil(n.outHeight*n.outWidth/32)*Math.ceil(n.outChannels/32);if(fe().getBool("WEBGPU_CONV_SEPARATE_IM2COL_SHADER")||m<=f)return function({x:e,filter:t,convInfo:n,backend:r,bias:s=null,preluActivationWeights:a=null,leakyreluAlpha:o=0,activation:i=null}){const{filterWidth:u,filterHeight:l,inChannels:c,strideWidth:h,strideHeight:d,padInfo:p,outWidth:f,outHeight:m,dilationWidth:g,dilationHeight:y,dataFormat:x}=n,b="channelsLast"===x,v=u*l*c,w=m*f,k=b?[n.batchSize,w,v]:[n.batchSize,v,w],S=new W_(k,b),C=[{type:"int32",data:[p.top,p.left]},{type:"int32",data:[d,h]},{type:"int32",data:[y,g]},{type:"int32",data:[f]},{type:"int32",data:[c*u]},{type:"int32",data:[c]}],I=r.runWebGPUProgram(S,[e],e.dtype,C),T=[];T.push(I);const $=fE({inputs:{x:t},backend:r,attrs:{shape:[1,v,-1]}});if(T.push($),null!=a){const e=G_(a.shape,b);null!=e&&(a=fE({inputs:{x:a},backend:r,attrs:{shape:e}}),T.push(a))}if(null!=s){const e=G_(s.shape,b);null!=e&&(s=fE({inputs:{x:s},backend:r,attrs:{shape:e}}),T.push(s))}const N=gE({a:b?I:$,b:b?$:I,transposeA:!b,transposeB:!1,backend:r,bias:s,activation:i,preluActivationWeights:a,leakyreluAlpha:o}),E=fE({inputs:{x:N},backend:r,attrs:{shape:n.outShape}});T.push(N);for(const e of T)r.disposeData(e.dataId);return E}({x:e,filter:t,convInfo:n,backend:r,bias:s,preluActivationWeights:a,leakyreluAlpha:o,activation:i});let g;const y=[n.padInfo.top,n.padInfo.left],x=[{type:"int32",data:[n.filterHeight,n.filterWidth]},{type:"int32",data:[...y]},{type:"int32",data:[n.strideHeight,n.strideWidth]},{type:"int32",data:[n.dilationHeight,n.dilationWidth]}];if(d)g=new V_(n,u,i,l);else{const e=c?n.outHeight*n.outWidth:n.outChannels,t=c?n.outChannels:n.outHeight*n.outWidth,s=n.filterHeight*n.filterWidth*n.inChannels;x.push({type:"int32",data:[e]},{type:"int32",data:[t]},{type:"int32",data:[s]});const a=r.adapterInfo.isIntel();g=new U_(n,e,t,s,u,i,l,a)}const b=[],v=[e,t];u&&(c||1!==s.shape.length||(s=fE({inputs:{x:s},backend:r,attrs:{shape:[s.shape[0],1,1]}}),b.push(s)),v.push(s)),l&&(c||1!==a.shape.length||(a=fE({inputs:{x:a},backend:r,attrs:{shape:[a.shape[0],1,1]}}),b.push(a)),v.push(a)),"leakyrelu"===i&&(x.push({type:"float32",data:[o]}),g.uniforms+=" alpha : f32,");const w=r.runWebGPUProgram(g,v,e.dtype,x);for(const e of b)r.disposeData(e.dataId);return w}const j_={kernelName:Ke,backendName:"webgpu",kernelFunc:function(e){const{inputs:t,attrs:n,backend:r}=e,{x:s,filter:a}=t,{strides:o,pad:i,dataFormat:u,dilations:l,dimRoundingMode:c}=n,h=Gi(u);return H_({x:s,filter:a,convInfo:Fi(s.shape,a.shape,o,l,i,c,!1,h),backend:r})}};class K_{constructor(e){this.variableNames=["dy","W"],this.uniforms="filterDims : vec2<i32>, pads : vec2<i32>, stride : vec2<i32>, outBackprop : vec4<i32>,",this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=e.inShape,this.dispatchLayout=ON(this.outputShape),this.dispatch=RN(this.dispatchLayout,this.outputShape,this.workgroupSize),this.isChannelsLast="channelsLast"===e.dataFormat,this.shaderKey="conv2DDerInput_"+this.isChannelsLast}getUserCode(){const e=this.isChannelsLast?1:2,t=this.isChannelsLast?2:3,n=this.isChannelsLast?3:1;return`\n    ${wN("index")} {\n      if(index < uniforms.size) {\n        let coords = getCoordsFromIndex(index);\n        let batch = coords[0];\n        let d1 = coords[${n}];\n\n        let dyCorner = vec2<i32>(coords[${e}], coords[${t}]) - uniforms.pads;\n        let dyRCorner = dyCorner.x;\n        let dyCCorner = dyCorner.y;\n\n        // Convolve dy(?, ?, d2) with w(:, :, d1, d2) to compute dx(xR, xC, d1).\n        // ? = to be determined. : = across all values in that axis.\n        var dotProd = 0.0;\n        for (var wR = 0; wR < uniforms.filterDims.x; wR = wR + 1) {\n          let dyR = (f32(dyRCorner) + f32(wR)) / f32(uniforms.stride.x);\n          let wRPerm = uniforms.filterDims.x - 1 - wR;\n          if (dyR < 0.0 || dyR >= f32(uniforms.outBackprop[1]) || fract(dyR) > 0.0 ||\n              wRPerm < 0) {\n            continue;\n          }\n          let idyR = i32(dyR);\n\n          for (var wC = 0; wC < uniforms.filterDims.y; wC = wC + 1) {\n            let dyC = (f32(dyCCorner) + f32(wC)) / f32(uniforms.stride.y);\n            let wCPerm = uniforms.filterDims.y - 1 - wC;\n            if (dyC < 0.0 || dyC >= f32(uniforms.outBackprop[2]) ||\n                fract(dyC) > 0.0 || wCPerm < 0) {\n              continue;\n            }\n            let idyC = i32(dyC);\n\n            for (var d2 = 0; d2 < uniforms.outBackprop[3]; d2 = d2 + 1) {\n              if (${this.isChannelsLast}) {\n                let xValue = getDy(batch, idyR, idyC, d2);\n                let wValue = getW(wRPerm, wCPerm, d1, d2);\n                dotProd = dotProd + xValue * wValue;\n              } else {\n                let xValue = getDy(batch, d2, idyR, idyC);\n                let wValue = getW(wRPerm, wCPerm, d1, d2);\n                dotProd = dotProd + xValue * wValue;\n              }\n\n            }\n          }\n        }\n        setOutputAtIndex(index, dotProd);\n      }\n    }\n  `}}class q_{constructor(e){this.variableNames=["x","dy"],this.uniforms="pad : vec2<i32>, stride : vec2<i32>, batchSize : i32, outHeight : i32, outWidth : i32, inHeight : i32, inWidth : i32,",this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=e.filterShape,this.dispatchLayout=ON(this.outputShape),this.dispatch=RN(this.dispatchLayout,this.outputShape,this.workgroupSize),this.isChannelsLast="channelsLast"===e.dataFormat,this.shaderKey="conv2DDerFilter_"+this.isChannelsLast}getUserCode(){return`\n    ${wN("index")} {\n      if(index < uniforms.size) {\n        let coords = getCoordsFromIndex(index);\n        let wR = coords[0];\n        let wC = coords[1];\n        let d1 = coords[2];\n        let d2 = coords[3];\n\n        // Convolve x(?, ?, d1) with dy(:, :, d2) to get dw(wR, wC, d1, d2).\n        // ? = to be determined. : = across all values in that axis.\n        var dotProd = 0.0;\n        for (var b = 0; b < uniforms.batchSize; b = b + 1) {\n          for (var yR = 0; yR < uniforms.outHeight; yR = yR + 1) {\n            let xR = wR + yR * uniforms.stride[0] - uniforms.pad[0];\n            if (xR < 0 || xR >= uniforms.inHeight) {\n              continue;\n            }\n\n            for (var yC = 0; yC < uniforms.outWidth; yC = yC + 1) {\n              let xC = wC + yC * uniforms.stride[1] - uniforms.pad[1];\n\n              if (xC < 0 || xC >= uniforms.inWidth) {\n                continue;\n              }\n\n              if (${this.isChannelsLast}) {\n                let dyValue = getDy(b, yR, yC, d2);\n                let xValue = getX(b, xR, xC, d1);\n                dotProd = dotProd + xValue * dyValue;\n              } else {\n                let dyValue = getDy(b, d2, yR, yC);\n                let xValue = getX(b, d1, xR, xC);\n                dotProd = dotProd + xValue * dyValue;\n              }\n            }\n          }\n        }\n        setOutputAtIndex(index, dotProd);\n      }\n    }\n  `}}const X_={kernelName:qe,backendName:"webgpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,dy:a}=t,{strides:o,pad:i,dataFormat:u,dimRoundingMode:l,filterShape:c}=r,h=Gi(u),d=Fi(s.shape,c,o,1,i,l,!1,h),p=new q_(d),f=[{type:"int32",data:[d.padInfo.top,d.padInfo.left]},{type:"int32",data:[d.strideHeight,d.strideWidth]},{type:"int32",data:[d.batchSize]},{type:"int32",data:[d.outHeight]},{type:"int32",data:[d.outWidth]},{type:"int32",data:[d.inHeight]},{type:"int32",data:[d.inWidth]}];return n.runWebGPUProgram(p,[s,a],s.dtype,f)}};class Y_{constructor(e){this.variableNames=["x","W"],this.uniforms="filterDims : vec2<i32>, pads : vec2<i32>, stride : vec2<i32>, outBackprop : vec4<i32>, dimAOuter : i32, dimBOuter : i32, dimInner : i32,",this.outputShape=e.inShape,D("channelsLast"===e.dataFormat,(()=>"TODO: NCHW is unimplemented")),this.isVec4=e.inChannels%4==0&&e.outChannels%4==0,this.dispatchLayout={x:[3],y:[1,2],z:[0]},this.workgroupSize=_N(this.dispatchLayout,this.outputShape,this.isVec4),this.elementsPerThread=AN(this.dispatchLayout,this.outputShape,this.isVec4),this.dispatch=RN(this.dispatchLayout,this.outputShape,this.workgroupSize,this.elementsPerThread),this.isVec4&&(this.variableTypes=["vec4<f32>","f32"]),this.shaderKey=`conv2DDerInputMM_${this.isVec4}_${this.elementsPerThread}`}getUserCode(){const e=this.isVec4?rE(this.elementsPerThread,this.workgroupSize):aE(this.elementsPerThread,this.workgroupSize);return`\n    ${function(e=4){const t=`if (row < uniforms.dimAOuter && col < uniforms.dimInner) {\n        \n      let outRow = row / uniforms.outShape[2];\n      let outCol = row % uniforms.outShape[2];\n\n      let WRow = col / (uniforms.filterDims[1] * uniforms.outBackprop[3]);\n      let WCol = col / uniforms.outBackprop[3] % uniforms.filterDims[1];\n      let xR = f32(outRow - uniforms.pads[0] + WRow) / f32(uniforms.stride[0]);\n      let xC = f32(outCol - uniforms.pads[1] + WCol) / f32(uniforms.stride[1]);\n      if (xR < 0.0 || xR >= f32(uniforms.outBackprop[1]) || fract(xR) > 0.0) {\n        return ${ZN(e)}(0.0);\n      }\n      if (xC < 0.0 || xC >= f32(uniforms.outBackprop[2]) || fract(xC) > 0.0) {\n        return ${ZN(e)}(0.0);\n      }\n      let coord = vec4<i32>(\n          batch,\n          i32(xR),\n          i32(xC),\n          col % uniforms.outBackprop[3]);\n      return x[getIndexFromCoords4D(coord, uniforms.xShape)/${e}];\n      }\n      return ${ZN(e)}(0.0);`;return`\n  fn mm_readA(batch: i32, row : i32, colIn : i32) -> ${ZN(e)} {\n    let col = colIn * ${e};\n    ${t}\n  }\n\n  fn mm_readB(batch: i32, row : i32, colIn : i32) -> ${ZN(e)} {\n    let col = colIn * ${e};\n    let coordX = uniforms.filterDims.x - 1 -\n        row / (uniforms.filterDims[1] * uniforms.outBackprop[3]);\n    let coordY = uniforms.filterDims.y - 1 -\n        (row / uniforms.outBackprop[3]) % uniforms.filterDims[1];\n    if (row < uniforms.dimInner && col < uniforms.dimBOuter &&\n        coordX >= 0 && coordY >= 0) {\n      let rowInner = row % uniforms.outBackprop[3];\n      let coord = vec4<i32>(coordX, coordY, col, rowInner);\n      ${(e=>{switch(e){case 1:return"return W[getIndexFromCoords4D(coord, uniforms.wShape)];";case 4:return"\n            let coord1 = vec4<i32>(coordX, coordY, col + 1, rowInner);\n            let coord2 = vec4<i32>(coordX, coordY, col + 2, rowInner);\n            let coord3 = vec4<i32>(coordX, coordY, col + 3, rowInner);\n            let v0 = W[getIndexFromCoords4D(coord, uniforms.wShape)];\n            let v1 = W[getIndexFromCoords4D(coord1, uniforms.wShape)];\n            let v2 = W[getIndexFromCoords4D(coord2, uniforms.wShape)];\n            let v3 = W[getIndexFromCoords4D(coord3, uniforms.wShape)];\n            return vec4<f32>(v0, v1, v2, v3);\n            ";default:throw new Error(`innerElementSize ${e} is not supported.`)}})(e)}\n    }\n    return ${ZN(e)}(0.0);\n  }\n\n  fn mm_write(batch: i32, row : i32, colIn : i32, valueInput : ${ZN(e)}) {\n    let col = colIn * ${e};\n    if (row < uniforms.dimAOuter && (col + ${e-1}) < uniforms.dimBOuter) {\n      var value = valueInput;\n      let outCoord = vec4<i32>(\n          batch,\n          row / uniforms.outShape[2],\n          row % uniforms.outShape[2],\n          col);\n      result[getIndexFromCoords4D(outCoord, uniforms.outShape)/${e}] = value;\n    }\n  }`}(this.isVec4?4:1)}\n    ${e}\n    `}}const Q_={kernelName:Xe,backendName:"webgpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:s,filter:a}=t,{inputShape:o,strides:i,pad:u,dataFormat:l,dimRoundingMode:c}=r,h=Gi(l),d=Fi(o,a.shape,i,1,u,c,!1,h),p=[{type:"int32",data:[d.filterHeight,d.filterWidth]},{type:"int32",data:[d.filterHeight-1-d.padInfo.top,d.filterWidth-1-d.padInfo.left]},{type:"int32",data:[d.strideHeight,d.strideWidth]},{type:"int32",data:[d.batchSize,d.outHeight,d.outWidth,d.outChannels]}];let f;if(fe().getBool("WEBGPU_USE_NAIVE_CONV2D_TRANSPOSE")||d.filterHeight<=2&&d.filterWidth<=2&&d.outChannels<=16&&1===d.inChannels)f=new K_(d);else{f=new Y_(d);const e=d.inHeight*d.inWidth,t=d.inChannels,n=d.filterHeight*d.filterWidth*d.outChannels;p.push({type:"uint32",data:[e]},{type:"uint32",data:[t]},{type:"uint32",data:[n]})}return n.runWebGPUProgram(f,[s,a],"float32",p)}},Z_={kernelName:Ze,backendName:"webgpu",kernelFunc:IE({opType:qN.COS})},J_={kernelName:Je,backendName:"webgpu",kernelFunc:IE({opType:qN.COSH})};class eA{constructor(e,t,n,r){this.variableNames=["Image","Boxes","BoxInd"],this.uniforms="extrapolationValue : f32,",this.workgroupSize=[64,1,1],this.size=!0;const[s]=t;this.outputShape=[s,n[0],n[1],e],this.dispatchLayout=ON(this.outputShape),this.dispatch=RN(this.dispatchLayout,this.outputShape,this.workgroupSize),this.methodId="bilinear"===r?1:0,this.cropHeightBiggerThan1=this.outputShape[1]>1,this.cropWidthBiggerThan1=this.outputShape[2]>1,this.shaderKey=`cropAndResize_${this.methodId}_${this.cropHeightBiggerThan1}_${this.cropWidthBiggerThan1}`}getUserCode(){const[e,t]=["f32(uniforms.imageShape[1] - 1)","f32(uniforms.imageShape[2] - 1)"],[n,r,s]=this.cropHeightBiggerThan1?[`(${e} / f32(uniforms.outShape[1] - 1))`,"(y2-y1) * height_ratio",`y1*${e} + f32(y)*(height_scale)`]:["0.0","0.0","0.5 * (y1+y2) * "+e],[a,o,i]=this.cropWidthBiggerThan1?[`(${t} / f32(uniforms.outShape[2] - 1))`,"(x2-x1) * width_ratio",`x1*${t} + f32(x)*(width_scale)`]:["0.0","0.0","0.5 * (x1+x2) * "+t];return`\n    ${wN("index")} {\n      if (index < uniforms.size) {\n        let coords = getCoordsFromIndex(index);\n        let height_ratio = f32(${n});\n        let width_ratio = f32(${a});\n        let b = coords[0];\n        let y = coords[1];\n        let x = coords[2];\n        let d = coords[3];\n        // get box vals\n        let y1 = getBoxes(b, 0);\n        let x1 = getBoxes(b, 1);\n        let y2 = getBoxes(b, 2);\n        let x2 = getBoxes(b, 3);\n        // get image in batch index\n        let bInd = i32(round(getBoxInd(b)));\n        if(bInd < 0 || bInd >= uniforms.outShape[0]) {\n          return;\n        }\n        let height_scale = ${r};\n        let width_scale = ${o};\n        let in_y = ${s};\n        if( in_y < 0.0 || in_y > ${e} ) {\n          setOutputAtIndex(index, uniforms.extrapolationValue);\n          return;\n        }\n        let in_x = ${i};\n        if( in_x < 0.0 || in_x > ${t} ) {\n          setOutputAtIndex(index, uniforms.extrapolationValue);\n          return;\n        }\n        let sourceFracIndexCR = vec2<f32>(in_x,in_y);\n        if(${this.methodId} == 1) {\n          // Compute the four integer indices.\n          let sourceFloorCR = vec2<i32>(sourceFracIndexCR);\n          let sourceCeilCR = vec2<i32>(ceil(sourceFracIndexCR));\n          let topLeft = getImage(bInd, sourceFloorCR.y, sourceFloorCR.x, d);\n          let bottomLeft = getImage(bInd, sourceCeilCR.y, sourceFloorCR.x, d);\n          let topRight = getImage(bInd, sourceFloorCR.y, sourceCeilCR.x, d);\n          let bottomRight = getImage(bInd, sourceCeilCR.y, sourceCeilCR.x, d);\n          let fracCR = sourceFracIndexCR - vec2<f32>(sourceFloorCR);\n          let top = topLeft + (topRight - topLeft) * fracCR.x;\n          let bottom = bottomLeft + (bottomRight - bottomLeft) * fracCR.x;\n          let newValue = top + (bottom - top) * fracCR.y;\n          setOutputAtIndex(index, newValue);\n        } else {\n          // Compute the coordinators of nearest neighbor point.\n          let sourceNearestCR = vec2<i32>(floor(\n            sourceFracIndexCR + vec2<f32>(0.5,0.5)));\n          let newValue = getImage(\n            bInd, sourceNearestCR.y, sourceNearestCR.x, d);\n          setOutputAtIndex(index, newValue);\n        }\n      }\n    }\n    `}}const tA={kernelName:nt,backendName:"webgpu",kernelFunc:e=>{const{inputs:t,backend:n,attrs:r}=e,{image:s,boxes:a,boxInd:o}=t,{cropSize:i,method:u,extrapolationValue:l}=r,c=new eA(s.shape[3],a.shape,i,u),h=[{type:"float32",data:[l]}];return n.runWebGPUProgram(c,[s,a,o],"float32",h)}};var nA;!function(e){e.Prod="*",e.Sum="+"}(nA||(nA={}));class rA{constructor(e,t,n,r){this.variableNames=["x"],this.uniforms="index : f32,",this.size=!0,this.workgroupSize=[128,1,1],this.outputShape=t,this.dispatchLayout=ON(this.outputShape),this.dispatch=RN(this.dispatchLayout,this.outputShape,this.workgroupSize),this.exclusive=n,this.reverse=r,this.op=e,this.shaderKey=`cum_${this.op}_${this.exclusive}_${this.reverse}`}getUserCode(){const e=this.outputShape.length,t=this.op===nA.Prod?"1.0":"0.0",n=this.exclusive?t:`getX(${sA(e,"coords",this.op)})`,r=this.outputShape[this.outputShape.length-1];let s="",a="";return this.exclusive?(s=this.reverse?"end != "+(r-1):"end != 0",a=this.reverse?"end + 1":"end - 1"):(s=this.reverse?"end + pow2 < "+r:"end >= pow2",a=this.reverse?"end + pow2":"end - pow2"),`\n      ${wN("index")} {\n       if (index < uniforms.size) {\n         var coords = getCoordsFromIndex(index);\n\n         let end = ${aA(e,"coords",this.op)};\n         var val = ${n};\n         let pow2 = i32(pow(2.0, uniforms.index));\n         if (${s}) {\n           let idx = ${a};\n           ${aA(e,"coords",this.op)} = idx;\n           val ${this.op}= getX(${sA(e,"coords",this.op)});\n         }\n         setOutputAtIndex(index, val);\n       }\n      }\n    `}}function sA(e,t,n){if(1===e)return""+t;if(2===e)return`${t}.x, ${t}.y`;if(3===e)return`${t}.x, ${t}.y, ${t}.z`;if(4===e)return`${t}.x, ${t}.y, ${t}.z, ${t}.w`;throw Error(`Cumulative ${n} for rank ${e} is not yet supported`)}function aA(e,t,n){if(1===e)return""+t;if(2===e)return t+".y";if(3===e)return t+".z";if(4===e)return t+".w";throw Error(`Cumulative ${n} for rank ${e} is not yet supported`)}function oA(e,t,n,r,s,a){const o=t.shape.length,i=Hu([r],o);let u=t;null!=i&&(u=KR({inputs:{x:t},backend:n,attrs:{perm:i}}));const l=Ku(1,o)[0];if(l!==o-1)throw new Error(`WebGPU cumprod shader expects an inner-most axis=${t.shape.length-1} but got axis=`+r);const c=u.shape[l];let h=vE({inputs:{x:u},backend:n});for(let t=0;t<=Math.ceil(Math.log2(c))-1;t++){const r=new rA(e,u.shape,!1,a),s=h,o=[{type:"float32",data:[t]}];h=n.runWebGPUProgram(r,[h],h.dtype,o),n.disposeData(s.dataId)}if(s){const t=new rA(e,u.shape,s,a),r=h,o=[{type:"float32",data:[0]}];h=n.runWebGPUProgram(t,[h],h.dtype,o),n.disposeData(r.dataId)}if(null!=i){const e=KR({inputs:{x:h},backend:n,attrs:{perm:ju(i)}});return n.disposeData(h.dataId),n.disposeData(u.dataId),e}return h}const iA={kernelName:et,backendName:"webgpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{axis:a,exclusive:o,reverse:i}=r;return oA(nA.Prod,s,n,a,o,i)}},uA={kernelName:tt,backendName:"webgpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{axis:a,exclusive:o,reverse:i}=r;return oA(nA.Sum,s,n,a,o,i)}},lA={kernelName:rt,backendName:"webgpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,weights:a}=t,{size:o,binaryOutput:i}=r,u=1===s.shape.length,l=B(a.shape)>0,c=a.dtype,h=u?[s.shape[0]]:[s.shape[0],s.shape[1]],d=dE({backend:n,attrs:{shape:u?[o]:[s.shape[0],o],value:0,dtype:c}}),p=new C_(h,l,i),f=[{type:"int32",data:[o]}],m=l?[s,a]:[s];return n.runWebGPUProgram(p,m,c,f,d)}};class cA{constructor(e,t){this.variableNames=["x"],this.workgroupSize=[64,1,1],this.size=!0,this.uniforms="blockSize : i32,",this.outputShape=e,this.dispatchLayout=ON(this.outputShape),this.dispatch=RN(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey="depthToSpace_"+t,this.dataFormat=t}getUserCode(){return`\n      ${wN("index")} {\n        if (index < uniforms.size) {\n          let coords = getCoordsFromIndex(index);\n          let b = coords[0];\n          let h = ${this.getHeightCoordString()};\n          let w = ${this.getWidthCoordString()};\n          let d = ${this.getDepthCoordString()};\n\n          let in_h = h / uniforms.blockSize;\n          let offset_h = h % uniforms.blockSize;\n          let in_w = w / uniforms.blockSize;\n          let offset_w = w % uniforms.blockSize;\n          let offset_d = (offset_h * uniforms.blockSize + offset_w) *\n            ${this.getOutputDepthSize()};\n          let in_d = d + offset_d;\n\n          let rlt = ${this.getInputSamplingString()};\n          setOutputAtIndex(index, rlt);\n        }\n      }`}getHeightCoordString(){return"NHWC"===this.dataFormat?"coords[1]":"coords[2]"}getWidthCoordString(){return"NHWC"===this.dataFormat?"coords[2]":"coords[3]"}getDepthCoordString(){return"NHWC"===this.dataFormat?"coords[3]":"coords[1]"}getOutputDepthSize(){return"NHWC"===this.dataFormat?"uniforms.outShape[3]":"uniforms.outShape[1]"}getInputSamplingString(){return"NHWC"===this.dataFormat?"getX(b, in_h, in_w, in_d)":"getX(b, in_d, in_h, in_w)"}}const hA={kernelName:st,backendName:"webgpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{blockSize:a,dataFormat:o}=r,i=s.shape[0],u=("NHWC"===o?s.shape[1]:s.shape[2])*a,l=("NHWC"===o?s.shape[2]:s.shape[3])*a,c=("NHWC"===o?s.shape[3]:s.shape[1])/(a*a),h=[{type:"int32",data:[a]}],d=new cA("NHWC"===o?[i,u,l,c]:[i,c,u,l],o);return n.runWebGPUProgram(d,[s],s.dtype,h)}};class dA{constructor(e,t,n,r=!1,s=null,a=!1){this.variableNames=["x","W"],this.uniforms="pad : vec2<i32>, inDims : vec2<i32>,",this.workgroupSize=[16,16,1],this.outputShape=e,this.dispatchLayout={x:[3],y:[2],z:[0,1]},this.dispatch=RN(this.dispatchLayout,this.outputShape,this.workgroupSize),r&&this.variableNames.push("bias"),a&&this.variableNames.push("preluActivationWeights"),this.addBias=r,this.activation=s,this.hasPreluActivation=a,this.filterHeight=t,this.filterWidth=n,this.shaderKey=`depthwiseNCHW_${this.activation}_${this.filterHeight}_${this.filterWidth}`}getUserCode(){const e=this.filterWidth*this.filterHeight,t=this.workgroupSize[0]*this.workgroupSize[1]*this.workgroupSize[2],n=this.workgroupSize[1]+this.filterHeight-1,r=this.workgroupSize[0]+this.filterWidth-1;return`\n      ${JN(this.activation,this.hasPreluActivation,!1,4)}\n\n      var<workgroup> mm_Asub : array<array<f32, ${r}>, ${n}>;\n      var<workgroup> mm_Bsub : array<array<f32, ${this.filterWidth}>, ${this.filterHeight}>;\n      fn readX(batch : i32, channel : i32, row : i32, col : i32) -> f32 {\n        var value = 0.0;\n        if (row >=0 && row < uniforms.inDims[0] && col >=0 && col < uniforms.inDims[1])\n        {\n          value = getX(batch, channel, row, col);\n        }\n        return value;\n      }\n\n      ${wN()} {\n        let coords = getOutputCoords();\n        let batch = coords[0];\n        let xRCCorner = vec2<i32>(coords.zw) - uniforms.pad;\n        let channelMul = uniforms.wShape[3];\n        let d1 = coords[1] / channelMul;\n        let q = coords[1] % channelMul;\n\n        let inputRowStart = xRCCorner.x;\n        let inputColStart = xRCCorner.y;\n\n        let localRow = i32(localId.y);\n        let localCol = i32(localId.x);\n\n        // Load one tile of X into local memory.\n        for (var inputRow = localRow; inputRow < ${n}; inputRow = inputRow + ${this.workgroupSize[1]}) {\n          for (var inputCol = localCol; inputCol < ${r}; inputCol = inputCol + ${this.workgroupSize[0]}) {\n            let rowOffset = inputRow - localRow;\n            let colOffset = inputCol - localCol;\n            mm_Asub[inputRow][inputCol] = readX(batch, d1, inputRowStart + rowOffset, inputColStart + colOffset);\n          }\n        }\n\n        // Load one tile of W into local memory.\n        var wIndex = i32(localIndex);\n        ${e<t?`if (wIndex < ${e})`:`for(; wIndex < ${e}; wIndex = wIndex + ${t})`}\n\n        {\n          let wRow = wIndex / ${this.filterWidth};\n          let wCol = wIndex % ${this.filterWidth};\n          mm_Bsub[wRow][wCol] = getW(wRow, wCol, d1, q);\n        }\n\n        workgroupBarrier();\n\n        var value = 0.0;\n        for (var wR = 0; wR < ${this.filterHeight}; wR = wR + 1) {\n          for (var wC = 0; wC < ${this.filterWidth}; wC = wC + 1) {\n            let xVal = mm_Asub[localRow + wR][localCol + wC];\n            let wVal = mm_Bsub[wR][wC];\n            value = fma(xVal, wVal, value);\n          }\n        }\n        ${eE(this.addBias,this.activation)}\n        if (coordsInBounds4D(coords, uniforms.outShape)) {\n          setOutputAtCoords(coords[0], coords[1], coords[2], coords[3], value);\n        }\n      }\n    `}}class pA{constructor(e,t=!1,n=null,r=!1){this.variableNames=["x","W"],this.uniforms="pad : vec2<i32>, inDims : vec2<i32>,",this.workgroupSize=[4,4,4],this.workPerThread=4,this.isVec4=!0,this.outputShape=e.outShape,this.dispatchLayout={x:[3],y:[2],z:[0,1]},this.dispatch=RN(this.dispatchLayout,this.outputShape,this.workgroupSize,[4,this.workPerThread,1]),D("channelsLast"===e.dataFormat,(()=>"TODO: NCHW is unimplemented")),t&&this.variableNames.push("bias"),r&&this.variableNames.push("preluActivationWeights"),this.convInfo=e,this.addBias=t,this.activation=n,this.hasPreluActivation=r,this.shaderKey=`depthwiseVec4_${n}_${this.convInfo.filterHeight}_${this.convInfo.filterWidth}_${this.convInfo.strideHeight}_${this.convInfo.strideWidth}_${this.workPerThread}`}getUserCode(){const e=(this.workPerThread-1)*this.convInfo.strideWidth+this.convInfo.filterWidth,t=this.convInfo.strideHeight,n=this.convInfo.strideWidth;return`\n      ${JN(this.activation,this.hasPreluActivation,!0,4)}\n      fn readX(batch : i32, row : i32, col : i32, channel : i32) -> vec4<f32> {\n        var value = vec4<f32>(0.0);\n        if (col >=0 && col < uniforms.inDims[1]) {\n          value = getX(batch, row, col, channel);\n        }\n        return value;\n      }\n\n      ${wN()} {\n        let batch = i32(globalId.z) / uniforms.outShape[1];\n        let r = i32(globalId.z) % uniforms.outShape[1];\n        let c = i32(globalId.y) * ${this.workPerThread};\n        let d1 = i32(globalId.x) * 4;\n        let xRCCorner = vec2<i32>(r, c) * vec2<i32>(${t}, ${n}) - uniforms.pad;\n\n        let xRCorner = xRCCorner.x;\n        let xCCorner = xRCCorner.y;\n        var xVals : array<vec4<f32>, ${e}>;\n        var dotProd : array<vec4<f32>, ${this.workPerThread}>;\n        for (var i = 0; i < ${this.workPerThread}; i++) {\n          dotProd[i] = vec4<f32>(0.0);\n        }\n\n        // Use constant instead of uniform can give better performance.\n        for (var wR = 0; wR < ${this.convInfo.filterHeight}; wR = wR + 1) {\n          let xR = xRCorner + wR;\n          if (xR >=0 && xR < uniforms.inDims[0]) {\n            for (var i = 0; i < ${e}; i++) {\n              xVals[i] = readX(batch, xR, xCCorner + i, d1);\n            }\n            for (var wC = 0; wC < ${this.convInfo.filterWidth}; wC = wC + 1) {\n              let wValue = getW(wR, wC, d1, 0);\n              for (var i = 0; i < ${this.workPerThread}; i++) {\n                dotProd[i] = fma(xVals[i * ${n} + wC], wValue, dotProd[i]);\n              }\n            }\n          }\n        }\n\n        for (var i = 0; i < ${this.workPerThread}; i = i + 1) {\n          let coords = vec4<i32>(batch, r, c + i, d1);\n          if (coordsInBounds4D(coords, uniforms.outShape)) {\n            var value = dotProd[i];\n            ${eE(this.addBias,this.activation)}\n            setOutputAtCoords(coords[0], coords[1], coords[2], coords[3], value);\n          }\n        }\n      }\n    `}}class fA{constructor(e,t=!1,n=null,r=!1){this.variableNames=["x","W"],this.uniforms="pad : vec2<i32>, inDims : vec2<i32>, filterHeight : i32,\n      filterWidth : i32, stride : vec2<i32>, dilation : vec2<i32>,",this.workgroupSize=[256,1,1],this.size=!0,this.outputShape=e.outShape,this.dispatchLayout=ON(this.outputShape),this.dispatch=RN(this.dispatchLayout,this.outputShape,this.workgroupSize),this.isChannelsLast="channelsLast"===e.dataFormat,t&&this.variableNames.push("bias"),r&&this.variableNames.push("preluActivationWeights"),this.convInfo=e,this.addBias=t,this.activation=n,this.hasPreluActivation=r,this.shaderKey=`depthwise_${this.activation}_${this.isChannelsLast}`}getUserCode(){const e=this.isChannelsLast?"getX(batch, xR, xC, d1);":"getX(batch, d1, xR, xC);";return`\n      ${JN(this.activation,this.hasPreluActivation,!1,4)}\n\n      ${wN("index")} {\n        if (index < uniforms.size) {\n          let coords = getOutputCoords();\n          let batch = coords[0];\n          let xRCCorner = vec2<i32>(coords.${this.isChannelsLast?"yz":"zw"}) * uniforms.stride - uniforms.pad;\n          let d2 = coords[${this.isChannelsLast?3:1}];\n          let channelMul = uniforms.wShape[3];\n          let d1 = d2 / channelMul;\n          let q = d2 % channelMul;\n\n          let inputRowStart = xRCCorner.x;\n          let inputColStart = xRCCorner.y;\n          let inputRowEnd = inputRowStart + uniforms.filterHeight *\n              uniforms.dilation[0];\n          let inputColEnd = inputColStart + uniforms.filterWidth *\n              uniforms.dilation[1];\n\n          // Convolve x(?, ?, d1)|x(d1, ?, ?) with w(:, :, d1, q) to get\n          // y(yR, yC, d2)|y(d2, yR, yC). ? = to be determined. : = across all\n          // values in that axis. x(?, ?, d1) and y(yR, yC, d2) is for NHWC.\n          // x(d1, ?, ?) and y(d2, yR, yC) is for NCHW.\n          var value = 0.0;\n\n          // Extract if checking out of for loop for performance.\n          if (inputRowStart >= 0 && inputColStart >= 0 &&\n            inputRowEnd < uniforms.inDims[0] &&\n                inputColEnd < uniforms.inDims[1]) {\n              for (var wR = 0; wR < uniforms.filterHeight; wR = wR + 1) {\n                let xR = inputRowStart + wR * uniforms.dilation[0];\n\n                for (var wC = 0; wC < uniforms.filterWidth; wC = wC + 1) {\n                  let xC = inputColStart + wC * uniforms.dilation[1];\n\n                  let xVal = ${e};\n                  let wVal = getW(wR, wC, d1, q);\n                  value = value + xVal * wVal;\n                }\n              }\n            } else {\n              for (var wR = 0; wR < uniforms.filterHeight; wR = wR + 1) {\n                let xR = inputRowStart + wR * uniforms.dilation[0];\n\n                if (xR < 0 || xR >= uniforms.inDims[0]) {\n                  continue;\n                }\n\n                for (var wC = 0; wC < uniforms.filterWidth; wC = wC + 1) {\n                  let xC = inputColStart + wC * uniforms.dilation[1];\n\n                  if (xC < 0 || xC >= uniforms.inDims[1]) {\n                    continue;\n                  }\n\n                  let xVal = ${e};\n                  let wVal = getW(wR, wC, d1, q);\n                  value = value + xVal * wVal;\n                }\n              }\n            }\n            ${eE(this.addBias,this.activation)}\n          setOutputAtCoords(coords[0], coords[1], coords[2], coords[3], value);\n        }\n      }\n    `}}const mA={kernelName:at,backendName:"webgpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,filter:a}=t,{strides:o,pad:i,dataFormat:u,dilations:l,dimRoundingMode:c}=r,h=Gi(u);let d=l;null==d&&(d=[1,1]);const p=Fi(s.shape,a.shape,o,d,i,c,!0,h),f=[{type:"int32",data:[p.padInfo.top,p.padInfo.left]},{type:"int32",data:[p.inHeight,p.inWidth]}],m="channelsLast"===p.dataFormat;let g;return!m&&p.inHeight>16&&p.inWidth>16&&1===p.strideHeight&&1===p.strideWidth&&1===p.dilationWidth&&1===p.dilationHeight&&p.inChannels===p.outChannels?g=new dA(p.outShape,p.filterHeight,p.filterWidth):m&&p.outHeight>4&&p.outWidth>4&&p.strideWidth<=2&&p.inChannels===p.outChannels&&1===p.dilationHeight&&1===p.dilationWidth&&p.inChannels%4==0?g=new pA(p):(g=new fA(p),f.push({type:"int32",data:[p.filterHeight]},{type:"int32",data:[p.filterWidth]},{type:"int32",data:[p.strideHeight,p.strideWidth]},{type:"int32",data:[p.dilationHeight,p.dilationWidth]})),n.runWebGPUProgram(g,[s,a],s.dtype,f)}};class gA{constructor(e){this.variableNames=["x"],this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=[e,e],this.dispatchLayout=ON(this.outputShape),this.dispatch=RN(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey="diag"}getUserCode(){return`\n      ${wN("index")} {\n        if (index < uniforms.size) {\n          let coords = getOutputCoords();\n          let value = select(0.0, getX(coords[0]), coords[0] == coords[1]);\n          setOutputAtIndex(index, value);\n        }\n      }\n    `}}const yA={kernelName:ut,backendName:"webgpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:r}=t,s=[...r.shape,...r.shape],a=B(r.shape),o=fE({inputs:{x:r},backend:n,attrs:{shape:[a]}}),i=new gA(a),u=n.runWebGPUProgram(i,[o],o.dtype),l=fE({inputs:{x:u},backend:n,attrs:{shape:s}});return n.disposeData(o.dataId),n.disposeData(u.dataId),l}};class xA{constructor(e){this.variableNames=["x","w"],this.uniforms="filterDims: vec2<i32>, pad: vec2<i32>, stride: vec2<i32>, dilation: vec2<i32>",this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=e.outShape,this.dispatchLayout=ON(this.outputShape),this.dispatch=RN(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey="dilation2d"}getUserCode(){return`\n       ${wN("index")} {\n         if (index < uniforms.size) {\n           let neg_infinity = -3.4e38;\n           let coords = getOutputCoords();\n           let batch = coords.x;\n           let d1 = coords.w;\n           let outTopLeftCorner = coords.yz * uniforms.stride - uniforms.pad;\n           let hBeg = outTopLeftCorner.x;\n           let wBeg = outTopLeftCorner.y;\n\n           var curVal = neg_infinity;\n           for (var h = 0; h < uniforms.filterDims[0]; h = h + 1) {\n             let hIn = hBeg + h * uniforms.dilation[0];\n\n             if (hIn >= 0 && hIn < uniforms.xShape[1]) {\n               for (var w = 0; w < uniforms.filterDims[1]; w = w + 1) {\n                 let wIn = wBeg + w * uniforms.dilation[1];\n\n                 if (wIn >= 0 && wIn < uniforms.xShape[2]) {\n                   let val = getX(batch, hIn, wIn, d1) + getW(h, w, d1);\n                   if (val > curVal) {\n                     curVal = val;\n                   }\n                 }\n               }\n             }\n           }\n\n           setOutputAtIndex(index, curVal);\n         }\n       }\n     `}}const bA={kernelName:lt,backendName:"webgpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,filter:a}=t,{strides:o,pad:i,dilations:u}=r,l=_i(s.shape,a.shape,o,i,"NHWC",u),c=[l.padInfo.top,l.padInfo.left],h=[{type:"int32",data:[l.filterHeight,l.filterWidth]},{type:"int32",data:[...c]},{type:"int32",data:[l.strideHeight,l.strideWidth]},{type:"int32",data:[l.dilationHeight,l.dilationWidth]}],d=new xA(l);return n.runWebGPUProgram(d,[s,a],s.dtype,h)}},vA=TE({opType:BN.MUL,cpuKernelImpl:SR,supportsComplex:!0}),wA={kernelName:nn,backendName:"webgpu",kernelFunc:vA};function kA(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{axis:a,keepDims:o}=r;return YR(s,a,o,"sum",n)}const SA={kernelName:Vn,backendName:"webgpu",kernelFunc:kA},CA={kernelName:dt,backendName:"webgpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{equation:s}=r,a=t,{allDims:o,summedDims:i,idDims:u}=mp(s,a.length);yp(o.length,u,a);const{path:l,steps:c}=xp(i,u),h=c.length;let d=null,p=o.length;const f=[];for(let e=0;e<h;++e){for(const t of c[e]){const{permutationIndices:e,expandDims:r}=gp(p,u[t]);let s;bp(e)?s=a[t]:(s=KR({inputs:{x:a[t]},backend:n,attrs:{perm:e}}),f.push(s));const o=s.shape.slice();for(let e=0;e<r.length;++e)o.splice(r[e],0,1);z(s.shape,o)||(s=fE({inputs:{x:s},backend:n,attrs:{shape:o}}),f.push(s)),null===d?d=s:(d=vA({inputs:{a:s,b:d},backend:n}),f.push(d))}e<h-1&&(l[e]>=0&&(d=kA({inputs:{x:d},backend:n,attrs:{axis:l[e]-(o.length-p),keepDims:!1}}),f.push(d)),p--)}for(const e of f)e!==d&&n.disposeData(e.dataId);return d}},IA={kernelName:pt,backendName:"webgpu",kernelFunc:IE({opType:qN.ELU})},TA={kernelName:mt,backendName:"webgpu",kernelFunc:TE({opType:BN.EQUAL,dtype:"bool",cpuKernelImpl:lR})},$A={kernelName:ft,backendName:"webgpu",kernelFunc:IE({opType:qN.ERF})},NA=IE({opType:qN.EXP,cpuKernelImpl:cR,dtype:"float32"}),EA={kernelName:gt,backendName:"webgpu",kernelFunc:NA};function RA(e){const{inputs:t,attrs:n,backend:r}=e,{dim:s}=n,{input:a}=t,o=a.shape.length,i=a.shape.slice();let u=s;return s<0&&(D(-(o+1)<=s,(()=>`Axis must be in the interval [${-(o+1)}, ${o}]`)),u=o+s+1),i.splice(u,0,1),fE({inputs:{x:a},backend:r,attrs:{shape:i}})}const _A={kernelName:yt,backendName:"webgpu",kernelFunc:RA},AA={kernelName:xt,backendName:"webgpu",kernelFunc:IE({opType:qN.EXPM1,cpuKernelImpl:hR})};class OA{constructor(e,t){this.variableNames=["real","imag"],this.outputShape=[],this.uniforms="exponentMultiplier : f32, denominator: f32,",this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=t,this.dispatchLayout=ON(this.outputShape),this.dispatch=RN(this.dispatchLayout,this.outputShape,this.workgroupSize),this.component=e,this.shaderKey="fft_"+e}getUserCode(){return`\n    fn unaryOpComplex(real: f32, expR: f32, imag: f32, expI: f32) -> f32 {\n      ${"real"===this.component?"return real * expR - imag * expI;":"return real * expI + imag * expR;"}\n    }\n\n    fn mulMatDFT(batch: i32, index: i32) -> f32 {\n      let indexRatio = f32(index) / f32(uniforms.realShape[1]);\n      let exponentMultiplierTimesIndexRatio =\n          uniforms.exponentMultiplier * indexRatio;\n\n      var result = 0.0;\n\n      for (var i = 0; i < uniforms.realShape[1]; i = i + 1) {\n        // x = (-2|2 * PI / N) * index * i;\n        let x = exponentMultiplierTimesIndexRatio * f32(i);\n        let expR = cos(x);\n        let expI = sin(x);\n        let real = getReal(batch, i);\n        let imag = getImag(batch, i);\n\n        result = result +\n            unaryOpComplex(real, expR, imag, expI) / uniforms.denominator;\n      }\n\n      return result;\n    }\n\n    ${wN("index")} {\n      if (index < uniforms.size) {\n        let coords = getOutputCoords();\n        setOutputAtIndex(index, mulMatDFT(coords[0], coords[1]));\n      }\n    }\n  `}}function FA(e,t,n){const r=n.tensorMap.get(e.dataId),s=B(e.shape),a=e.shape[e.shape.length-1],o=[],i=fE({inputs:{x:e},backend:n,attrs:{shape:[s/a,a]}});o.push(i);const u=i.shape,l=new OA("real",u),c=new OA("imag",u),h=[{dataId:r.complexTensorInfos.real.dataId,dtype:r.complexTensorInfos.real.dtype,shape:u},{dataId:r.complexTensorInfos.imag.dataId,dtype:r.complexTensorInfos.imag.dtype,shape:u}],d=[{type:"float32",data:[t?2*Math.PI:-2*Math.PI]},{type:"float32",data:[t?u[1]:1]}],p=n.runWebGPUProgram(l,h,"float32",d);o.push(p);const f=n.runWebGPUProgram(c,h,"float32",d);o.push(f);const m=kE({inputs:{real:p,imag:f},backend:n});o.push(m);const g=fE({inputs:{x:m},backend:n,attrs:{shape:e.shape}});return o.forEach((e=>n.disposeData(e.dataId))),g}const PA={kernelName:bt,backendName:"webgpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{input:r}=t;return FA(r,!1,n)}};class DA{constructor(e){this.outputShape=[],this.variableNames=["x"],this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=e,this.dispatchLayout=ON(this.outputShape),this.dispatch=RN(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey="flipLeftRight"}getUserCode(){return`\n      ${wN("index")} {\n        if (index < uniforms.size) {\n          let coords = getCoordsFromIndex(index);\n          let coordX = uniforms.xShape[2] - coords[2] - 1;\n          let outputValue = getX(coords[0], coords[1], coordX, coords[3]);\n          setOutputAtIndex(index, outputValue);\n        }\n      }\n    `}}const MA={kernelName:wt,backendName:"webgpu",kernelFunc:({inputs:e,backend:t})=>{const{image:n}=e,r=t,s=new DA(n.shape);return r.runWebGPUProgram(s,[n],n.dtype)}},LA={kernelName:kt,backendName:"webgpu",kernelFunc:IE({opType:qN.FLOOR,cpuKernelImpl:dR})},BA={kernelName:St,backendName:"webgpu",kernelFunc:TE({opType:BN.INT_DIV,dtype:"int32"})};class zA{constructor(e,t,n=!1){this.isFromPixels=!0,this.outputShape=[0],this.variableNames=[],this.workgroupSize=[256,1,1],this.outputShape=e,this.dispatchLayout=ON(this.outputShape),this.dispatch=RN(this.dispatchLayout,this.outputShape,this.workgroupSize,[t,1,1]),this.importVideo=n,this.shaderKey="fromPixels_"+this.importVideo}getUserCode(){const e=this.importVideo?"textureLoad(src, vec2<i32>(coords.yx));":"textureLoad(src, vec2<i32>(coords.yx), 0)";return`\n      @binding(1) @group(0) var src: ${this.importVideo?"texture_external":"texture_2d<f32>"};\n      ${wN("index")} {\n        let flatIndex = index * uniforms.numChannels;\n        if (flatIndex < uniforms.size) {\n          let coords = getCoordsFromIndex(flatIndex);\n          let values = ${e};\n          for (var i = 0; i < uniforms.numChannels; i = i + 1) {\n            result[flatIndex + i] = i32(floor(255.0 * values[i]));\n          }\n        }\n      }\n  `}}const UA={kernelName:gr,backendName:"webgpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e;let{pixels:s}=t;const{numChannels:a}=r;if(null==s)throw new Error("pixels passed to tf.browser.fromPixels() can not be null");const o="undefined"!=typeof HTMLVideoElement&&s instanceof HTMLVideoElement,i="undefined"!=typeof HTMLImageElement&&s instanceof HTMLImageElement,u="undefined"!=typeof HTMLCanvasElement&&s instanceof HTMLCanvasElement||"undefined"!=typeof OffscreenCanvas&&s instanceof OffscreenCanvas,l="undefined"!=typeof ImageBitmap&&s instanceof ImageBitmap,[c,h]=o?[s.videoWidth,s.videoHeight]:[s.width,s.height],d=[h,c,a],p=o||i;if(l||u||p){let e;{if(p){const e=fe().getBool("CANVAS2D_WILL_READ_FREQUENTLY_FOR_GPU");null!=VA&&e===WA||(WA=e,VA=document.createElement("canvas").getContext("2d",{willReadFrequently:WA})),VA.canvas.width=c,VA.canvas.height=h,VA.drawImage(s,0,0,c,h),s=VA.canvas}const t=GPUTextureUsage.COPY_DST|GPUTextureUsage.RENDER_ATTACHMENT|GPUTextureUsage.TEXTURE_BINDING,r="rgba8unorm",a=n.textureManager.acquireTexture(d[1],d[0],r,t);n.queue.copyExternalImageToTexture({source:s},{texture:a},[d[1],d[0]]),e={width:c,height:h,format:r,usage:t,texture:a}}const t=B(d),r=ne(d),o=new zA(d,a,!1),i=[{type:"uint32",data:[t]},{type:"uint32",data:[a]},{type:"uint32",data:[...r]}],u=n.makeTensorInfo([h,c],"int32");n.tensorMap.get(u.dataId).resourceInfo=e;const l=n.runWebGPUProgram(o,[u],"int32",i);return n.disposeData(u.dataId),l}const f=s.data;let m=f;if(null!=a&&4!==a){m=new Uint8Array(s.width*s.height*a);const e=f.length;let t=0;for(let n=0;n<e;n++)n%4<a&&(m[t++]=f[n])}const g=n.makeTensorInfo(d,"int32",new Int32Array(m));return n.uploadToGPU(g.dataId),g}};let VA,WA=fe().getBool("CANVAS2D_WILL_READ_FREQUENTLY_FOR_GPU");class GA{constructor(e,t,n,r,s){this.uniforms="varianceEpsilon : f32,",this.workgroupSize=[128,1,1],this.size=!0,this.variableNames=["x","mean","variance"],Io(e,t),Io(e,n),this.outputShape=e,this.dispatchLayout=ON(this.outputShape),this.dispatch=RN(this.dispatchLayout,this.outputShape,this.workgroupSize),null!=r&&(Io(e,r),this.variableNames.push("offset")),null!=s&&(Io(e,s),this.variableNames.push("scale")),this.offsetShape=r,this.scaleShape=s,this.shaderKey="batchNorm"}getUserCode(){let e="0.0";null!=this.offsetShape&&(e="getOffsetByOutputIndex(index)");let t="1.0";return null!=this.scaleShape&&(t="getScaleByOutputIndex(index)"),`\n      ${wN("index")} {\n        if (index < uniforms.size)\n        {\n          let xValue = getXByOutputIndex(index);\n          let meanValue = getMeanByOutputIndex(index);\n          let varianValue = getVarianceByOutputIndex(index);\n          let offsetValue = ${e};\n          let scaleValue = ${t};\n          let inv = scaleValue * inverseSqrt(varianValue + f32(uniforms.varianceEpsilon));\n          setOutputAtIndex(index,dot(vec3<f32>(xValue, -meanValue, offsetValue), vec3<f32>(inv, inv, 1.0)));\n        }\n      }\n  `}}const HA={kernelName:Ct,backendName:"webgpu",kernelFunc:({inputs:e,attrs:t,backend:n})=>{const{x:r,scale:s,offset:a,mean:o,variance:i}=e,{varianceEpsilon:u}=t,l=n,c=[r,o,i];let h=null;null!=a&&(h=a.shape,c.push(a));let d=null;null!=s&&(d=s.shape,c.push(s));const p=new GA(r.shape,o.shape,i.shape,h,d),f=[{type:"float32",data:[u]}];return l.runWebGPUProgram(p,c,r.dtype,f)}},jA={kernelName:br,backendName:"webgpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,filter:a,bias:o,preluActivationWeights:i}=t,{strides:u,pad:l,dataFormat:c,dilations:h,dimRoundingMode:d,activation:p,leakyreluAlpha:f}=r,m=Gi(c);return H_({x:s,filter:a,convInfo:Fi(s.shape,a.shape,u,h,l,d,!1,m),backend:n,bias:o,preluActivationWeights:i,leakyreluAlpha:f,activation:p})}},KA={kernelName:vr,backendName:"webgpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,filter:a,bias:o,preluActivationWeights:i}=t,{strides:u,pad:l,dilations:c,dimRoundingMode:h,activation:d,leakyreluAlpha:p}=r;let f=c;null==f&&(f=[1,1]),D(Vi(u,f),(()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${u} and dilations '${f}'`));const m=Fi(s.shape,a.shape,u,f,l,h,!0),g=[s,a],y=null!=o,x=null!=i;y&&g.push(o),x&&g.push(i);const b=[{type:"int32",data:[m.padInfo.top,m.padInfo.left]},{type:"int32",data:[m.inHeight,m.inWidth]}];let v;return m.outHeight>4&&m.outWidth>4&&m.strideWidth<=2&&m.inChannels===m.outChannels&&1===m.dilationHeight&&1===m.dilationWidth&&m.inChannels%4==0?v=new pA(m,y,d,x):(v=new fA(m,y,d,x),b.push({type:"int32",data:[m.filterHeight]},{type:"int32",data:[m.filterWidth]},{type:"int32",data:[m.strideHeight,m.strideWidth]},{type:"int32",data:[m.dilationHeight,m.dilationWidth]})),"leakyrelu"===d&&(b.push({type:"float32",data:[p]}),v.uniforms+=" alpha : f32,"),n.runWebGPUProgram(v,g,"float32",b)}};class qA{constructor(e,t){this.variableNames=["A","indices"],this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=t,this.dispatchLayout=ON(this.outputShape),this.dispatch=RN(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey="gathernd_"+e,this.sliceDim=e,this.uniforms=`sliceDim : i32, strides : ${bN(e)},`}getUserCode(){let e;return e=this.sliceDim>1?"uniforms.strides[j]":"uniforms.strides",`\n      ${wN("index")} {\n        if (index < uniforms.size) {\n          let coords = getCoordsFromIndex(index);\n          var flattenIndex = 0;\n          for (var j = 0; j < uniforms.sliceDim; j = j + 1) {\n            let indexTemp = i32(round(getIndices(coords[0], j)));\n            let strideNum = ${e};\n            flattenIndex = flattenIndex + indexTemp * strideNum;\n          }\n\n          setOutputAtIndex(index, getA(flattenIndex, coords[1]));\n        }\n      }\n      `}}const XA={kernelName:Tt,backendName:"webgpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{params:r,indices:s}=t,a=s.shape,o=a[a.length-1],i=B(r.shape),[u,l,c,h]=qd(r,s),d=fE({inputs:{x:s},backend:n,attrs:{shape:[l,o]}}),p=fE({inputs:{x:r},backend:n,attrs:{shape:[B(r.shape)/c,c]}});if(n.shouldExecuteOnCPU([r,s])||"string"===r.dtype){const e=n.readSync(s.dataId),t=n.bufferSync(r),a=pR(e,t,r.dtype,l,o,c,h,r.shape,i);return n.makeTensorInfo(u,r.dtype,a.values)}const f=new qA(o,[l,c]),m=[{type:"int32",data:[o]},{type:"int32",data:h}],g=n.runWebGPUProgram(f,[p,d],p.dtype,m),y=fE({inputs:{x:g},backend:n,attrs:{shape:u}});return n.disposeData(d.dataId),n.disposeData(p.dataId),n.disposeData(g.dataId),y}};class YA{constructor(e,t){this.variableNames=["A","indices"],this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=e.slice(),this.aShape=e,this.outputShape=t,this.dispatchLayout=ON(this.outputShape),this.dispatch=RN(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey="gather"}getUserCode(){const e=function(e){const t=["resRC.x","resRC.y","resRC.z","resRC.w"],n=[];for(let r=0;r<e.length;r++)2===r?n.push("indexZ"):n.push(""+t[r]);return n.join()}(this.aShape);return`\n      ${wN("index")} {\n        if (index < uniforms.size) {\n          let resRC = getCoordsFromIndex(index);\n          let indexZ = i32(getIndices(resRC.x, resRC.z));\n          let inBounds = select(0.0, 1.0, indexZ >= 0 && indexZ < uniforms.aShape[2]);\n          setOutputAtIndex(index, inBounds * getA(${e}));\n        }\n      }\n    `}}function QA(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,indices:a}=t,{axis:o,batchDims:i}=r,u=Dp(s,a,j(o,s.shape)[0],i),l=B(a.shape),c=[],h=fE({inputs:{x:s},backend:n,attrs:{shape:[u.batchSize,u.outerSize,u.dimSize,u.sliceSize]}}),d=fE({inputs:{x:a},backend:n,attrs:{shape:[u.batchSize,l/u.batchSize]}});c.push(h),c.push(d);const p=[u.batchSize,u.outerSize,l/u.batchSize,u.sliceSize];if(n.shouldExecuteOnCPU([s,a])){const e=n.tensorMap.get(d.dataId).values,t=Ha(d.shape,d.dtype,e),r=n.tensorMap.get(h.dataId).values,s=Ha(h.shape,h.dtype,r),a=fR(s,t,p);return c.forEach((e=>n.disposeData(e.dataId))),n.makeTensorInfo(u.outputShape,a.dtype,a.values)}const f=new YA(h.shape,p),m=n.runWebGPUProgram(f,[h,d],h.dtype);c.push(m);const g=fE({inputs:{x:m},backend:n,attrs:{shape:u.outputShape}});return c.forEach((e=>n.disposeData(e.dataId))),g}const ZA={kernelName:It,backendName:"webgpu",kernelFunc:QA},JA={kernelName:$t,backendName:"webgpu",kernelFunc:TE({opType:BN.GREATER,cpuKernelImpl:gR,dtype:"bool"})},eO={kernelName:Nt,backendName:"webgpu",kernelFunc:TE({opType:BN.GREATER_EQUAL,dtype:"bool",cpuKernelImpl:mR})},tO={kernelName:Rt,backendName:"webgpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{input:r}=t;return FA(r,!0,n)}},nO={kernelName:At,backendName:"webgpu",kernelFunc:IE({opType:qN.IS_FINITE,dtype:"bool"})},rO={kernelName:Ot,backendName:"webgpu",kernelFunc:IE({opType:qN.IS_INF,dtype:"bool"})},sO={kernelName:Ft,backendName:"webgpu",kernelFunc:IE({opType:qN.IS_NAN,dtype:"bool"})},aO={kernelName:Pt,backendName:"webgpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{alpha:a}=r,o=[{type:"float32",data:[a]}],i=new CE(s.shape,qN.LEAKYRELU,"alpha : f32,");return n.runWebGPUProgram(i,[s],"float32",o)}},oO={kernelName:Dt,backendName:"webgpu",kernelFunc:TE({opType:BN.LESS,dtype:"bool",cpuKernelImpl:xR})},iO={kernelName:Mt,backendName:"webgpu",kernelFunc:TE({opType:BN.LESS_EQUAL,dtype:"bool",cpuKernelImpl:yR})};class uO{constructor(e){this.variableNames=[],this.outputShape=[],this.uniforms="start : f32, step : f32,",this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=[e],this.dispatchLayout=ON(this.outputShape),this.dispatch=RN(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey="linSpace"}getUserCode(){return`\n      ${wN("index")} {\n        if (index < uniforms.size) {\n          setOutputAtIndex(index, uniforms.start + f32(index) * uniforms.step);\n        }\n      }\n    `}}const lO={kernelName:Lt,backendName:"webgpu",kernelFunc:function(e){const{backend:t,attrs:n}=e,{start:r,stop:s,num:a}=n,o=(s-r)/(a-1),i=new uO(a),u=[{type:"float32",data:[r]},{type:"float32",data:[o]}];return t.runWebGPUProgram(i,[],"float32",u)}},cO={kernelName:Bt,backendName:"webgpu",kernelFunc:IE({opType:qN.LOG,cpuKernelImpl:bR})},hO={kernelName:zt,backendName:"webgpu",kernelFunc:IE({opType:qN.LOG1P})},dO={kernelName:Ut,backendName:"webgpu",kernelFunc:TE({opType:BN.LOGICAL_AND,dtype:"bool"})},pO={kernelName:Vt,backendName:"webgpu",kernelFunc:IE({opType:qN.LOGICAL_NOT})},fO={kernelName:Wt,backendName:"webgpu",kernelFunc:TE({opType:BN.LOGICAL_OR})},mO="\n  var powValue = 0.0;\n  let basis = uniforms.bias + uniforms.alpha * sum;\n  if (uniforms.beta == 0.5) {\n    powValue = inverseSqrt(basis);\n  } else if (uniforms.beta == 1.0) {\n    powValue = 1.0 / basis;\n  } else {\n    powValue = exp(log(basis) * (-uniforms.beta));\n  }\n";class gO{constructor(e){this.outputShape=[],this.variableNames=["x"],this.uniforms="radius : i32, bias : f32, alpha : f32, beta : f32,",this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=e,this.dispatchLayout=ON(this.outputShape),this.dispatch=RN(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey="lrn"}getUserCode(){return`\n    ${wN("index")} {\n      if (index < uniforms.size) {\n        let coords = getOutputCoords();\n        let b = coords[0];\n        let r = coords[1];\n        let c = coords[2];\n        let d = coords[3];\n\n        let x = getX(b, r, c, d);\n        var sum = 0.0;\n        for (var i = -uniforms.radius; i <= uniforms.radius; i = i + 1) {\n          let idx = d + i;\n          if (idx >= 0 && idx < uniforms.xShape[3]) {\n            let z = getX(b, r, c, idx);\n            sum = sum + z * z;\n          }\n        }\n        ${mO}\n\n        setOutputAtIndex(index, x * powValue);\n      }\n    }\n  `}}class yO{constructor(e,t){this.outputShape=[],this.variableNames=["x"],this.uniforms="radius : i32, bias : f32, alpha : f32, beta : f32,",this.workgroupSize=[256,1,1],this.maxAllowRadius=16,D(t<=this.maxAllowRadius,(()=>`Radius must be less than or equal to ${this.maxAllowRadius}, current radius is ${t}`)),this.outputShape=e,this.elementsPerWorkgroup=this.workgroupSize[0]-2*this.maxAllowRadius,this.dispatchLayout={x:[3],y:[2],z:[0,1]},this.dispatch=RN(this.dispatchLayout,this.outputShape,[this.elementsPerWorkgroup,this.workgroupSize[1],this.workgroupSize[2]]),this.shaderKey="lrn_shared"}getUserCode(){return`\n    var <workgroup>lrnSub: array<f32, ${this.workgroupSize[0]}>;\n    const elementsPerWorkgroup = ${this.elementsPerWorkgroup};\n    const maxAllowRadius = ${this.maxAllowRadius};\n\n    ${wN()} {\n      let localDepth = i32(localId.x);\n      let workgroupDepth = i32(workgroupId.x) * elementsPerWorkgroup;\n      let xDepth = workgroupDepth + localDepth - maxAllowRadius;\n      let b = i32(globalId.z) / uniforms.xShape[1];\n      let r = i32(globalId.z) - b * uniforms.xShape[1];\n      let c = i32(globalId.y);\n      let d = workgroupDepth + localDepth;\n\n      var x = 0.0;\n      if (xDepth >= 0 && xDepth < uniforms.xShape[3]) {\n        x = getX(b, r, c, xDepth);\n      }\n      lrnSub[localDepth] = x;\n      workgroupBarrier();\n\n      if (localDepth < elementsPerWorkgroup && d < uniforms.outShape[3]) {\n        var sum = 0.0;\n        let index = localDepth + maxAllowRadius;\n        for (var i = -uniforms.radius; i <= uniforms.radius; i = i + 1) {\n          let z = lrnSub[index + i];\n          sum = sum + z * z;\n        }\n        ${mO}\n\n        setOutputAtCoords(b, r, c, d, lrnSub[index] * powValue);\n      }\n    } `}}const xO={kernelName:Gt,backendName:"webgpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{depthRadius:a,bias:o,alpha:i,beta:u}=r;let l;l=a>16?new gO(s.shape):new yO(s.shape,a);const c=[{type:"int32",data:[a]},{type:"float32",data:[o]},{type:"float32",data:[i]},{type:"float32",data:[u]}];return n.runWebGPUProgram(l,[s],s.dtype,c)}},bO={kernelName:jt,backendName:"webgpu",kernelFunc:TE({opType:BN.MAX,cpuKernelImpl:wR})},vO={kernelName:Kt,backendName:"webgpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{filterSize:a,strides:o,pad:i,dimRoundingMode:u}=r;return p_(s,Ai(s.shape,a,o,1,i,u),"max",n)}},wO={kernelName:Qt,backendName:"webgpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{axis:a,keepDims:o}=r;return YR(s,a,o,"min",n)}},kO={kernelName:Zt,backendName:"webgpu",kernelFunc:TE({opType:BN.MIN,cpuKernelImpl:kR})};class SO{constructor(e,t,n){this.uniforms="",this.variableNames=["x"],this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=t.map(((t,n)=>t[0]+e[n]+t[1])),this.dispatchLayout=ON(this.outputShape),this.dispatch=RN(this.dispatchLayout,this.outputShape,this.workgroupSize),this.xShape=e,t.map(((e,t)=>{this.uniforms+=` pad${t} : vec2<i32>,`})),this.offset="reflect"===n?0:1,this.shaderKey="mirrorPad_"+n}getUserCode(){const e=this.xShape.length,t=this.xShape.map(((e,t)=>`uniforms.pad${t}[0]`)).join(","),n=this.xShape.map(((t,n)=>`uniforms.pad${n}[0] + uniforms.xShape${e>1?`[${n}]`:""}`)).join(","),r=1===e?"start":"start[i]",s=1===e?"end":"end[i]",a=1===e?"outC":"outC[i]",o=bN(e),i=e>1?["coords[0]","coords[1]","coords[2]","coords[3]"].slice(0,e):"coords";return`\n      ${wN("index")} {\n        if (index < uniforms.size) {\n          let start = ${o}(${t});\n          let end = ${o}(${n});\n          var outC = getCoordsFromIndex(index);\n          for (var i = 0; i < ${e}; i = i + 1) {\n            if (${a} < ${r}) {\n              ${a} = ${r} * 2 - ${a} - ${this.offset};\n            } else if(${a} >= ${s}) {\n              ${a} = (${s} - 1) * 2 - ${a} + ${this.offset};\n            }\n          }\n          let coords = outC - start;\n          setOutputAtIndex(index, getX(${i}));\n        }\n      }\n    `}}const CO={kernelName:Jt,backendName:"webgpu",kernelFunc:({inputs:e,attrs:t,backend:n})=>{const{x:r}=e,{paddings:s,mode:a}=t,o=n,i=s.map((e=>({type:"int32",data:[e[0],e[1]]}))),u=new SO(r.shape,s,a);return o.runWebGPUProgram(u,[r],r.dtype,i)}},IO={kernelName:en,backendName:"webgpu",kernelFunc:TE({opType:BN.MOD})},TO={kernelName:rn,backendName:"webgpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:r}=t;if(n.shouldExecuteOnCPU([r])){const e=n.tensorMap.get(r.dataId),[t,s]=CR(e.values,r.shape,r.dtype);return n.makeTensorInfo(s,r.dtype,t)}const s=new CE(r.shape,qN.NEG);return n.runWebGPUProgram(s,[r],r.dtype)}},$O={kernelName:an,backendName:"webgpu",kernelFunc:function(e){console.warn("tf.nonMaxSuppression() in webgpu locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");const{inputs:t,backend:n,attrs:r}=e,{boxes:s,scores:a}=t,{maxOutputSize:o,iouThreshold:i,scoreThreshold:u}=r,l=n.readSync(s.dataId),c=n.readSync(a.dataId),{selectedIndices:h}=Kh(l,c,o,i,u);return n.makeTensorInfo([h.length],"int32",new Int32Array(h))}},NO={kernelName:un,backendName:"webgpu",kernelFunc:function(e){console.warn("tf.nonMaxSuppression() in webgpu locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");const{inputs:t,backend:n,attrs:r}=e,{boxes:s,scores:a}=t,{maxOutputSize:o,iouThreshold:i,scoreThreshold:u,softNmsSigma:l}=r,c=n.readSync(s.dataId),h=n.readSync(a.dataId),d=o,p=i,f=u,m=l,{selectedIndices:g,selectedScores:y}=Xh(c,h,d,p,f,m);return[n.makeTensorInfo([g.length],"int32",new Int32Array(g)),n.makeTensorInfo([y.length],"float32",new Float32Array(y))]}};class EO{constructor(e,t){this.variableNames=["x"],this.uniforms="onValue : f32, offValue : f32,",this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=[e,t],this.dispatchLayout=ON(this.outputShape),this.dispatch=RN(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey="onehot"}getUserCode(){return`\n      ${wN("index")} {\n        if(index < uniforms.size) {\n          let coords = getCoordsFromIndex(index);\n          setOutputAtIndex(index, mix(uniforms.offValue, uniforms.onValue,\n                                      f32(i32(round(getX(coords.x))) == coords.y)));\n        }\n      }\n    `}}const RO={kernelName:cn,backendName:"webgpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{indices:s}=t,{dtype:a,depth:o,onValue:i,offValue:u}=r,l=B(s.shape),c=new EO(l,o),h=fE({inputs:{x:s},backend:n,attrs:{shape:[l]}}),d=[{type:"float32",data:[i]},{type:"float32",data:[u]}],p=n.runWebGPUProgram(c,[h],a,d);n.disposeData(h.dataId);const f=fE({inputs:{x:p},backend:n,attrs:{shape:[...s.shape,o]}});return n.disposeData(p.dataId),f}};function _O(e){const{inputs:t,backend:n}=e,{x:r}=t;if("complex64"===r.dtype){const e=N_({inputs:{input:r},backend:n}),t=_O({inputs:{x:e},backend:n}),s=D_({inputs:{input:r},backend:n}),a=_O({inputs:{x:s},backend:n}),o=kE({inputs:{real:t,imag:a},backend:n});return n.disposeData(e.dataId),n.disposeData(t.dataId),n.disposeData(s.dataId),n.disposeData(a.dataId),o}return dE({attrs:{shape:r.shape,dtype:r.dtype,value:"string"===r.dtype?"":0},backend:n})}const AO={kernelName:fr,backendName:"webgpu",kernelFunc:_O},OO={kernelName:ln,backendName:"webgpu",kernelFunc:function e(t){const{inputs:n,backend:r}=t,{x:s}=n;if("string"===s.dtype)throw new Error("onesLike is not supported under string dtype");if("complex64"===s.dtype){const t=N_({inputs:{input:s},backend:r}),n=e({inputs:{x:t},backend:r}),a=D_({inputs:{input:s},backend:r}),o=_O({inputs:{x:a},backend:r}),i=kE({inputs:{real:n,imag:o},backend:r});return r.disposeData(t.dataId),r.disposeData(n.dataId),r.disposeData(a.dataId),r.disposeData(o.dataId),i}return dE({attrs:{shape:s.shape,dtype:s.dtype,value:1},backend:r})}},FO={kernelName:hn,backendName:"webgpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{axis:s}=r;if(1===t.length)return RA({inputs:{input:t[0]},backend:n,attrs:{dim:s}});const a=t[0].shape,o=t[0].dtype;t.forEach((e=>{M(a,e.shape,"All tensors passed to stack must have matching shapes"),D(o===e.dtype,(()=>"All tensors passed to stack must have matching dtypes"))}));const i=[],u=B_({inputs:t.map((e=>{const t=RA({inputs:{input:e},backend:n,attrs:{dim:s}});return i.push(t),t})),backend:n,attrs:{axis:s}});return i.forEach((e=>n.disposeData(e.dataId))),u}};class PO{constructor(e,t){this.variableNames=["x"],this.uniforms="constantValue : f32,",this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=t.map(((t,n)=>t[0]+e[n]+t[1])),this.dispatchLayout=ON(this.outputShape),this.dispatch=RN(this.dispatchLayout,this.outputShape,this.workgroupSize),t.map(((e,t)=>{this.uniforms+=` pad${t} : vec2<i32>,`})),this.xShape=e,this.shaderKey="pad"}getUserCode(){const e=this.xShape.length,t=bN(e),n=this.xShape.map(((e,t)=>`uniforms.pad${t}[0]`)).join(","),r=this.xShape.map(((t,n)=>`uniforms.pad${n}[0] + uniforms.xShape${e>1?`[${n}]`:""}`)).join(","),s=e>1?`${t}(${n})`:""+n,a=e>1?`${t}(${r})`:""+r,o=e>1?"any(outC < start)":"outC < start",i=e>1?"any(outC >= end)":"outC >= end",u=e>1?["coords[0]","coords[1]","coords[2]","coords[3]"].slice(0,e):"coords";return`\n      ${wN("index")} {\n        if (index < uniforms.size) {\n          let start = ${s};\n          let end = ${a};\n          let outC = getCoordsFromIndex(index);\n\n          if (${o} || ${i}) {\n            setOutputAtIndex(index, uniforms.constantValue);\n          } else {\n            let coords = outC - start;\n            setOutputAtIndex(index, getX(${u}));\n          }\n        }\n      }\n    `}}const DO=e=>{const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{paddings:a,constantValue:o}=r;if(a.every((e=>z(e,[0,0]))))return vE({inputs:{x:s},backend:n});if(0===B(s.shape))return dE({backend:n,attrs:{shape:a.map(((e,t)=>e[0]+s.shape[t]+e[1])),value:o,dtype:s.dtype}});const i=[{type:"float32",data:[o]}];a.map((e=>i.push({type:"int32",data:[e[0],e[1]]})));const u=new PO(s.shape,a);return n.runWebGPUProgram(u,[s],s.dtype,i)},MO={kernelName:dn,backendName:"webgpu",kernelFunc:DO},LO={kernelName:pn,backendName:"webgpu",kernelFunc:TE({opType:BN.POW})},BO={kernelName:fn,backendName:"webgpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:r,alpha:s}=t,a=new bE(BN.PRELU,r.shape,s.shape);return n.runWebGPUProgram(a,[r,s],"float32")}},zO={kernelName:mn,backendName:"webgpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{axis:a,keepDims:o}=r;return YR(s,a,o,"prod",n)}},UO={kernelName:bn,backendName:"webgpu",kernelFunc:e=>{const{backend:t,attrs:n}=e,{start:r,stop:s,step:a,dtype:o}=n,i=$R(r,s,a,o);return t.makeTensorInfo([i.length],o,i)}},VO=TE({opType:BN.DIV}),WO={kernelName:ht,backendName:"webgpu",kernelFunc:VO},GO={kernelName:wn,backendName:"webgpu",kernelFunc:IE({opType:qN.RECIPROCAL})},HO={kernelName:kn,backendName:"webgpu",kernelFunc:IE({opType:qN.RELU})},jO={kernelName:Tn,backendName:"webgpu",kernelFunc:IE({opType:qN.RELU6})};class KO{constructor(e,t,n){this.variableNames=["x"],this.uniforms="adjustHeightWidth : vec2<f32>, halfPixelCenters : f32,",this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=[e[0],t,n,e[3]],this.dispatchLayout=ON(this.outputShape),this.dispatch=RN(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey="resizeBilinear"}getUserCode(){return`\n      ${wN("index")} {\n        if (index < uniforms.size) {\n        let coords = getCoordsFromIndex(index);\n          let b = coords[0];\n          let d = coords[3];\n          let rc = coords.yz;\n\n          let effectiveInSize = vec2<f32>(\n            f32(uniforms.xShape.y) - uniforms.adjustHeightWidth[0],\n            f32(uniforms.xShape.z) - uniforms.adjustHeightWidth[1]);\n\n          let effectiveOutSize = vec2<f32>(\n            f32(uniforms.outShape.y) - uniforms.adjustHeightWidth[0],\n            f32(uniforms.outShape.z) - uniforms.adjustHeightWidth[1]);\n\n          let effectiveInputOverOutputRatioRC =\n              effectiveInSize / effectiveOutSize;\n\n          // Fractional source index\n          let sourceFracIndexRC =\n            (vec2<f32>(rc) + vec2<f32>(uniforms.halfPixelCenters)) *\n            effectiveInputOverOutputRatioRC - vec2<f32>(uniforms.halfPixelCenters);\n\n          // Compute the four integer indices.\n          let sourceFloorRC = vec2<i32>(sourceFracIndexRC);\n          let sourceCeilRC = vec2<i32>(\n            min(vec2<f32>(uniforms.xShape.yz) - vec2<f32>(1.0), ceil(sourceFracIndexRC)));\n\n          let topLeft = getX(b, sourceFloorRC.x, sourceFloorRC.y, d);\n          let bottomLeft = getX(b, sourceCeilRC.x, sourceFloorRC.y, d);\n          let topRight = getX(b, sourceFloorRC.x, sourceCeilRC.y, d);\n          let bottomRight = getX(b, sourceCeilRC.x, sourceCeilRC.y, d);\n\n          let fracRC = sourceFracIndexRC - vec2<f32>(sourceFloorRC);\n\n          let top = topLeft + (topRight - topLeft) * fracRC.y;\n          let bottom = bottomLeft + (bottomRight - bottomLeft) * fracRC.y;\n          let newValue = top + (bottom - top) * fracRC.x;\n\n          setOutputAtIndex(index, newValue);\n        }\n      }\n    `}}const qO={kernelName:In,backendName:"webgpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{images:s}=t,{alignCorners:a,size:o,halfPixelCenters:i}=r,[u,l]=o,c=[{type:"float32",data:[a&&u>1?1:0,a&&l>1?1:0]},{type:"float32",data:[i?.5:0]}],h=new KO(s.shape,u,l);return n.runWebGPUProgram(h,[s],"float32",c)}};class XO{constructor(e,t,n,r){this.variableNames=["x"],this.uniforms="adjustHeightWidth : vec2<f32>, roundBase : f32,",this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=[e[0],t,n,e[3]],this.dispatchLayout=ON(this.outputShape),this.dispatch=RN(this.dispatchLayout,this.outputShape,this.workgroupSize),this.halfPixelCenters=r,this.shaderKey="resizeNearest_"+r}getUserCode(){let e;return e=this.halfPixelCenters?"max((vec2<f32>(rc) + vec2<f32>(0.5)) * effectiveInputOverOutputRatioRC, vec2<f32>(0.0))":"vec2<f32>(rc) * effectiveInputOverOutputRatioRC",`\n      ${wN("index")} {\n        if (index < uniforms.size) {\n          let coords = getCoordsFromIndex(index);\n          let b = coords[0];\n          let d = coords[3];\n          let rc = coords.yz;\n\n          let effectiveInSize = vec2<f32>(\n            f32(uniforms.xShape.y) - uniforms.adjustHeightWidth[0],\n            f32(uniforms.xShape.z) - uniforms.adjustHeightWidth[1]);\n\n          let effectiveOutSize = vec2<f32>(\n            f32(uniforms.outShape.y) - uniforms.adjustHeightWidth[0],\n            f32(uniforms.outShape.z) - uniforms.adjustHeightWidth[1]);\n\n          let effectiveInputOverOutputRatioRC =\n              effectiveInSize / effectiveOutSize;\n\n          // Fractional source index\n          let sourceFracIndexRC = ${e};\n\n          // Compute the coordinators of nearest neighbor point.\n          let inputShapeRC = vec2<f32>(f32(uniforms.xShape.y), f32(uniforms.xShape.z));\n          let sourceNearestRC = vec2<i32>(\n            min(inputShapeRC - 1.0, floor(sourceFracIndexRC + uniforms.roundBase)));\n          let newValue = getX(b, sourceNearestRC.x, sourceNearestRC.y, d);\n\n          setOutputAtIndex(index, newValue);\n        }\n      }\n    `}}const YO={kernelName:Cn,backendName:"webgpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{images:s}=t,{alignCorners:a,halfPixelCenters:o,size:i}=r,[u,l]=i,c=[{type:"float32",data:[a&&u>1?1:0,a&&l>1?1:0]},{type:"float32",data:[a?.5:0]}],h=new XO(s.shape,u,l,o);return n.runWebGPUProgram(h,[s],s.dtype,c)}};class QO{constructor(e){this.variableNames=["x"],this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=e,this.dispatchLayout=ON(this.outputShape),this.dispatch=RN(this.dispatchLayout,this.outputShape,this.workgroupSize),this.uniforms=" axis : vec4<i32>,",this.shaderKey="reverse"}getUserCode(){return`\n      \n      // Using uniform variables as judging conditions, so the function has\n      // coherent execution within all threads.\n      fn getReverseCoords(coords : vec4<i32>) -> vec4<i32> {\n        var reverseCoords = coords;\n        if (uniforms.axis[0] == 1) {\n          reverseCoords[0] = uniforms.xShape[0] - coords[0] - 1;\n        }\n        if (uniforms.axis[1] == 1) {\n          reverseCoords[1] = uniforms.xShape[1] - coords[1] - 1;\n        }\n        if (uniforms.axis[2] == 1) {\n          reverseCoords[2] = uniforms.xShape[2] - coords[2] - 1;\n        }\n        if (uniforms.axis[3] == 1) {\n          reverseCoords[3] = uniforms.xShape[3] - coords[3] - 1;\n        }\n\n        return reverseCoords;\n      }\n    \n      ${wN("index")} {\n        if (index < uniforms.size) {\n          let coords = getCoordsFromIndex(index);\n          let reverseCoords = getReverseCoords(coords);\n          setOutputAtIndex(index, getX(reverseCoords[0],\n              reverseCoords[1], reverseCoords[2], reverseCoords[3]));\n        }\n      }\n    `}}const ZO={kernelName:$n,backendName:"webgpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{dims:a}=r,o=s.shape.length;if(0===o)return vE({inputs:{x:s},backend:n});const i=s.shape,u=[1,1,1,1];i.forEach(((e,t)=>{u[t+4-o]=e}));const l=j(a,s.shape),c=[0,0,0,0];l.forEach((e=>{c[e+4-o]=1}));const h=[{type:"int32",data:c}],d=fE({inputs:{x:s},backend:n,attrs:{shape:u}}),p=new QO(u),f=n.runWebGPUProgram(p,[d],d.dtype,h);n.disposeData(d.dataId);const m=fE({inputs:{x:f},backend:n,attrs:{shape:i}});return n.disposeData(f.dataId),m}};class JO{constructor(e,t){this.outputShape=[],this.variableNames=["x"],this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=e,this.dispatchLayout=ON(this.outputShape),this.dispatch=RN(this.dispatchLayout,this.outputShape,this.workgroupSize),this.uniforms="centerX : f32, centerY : f32, sinRadians : f32,\n          cosRadians : f32,",this.shaderKey="rotate",this.outputShape=e,"number"==typeof t?(this.uniforms+=" fillValue : f32,",this.fillSnippet="var outputValue = uniforms.fillValue;",this.shaderKey+="_float"):(this.uniforms+=" fillValue : vec3<f32>,",this.fillSnippet="var outputValue = uniforms.fillValue[coords[3]];",this.shaderKey+="_vec3")}getUserCode(){return`\n        ${wN("index")} {\n          if (index < uniforms.size) {\n            let coords = getCoordsFromIndex(index);\n            let coordXFloat = (f32(coords[2]) - uniforms.centerX) *\n                uniforms.cosRadians - (f32(coords[1]) - uniforms.centerY) *\n                uniforms.sinRadians;\n            let coordYFloat = (f32(coords[2]) - uniforms.centerX) *\n                uniforms.sinRadians + (f32(coords[1]) - uniforms.centerY) *\n                uniforms.cosRadians;\n            let coordX = i32(round(coordXFloat + uniforms.centerX));\n            let coordY = i32(round(coordYFloat + uniforms.centerY));\n            ${this.fillSnippet}\n            if(coordX >= 0 && coordX < uniforms.xShape[2] && coordY >= 0 &&\n                coordY < uniforms.xShape[1]) {\n              outputValue = getX(coords[0], coordY, coordX, coords[3]);\n            }\n            setOutputAtIndex(index, outputValue);\n          }\n        }\n      `}}const eF={kernelName:yr,backendName:"webgpu",kernelFunc:({inputs:e,attrs:t,backend:n})=>{const{image:r}=e,{radians:s,fillValue:a,center:o}=t,i=n,u=new JO(r.shape,a),[l,c]=Vd(o,r.shape[1],r.shape[2]),h=[{type:"float32",data:[l]},{type:"float32",data:[c]},{type:"float32",data:[Math.sin(s)]},{type:"float32",data:[Math.cos(s)]}];return"number"==typeof a?h.push({type:"float32",data:[Number.parseFloat(a.toFixed(2))]}):h.push({type:"float32",data:a}),i.runWebGPUProgram(u,[r],r.dtype,h)}},tF={kernelName:Nn,backendName:"webgpu",kernelFunc:IE({opType:qN.ROUND})},nF={kernelName:En,backendName:"webgpu",kernelFunc:IE({opType:qN.RSQRT,cpuKernelImpl:NR})};class rF{constructor(e,t,n,r,s,a,o,i=!0){this.variableNames=["updates","indices"],this.workgroupSize=[64,1,1],this.atomic=!0,this.outputShape=a,this.type=o,this.sumDupeIndices=i,this.dispatchLayout=ON(e),this.dispatch=RN(this.dispatchLayout,e,this.workgroupSize),this.sliceDimGreaterThanOne=t>1,this.shaderKey=`scatter_${n}_${r}_${this.sliceDimGreaterThanOne}_${o}_${i}`;const u=bN(s.length);this.uniforms=`sliceDim : i32, strides: ${u}, updatesSize: i32,`,this.updatesRank=r,this.indicesRank=n}getUserCode(){let e="";1===this.indicesRank?e="coords[0]":2===this.indicesRank&&(e="coords[0], j");const t=`getIndices(${e})`,n=this.sliceDimGreaterThanOne?"uniforms.strides[j]":"uniforms.strides";let r="",s="";1===this.dispatchLayout.x.length?(r="flattenedIndex",s="\n      fn getUpdatesCoordsFromFlatIndex(index : i32) -> i32 {\n        return index;\n      }\n      "):2===this.dispatchLayout.x.length&&(r="vec2<i32>(flattenedIndex, coords[1])",s="\n      fn getUpdatesCoordsFromFlatIndex(index : i32) -> vec2<i32> {\n        // N.B. |updates| could be a scalar tensor, conceptually representing a\n        // 2D tensor with all values equal to that. By design, its size must be\n        // the same as |outShape[1]| in one dimension, and |indicesShape[0]|\n        // gives the other.\n        let sliceSize = uniforms.outShape[1];\n        let d0 = index / sliceSize;\n        let d1 = index - d0 * sliceSize;\n        return vec2<i32>(d0, d1);\n      }\n      ");const a=`getUpdates(${Array.from({length:this.updatesRank},((e,t)=>`coords[${t}]`)).join(", ")})`;return`\n    ${s}\n      ${wN("index")} {\n        if (index < uniforms.updatesSize) {\n          let coords = getUpdatesCoordsFromFlatIndex(index);\n          var flattenedIndex = 0;\n          for (var j = 0; j < uniforms.sliceDim; j = j + 1) {\n            let indexInside = i32(round(${t}));\n            flattenedIndex = flattenedIndex + indexInside * ${n};\n          }\n          let updateValue =\n              ${$N(this.type,!1)}(${a});\n          let flatIndex = getOutputIndexFromCoords(${r});\n\n          ${this.sumDupeIndices?xN("&result[flatIndex]","updateValue",this.type):"atomicStore(&result[flatIndex], bitcast<i32>(updateValue));"}\n        }\n      }`}}const sF={kernelName:Rn,backendName:"webgpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{indices:s,updates:a}=t,{shape:o}=r,{sliceRank:i,numUpdates:u,sliceSize:l,strides:c,outputSize:h}=sh(0,s,o),d=[h/l,l];if(0===h)return n.makeTensorInfo(o,s.dtype);const p=fE({inputs:{x:s},backend:n,attrs:{shape:[u,i]}}),f=fE({inputs:{x:a},backend:n,attrs:{shape:[u,l]}}),m=f.dtype,g=dE({backend:n,attrs:{shape:d,value:0,dtype:m}}),y=[{type:"int32",data:[i]},{type:"int32",data:c},{type:"int32",data:[B(f.shape)]}],x=new rF(f.shape,i,p.shape.length,f.shape.length,c,d,m),b=n.runWebGPUProgram(x,[f,p],m,y,g),v=fE({inputs:{x:b},backend:n,attrs:{shape:o}});return n.disposeData(p.dataId),n.disposeData(f.dataId),n.disposeData(b.dataId),v}};class aF{constructor(e,t){this.outputShape=[],this.variableNames=["sortedSequence","values"],this.uniforms="numInputs : i32,",this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=e,this.dispatchLayout=ON(this.outputShape),this.dispatch=RN(this.dispatchLayout,this.outputShape,this.workgroupSize),this.side=t,this.shaderKey="search_sorted_"+t}getUserCode(){return`\n      fn findBound(batch: i32, value: f32) -> i32 {\n        var left = i32(0);\n        var right = uniforms.numInputs;\n        while (left < right) {\n          var mid = (left + right) / 2;\n          if (getSortedSequence(batch, mid) ${"left"===this.side?"<":"<="} value) {\n            left = mid + 1;\n          } else {\n            right = mid;\n          }\n        }\n        return right;\n      }\n\n      ${wN("index")} {\n        if (index < uniforms.size) {\n          let coords = getCoordsFromIndex(index);\n          let value = getValuesByOutputIndex(index);\n          setOutputAtIndexI32(index, findBound(coords[0], value));\n        }\n      }\n    `}}const oF={kernelName:An,backendName:"webgpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{sortedSequence:s,values:a}=t,{side:o}=r,i=new aF([a.shape[0],a.shape[1]],o),u=[{type:"int32",data:[s.shape[1]]}];return n.runWebGPUProgram(i,[s,a],"int32",u)}};class iF{constructor(e,t,n){this.variableNames=["c","a","b"],this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=t,this.dispatchLayout=ON(this.outputShape),this.dispatch=RN(this.dispatchLayout,this.outputShape,this.workgroupSize),this.cRank=e,this.rank=n,this.shaderKey="select"}getUserCode(){let e,t;if(this.rank>4)throw Error(`Where for rank ${this.rank} is not yet supported`);if(1===this.rank)t="resRC",e="resRC";else{const n=["resRC.x","resRC.y","resRC.z","resRC.w"],r=[],s=[];for(let e=0;e<this.outputShape.length;e++)s.push(""+n[e]),e<this.cRank&&r.push(""+n[e]);e=r.join(),t=s.join()}return`\n      ${wN("index")} {\n        if (index < uniforms.size) {\n          let resRC = getCoordsFromIndex(index);\n          let cVal = getC(${e});\n          if (cVal >= 1.0) {\n            setOutputAtIndex(index, getA(${t}));\n          } else {\n            setOutputAtIndex(index, getB(${t}));\n          }\n        }\n      }\n    `}}const uF={kernelName:On,backendName:"webgpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{condition:r,t:s,e:a}=t,o=new iF(r.shape.length,s.shape,s.shape.length);return n.runWebGPUProgram(o,[r,s,a],ws(s.dtype,a.dtype))}},lF={kernelName:Fn,backendName:"webgpu",kernelFunc:IE({opType:qN.SELU})},cF={kernelName:Bn,backendName:"webgpu",kernelFunc:IE({opType:qN.SIGMOID})},hF={kernelName:Ln,backendName:"webgpu",kernelFunc:IE({opType:qN.SIGN})},dF={kernelName:Dn,backendName:"webgpu",kernelFunc:IE({opType:qN.SIN})},pF={kernelName:Mn,backendName:"webgpu",kernelFunc:IE({opType:qN.SINH})},fF=TE({opType:BN.SUB,cpuKernelImpl:FR,supportsComplex:!0}),mF={kernelName:sr,backendName:"webgpu",kernelFunc:fF},gF={kernelName:Hn,backendName:"webgpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{logits:s}=t,{dim:a}=r,o=j([a],s.shape),i=l_({inputs:{x:s},backend:n,attrs:{reductionIndices:o,keepDims:!1}}),u=Wu(i.shape,o),l=fE({inputs:{x:i},backend:n,attrs:{shape:u}}),c=fF({inputs:{a:s,b:l},backend:n}),h=NA({inputs:{x:c},backend:n}),d=kA({inputs:{x:h},backend:n,attrs:{axis:o,keepDims:!1}}),p=fE({inputs:{x:d},backend:n,attrs:{shape:u}}),f=VO({inputs:{a:h,b:p},backend:n});return n.disposeData(i.dataId),n.disposeData(l.dataId),n.disposeData(c.dataId),n.disposeData(h.dataId),n.disposeData(d.dataId),n.disposeData(p.dataId),f}},yF={kernelName:zn,backendName:"webgpu",kernelFunc:IE({opType:qN.SOFTPLUS})},xF={kernelName:Wn,backendName:"webgpu",kernelFunc:e=>{const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{blockShape:a,paddings:o}=r;D(s.shape.length<=4,(()=>"spaceToBatchND for rank > 4 with a WebGPU backend not implemented yet"));const i=a.reduce(((e,t)=>e*t)),u=[[0,0]];u.push(...o);for(let e=1+a.length;e<s.shape.length;++e)u.push([0,0]);const l=[],c=DO({inputs:{x:s},backend:n,attrs:{paddings:u,constantValue:0}}),h=Wd(c.shape,a,i,!1),d=Gd(h.length,a.length,!1),p=Hd(c.shape,a,i,!1),f=fE({inputs:{x:c},backend:n,attrs:{shape:h}}),m=KR({inputs:{x:f},backend:n,attrs:{perm:d}}),g=fE({inputs:{x:m},backend:n,attrs:{shape:p}});return l.push(c),l.push(f),l.push(m),l.forEach((e=>n.disposeData(e.dataId))),g}};class bF{constructor(e,t){this.variableNames=["A"],this.workgroupSize=[64,1,1],this.size=!0;const n=new Array(e.length);for(let r=0;r<n.length;r++)n[r]=e[r]*t[r];this.outputShape=n,this.dispatchLayout=ON(this.outputShape),this.dispatch=RN(this.dispatchLayout,this.outputShape,this.workgroupSize),this.rank=this.outputShape.length,this.shaderKey="tile"}getUserCode(){const e=function(e,t=""){if(e>=5)throw Error(`Tile for rank ${e} is not yet supported`);if(1===e)return`(resRC % ${t}aShape)`;const n=["resRC.x","resRC.y","resRC.z","resRC.w"],r=[];for(let s=0;s<e;s++)r.push(`(${n[s]} % ${t}aShape[${s}])`);return r.join()}(this.rank,"uniforms.");return`\n      ${wN("index")} {\n        if (index < uniforms.size) {\n          let resRC = getCoordsFromIndex(index);\n          setOutputAtIndex(index, getA(${e}));\n        }\n      }\n    `}}function vF(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{reps:a}=r;if(n.shouldExecuteOnCPU([s])||"string"===s.dtype||s.shape.length>=5){const e=n.readSync(s.dataId),t="string"===s.dtype?e.map((e=>Xr(e))):e,r=Ha(s.shape,s.dtype,t),o=PR(r,a);return n.makeTensorInfo(o.shape,o.dtype,o.values)}const o=new bF(s.shape,a);return n.runWebGPUProgram(o,[s],s.dtype)}const wF={kernelName:ir,backendName:"webgpu",kernelFunc:vF},kF={kernelName:Yn,backendName:"webgpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{sparseIndices:s,sparseValues:a,defaultValue:o}=t,{outputShape:i}=r,{sliceRank:u,numUpdates:l,sliceSize:c,strides:h,outputSize:d}=sh(0,s,i);if("string"===a.dtype){const e=n.bufferSync(s),t=n.bufferSync(a),r=Xr(n.readSync(o.dataId)[0]),p=ER(e,t,i,d,c,l,u,h,r,!1);return n.makeTensorInfo(i,p.dtype,p.values)}const p=[d/c,c],f=fE({inputs:{x:s},backend:n,attrs:{shape:[l,u]}}),m=a.shape.length?fE({inputs:{x:a},backend:n,attrs:{shape:[l,c]}}):vE({inputs:{x:a},backend:n}),g=m.dtype,y=n.makeTensorInfo([],g,oe(1,g)),x=fE({inputs:{x:o},backend:n,attrs:{shape:Array(p.length).fill(1)}}),b=vF({inputs:{x},backend:n,attrs:{reps:p}}),v=[{type:"int32",data:[u]},{type:"int32",data:h},{type:"int32",data:[B([l,c])]}];switch(l){case 0:break;case 1:{const e=new rF([l,c],u,f.shape.length,m.shape.length,h,p,g,!1);n.runWebGPUProgram(e,[m,f],g,v,b)}break;default:{const e=new rF([l,c],u,f.shape.length,y.shape.length,h,p,g,!1);n.runWebGPUProgram(e,[y,f],g,v,b)}{const e=new rF([l,c],u,f.shape.length,m.shape.length,h,p,g);n.runWebGPUProgram(e,[m,f],g,v,b)}}const w=fE({inputs:{x:b},backend:n,attrs:{shape:i}});return n.disposeData(f.dataId),n.disposeData(m.dataId),n.disposeData(x.dataId),n.disposeData(y.dataId),n.disposeData(b.dataId),w}},SF={kernelName:Gn,backendName:"webgpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{numOrSizeSplits:a,axis:o}=r,i=j(o,s.shape)[0],u=wp(s,a,i),l=s.shape.length,c=new Array(l).fill(0),h=s.shape.slice();return u.map((e=>{const t=[...h];t[i]=e;const r=v_({inputs:{x:s},backend:n,attrs:{begin:c,size:t}});return c[i]+=e,r}))}},CF={kernelName:Un,backendName:"webgpu",kernelFunc:IE({opType:qN.SQRT})},IF={kernelName:Zn,backendName:"webgpu",kernelFunc:({inputs:e,backend:t})=>{const{x:n}=e,r=t,s=new CE(n.shape,qN.SQUARE);return r.runWebGPUProgram(s,[n],n.dtype)}},TF={kernelName:Qn,backendName:"webgpu",kernelFunc:TE({opType:BN.SQUARED_DIFFERENCE})},$F={kernelName:mr,backendName:"webgpu",kernelFunc:function({inputs:e,attrs:t,backend:n}){const{x:r}=e,s=new CE(r.shape,qN.STEP,"stepAlpha : f32,"),a=[{type:"float32",data:[t.alpha]}];return n.runWebGPUProgram(s,[r],r.dtype,a)}};class NF{constructor(e){this.variableNames=["x"],this.workPerThread=1,this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=e,this.dispatchLayout=ON(this.outputShape),this.dispatch=RN(this.dispatchLayout,this.outputShape,this.workgroupSize,[this.workPerThread,1,1]);const t=bN(this.outputShape.length);this.uniforms=`begin : ${t},  strides : ${t}, `,this.shaderKey="stridedSlice"}getUserCode(){let e="";if(1===this.outputShape.length)e="coords * uniforms.strides + uniforms.begin";else{let t=0;e=this.outputShape.map(((e,n)=>(t++,1===this.outputShape.length?`coords * uniforms.strides[${n}] + uniforms.begin[${n}]`:`coords[${t-1}] * uniforms.strides[${n}] + uniforms.begin[${n}]`))).join(",")}return`\n       ${wN("index")} {\n         if (index < uniforms.size) {\n           let coords = getCoordsFromIndex(index);\n           setOutputAtIndex(index, getX(${e}));\n         }\n       }\n     `}}const EF={kernelName:er,backendName:"webgpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{begin:a,end:o,strides:i,beginMask:u,endMask:l,ellipsisMask:c,newAxisMask:h,shrinkAxisMask:d}=r,{finalShapeSparse:p,finalShape:f,isIdentity:m,sliceDim0:g,isSimpleSlice:y,begin:x,end:b,strides:v}=yi(s.shape,a,o,i,u,l,c,h,d);let w;if(m)w=fE({inputs:{x:s},backend:n,attrs:{shape:f}});else if(g||y){D(s.shape.length>=1,(()=>"Input must have rank at least 1, got: "+s.shape.length));const e=si(x,b,v),t=v_({inputs:{x:s},backend:n,attrs:{begin:x,size:e}});w=fE({inputs:{x:t},backend:n,attrs:{shape:f}}),n.disposeData(t.dataId)}else if(n.shouldExecuteOnCPU([s])){const e=n.readSync(s.dataId),t=Ha(s.shape,s.dtype,e),r=AR(p,t,v,x);w=n.makeTensorInfo(f,s.dtype,r.values)}else{const e=new NF(p),t=[{type:"int32",data:x},{type:"int32",data:v}],r=n.runWebGPUProgram(e,[s],s.dtype,t);w=fE({inputs:{x:r},backend:n,attrs:{shape:f}}),n.disposeData(r.dataId)}return w}},RF={kernelName:tr,backendName:"webgpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{separator:s,nGramWidths:a,leftPad:o,rightPad:i,padWidth:u,preserveShortSequences:l}=r,{data:c,dataSplits:h}=t,d=n.readSync(c.dataId),p=n.readSync(h.dataId),[f,m]=OR(d,p,s,a,o,i,u,l);return[n.makeTensorInfo([f.length],"string",f),n.makeTensorInfo(h.shape,"int32",m)]}},_F={kernelName:ar,backendName:"webgpu",kernelFunc:IE({opType:qN.TAN})},AF={kernelName:or,backendName:"webgpu",kernelFunc:IE({opType:qN.TANH})};class OF{constructor(e){this.variableNames=["x","indices"],this.workgroupSize=[256,1,1],this.size=!0,this.outputShape=e,this.dispatchLayout=ON(this.outputShape),this.dispatch=RN(this.dispatchLayout,this.outputShape,this.workgroupSize),this.uniforms="inputSize : i32, firstPass : i32, negativeInf : f32,\n        dir : i32, inc : i32,",this.shaderKey="swap"}getUserCode(){return`\n        ${wN("index")} {\n          if (index < uniforms.size) {\n            let outC = getCoordsFromIndex(index);\n            let batch = outC[0];\n            let elemIdx = outC[1];\n            // We compare elements pair-wise within a group of size 2 * inc.\n            // The comparing rule for each group alternates between ascending\n            // and descending. Within each group, we compare each pair at\n            // positions i and i+inc. To decide whether an element at position i\n            // is x0 or x1, we mod it by 2 * inc, if the result is smaller than\n            // inc, it is in the first half of the group, we denote it as x0,\n            // otherwise we denote it as x1.\n            // For example, as shown in the Bitonic top K paper referenced\n            // above, Figure5(a) shows that element[1] is in the second half of\n            // the group when group size is 2, but it is in the first half of\n            // the group when group size is 4.\n            let isFirstInPair = elemIdx % (2 * uniforms.inc) < uniforms.inc;\n            var i = 0;\n            if (isFirstInPair) {\n              i = elemIdx;\n            } else {\n              i = elemIdx - uniforms.inc;\n            }\n\n            var i0 = 0;\n            if (uniforms.firstPass == 1) {\n              i0 = i;\n            } else {\n              i0 = i32(getIndices(batch, i));\n            }\n\n            var i1 = 0;\n            if (uniforms.firstPass == 1) {\n              i1 = i + uniforms.inc;\n            } else {\n              i1 = i32(getIndices(batch, i + uniforms.inc));\n            }\n\n            var x0 = f32(0.0);\n            var x1 = f32(0.0);\n            if (i0 < uniforms.inputSize) {\n              x0 = getX(batch, i0);\n            } else {\n              x0 = uniforms.negativeInf;\n            }\n            if (i1 < uniforms.inputSize) {\n              x1 = getX(batch, i1);\n            } else {\n              x1 = uniforms.negativeInf;\n            }\n\n            let reverse = elemIdx % (2 * uniforms.dir) >= uniforms.dir;\n            let isGreater = x0 > x1 || (x0 == x1 && i1 > i0);\n            if (reverse == isGreater) {\n              // Elements in opposite order of direction\n              let iTemp = i0;\n              i0 = i1;\n              i1 = iTemp;\n            }\n            if (isFirstInPair) {\n              setOutputAtIndex(index, f32(i0));\n            } else {\n              setOutputAtIndex(index, f32(i1));\n            }\n          }\n        }\n      `}}class FF{constructor(e){this.variableNames=["x","indices"],this.workgroupSize=[256,1,1],this.size=!0,this.outputShape=e,this.dispatchLayout=ON(this.outputShape),this.dispatch=RN(this.dispatchLayout,this.outputShape,this.workgroupSize),this.uniforms="inputSize : i32, firstPass : i32, k : i32,",this.shaderKey="merge"}getUserCode(){return`\n        ${wN("index")} {\n          if (index < uniforms.size) {\n            let outC = getCoordsFromIndex(index);\n            let batch = outC[0];\n            let elemIdx = outC[1];\n            // The output size is half of the previous size.\n            // If the previous sequence is | | | | _ _ _ _  | | | |  _ _ _ _\n            // (k=4), we only need to output the indices at positions |, the\n            // indices at positions _ can be thrown away, see Figure5(b) After\n            // Phase 2 (Merge phase) in the Bitonic Top K paper referenced\n            // above.\n            // For example, the paper shows we only need to output the orange\n            // bars. The output sequence should look like this | | | | | | | |.\n            // Because the sequence is halved, to map the output index back to\n            // the previous sequence to find the corresponding value, we need\n            // to double the index. When we double the index, we basically\n            // interpolate a position, so 2i looks like\n            // | _ | _ | _ | _ | _ | _ | _. We move the | to the first k\n            // position of each 2k positions by - elemIdx % k. E.g. for output\n            // at index 4,5,6,7, we want to get the corresponding element at\n            // original index 8,9,10,11, for output at index 8,9,10,11,\n            // we want to get the corresponding element at original index\n            // 16,17,18,19, so on and so forth.\n\n            var i = 0;\n            if (elemIdx < uniforms.k) {\n              i = elemIdx;\n            } else {\n              i = elemIdx * 2 - elemIdx % uniforms.k;\n            }\n            var i0 = 0;\n            if (uniforms.firstPass == 1) {\n              i0 = i;\n            } else {\n              i0 = i32(getIndices(batch, i));\n            }\n            var i1 = 0;\n            if (uniforms.firstPass == 1) {\n              i1 = i + uniforms.k;\n            } else {\n              i1 = i32(getIndices(batch, i + uniforms.k));\n            }\n\n            let x0 = getX(batch, i0);\n            var x1 = f32(0.0);\n            if (i1 < uniforms.inputSize) {\n              x1 = getX(batch, i1);\n            } else {\n              x1 = x0;\n            }\n\n            if (x0 >= x1) {\n              setOutputAtIndex(index, f32(i0));\n            } else {\n              setOutputAtIndex(index, f32(i1));\n            }\n          }\n        }\n      `}}function PF(e,t){null!==t&&e.disposeData(t.dataId)}function DF(e){let t=1;for(;t<e;)t*=2;return t}const MF={kernelName:ur,backendName:"webgpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{k:a,sorted:o}=r,i=s.shape,u=i[i.length-1];if(n.shouldExecuteOnCPU([s])){const e=n.readSync(s.dataId),[t,r]=DR(e,i,s.dtype,a,o);return[n.makeTensorInfo(t.shape,t.dtype,t.values),n.makeTensorInfo(r.shape,r.dtype,r.values)]}if(0===a)return i[i.length-1]=0,[n.makeTensorInfo(i,s.dtype,[]),n.makeTensorInfo(i,"int32",[])];if(1===u)return[s,dE({attrs:{shape:i,dtype:"int32",value:0},backend:n})];const l=B(i)/u,c=fE({inputs:{x:s},attrs:{shape:[l,u]},backend:n}),h=DF(a),d=DF(u);let p=null;const f=()=>null===p?[c,c]:[c,p],m=(e,t,r)=>{const s=f(),a=new OF(r),o=[{type:"int32",data:[u]},{type:"int32",data:[null===p?1:0]},{type:"float32",data:[Number.NEGATIVE_INFINITY]},{type:"int32",data:[e]},{type:"int32",data:[t]}],i=p;p=n.runWebGPUProgram(a,s,"int32",o),PF(n,i)};for(let e=1;e<h;e*=2){const t=2*e;for(let n=e;n>=1;n/=2)m(t,n,[l,d])}for(let e=d;e>h;e/=2){const t=f(),r=new FF([l,e/2]),s=[{type:"int32",data:[u]},{type:"int32",data:[null===p?1:0]},{type:"int32",data:[h]}],a=p;p=n.runWebGPUProgram(r,t,"int32",s),PF(n,a);const o=h/2,i=2*o;for(let e=o;e>=1;e/=2)m(i,e,p.shape)}let g=p;p=v_({inputs:{x:p},backend:n,attrs:{begin:0,size:[l,a]}}),PF(n,g);let y=QA({inputs:{x:c,indices:p},backend:n,attrs:{axis:1,batchDims:1}});PF(n,c);const x=i.slice(0,-1);x.push(a),g=p,p=fE({inputs:{x:p},attrs:{shape:x},backend:n}),PF(n,g);const b=y;return y=fE({inputs:{x:y},attrs:{shape:x},backend:n}),PF(n,b),[y,p]}};class LF{constructor(e){this.variableNames=["Image","Transforms"],this.uniforms="interpolationModeId : i32, fillModeId : i32, fillValue : f32,",this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=e,this.dispatchLayout=ON(this.outputShape),this.dispatch=RN(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey="transform"}getUserCode(){return`\n          fn mapCoord(outCoord : f32, len : f32) -> f32{\n            var inCoord = outCoord;\n            if(uniforms.fillModeId == 2) {\n              if (inCoord < 0.0) {\n                if (len <= 1.0) {\n                  inCoord = 0.0;\n                } else {\n                  let sz2 = 2.0 * len;\n                  if (inCoord < sz2) {\n                    inCoord = sz2 * f32(i32(f32(-inCoord / sz2))) +\n                    inCoord;\n                  }\n                  if (inCoord < -len) {\n                    inCoord = inCoord + sz2;\n                  } else {\n                    inCoord = -inCoord - 1.0;\n                  }\n                }\n              } else if (inCoord > len - 1.0) {\n                if (len <= 1.0) {\n                  inCoord = 0.0;\n                } else {\n                  let sz2 = 2.0 * len;\n                  inCoord = inCoord - sz2 * f32(i32(f32(inCoord / sz2)));\n                  if (inCoord >= len) {\n                    inCoord = sz2 - inCoord - 1.0;\n                  }\n                }\n              }\n              return clamp(inCoord, 0.0, len - 1.0);\n            } else if (uniforms.fillModeId == 3) {\n              if (inCoord < 0.0) {\n                if (len <= 1.0) {\n                  inCoord = 0.0;\n                } else {\n                  let sz = len - 1.0;\n                  inCoord = inCoord + len * (f32(i32(f32(-inCoord / sz))) + 1.0);\n                }\n              } else if (inCoord > len - 1.0) {\n                if (len <= 1.0) {\n                  inCoord = 0.0;\n                } else {\n                  let sz = len - 1.0;\n                  inCoord = inCoord - len * f32(i32(f32(inCoord / sz)));\n                }\n              }\n              return clamp(inCoord, 0.0, len - 1.0);\n            } else if (uniforms.fillModeId == 4) {\n              return clamp(outCoord, 0.0, len - 1.0);\n            }\n            return outCoord;\n          }\n          fn readWithFillValue(batch : i32, coordY : i32, coordX : i32,\n            channel : i32) -> f32 {\n            var outputValue : f32;\n            if (0 <= coordY && coordY < uniforms.imageShape[1] && 0 <= coordX && coordX < uniforms.imageShape[2]) {\n                outputValue = getImage(batch, coordY, coordX, channel);\n            } else {\n              outputValue = uniforms.fillValue;\n            }\n            return outputValue;\n          }\n\n          ${wN("index")} {\n            if (index < uniforms.size) {\n              let coords = getCoordsFromIndex(index);\n              var outputValue : f32;\n              let batch = coords[0];\n              let x = coords[2];\n              let y = coords[1];\n              let channel = coords[3];\n              let xf = f32(x);\n              let yf = f32(y);\n              let a1 = getTransforms(batch, 0);\n              let a2 = getTransforms(batch, 1);\n              let a3 = getTransforms(batch, 2);\n              let b1 = getTransforms(batch, 3);\n              let b2 = getTransforms(batch, 4);\n              let b3 = getTransforms(batch, 5);\n              let c1 = getTransforms(batch, 6);\n              let c2 = getTransforms(batch, 7);\n              let projection = c1 * xf + c2 * yf + 1.0;\n              if (projection == 0.0) {\n                outputValue = uniforms.fillValue;\n              } else {\n                let inX = (a1 * xf + a2 * yf + a3) / projection;\n                let inY = (b1 * xf + b2 * yf + b3) / projection;\n                let mapX = mapCoord(inX, f32(uniforms.imageShape[2]));\n                let mapY = mapCoord(inY, f32(uniforms.imageShape[1]));\n\n                if (uniforms.interpolationModeId == 1) {\n                  let coordY = i32(round(mapY));\n                  let coordX = i32(round(mapX));\n                  outputValue = readWithFillValue(batch, coordY, coordX,\n                    channel);\n                } else {\n                  let yFloor = floor(mapY);\n                  let xFloor = floor(mapX);\n                  let yCeil = yFloor + 1.0;\n                  let xCeil = xFloor + 1.0;\n                  let valueYFloor = (xCeil - mapX) *\n                  readWithFillValue(batch, i32(yFloor), i32(xFloor), channel) +\n                  (mapX - xFloor) *\n                  readWithFillValue(batch, i32(yFloor), i32(xCeil), channel);\n                  let valueYCeil = (xCeil - mapX) *\n                  readWithFillValue(batch, i32(yCeil), i32(xFloor), channel) +\n                  (mapX - xFloor) *\n                  readWithFillValue(batch, i32(yCeil), i32(xCeil), channel);\n                  outputValue = (yCeil - mapY) * valueYFloor +\n                  (mapY - yFloor) * valueYCeil;\n                }\n              }\n              setOutputAtIndex(index, outputValue);\n            }\n          }\n        `}}const BF=[yE,BR,zR,UR,VR,GR,QR,ZR,e_,t_,n_,r_,s_,a_,o_,f_,g_,y_,k_,I_,R_,__,F_,SE,z_,j_,X_,Q_,Z_,J_,tA,iA,uA,lA,hA,mA,yA,bA,CA,IA,TA,$A,EA,_A,AA,PA,pE,MA,UA,LA,BA,HA,jA,KA,XA,ZA,JA,eO,wE,tO,M_,nO,rO,sO,aO,oO,iO,lO,hO,cO,dO,pO,fO,xO,c_,bO,vO,d_,wO,kO,CO,IO,wA,TO,$O,NO,$_,RO,OO,FO,MO,LO,BO,zO,UO,E_,WO,GO,HO,jO,mE,qO,YO,ZO,eF,tF,nF,sF,oF,uF,lF,cF,hF,dF,pF,w_,$F,EF,RF,gF,yF,xF,kF,SF,CF,IF,TF,mF,SA,_F,AF,wF,MF,{kernelName:lr,backendName:"webgpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{image:s,transforms:a}=t,{interpolation:o,fillMode:i,fillValue:u,outputShape:l}=r,[c,h,d,p]=s.shape,[f,m]=null!=l?l:[h,d],g=new LF([c,f,m,p]),y="nearest"===o?1:2;let x;switch(i){case"constant":default:x=1;break;case"reflect":x=2;break;case"wrap":x=3;break;case"nearest":x=4}const b=[{type:"int32",data:[y]},{type:"int32",data:[x]},{type:"float32",data:[u]}];return n.runWebGPUProgram(g,[s,a],"float32",b)}},qR,{kernelName:dr,backendName:"webgpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{value:s}=t;let{axis:a}=r;a<0&&(a+=s.shape.length);const o=s,i=o.shape.length,u=s.shape[a],l=new Array(i-1);let c=0;for(let e=0;e<i;e++)e!==a&&(l[c++]=o.shape[e]);const h=[],d=new Array(i).fill(0),p=o.shape.slice();p[a]=1;const f=new Array(u);for(let e=0;e<f.length;e++){d[a]=e;const t=v_({inputs:{x:o},backend:n,attrs:{begin:d,size:p}}),r=fE({inputs:{x:t},backend:n,attrs:{shape:l}});f[e]=r,h.push(t)}return h.forEach((e=>n.disposeData(e.dataId))),f}},AO];for(const e of BF)Nr(e);function zF(){for(var e,t=[],n=0;n<arguments.length;n++)t[n]=arguments[n];switch(t.length){case 0:e="fn main() ";break;case 1:e="fn main(".concat(t[0]," : i32)");break;default:throw Error("Unreachable")}return e}var UF=function(){function e(e){this.variableNames=["A","B"],this.size=!0,this.workgroupSize=[32,1,1],this.outputShape=[e[0],1],this.dispatchLayout=ON(this.outputShape),this.dispatch=RN(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey="getpointsConfidenceOp"}return e.prototype.getUserCode=function(){return"\n        ".concat(zF("index")," {\n          if (index < uniforms.size) {\n            let y = B[index * 2];\n            let x = B[index * 2 + 1];\n            let outIndex = y * uniforms.aShape.x * uniforms.aShape.z + x * uniforms.aShape.z + index;\n            result[index] = A[outIndex];\n          }\n        }\n        ")},e}(),VF=function(){function e(e){if(this.variableNames=["A","B"],this.size=!0,this.supportedLastDimension=2,2!==e.length||e[1]!==this.supportedLastDimension)throw new Error("GetOffsetVectorsProgram only supports shape of [x, ".concat(this.supportedLastDimension,"], but current shape is ").concat(e));this.workgroupSize=[32,1,1],this.outputShape=e;var t=[e[0],1];this.dispatchLayout=ON(t),this.dispatch=RN(this.dispatchLayout,t,this.workgroupSize),this.shaderKey="GetOffsetVectors"}return e.prototype.getUserCode=function(){return"\n    fn getOffsetPoint(y: i32, x: i32, index: i32) -> vec2<i32> {\n      let outIndexY = y * uniforms.bShape.x * uniforms.bShape.y + x * uniforms.bShape.y + index;\n      let outIndexX = outIndexY + uniforms.bShape.z;\n      let outY = i32(B[outIndexY]);\n      let outX = i32(B[outIndexX]);\n      return vec2<i32>(outY, outX);\n    }\n\n    ".concat(zF("index")," {\n      if (index < uniforms.size) {\n        let indexY = index * ").concat(this.supportedLastDimension,";\n        let indexX = indexY + 1;\n        let heatmapY = A[indexY];\n        let heatmapX = A[indexX];\n        let out = getOffsetPoint(i32(heatmapY), i32(heatmapX), index);\n        result[indexY] = f32(out[0]);\n        result[indexX] = f32(out[1]);\n      }\n    }\n    ")},e}();function WF(e){var t=e.shape,n=t[0],r=t[1],s=t[2];return Ya((function(){var t,a,o=ji(e,[n*r,s]),i=Ci(o,0),u=tl(ao(i,ho(r,"int32")),1),l=tl((t=i,a=r,Ya((function(){var e=ao(t,ho(a,"int32"));return wo(t,oo(e,ho(a,"int32")))}))),1);return Xi([u,l],1)}))}function GF(e,t,n){return Ya((function(){var r=function(e,t){for(var n=[],r=0;r<oT.length;r++){var s=HF(e.get(r,0).valueOf(),e.get(r,1).valueOf(),r,t),a=s.x,o=s.y;n.push(o),n.push(a)}return Zc(n,[oT.length,2])}(e,n);return ro(ja(oo(e.toTensor(),ho(t,"int32")),"float32"),r)}))}function HF(e,t,n,r){return{y:r.get(e,t,n),x:r.get(e,t,n+oT.length)}}function jF(e,t,n){return rT(this,void 0,void 0,(function(){var r,s,a,o,i,u,l,c,h,d;return sT(this,(function(p){switch(p.label){case 0:return r=0,s=WF(e),[4,Promise.all([e.buffer(),t.buffer(),s.buffer()])];case 1:return a=p.sent(),o=a[0],i=a[1],u=a[2],[4,(l=GF(u,n,i)).buffer()];case 2:return c=p.sent(),h=Array.from(function(e,t){for(var n=t.shape[0],r=new Float32Array(n),s=0;s<n;s++){var a=t.get(s,0),o=t.get(s,1);r[s]=e.get(a,o,s)}return r}(o,u)),d=h.map((function(e,t){return r+=e,{y:c.get(t,0),x:c.get(t,1),score:e,name:oT[t]}})),s.dispose(),l.dispose(),[2,{keypoints:d,score:r/d.length}]}}))}))}function KF(e,t,n){return rT(this,void 0,void 0,(function(){var r,s,a;return sT(this,(function(o){return r=WF(e),s=function(e,t,n){return Ya((function(){var r=function(e,t){if(no()instanceof LN)return function(e,t){var n=no(),r=new VF(e.shape),s=n.runWebGPUProgram(r,[e,t],"float32");return Xa().makeTensorFromTensorInfo(s)}(e,t);throw new Error("getOffsetVectorsGPU is not supported in this backend!")}(e,n);return ro(ja(oo(e,ho(t,"int32")),"float32"),r)}))}(r,n,t),a=function(e,t){if(no()instanceof LN)return function(e,t){var n=no(),r=new UF(t.shape),s=n.runWebGPUProgram(r,[e,t],"float32");return Xa().makeTensorFromTensorInfo(s)}(e,t);throw new Error("getPointsConfidenceWebGPU is not supported in this backend!")}(e,r),[2,[s,a]]}))}))}function qF(e,t){return(e-1)%t==0}var XF="https://storage.googleapis.com/tfjs-models/savedmodel/posenet/mobilenet/",YF="https://storage.googleapis.com/tfjs-models/savedmodel/posenet/resnet50/";function QF(e,t){return function(e,t){return(e-1)%t==0}(e,t)?e:Math.floor(e/t)*t+1}var ZF=function(){function e(e,t){this.posenetModel=e;var n=this.posenetModel.inputs[0].shape;D(-1===n[1]&&-1===n[2],(function(){return"Input shape [".concat(n[1],", ").concat(n[2],"] ")+"must both be equal to or -1"}));var r,s,a=(r=t.inputResolution,s=t.outputStride,{height:QF(r.height,s),width:QF(r.width,s)});!function(e){D(z$.indexOf(e)>=0,(function(){return"outputStride of ".concat(e," is invalid. ")+"It must be either 8 or 16."}))}(t.outputStride),function(e,t){D(qF(e.height,t),(function(){return"height of ".concat(e.height," is invalid for output stride ")+"".concat(t,".")})),D(qF(e.width,t),(function(){return"width of ".concat(e.width," is invalid for output stride ")+"".concat(t,".")}))}(a,t.outputStride),this.inputResolution=a,this.outputStride=t.outputStride,this.architecture=t.architecture}return e.prototype.estimatePoses=function(e,t){return void 0===t&&(t=W$),rT(this,void 0,void 0,(function(){return sT(this,(function(n){return[2,this.estimatePosesGPU(e,t,!1)]}))}))},e.prototype.estimatePosesGPU=function(e,t,n){return void 0===t&&(t=W$),void 0===n&&(n=!1),rT(this,void 0,void 0,(function(){var r,s,a,o,i,u,l,c,h,d,p,f,m,g,y,x,b,v;return sT(this,(function(w){switch(w.label){case 0:return r=function(e){var t=e;if(null==t.maxPoses&&(t.maxPoses=1),t.maxPoses<=0)throw new Error("Invalid maxPoses ".concat(t.maxPoses,". Should be > 0."));if(t.maxPoses>1){if((t=nT(nT({},G$),t)).scoreThreshold<0||t.scoreThreshold>1)throw new Error("Invalid scoreThreshold ".concat(t.scoreThreshold,". ")+"Should be in range [0.0, 1.0]");if(t.nmsRadius<=0)throw new Error("Invalid nmsRadius ".concat(t.nmsRadius,"."))}return t}(t),null==e?[2,n?[[],[]]:[]]:(this.maxPoses=r.maxPoses,s=OT(e,{outputTensorSize:this.inputResolution,keepAspectRatio:!0,borderMode:"replicate"}),a=s.imageTensor,o=s.padding,i="ResNet50"===this.architecture?ro(a,H$):AT(a,[-1,1]),u=this.posenetModel.predict(i),"ResNet50"===this.architecture?(l=jc(u[2],[0]),c=jc(u[3],[0]),h=jc(u[0],[0]),d=jc(u[1],[0])):(l=jc(u[0],[0]),c=jc(u[1],[0]),h=jc(u[2],[0]),d=jc(u[3],[0])),p=Qi(c),1!==this.maxPoses?[3,5]:n?[4,KF(p,l,this.outputStride)]:[3,2]);case 1:return m=w.sent(),y=m[0],g=m[1],f=[y,g],[3,4];case 2:return[4,jF(p,l,this.outputStride)];case 3:y=w.sent(),f=[y],w.label=4;case 4:return[3,7];case 5:if(n)throw new Error("GPU renderer only supports single pose!");return[4,lN(p,l,h,d,this.outputStride,this.maxPoses,r.scoreThreshold,r.nmsRadius)];case 6:f=w.sent(),w.label=7;case 7:if(n){if(!0===r.flipHorizontal)throw new Error("flipHorizontal is not supported!");x=this.getCanvasInfo(kT(e),this.inputResolution,o)}else v=kT(e),b=function(e,t,n,r){var s=t.height,a=t.width,o=s/(n.height*(1-r.top-r.bottom)),i=a/(n.width*(1-r.left-r.right)),u=-r.top*n.height,l=-r.left*n.width;if(1===i&&1===o&&0===u&&0===l)return e;for(var c=0,h=e;c<h.length;c++)for(var d=0,p=h[c].keypoints;d<p.length;d++){var f=p[d];f.x=(f.x+l)*i,f.y=(f.y+u)*o}return e}(f,v,this.inputResolution,o),r.flipHorizontal&&(b=function(e,t){for(var n=0,r=e;n<r.length;n++)for(var s=0,a=r[n].keypoints;s<a.length;s++){var o=a[s];o.x=t.width-1-o.x}return e}(b,v));return a.dispose(),i.dispose(),Qa(u),l.dispose(),c.dispose(),h.dispose(),d.dispose(),p.dispose(),[2,n?[f,x]:b]}}))}))},e.prototype.getCanvasInfo=function(e,t,n){var r=e.height,s=e.width,a=r/(t.height*(1-n.top-n.bottom)),o=s/(t.width*(1-n.left-n.right)),i=-n.top*t.height;return[-n.left*t.width,i,o,a,e.width,e.height]},e.prototype.dispose=function(){this.posenetModel.dispose()},e.prototype.reset=function(){},e}();function JF(e){return void 0===e&&(e=M$),rT(this,void 0,void 0,(function(){var t,n,r,s,a;return sT(this,(function(o){switch(o.label){case 0:return"ResNet50"!==(t=function(e){var t=e||M$;if(null==t.architecture&&(t.architecture="MobileNetV1"),L$.indexOf(t.architecture)<0)throw new Error("Invalid architecture ".concat(t.architecture,". ")+"Should be one of ".concat(L$));if(null==t.inputResolution&&(t.inputResolution={height:257,width:257}),null==t.outputStride&&(t.outputStride=16),B$[t.architecture].indexOf(t.outputStride)<0)throw new Error("Invalid outputStride ".concat(t.outputStride,". ")+"Should be one of ".concat(B$[t.architecture]," ")+"for architecture ".concat(t.architecture,"."));if(null==t.multiplier&&(t.multiplier=1),U$[t.architecture].indexOf(t.multiplier)<0)throw new Error("Invalid multiplier ".concat(t.multiplier,". ")+"Should be one of ".concat(U$[t.architecture]," ")+"for architecture ".concat(t.architecture,"."));if(null==t.quantBytes&&(t.quantBytes=4),V$.indexOf(t.quantBytes)<0)throw new Error("Invalid quantBytes ".concat(t.quantBytes,". ")+"Should be one of ".concat(V$," ")+"for architecture ".concat(t.architecture,"."));if("MobileNetV1"===t.architecture&&32===t.outputStride&&1!==t.multiplier)throw new Error("When using an output stride of 32, you must select 1 as the multiplier.");return t}(e)).architecture?[3,2]:(i=t.outputStride,u=t.quantBytes,l="model-stride".concat(i,".json"),n=4===u?YF+"float/"+l:YF+"quant".concat(u,"/")+l,[4,JI(t.modelUrl||n)]);case 1:return r=o.sent(),[2,new ZF(r,t)];case 2:return s=function(e,t,n){var r={1:"100",.75:"075",.5:"050"},s="model-stride".concat(e,".json");return 4===n?XF+"float/".concat(r[t],"/")+s:XF+"quant".concat(n,"/").concat(r[t],"/")+s}(t.outputStride,t.multiplier,t.quantBytes),[4,JI(t.modelUrl||s)];case 3:return a=o.sent(),[2,new ZF(a,t)]}var i,u,l}))}))}var eP="SinglePose.Thunder";class tP{constructor(e=!1,t=640){As.setBackend("webgl"),this.flipHorizontal=e,this.width=t}async createDetector(){await Ja();let e=eP;this.detector=await function(e,t){return rT(this,void 0,void 0,(function(){var n,r;return sT(this,(function(s){switch(e){case w$.PoseNet:return[2,JF(t)];case w$.BlazePose:if(r=void 0,null!=(n=t)){if("tfjs"===n.runtime)return[2,b$(t)];if("mediapipe"===n.runtime)return[2,wT(t)];r=n.runtime}throw new Error("Expect modelConfig.runtime to be either 'tfjs' "+"or 'mediapipe', but got ".concat(r));case w$.MoveNet:return[2,D$(t)];default:throw new Error("".concat(e," is not a supported model name."))}}))}))}(w$.MoveNet,{modelType:e})}async estimatePose(e){return await this.detector.estimatePoses(e)}async getFilteredPose(e,t){let n=await this.estimatePose(e);if(0==n.length)return{};let r=n[0].keypoints.filter((e=>e.score>=t)),s={};return r.forEach((e=>{s[e.name]={x:this.flipHorizontal?this.width-e.x:e.x,y:e.y,score:e.score}})),s}tfReady(){return Ja()}}},282:(e,t,n)=>{"use strict";n.r(t),n.d(t,{Camera:()=>r});class r{async getCameraStream(e=null){if("mediaDevices"in navigator&&"getUserMedia"in navigator.mediaDevices){let t={video:{}};return e&&(t.video.deviceId={exact:e}),await navigator.mediaDevices.getUserMedia(t)}}async getCameraIDByName(e){if("mediaDevices"in navigator&&"getUserMedia"in navigator.mediaDevices){let t=await this.getCameras();for(let n=0;n<t.length;n++)if(t[n].label==e)return t[n].id}return""}async getCameraNameByID(e){if("mediaDevices"in navigator&&"getUserMedia"in navigator.mediaDevices){let t=await this.getCameras();for(let n=0;n<t.length;n++)if(t[n].id===e)return t[n].label}return""}async getCameras(){const e=(await navigator.mediaDevices.enumerateDevices()).filter((e=>"videoinput"===e.kind));return""==e[0].deviceId?(await this.getCameraStream(),await this.getCameras()):e.map((e=>({label:e.label,id:e.deviceId})))}async updateCameraSelector(e){let t=await this.getCameras();e.innerHTML='<option value="">Select camera</option>',t.forEach((t=>{e.innerHTML+=`\n<option value=${t.id}>${t.label}</option>`}))}}},410:()=>{},628:()=>{},42:()=>{},419:(e,t)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.hasCORS=void 0;let n=!1;try{n="undefined"!=typeof XMLHttpRequest&&"withCredentials"in new XMLHttpRequest}catch(e){}t.hasCORS=n},754:(e,t)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.decode=t.encode=void 0,t.encode=function(e){let t="";for(let n in e)e.hasOwnProperty(n)&&(t.length&&(t+="&"),t+=encodeURIComponent(n)+"="+encodeURIComponent(e[n]));return t},t.decode=function(e){let t={},n=e.split("&");for(let e=0,r=n.length;e<r;e++){let r=n[e].split("=");t[decodeURIComponent(r[0])]=decodeURIComponent(r[1])}return t}},222:(e,t)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.parse=void 0;const n=/^(?:(?![^:@\/?#]+:[^:@\/]*@)(http|https|ws|wss):\/\/)?((?:(([^:@\/?#]*)(?::([^:@\/?#]*))?)?@)?((?:[a-f0-9]{0,4}:){2,7}[a-f0-9]{0,4}|[^:\/?#]*)(?::(\d*))?)(((\/(?:[^?#](?![^?#\/]*\.[^?#\/.]+(?:[?#]|$)))*\/?)?([^?#\/]*))(?:\?([^#]*))?(?:#(.*))?)/,r=["source","protocol","authority","userInfo","user","password","host","port","relative","path","directory","file","query","anchor"];t.parse=function(e){const t=e,s=e.indexOf("["),a=e.indexOf("]");-1!=s&&-1!=a&&(e=e.substring(0,s)+e.substring(s,a).replace(/:/g,";")+e.substring(a,e.length));let o=n.exec(e||""),i={},u=14;for(;u--;)i[r[u]]=o[u]||"";return-1!=s&&-1!=a&&(i.source=t,i.host=i.host.substring(1,i.host.length-1).replace(/;/g,":"),i.authority=i.authority.replace("[","").replace("]","").replace(/;/g,":"),i.ipv6uri=!0),i.pathNames=function(e,t){const n=t.replace(/\/{2,9}/g,"/").split("/");return"/"!=t.slice(0,1)&&0!==t.length||n.splice(0,1),"/"==t.slice(-1)&&n.splice(n.length-1,1),n}(0,i.path),i.queryKey=function(e,t){const n={};return t.replace(/(?:^|&)([^&=]*)=?([^&]*)/g,(function(e,t,r){t&&(n[t]=r)})),n}(0,i.query),i}},726:(e,t)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.yeast=t.decode=t.encode=void 0;const n="0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz-_".split(""),r={};let s,a=0,o=0;function i(e){let t="";do{t=n[e%64]+t,e=Math.floor(e/64)}while(e>0);return t}for(t.encode=i,t.decode=function(e){let t=0;for(o=0;o<e.length;o++)t=64*t+r[e.charAt(o)];return t},t.yeast=function(){const e=i(+new Date);return e!==s?(a=0,s=e):e+"."+i(a++)};o<64;o++)r[n[o]]=o},242:(e,t)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.globalThisShim=void 0,t.globalThisShim="undefined"!=typeof self?self:"undefined"!=typeof window?window:Function("return this")()},679:(e,t,n)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.nextTick=t.parse=t.installTimerFunctions=t.transports=t.Transport=t.protocol=t.Socket=void 0;const r=n(481);Object.defineProperty(t,"Socket",{enumerable:!0,get:function(){return r.Socket}}),t.protocol=r.Socket.protocol;var s=n(870);Object.defineProperty(t,"Transport",{enumerable:!0,get:function(){return s.Transport}});var a=n(385);Object.defineProperty(t,"transports",{enumerable:!0,get:function(){return a.transports}});var o=n(622);Object.defineProperty(t,"installTimerFunctions",{enumerable:!0,get:function(){return o.installTimerFunctions}});var i=n(222);Object.defineProperty(t,"parse",{enumerable:!0,get:function(){return i.parse}});var u=n(552);Object.defineProperty(t,"nextTick",{enumerable:!0,get:function(){return u.nextTick}})},481:function(e,t,n){"use strict";var r=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0}),t.Socket=void 0;const s=n(385),a=n(622),o=n(754),i=n(222),u=r(n(227)),l=n(260),c=n(373),h=(0,u.default)("engine.io-client:socket");class d extends l.Emitter{constructor(e,t={}){super(),this.writeBuffer=[],e&&"object"==typeof e&&(t=e,e=null),e?(e=(0,i.parse)(e),t.hostname=e.host,t.secure="https"===e.protocol||"wss"===e.protocol,t.port=e.port,e.query&&(t.query=e.query)):t.host&&(t.hostname=(0,i.parse)(t.host).host),(0,a.installTimerFunctions)(this,t),this.secure=null!=t.secure?t.secure:"undefined"!=typeof location&&"https:"===location.protocol,t.hostname&&!t.port&&(t.port=this.secure?"443":"80"),this.hostname=t.hostname||("undefined"!=typeof location?location.hostname:"localhost"),this.port=t.port||("undefined"!=typeof location&&location.port?location.port:this.secure?"443":"80"),this.transports=t.transports||["polling","websocket","webtransport"],this.writeBuffer=[],this.prevBufferLen=0,this.opts=Object.assign({path:"/engine.io",agent:!1,withCredentials:!1,upgrade:!0,timestampParam:"t",rememberUpgrade:!1,addTrailingSlash:!0,rejectUnauthorized:!0,perMessageDeflate:{threshold:1024},transportOptions:{},closeOnBeforeunload:!1},t),this.opts.path=this.opts.path.replace(/\/$/,"")+(this.opts.addTrailingSlash?"/":""),"string"==typeof this.opts.query&&(this.opts.query=(0,o.decode)(this.opts.query)),this.id=null,this.upgrades=null,this.pingInterval=null,this.pingTimeout=null,this.pingTimeoutTimer=null,"function"==typeof addEventListener&&(this.opts.closeOnBeforeunload&&(this.beforeunloadEventListener=()=>{this.transport&&(this.transport.removeAllListeners(),this.transport.close())},addEventListener("beforeunload",this.beforeunloadEventListener,!1)),"localhost"!==this.hostname&&(this.offlineEventListener=()=>{this.onClose("transport close",{description:"network connection lost"})},addEventListener("offline",this.offlineEventListener,!1))),this.open()}createTransport(e){h('creating transport "%s"',e);const t=Object.assign({},this.opts.query);t.EIO=c.protocol,t.transport=e,this.id&&(t.sid=this.id);const n=Object.assign({},this.opts,{query:t,socket:this,hostname:this.hostname,secure:this.secure,port:this.port},this.opts.transportOptions[e]);return h("options: %j",n),new s.transports[e](n)}open(){let e;if(this.opts.rememberUpgrade&&d.priorWebsocketSuccess&&-1!==this.transports.indexOf("websocket"))e="websocket";else{if(0===this.transports.length)return void this.setTimeoutFn((()=>{this.emitReserved("error","No transports available")}),0);e=this.transports[0]}this.readyState="opening";try{e=this.createTransport(e)}catch(e){return h("error while creating transport: %s",e),this.transports.shift(),void this.open()}e.open(),this.setTransport(e)}setTransport(e){h("setting transport %s",e.name),this.transport&&(h("clearing existing transport %s",this.transport.name),this.transport.removeAllListeners()),this.transport=e,e.on("drain",this.onDrain.bind(this)).on("packet",this.onPacket.bind(this)).on("error",this.onError.bind(this)).on("close",(e=>this.onClose("transport close",e)))}probe(e){h('probing transport "%s"',e);let t=this.createTransport(e),n=!1;d.priorWebsocketSuccess=!1;const r=()=>{n||(h('probe transport "%s" opened',e),t.send([{type:"ping",data:"probe"}]),t.once("packet",(r=>{if(!n)if("pong"===r.type&&"probe"===r.data){if(h('probe transport "%s" pong',e),this.upgrading=!0,this.emitReserved("upgrading",t),!t)return;d.priorWebsocketSuccess="websocket"===t.name,h('pausing current transport "%s"',this.transport.name),this.transport.pause((()=>{n||"closed"!==this.readyState&&(h("changing transport and sending upgrade packet"),l(),this.setTransport(t),t.send([{type:"upgrade"}]),this.emitReserved("upgrade",t),t=null,this.upgrading=!1,this.flush())}))}else{h('probe transport "%s" failed',e);const n=new Error("probe error");n.transport=t.name,this.emitReserved("upgradeError",n)}})))};function s(){n||(n=!0,l(),t.close(),t=null)}const a=n=>{const r=new Error("probe error: "+n);r.transport=t.name,s(),h('probe transport "%s" failed because of error: %s',e,n),this.emitReserved("upgradeError",r)};function o(){a("transport closed")}function i(){a("socket closed")}function u(e){t&&e.name!==t.name&&(h('"%s" works - aborting "%s"',e.name,t.name),s())}const l=()=>{t.removeListener("open",r),t.removeListener("error",a),t.removeListener("close",o),this.off("close",i),this.off("upgrading",u)};t.once("open",r),t.once("error",a),t.once("close",o),this.once("close",i),this.once("upgrading",u),-1!==this.upgrades.indexOf("webtransport")&&"webtransport"!==e?this.setTimeoutFn((()=>{n||t.open()}),200):t.open()}onOpen(){if(h("socket open"),this.readyState="open",d.priorWebsocketSuccess="websocket"===this.transport.name,this.emitReserved("open"),this.flush(),"open"===this.readyState&&this.opts.upgrade){h("starting upgrade probes");let e=0;const t=this.upgrades.length;for(;e<t;e++)this.probe(this.upgrades[e])}}onPacket(e){if("opening"===this.readyState||"open"===this.readyState||"closing"===this.readyState)switch(h('socket receive: type "%s", data "%s"',e.type,e.data),this.emitReserved("packet",e),this.emitReserved("heartbeat"),e.type){case"open":this.onHandshake(JSON.parse(e.data));break;case"ping":this.resetPingTimeout(),this.sendPacket("pong"),this.emitReserved("ping"),this.emitReserved("pong");break;case"error":const t=new Error("server error");t.code=e.data,this.onError(t);break;case"message":this.emitReserved("data",e.data),this.emitReserved("message",e.data)}else h('packet received with socket readyState "%s"',this.readyState)}onHandshake(e){this.emitReserved("handshake",e),this.id=e.sid,this.transport.query.sid=e.sid,this.upgrades=this.filterUpgrades(e.upgrades),this.pingInterval=e.pingInterval,this.pingTimeout=e.pingTimeout,this.maxPayload=e.maxPayload,this.onOpen(),"closed"!==this.readyState&&this.resetPingTimeout()}resetPingTimeout(){this.clearTimeoutFn(this.pingTimeoutTimer),this.pingTimeoutTimer=this.setTimeoutFn((()=>{this.onClose("ping timeout")}),this.pingInterval+this.pingTimeout),this.opts.autoUnref&&this.pingTimeoutTimer.unref()}onDrain(){this.writeBuffer.splice(0,this.prevBufferLen),this.prevBufferLen=0,0===this.writeBuffer.length?this.emitReserved("drain"):this.flush()}flush(){if("closed"!==this.readyState&&this.transport.writable&&!this.upgrading&&this.writeBuffer.length){const e=this.getWritablePackets();h("flushing %d packets in socket",e.length),this.transport.send(e),this.prevBufferLen=e.length,this.emitReserved("flush")}}getWritablePackets(){if(!(this.maxPayload&&"polling"===this.transport.name&&this.writeBuffer.length>1))return this.writeBuffer;let e=1;for(let t=0;t<this.writeBuffer.length;t++){const n=this.writeBuffer[t].data;if(n&&(e+=(0,a.byteLength)(n)),t>0&&e>this.maxPayload)return h("only send %d out of %d packets",t,this.writeBuffer.length),this.writeBuffer.slice(0,t);e+=2}return h("payload size is %d (max: %d)",e,this.maxPayload),this.writeBuffer}write(e,t,n){return this.sendPacket("message",e,t,n),this}send(e,t,n){return this.sendPacket("message",e,t,n),this}sendPacket(e,t,n,r){if("function"==typeof t&&(r=t,t=void 0),"function"==typeof n&&(r=n,n=null),"closing"===this.readyState||"closed"===this.readyState)return;(n=n||{}).compress=!1!==n.compress;const s={type:e,data:t,options:n};this.emitReserved("packetCreate",s),this.writeBuffer.push(s),r&&this.once("flush",r),this.flush()}close(){const e=()=>{this.onClose("forced close"),h("socket closing - telling transport to close"),this.transport.close()},t=()=>{this.off("upgrade",t),this.off("upgradeError",t),e()},n=()=>{this.once("upgrade",t),this.once("upgradeError",t)};return"opening"!==this.readyState&&"open"!==this.readyState||(this.readyState="closing",this.writeBuffer.length?this.once("drain",(()=>{this.upgrading?n():e()})):this.upgrading?n():e()),this}onError(e){h("socket error %j",e),d.priorWebsocketSuccess=!1,this.emitReserved("error",e),this.onClose("transport error",e)}onClose(e,t){"opening"!==this.readyState&&"open"!==this.readyState&&"closing"!==this.readyState||(h('socket close with reason: "%s"',e),this.clearTimeoutFn(this.pingTimeoutTimer),this.transport.removeAllListeners("close"),this.transport.close(),this.transport.removeAllListeners(),"function"==typeof removeEventListener&&(removeEventListener("beforeunload",this.beforeunloadEventListener,!1),removeEventListener("offline",this.offlineEventListener,!1)),this.readyState="closed",this.id=null,this.emitReserved("close",e,t),this.writeBuffer=[],this.prevBufferLen=0)}filterUpgrades(e){const t=[];let n=0;const r=e.length;for(;n<r;n++)~this.transports.indexOf(e[n])&&t.push(e[n]);return t}}t.Socket=d,d.protocol=c.protocol},870:function(e,t,n){"use strict";var r=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0}),t.Transport=void 0;const s=n(373),a=n(260),o=n(622),i=r(n(227)),u=n(754),l=(0,i.default)("engine.io-client:transport");class c extends Error{constructor(e,t,n){super(e),this.description=t,this.context=n,this.type="TransportError"}}class h extends a.Emitter{constructor(e){super(),this.writable=!1,(0,o.installTimerFunctions)(this,e),this.opts=e,this.query=e.query,this.socket=e.socket}onError(e,t,n){return super.emitReserved("error",new c(e,t,n)),this}open(){return this.readyState="opening",this.doOpen(),this}close(){return"opening"!==this.readyState&&"open"!==this.readyState||(this.doClose(),this.onClose()),this}send(e){"open"===this.readyState?this.write(e):l("transport is not open, discarding packets")}onOpen(){this.readyState="open",this.writable=!0,super.emitReserved("open")}onData(e){const t=(0,s.decodePacket)(e,this.socket.binaryType);this.onPacket(t)}onPacket(e){super.emitReserved("packet",e)}onClose(e){this.readyState="closed",super.emitReserved("close",e)}pause(e){}createUri(e,t={}){return e+"://"+this._hostname()+this._port()+this.opts.path+this._query(t)}_hostname(){const e=this.opts.hostname;return-1===e.indexOf(":")?e:"["+e+"]"}_port(){return this.opts.port&&(this.opts.secure&&Number(443!==this.opts.port)||!this.opts.secure&&80!==Number(this.opts.port))?":"+this.opts.port:""}_query(e){const t=(0,u.encode)(e);return t.length?"?"+t:""}}t.Transport=h},385:(e,t,n)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.transports=void 0;const r=n(484),s=n(308),a=n(20);t.transports={websocket:s.WS,webtransport:a.WT,polling:r.Polling}},484:function(e,t,n){"use strict";var r=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0}),t.Request=t.Polling=void 0;const s=n(870),a=r(n(227)),o=n(726),i=n(373),u=n(666),l=n(260),c=n(622),h=n(242),d=(0,a.default)("engine.io-client:polling");function p(){}const f=null!=new u.XHR({xdomain:!1}).responseType;class m extends s.Transport{constructor(e){if(super(e),this.polling=!1,"undefined"!=typeof location){const t="https:"===location.protocol;let n=location.port;n||(n=t?"443":"80"),this.xd="undefined"!=typeof location&&e.hostname!==location.hostname||n!==e.port}const t=e&&e.forceBase64;this.supportsBinary=f&&!t,this.opts.withCredentials&&(this.cookieJar=(0,u.createCookieJar)())}get name(){return"polling"}doOpen(){this.poll()}pause(e){this.readyState="pausing";const t=()=>{d("paused"),this.readyState="paused",e()};if(this.polling||!this.writable){let e=0;this.polling&&(d("we are currently polling - waiting to pause"),e++,this.once("pollComplete",(function(){d("pre-pause polling complete"),--e||t()}))),this.writable||(d("we are currently writing - waiting to pause"),e++,this.once("drain",(function(){d("pre-pause writing complete"),--e||t()})))}else t()}poll(){d("polling"),this.polling=!0,this.doPoll(),this.emitReserved("poll")}onData(e){d("polling got data %s",e),(0,i.decodePayload)(e,this.socket.binaryType).forEach((e=>{if("opening"===this.readyState&&"open"===e.type&&this.onOpen(),"close"===e.type)return this.onClose({description:"transport closed by the server"}),!1;this.onPacket(e)})),"closed"!==this.readyState&&(this.polling=!1,this.emitReserved("pollComplete"),"open"===this.readyState?this.poll():d('ignoring poll - transport state "%s"',this.readyState))}doClose(){const e=()=>{d("writing close packet"),this.write([{type:"close"}])};"open"===this.readyState?(d("transport open - closing"),e()):(d("transport not open - deferring close"),this.once("open",e))}write(e){this.writable=!1,(0,i.encodePayload)(e,(e=>{this.doWrite(e,(()=>{this.writable=!0,this.emitReserved("drain")}))}))}uri(){const e=this.opts.secure?"https":"http",t=this.query||{};return!1!==this.opts.timestampRequests&&(t[this.opts.timestampParam]=(0,o.yeast)()),this.supportsBinary||t.sid||(t.b64=1),this.createUri(e,t)}request(e={}){return Object.assign(e,{xd:this.xd,cookieJar:this.cookieJar},this.opts),new g(this.uri(),e)}doWrite(e,t){const n=this.request({method:"POST",data:e});n.on("success",t),n.on("error",((e,t)=>{this.onError("xhr post error",e,t)}))}doPoll(){d("xhr poll");const e=this.request();e.on("data",this.onData.bind(this)),e.on("error",((e,t)=>{this.onError("xhr poll error",e,t)})),this.pollXhr=e}}t.Polling=m;class g extends l.Emitter{constructor(e,t){super(),(0,c.installTimerFunctions)(this,t),this.opts=t,this.method=t.method||"GET",this.uri=e,this.data=void 0!==t.data?t.data:null,this.create()}create(){var e;const t=(0,c.pick)(this.opts,"agent","pfx","key","passphrase","cert","ca","ciphers","rejectUnauthorized","autoUnref");t.xdomain=!!this.opts.xd;const n=this.xhr=new u.XHR(t);try{d("xhr open %s: %s",this.method,this.uri),n.open(this.method,this.uri,!0);try{if(this.opts.extraHeaders){n.setDisableHeaderCheck&&n.setDisableHeaderCheck(!0);for(let e in this.opts.extraHeaders)this.opts.extraHeaders.hasOwnProperty(e)&&n.setRequestHeader(e,this.opts.extraHeaders[e])}}catch(e){}if("POST"===this.method)try{n.setRequestHeader("Content-type","text/plain;charset=UTF-8")}catch(e){}try{n.setRequestHeader("Accept","*/*")}catch(e){}null===(e=this.opts.cookieJar)||void 0===e||e.addCookies(n),"withCredentials"in n&&(n.withCredentials=this.opts.withCredentials),this.opts.requestTimeout&&(n.timeout=this.opts.requestTimeout),n.onreadystatechange=()=>{var e;3===n.readyState&&(null===(e=this.opts.cookieJar)||void 0===e||e.parseCookies(n)),4===n.readyState&&(200===n.status||1223===n.status?this.onLoad():this.setTimeoutFn((()=>{this.onError("number"==typeof n.status?n.status:0)}),0))},d("xhr data %s",this.data),n.send(this.data)}catch(e){return void this.setTimeoutFn((()=>{this.onError(e)}),0)}"undefined"!=typeof document&&(this.index=g.requestsCount++,g.requests[this.index]=this)}onError(e){this.emitReserved("error",e,this.xhr),this.cleanup(!0)}cleanup(e){if(void 0!==this.xhr&&null!==this.xhr){if(this.xhr.onreadystatechange=p,e)try{this.xhr.abort()}catch(e){}"undefined"!=typeof document&&delete g.requests[this.index],this.xhr=null}}onLoad(){const e=this.xhr.responseText;null!==e&&(this.emitReserved("data",e),this.emitReserved("success"),this.cleanup())}abort(){this.cleanup()}}if(t.Request=g,g.requestsCount=0,g.requests={},"undefined"!=typeof document)if("function"==typeof attachEvent)attachEvent("onunload",y);else if("function"==typeof addEventListener){const e="onpagehide"in h.globalThisShim?"pagehide":"unload";addEventListener(e,y,!1)}function y(){for(let e in g.requests)g.requests.hasOwnProperty(e)&&g.requests[e].abort()}},552:(e,t,n)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.defaultBinaryType=t.usingBrowserWebSocket=t.WebSocket=t.nextTick=void 0;const r=n(242);t.nextTick="function"==typeof Promise&&"function"==typeof Promise.resolve?e=>Promise.resolve().then(e):(e,t)=>t(e,0),t.WebSocket=r.globalThisShim.WebSocket||r.globalThisShim.MozWebSocket,t.usingBrowserWebSocket=!0,t.defaultBinaryType="arraybuffer"},308:function(e,t,n){"use strict";var r=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0}),t.WS=void 0;const s=n(870),a=n(726),o=n(622),i=n(552),u=r(n(227)),l=n(373),c=(0,u.default)("engine.io-client:websocket"),h="undefined"!=typeof navigator&&"string"==typeof navigator.product&&"reactnative"===navigator.product.toLowerCase();class d extends s.Transport{constructor(e){super(e),this.supportsBinary=!e.forceBase64}get name(){return"websocket"}doOpen(){if(!this.check())return;const e=this.uri(),t=this.opts.protocols,n=h?{}:(0,o.pick)(this.opts,"agent","perMessageDeflate","pfx","key","passphrase","cert","ca","ciphers","rejectUnauthorized","localAddress","protocolVersion","origin","maxPayload","family","checkServerIdentity");this.opts.extraHeaders&&(n.headers=this.opts.extraHeaders);try{this.ws=i.usingBrowserWebSocket&&!h?t?new i.WebSocket(e,t):new i.WebSocket(e):new i.WebSocket(e,t,n)}catch(e){return this.emitReserved("error",e)}this.ws.binaryType=this.socket.binaryType||i.defaultBinaryType,this.addEventListeners()}addEventListeners(){this.ws.onopen=()=>{this.opts.autoUnref&&this.ws._socket.unref(),this.onOpen()},this.ws.onclose=e=>this.onClose({description:"websocket connection closed",context:e}),this.ws.onmessage=e=>this.onData(e.data),this.ws.onerror=e=>this.onError("websocket error",e)}write(e){this.writable=!1;for(let t=0;t<e.length;t++){const n=e[t],r=t===e.length-1;(0,l.encodePacket)(n,this.supportsBinary,(e=>{const t={};!i.usingBrowserWebSocket&&(n.options&&(t.compress=n.options.compress),this.opts.perMessageDeflate)&&("string"==typeof e?Buffer.byteLength(e):e.length)<this.opts.perMessageDeflate.threshold&&(t.compress=!1);try{i.usingBrowserWebSocket?this.ws.send(e):this.ws.send(e,t)}catch(e){c("websocket closed before onclose event")}r&&(0,i.nextTick)((()=>{this.writable=!0,this.emitReserved("drain")}),this.setTimeoutFn)}))}}doClose(){void 0!==this.ws&&(this.ws.close(),this.ws=null)}uri(){const e=this.opts.secure?"wss":"ws",t=this.query||{};return this.opts.timestampRequests&&(t[this.opts.timestampParam]=(0,a.yeast)()),this.supportsBinary||(t.b64=1),this.createUri(e,t)}check(){return!!i.WebSocket}}t.WS=d},20:function(e,t,n){"use strict";var r=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0}),t.WT=void 0;const s=n(870),a=n(552),o=n(373),i=(0,r(n(227)).default)("engine.io-client:webtransport");function u(e,t){return"message"===e.type&&"string"!=typeof e.data&&t[0]>=48&&t[0]<=54}class l extends s.Transport{get name(){return"webtransport"}doOpen(){"function"==typeof WebTransport&&(this.transport=new WebTransport(this.createUri("https"),this.opts.transportOptions[this.name]),this.transport.closed.then((()=>{i("transport closed gracefully"),this.onClose()})).catch((e=>{i("transport closed due to %s",e),this.onError("webtransport error",e)})),this.transport.ready.then((()=>{this.transport.createBidirectionalStream().then((e=>{const t=e.readable.getReader();let n;this.writer=e.writable.getWriter();const r=()=>{t.read().then((({done:e,value:t})=>{e?i("session is closed"):(i("received chunk: %o",t),n||1!==t.byteLength||54!==t[0]?(this.onPacket((0,o.decodePacketFromBinary)(t,n,"arraybuffer")),n=!1):n=!0,r())})).catch((e=>{i("an error occurred while reading: %s",e)}))};r();const s=this.query.sid?`0{"sid":"${this.query.sid}"}`:"0";this.writer.write((new TextEncoder).encode(s)).then((()=>this.onOpen()))}))})))}write(e){this.writable=!1;for(let t=0;t<e.length;t++){const n=e[t],r=t===e.length-1;(0,o.encodePacketToBinary)(n,(e=>{u(n,e)&&(i("writing binary header"),this.writer.write(Uint8Array.of(54))),i("writing chunk: %o",e),this.writer.write(e).then((()=>{r&&(0,a.nextTick)((()=>{this.writable=!0,this.emitReserved("drain")}),this.setTimeoutFn)}))}))}}doClose(){var e;null===(e=this.transport)||void 0===e||e.close()}}t.WT=l},666:(e,t,n)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.createCookieJar=t.XHR=void 0;const r=n(419),s=n(242);t.XHR=function(e){const t=e.xdomain;try{if("undefined"!=typeof XMLHttpRequest&&(!t||r.hasCORS))return new XMLHttpRequest}catch(e){}if(!t)try{return new(s.globalThisShim[["Active"].concat("Object").join("X")])("Microsoft.XMLHTTP")}catch(e){}},t.createCookieJar=function(){}},622:(e,t,n)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.byteLength=t.installTimerFunctions=t.pick=void 0;const r=n(242);t.pick=function(e,...t){return t.reduce(((t,n)=>(e.hasOwnProperty(n)&&(t[n]=e[n]),t)),{})};const s=r.globalThisShim.setTimeout,a=r.globalThisShim.clearTimeout;t.installTimerFunctions=function(e,t){t.useNativeTimers?(e.setTimeoutFn=s.bind(r.globalThisShim),e.clearTimeoutFn=a.bind(r.globalThisShim)):(e.setTimeoutFn=r.globalThisShim.setTimeout.bind(r.globalThisShim),e.clearTimeoutFn=r.globalThisShim.clearTimeout.bind(r.globalThisShim))},t.byteLength=function(e){return"string"==typeof e?function(e){let t=0,n=0;for(let r=0,s=e.length;r<s;r++)t=e.charCodeAt(r),t<128?n+=1:t<2048?n+=2:t<55296||t>=57344?n+=3:(r++,n+=4);return n}(e):Math.ceil(1.33*(e.byteLength||e.size))}},87:(e,t)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.ERROR_PACKET=t.PACKET_TYPES_REVERSE=t.PACKET_TYPES=void 0;const n=Object.create(null);t.PACKET_TYPES=n,n.open="0",n.close="1",n.ping="2",n.pong="3",n.message="4",n.upgrade="5",n.noop="6";const r=Object.create(null);t.PACKET_TYPES_REVERSE=r,Object.keys(n).forEach((e=>{r[n[e]]=e})),t.ERROR_PACKET={type:"error",data:"parser error"}},469:(e,t)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.decode=t.encode=void 0;const n="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/",r="undefined"==typeof Uint8Array?[]:new Uint8Array(256);for(let e=0;e<64;e++)r[n.charCodeAt(e)]=e;t.encode=e=>{let t,r=new Uint8Array(e),s=r.length,a="";for(t=0;t<s;t+=3)a+=n[r[t]>>2],a+=n[(3&r[t])<<4|r[t+1]>>4],a+=n[(15&r[t+1])<<2|r[t+2]>>6],a+=n[63&r[t+2]];return s%3==2?a=a.substring(0,a.length-1)+"=":s%3==1&&(a=a.substring(0,a.length-2)+"=="),a},t.decode=e=>{let t,n,s,a,o,i=.75*e.length,u=e.length,l=0;"="===e[e.length-1]&&(i--,"="===e[e.length-2]&&i--);const c=new ArrayBuffer(i),h=new Uint8Array(c);for(t=0;t<u;t+=4)n=r[e.charCodeAt(t)],s=r[e.charCodeAt(t+1)],a=r[e.charCodeAt(t+2)],o=r[e.charCodeAt(t+3)],h[l++]=n<<2|s>>4,h[l++]=(15&s)<<4|a>>2,h[l++]=(3&a)<<6|63&o;return c}},572:(e,t,n)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.decodePacket=void 0;const r=n(87),s=n(469),a="function"==typeof ArrayBuffer;t.decodePacket=(e,t)=>{if("string"!=typeof e)return{type:"message",data:i(e,t)};const n=e.charAt(0);return"b"===n?{type:"message",data:o(e.substring(1),t)}:r.PACKET_TYPES_REVERSE[n]?e.length>1?{type:r.PACKET_TYPES_REVERSE[n],data:e.substring(1)}:{type:r.PACKET_TYPES_REVERSE[n]}:r.ERROR_PACKET};const o=(e,t)=>{if(a){const n=(0,s.decode)(e);return i(n,t)}return{base64:!0,data:e}},i=(e,t)=>"blob"===t?e instanceof Blob?e:new Blob([e]):e instanceof ArrayBuffer?e:e.buffer},908:(e,t,n)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.encodePacket=t.encodePacketToBinary=void 0;const r=n(87),s="function"==typeof Blob||"undefined"!=typeof Blob&&"[object BlobConstructor]"===Object.prototype.toString.call(Blob),a="function"==typeof ArrayBuffer,o=e=>"function"==typeof ArrayBuffer.isView?ArrayBuffer.isView(e):e&&e.buffer instanceof ArrayBuffer,i=({type:e,data:t},n,i)=>s&&t instanceof Blob?n?i(t):u(t,i):a&&(t instanceof ArrayBuffer||o(t))?n?i(t):u(new Blob([t]),i):i(r.PACKET_TYPES[e]+(t||""));t.encodePacket=i;const u=(e,t)=>{const n=new FileReader;return n.onload=function(){const e=n.result.split(",")[1];t("b"+(e||""))},n.readAsDataURL(e)};function l(e){return e instanceof Uint8Array?e:e instanceof ArrayBuffer?new Uint8Array(e):new Uint8Array(e.buffer,e.byteOffset,e.byteLength)}let c;t.encodePacketToBinary=function(e,t){return s&&e.data instanceof Blob?e.data.arrayBuffer().then(l).then(t):a&&(e.data instanceof ArrayBuffer||o(e.data))?t(l(e.data)):void i(e,!1,(e=>{c||(c=new TextEncoder),t(c.encode(e))}))}},373:(e,t,n)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.decodePayload=t.decodePacket=t.encodePayload=t.encodePacketToBinary=t.encodePacket=t.protocol=t.decodePacketFromBinary=void 0;const r=n(908);Object.defineProperty(t,"encodePacket",{enumerable:!0,get:function(){return r.encodePacket}}),Object.defineProperty(t,"encodePacketToBinary",{enumerable:!0,get:function(){return r.encodePacketToBinary}});const s=n(572);Object.defineProperty(t,"decodePacket",{enumerable:!0,get:function(){return s.decodePacket}});const a=String.fromCharCode(30);let o;t.encodePayload=(e,t)=>{const n=e.length,s=new Array(n);let o=0;e.forEach(((e,i)=>{(0,r.encodePacket)(e,!1,(e=>{s[i]=e,++o===n&&t(s.join(a))}))}))},t.decodePayload=(e,t)=>{const n=e.split(a),r=[];for(let e=0;e<n.length;e++){const a=(0,s.decodePacket)(n[e],t);if(r.push(a),"error"===a.type)break}return r},t.decodePacketFromBinary=function(e,t,n){o||(o=new TextDecoder);const r=t||e[0]<48||e[0]>54;return(0,s.decodePacket)(r?e:o.decode(e),n)},t.protocol=4},159:(e,t)=>{"use strict";function n(e){e=e||{},this.ms=e.min||100,this.max=e.max||1e4,this.factor=e.factor||2,this.jitter=e.jitter>0&&e.jitter<=1?e.jitter:0,this.attempts=0}Object.defineProperty(t,"__esModule",{value:!0}),t.Backoff=void 0,t.Backoff=n,n.prototype.duration=function(){var e=this.ms*Math.pow(this.factor,this.attempts++);if(this.jitter){var t=Math.random(),n=Math.floor(t*this.jitter*e);e=0==(1&Math.floor(10*t))?e-n:e+n}return 0|Math.min(e,this.max)},n.prototype.reset=function(){this.attempts=0},n.prototype.setMin=function(e){this.ms=e},n.prototype.setMax=function(e){this.max=e},n.prototype.setJitter=function(e){this.jitter=e}},46:function(e,t,n){"use strict";var r=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0}),t.default=t.connect=t.io=t.Socket=t.Manager=t.protocol=void 0;const s=n(84),a=n(168);Object.defineProperty(t,"Manager",{enumerable:!0,get:function(){return a.Manager}});const o=n(312);Object.defineProperty(t,"Socket",{enumerable:!0,get:function(){return o.Socket}});const i=r(n(227)).default("socket.io-client"),u={};function l(e,t){"object"==typeof e&&(t=e,e=void 0),t=t||{};const n=s.url(e,t.path||"/socket.io"),r=n.source,o=n.id,l=n.path,c=u[o]&&l in u[o].nsps;let h;return t.forceNew||t["force new connection"]||!1===t.multiplex||c?(i("ignoring socket cache for %s",r),h=new a.Manager(r,t)):(u[o]||(i("new io instance for %s",r),u[o]=new a.Manager(r,t)),h=u[o]),n.query&&!t.query&&(t.query=n.queryKey),h.socket(n.path,t)}t.io=l,t.connect=l,t.default=l,Object.assign(l,{Manager:a.Manager,Socket:o.Socket,io:l,connect:l});var c=n(514);Object.defineProperty(t,"protocol",{enumerable:!0,get:function(){return c.protocol}}),e.exports=l},168:function(e,t,n){"use strict";var r=this&&this.__createBinding||(Object.create?function(e,t,n,r){void 0===r&&(r=n),Object.defineProperty(e,r,{enumerable:!0,get:function(){return t[n]}})}:function(e,t,n,r){void 0===r&&(r=n),e[r]=t[n]}),s=this&&this.__setModuleDefault||(Object.create?function(e,t){Object.defineProperty(e,"default",{enumerable:!0,value:t})}:function(e,t){e.default=t}),a=this&&this.__importStar||function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var n in e)"default"!==n&&Object.prototype.hasOwnProperty.call(e,n)&&r(t,e,n);return s(t,e),t},o=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0}),t.Manager=void 0;const i=n(679),u=n(312),l=a(n(514)),c=n(149),h=n(159),d=n(260),p=o(n(227)).default("socket.io-client:manager");class f extends d.Emitter{constructor(e,t){var n;super(),this.nsps={},this.subs=[],e&&"object"==typeof e&&(t=e,e=void 0),(t=t||{}).path=t.path||"/socket.io",this.opts=t,i.installTimerFunctions(this,t),this.reconnection(!1!==t.reconnection),this.reconnectionAttempts(t.reconnectionAttempts||1/0),this.reconnectionDelay(t.reconnectionDelay||1e3),this.reconnectionDelayMax(t.reconnectionDelayMax||5e3),this.randomizationFactor(null!==(n=t.randomizationFactor)&&void 0!==n?n:.5),this.backoff=new h.Backoff({min:this.reconnectionDelay(),max:this.reconnectionDelayMax(),jitter:this.randomizationFactor()}),this.timeout(null==t.timeout?2e4:t.timeout),this._readyState="closed",this.uri=e;const r=t.parser||l;this.encoder=new r.Encoder,this.decoder=new r.Decoder,this._autoConnect=!1!==t.autoConnect,this._autoConnect&&this.open()}reconnection(e){return arguments.length?(this._reconnection=!!e,this):this._reconnection}reconnectionAttempts(e){return void 0===e?this._reconnectionAttempts:(this._reconnectionAttempts=e,this)}reconnectionDelay(e){var t;return void 0===e?this._reconnectionDelay:(this._reconnectionDelay=e,null===(t=this.backoff)||void 0===t||t.setMin(e),this)}randomizationFactor(e){var t;return void 0===e?this._randomizationFactor:(this._randomizationFactor=e,null===(t=this.backoff)||void 0===t||t.setJitter(e),this)}reconnectionDelayMax(e){var t;return void 0===e?this._reconnectionDelayMax:(this._reconnectionDelayMax=e,null===(t=this.backoff)||void 0===t||t.setMax(e),this)}timeout(e){return arguments.length?(this._timeout=e,this):this._timeout}maybeReconnectOnOpen(){!this._reconnecting&&this._reconnection&&0===this.backoff.attempts&&this.reconnect()}open(e){if(p("readyState %s",this._readyState),~this._readyState.indexOf("open"))return this;p("opening %s",this.uri),this.engine=new i.Socket(this.uri,this.opts);const t=this.engine,n=this;this._readyState="opening",this.skipReconnect=!1;const r=c.on(t,"open",(function(){n.onopen(),e&&e()})),s=t=>{p("error"),this.cleanup(),this._readyState="closed",this.emitReserved("error",t),e?e(t):this.maybeReconnectOnOpen()},a=c.on(t,"error",s);if(!1!==this._timeout){const e=this._timeout;p("connect attempt will timeout after %d",e);const n=this.setTimeoutFn((()=>{p("connect attempt timed out after %d",e),r(),s(new Error("timeout")),t.close()}),e);this.opts.autoUnref&&n.unref(),this.subs.push((()=>{this.clearTimeoutFn(n)}))}return this.subs.push(r),this.subs.push(a),this}connect(e){return this.open(e)}onopen(){p("open"),this.cleanup(),this._readyState="open",this.emitReserved("open");const e=this.engine;this.subs.push(c.on(e,"ping",this.onping.bind(this)),c.on(e,"data",this.ondata.bind(this)),c.on(e,"error",this.onerror.bind(this)),c.on(e,"close",this.onclose.bind(this)),c.on(this.decoder,"decoded",this.ondecoded.bind(this)))}onping(){this.emitReserved("ping")}ondata(e){try{this.decoder.add(e)}catch(e){this.onclose("parse error",e)}}ondecoded(e){i.nextTick((()=>{this.emitReserved("packet",e)}),this.setTimeoutFn)}onerror(e){p("error",e),this.emitReserved("error",e)}socket(e,t){let n=this.nsps[e];return n?this._autoConnect&&!n.active&&n.connect():(n=new u.Socket(this,e,t),this.nsps[e]=n),n}_destroy(e){const t=Object.keys(this.nsps);for(const e of t)if(this.nsps[e].active)return void p("socket %s is still active, skipping close",e);this._close()}_packet(e){p("writing packet %j",e);const t=this.encoder.encode(e);for(let n=0;n<t.length;n++)this.engine.write(t[n],e.options)}cleanup(){p("cleanup"),this.subs.forEach((e=>e())),this.subs.length=0,this.decoder.destroy()}_close(){p("disconnect"),this.skipReconnect=!0,this._reconnecting=!1,this.onclose("forced close"),this.engine&&this.engine.close()}disconnect(){return this._close()}onclose(e,t){p("closed due to %s",e),this.cleanup(),this.backoff.reset(),this._readyState="closed",this.emitReserved("close",e,t),this._reconnection&&!this.skipReconnect&&this.reconnect()}reconnect(){if(this._reconnecting||this.skipReconnect)return this;const e=this;if(this.backoff.attempts>=this._reconnectionAttempts)p("reconnect failed"),this.backoff.reset(),this.emitReserved("reconnect_failed"),this._reconnecting=!1;else{const t=this.backoff.duration();p("will wait %dms before reconnect attempt",t),this._reconnecting=!0;const n=this.setTimeoutFn((()=>{e.skipReconnect||(p("attempting reconnect"),this.emitReserved("reconnect_attempt",e.backoff.attempts),e.skipReconnect||e.open((t=>{t?(p("reconnect attempt error"),e._reconnecting=!1,e.reconnect(),this.emitReserved("reconnect_error",t)):(p("reconnect success"),e.onreconnect())})))}),t);this.opts.autoUnref&&n.unref(),this.subs.push((()=>{this.clearTimeoutFn(n)}))}}onreconnect(){const e=this.backoff.attempts;this._reconnecting=!1,this.backoff.reset(),this.emitReserved("reconnect",e)}}t.Manager=f},149:(e,t)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.on=void 0,t.on=function(e,t,n){return e.on(t,n),function(){e.off(t,n)}}},312:function(e,t,n){"use strict";var r=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0}),t.Socket=void 0;const s=n(514),a=n(149),o=n(260),i=r(n(227)).default("socket.io-client:socket"),u=Object.freeze({connect:1,connect_error:1,disconnect:1,disconnecting:1,newListener:1,removeListener:1});class l extends o.Emitter{constructor(e,t,n){super(),this.connected=!1,this.recovered=!1,this.receiveBuffer=[],this.sendBuffer=[],this._queue=[],this._queueSeq=0,this.ids=0,this.acks={},this.flags={},this.io=e,this.nsp=t,n&&n.auth&&(this.auth=n.auth),this._opts=Object.assign({},n),this.io._autoConnect&&this.open()}get disconnected(){return!this.connected}subEvents(){if(this.subs)return;const e=this.io;this.subs=[a.on(e,"open",this.onopen.bind(this)),a.on(e,"packet",this.onpacket.bind(this)),a.on(e,"error",this.onerror.bind(this)),a.on(e,"close",this.onclose.bind(this))]}get active(){return!!this.subs}connect(){return this.connected||(this.subEvents(),this.io._reconnecting||this.io.open(),"open"===this.io._readyState&&this.onopen()),this}open(){return this.connect()}send(...e){return e.unshift("message"),this.emit.apply(this,e),this}emit(e,...t){if(u.hasOwnProperty(e))throw new Error('"'+e.toString()+'" is a reserved event name');if(t.unshift(e),this._opts.retries&&!this.flags.fromQueue&&!this.flags.volatile)return this._addToQueue(t),this;const n={type:s.PacketType.EVENT,data:t,options:{}};if(n.options.compress=!1!==this.flags.compress,"function"==typeof t[t.length-1]){const e=this.ids++;i("emitting packet with ack id %d",e);const r=t.pop();this._registerAckCallback(e,r),n.id=e}const r=this.io.engine&&this.io.engine.transport&&this.io.engine.transport.writable;return!this.flags.volatile||r&&this.connected?this.connected?(this.notifyOutgoingListeners(n),this.packet(n)):this.sendBuffer.push(n):i("discard packet as the transport is not currently writable"),this.flags={},this}_registerAckCallback(e,t){var n;const r=null!==(n=this.flags.timeout)&&void 0!==n?n:this._opts.ackTimeout;if(void 0===r)return void(this.acks[e]=t);const s=this.io.setTimeoutFn((()=>{delete this.acks[e];for(let t=0;t<this.sendBuffer.length;t++)this.sendBuffer[t].id===e&&(i("removing packet with ack id %d from the buffer",e),this.sendBuffer.splice(t,1));i("event with ack id %d has timed out after %d ms",e,r),t.call(this,new Error("operation has timed out"))}),r);this.acks[e]=(...e)=>{this.io.clearTimeoutFn(s),t.apply(this,[null,...e])}}emitWithAck(e,...t){const n=void 0!==this.flags.timeout||void 0!==this._opts.ackTimeout;return new Promise(((r,s)=>{t.push(((e,t)=>n?e?s(e):r(t):r(e))),this.emit(e,...t)}))}_addToQueue(e){let t;"function"==typeof e[e.length-1]&&(t=e.pop());const n={id:this._queueSeq++,tryCount:0,pending:!1,args:e,flags:Object.assign({fromQueue:!0},this.flags)};e.push(((e,...r)=>{if(n===this._queue[0])return null!==e?n.tryCount>this._opts.retries&&(i("packet [%d] is discarded after %d tries",n.id,n.tryCount),this._queue.shift(),t&&t(e)):(i("packet [%d] was successfully sent",n.id),this._queue.shift(),t&&t(null,...r)),n.pending=!1,this._drainQueue()})),this._queue.push(n),this._drainQueue()}_drainQueue(e=!1){if(i("draining queue"),!this.connected||0===this._queue.length)return;const t=this._queue[0];!t.pending||e?(t.pending=!0,t.tryCount++,i("sending packet [%d] (try n°%d)",t.id,t.tryCount),this.flags=t.flags,this.emit.apply(this,t.args)):i("packet [%d] has already been sent and is waiting for an ack",t.id)}packet(e){e.nsp=this.nsp,this.io._packet(e)}onopen(){i("transport is open - connecting"),"function"==typeof this.auth?this.auth((e=>{this._sendConnectPacket(e)})):this._sendConnectPacket(this.auth)}_sendConnectPacket(e){this.packet({type:s.PacketType.CONNECT,data:this._pid?Object.assign({pid:this._pid,offset:this._lastOffset},e):e})}onerror(e){this.connected||this.emitReserved("connect_error",e)}onclose(e,t){i("close (%s)",e),this.connected=!1,delete this.id,this.emitReserved("disconnect",e,t)}onpacket(e){if(e.nsp===this.nsp)switch(e.type){case s.PacketType.CONNECT:e.data&&e.data.sid?this.onconnect(e.data.sid,e.data.pid):this.emitReserved("connect_error",new Error("It seems you are trying to reach a Socket.IO server in v2.x with a v3.x client, but they are not compatible (more information here: https://socket.io/docs/v3/migrating-from-2-x-to-3-0/)"));break;case s.PacketType.EVENT:case s.PacketType.BINARY_EVENT:this.onevent(e);break;case s.PacketType.ACK:case s.PacketType.BINARY_ACK:this.onack(e);break;case s.PacketType.DISCONNECT:this.ondisconnect();break;case s.PacketType.CONNECT_ERROR:this.destroy();const t=new Error(e.data.message);t.data=e.data.data,this.emitReserved("connect_error",t)}}onevent(e){const t=e.data||[];i("emitting event %j",t),null!=e.id&&(i("attaching ack callback to event"),t.push(this.ack(e.id))),this.connected?this.emitEvent(t):this.receiveBuffer.push(Object.freeze(t))}emitEvent(e){if(this._anyListeners&&this._anyListeners.length){const t=this._anyListeners.slice();for(const n of t)n.apply(this,e)}super.emit.apply(this,e),this._pid&&e.length&&"string"==typeof e[e.length-1]&&(this._lastOffset=e[e.length-1])}ack(e){const t=this;let n=!1;return function(...r){n||(n=!0,i("sending ack %j",r),t.packet({type:s.PacketType.ACK,id:e,data:r}))}}onack(e){const t=this.acks[e.id];"function"==typeof t?(i("calling ack %s with %j",e.id,e.data),t.apply(this,e.data),delete this.acks[e.id]):i("bad ack %s",e.id)}onconnect(e,t){i("socket connected with id %s",e),this.id=e,this.recovered=t&&this._pid===t,this._pid=t,this.connected=!0,this.emitBuffered(),this.emitReserved("connect"),this._drainQueue(!0)}emitBuffered(){this.receiveBuffer.forEach((e=>this.emitEvent(e))),this.receiveBuffer=[],this.sendBuffer.forEach((e=>{this.notifyOutgoingListeners(e),this.packet(e)})),this.sendBuffer=[]}ondisconnect(){i("server disconnect (%s)",this.nsp),this.destroy(),this.onclose("io server disconnect")}destroy(){this.subs&&(this.subs.forEach((e=>e())),this.subs=void 0),this.io._destroy(this)}disconnect(){return this.connected&&(i("performing disconnect (%s)",this.nsp),this.packet({type:s.PacketType.DISCONNECT})),this.destroy(),this.connected&&this.onclose("io client disconnect"),this}close(){return this.disconnect()}compress(e){return this.flags.compress=e,this}get volatile(){return this.flags.volatile=!0,this}timeout(e){return this.flags.timeout=e,this}onAny(e){return this._anyListeners=this._anyListeners||[],this._anyListeners.push(e),this}prependAny(e){return this._anyListeners=this._anyListeners||[],this._anyListeners.unshift(e),this}offAny(e){if(!this._anyListeners)return this;if(e){const t=this._anyListeners;for(let n=0;n<t.length;n++)if(e===t[n])return t.splice(n,1),this}else this._anyListeners=[];return this}listenersAny(){return this._anyListeners||[]}onAnyOutgoing(e){return this._anyOutgoingListeners=this._anyOutgoingListeners||[],this._anyOutgoingListeners.push(e),this}prependAnyOutgoing(e){return this._anyOutgoingListeners=this._anyOutgoingListeners||[],this._anyOutgoingListeners.unshift(e),this}offAnyOutgoing(e){if(!this._anyOutgoingListeners)return this;if(e){const t=this._anyOutgoingListeners;for(let n=0;n<t.length;n++)if(e===t[n])return t.splice(n,1),this}else this._anyOutgoingListeners=[];return this}listenersAnyOutgoing(){return this._anyOutgoingListeners||[]}notifyOutgoingListeners(e){if(this._anyOutgoingListeners&&this._anyOutgoingListeners.length){const t=this._anyOutgoingListeners.slice();for(const n of t)n.apply(this,e.data)}}}t.Socket=l},84:function(e,t,n){"use strict";var r=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0}),t.url=void 0;const s=n(679),a=r(n(227)).default("socket.io-client:url");t.url=function(e,t="",n){let r=e;n=n||"undefined"!=typeof location&&location,null==e&&(e=n.protocol+"//"+n.host),"string"==typeof e&&("/"===e.charAt(0)&&(e="/"===e.charAt(1)?n.protocol+e:n.host+e),/^(https?|wss?):\/\//.test(e)||(a("protocol-less url %s",e),e=void 0!==n?n.protocol+"//"+e:"https://"+e),a("parse %s",e),r=s.parse(e)),r.port||(/^(http|ws)$/.test(r.protocol)?r.port="80":/^(http|ws)s$/.test(r.protocol)&&(r.port="443")),r.path=r.path||"/";const o=-1!==r.host.indexOf(":")?"["+r.host+"]":r.host;return r.id=r.protocol+"://"+o+":"+r.port+t,r.href=r.protocol+"://"+o+(n&&n.port===r.port?"":":"+r.port),r}},880:(e,t,n)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.reconstructPacket=t.deconstructPacket=void 0;const r=n(665);function s(e,t){if(!e)return e;if((0,r.isBinary)(e)){const n={_placeholder:!0,num:t.length};return t.push(e),n}if(Array.isArray(e)){const n=new Array(e.length);for(let r=0;r<e.length;r++)n[r]=s(e[r],t);return n}if("object"==typeof e&&!(e instanceof Date)){const n={};for(const r in e)Object.prototype.hasOwnProperty.call(e,r)&&(n[r]=s(e[r],t));return n}return e}function a(e,t){if(!e)return e;if(e&&!0===e._placeholder){if("number"==typeof e.num&&e.num>=0&&e.num<t.length)return t[e.num];throw new Error("illegal attachments")}if(Array.isArray(e))for(let n=0;n<e.length;n++)e[n]=a(e[n],t);else if("object"==typeof e)for(const n in e)Object.prototype.hasOwnProperty.call(e,n)&&(e[n]=a(e[n],t));return e}t.deconstructPacket=function(e){const t=[],n=e.data,r=e;return r.data=s(n,t),r.attachments=t.length,{packet:r,buffers:t}},t.reconstructPacket=function(e,t){return e.data=a(e.data,t),delete e.attachments,e}},514:(e,t,n)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.Decoder=t.Encoder=t.PacketType=t.protocol=void 0;const r=n(260),s=n(880),a=n(665),o=(0,n(227).default)("socket.io-parser"),i=["connect","connect_error","disconnect","disconnecting","newListener","removeListener"];var u;function l(e){return"[object Object]"===Object.prototype.toString.call(e)}t.protocol=5,function(e){e[e.CONNECT=0]="CONNECT",e[e.DISCONNECT=1]="DISCONNECT",e[e.EVENT=2]="EVENT",e[e.ACK=3]="ACK",e[e.CONNECT_ERROR=4]="CONNECT_ERROR",e[e.BINARY_EVENT=5]="BINARY_EVENT",e[e.BINARY_ACK=6]="BINARY_ACK"}(u=t.PacketType||(t.PacketType={})),t.Encoder=class{constructor(e){this.replacer=e}encode(e){return o("encoding packet %j",e),e.type!==u.EVENT&&e.type!==u.ACK||!(0,a.hasBinary)(e)?[this.encodeAsString(e)]:this.encodeAsBinary({type:e.type===u.EVENT?u.BINARY_EVENT:u.BINARY_ACK,nsp:e.nsp,data:e.data,id:e.id})}encodeAsString(e){let t=""+e.type;return e.type!==u.BINARY_EVENT&&e.type!==u.BINARY_ACK||(t+=e.attachments+"-"),e.nsp&&"/"!==e.nsp&&(t+=e.nsp+","),null!=e.id&&(t+=e.id),null!=e.data&&(t+=JSON.stringify(e.data,this.replacer)),o("encoded %j as %s",e,t),t}encodeAsBinary(e){const t=(0,s.deconstructPacket)(e),n=this.encodeAsString(t.packet),r=t.buffers;return r.unshift(n),r}};class c extends r.Emitter{constructor(e){super(),this.reviver=e}add(e){let t;if("string"==typeof e){if(this.reconstructor)throw new Error("got plaintext data when reconstructing a packet");t=this.decodeString(e);const n=t.type===u.BINARY_EVENT;n||t.type===u.BINARY_ACK?(t.type=n?u.EVENT:u.ACK,this.reconstructor=new h(t),0===t.attachments&&super.emitReserved("decoded",t)):super.emitReserved("decoded",t)}else{if(!(0,a.isBinary)(e)&&!e.base64)throw new Error("Unknown type: "+e);if(!this.reconstructor)throw new Error("got binary data when not reconstructing a packet");t=this.reconstructor.takeBinaryData(e),t&&(this.reconstructor=null,super.emitReserved("decoded",t))}}decodeString(e){let t=0;const n={type:Number(e.charAt(0))};if(void 0===u[n.type])throw new Error("unknown packet type "+n.type);if(n.type===u.BINARY_EVENT||n.type===u.BINARY_ACK){const r=t+1;for(;"-"!==e.charAt(++t)&&t!=e.length;);const s=e.substring(r,t);if(s!=Number(s)||"-"!==e.charAt(t))throw new Error("Illegal attachments");n.attachments=Number(s)}if("/"===e.charAt(t+1)){const r=t+1;for(;++t&&","!==e.charAt(t)&&t!==e.length;);n.nsp=e.substring(r,t)}else n.nsp="/";const r=e.charAt(t+1);if(""!==r&&Number(r)==r){const r=t+1;for(;++t;){const n=e.charAt(t);if(null==n||Number(n)!=n){--t;break}if(t===e.length)break}n.id=Number(e.substring(r,t+1))}if(e.charAt(++t)){const r=this.tryParse(e.substr(t));if(!c.isPayloadValid(n.type,r))throw new Error("invalid payload");n.data=r}return o("decoded %s as %j",e,n),n}tryParse(e){try{return JSON.parse(e,this.reviver)}catch(e){return!1}}static isPayloadValid(e,t){switch(e){case u.CONNECT:return l(t);case u.DISCONNECT:return void 0===t;case u.CONNECT_ERROR:return"string"==typeof t||l(t);case u.EVENT:case u.BINARY_EVENT:return Array.isArray(t)&&("number"==typeof t[0]||"string"==typeof t[0]&&-1===i.indexOf(t[0]));case u.ACK:case u.BINARY_ACK:return Array.isArray(t)}}destroy(){this.reconstructor&&(this.reconstructor.finishedReconstruction(),this.reconstructor=null)}}t.Decoder=c;class h{constructor(e){this.packet=e,this.buffers=[],this.reconPack=e}takeBinaryData(e){if(this.buffers.push(e),this.buffers.length===this.reconPack.attachments){const e=(0,s.reconstructPacket)(this.reconPack,this.buffers);return this.finishedReconstruction(),e}return null}finishedReconstruction(){this.reconPack=null,this.buffers=[]}}},665:(e,t)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.hasBinary=t.isBinary=void 0;const n="function"==typeof ArrayBuffer,r=Object.prototype.toString,s="function"==typeof Blob||"undefined"!=typeof Blob&&"[object BlobConstructor]"===r.call(Blob),a="function"==typeof File||"undefined"!=typeof File&&"[object FileConstructor]"===r.call(File);function o(e){return n&&(e instanceof ArrayBuffer||(e=>"function"==typeof ArrayBuffer.isView?ArrayBuffer.isView(e):e.buffer instanceof ArrayBuffer)(e))||s&&e instanceof Blob||a&&e instanceof File}t.isBinary=o,t.hasBinary=function e(t,n){if(!t||"object"!=typeof t)return!1;if(Array.isArray(t)){for(let n=0,r=t.length;n<r;n++)if(e(t[n]))return!0;return!1}if(o(t))return!0;if(t.toJSON&&"function"==typeof t.toJSON&&1===arguments.length)return e(t.toJSON(),!0);for(const n in t)if(Object.prototype.hasOwnProperty.call(t,n)&&e(t[n]))return!0;return!1}},260:(e,t,n)=>{"use strict";function r(e){if(e)return function(e){for(var t in r.prototype)e[t]=r.prototype[t];return e}(e)}n.r(t),n.d(t,{Emitter:()=>r}),r.prototype.on=r.prototype.addEventListener=function(e,t){return this._callbacks=this._callbacks||{},(this._callbacks["$"+e]=this._callbacks["$"+e]||[]).push(t),this},r.prototype.once=function(e,t){function n(){this.off(e,n),t.apply(this,arguments)}return n.fn=t,this.on(e,n),this},r.prototype.off=r.prototype.removeListener=r.prototype.removeAllListeners=r.prototype.removeEventListener=function(e,t){if(this._callbacks=this._callbacks||{},0==arguments.length)return this._callbacks={},this;var n,r=this._callbacks["$"+e];if(!r)return this;if(1==arguments.length)return delete this._callbacks["$"+e],this;for(var s=0;s<r.length;s++)if((n=r[s])===t||n.fn===t){r.splice(s,1);break}return 0===r.length&&delete this._callbacks["$"+e],this},r.prototype.emit=function(e){this._callbacks=this._callbacks||{};for(var t=new Array(arguments.length-1),n=this._callbacks["$"+e],r=1;r<arguments.length;r++)t[r-1]=arguments[r];if(n){r=0;for(var s=(n=n.slice(0)).length;r<s;++r)n[r].apply(this,t)}return this},r.prototype.emitReserved=r.prototype.emit,r.prototype.listeners=function(e){return this._callbacks=this._callbacks||{},this._callbacks["$"+e]||[]},r.prototype.hasListeners=function(e){return!!this.listeners(e).length}}},t={};function n(r){var s=t[r];if(void 0!==s)return s.exports;var a=t[r]={id:r,loaded:!1,exports:{}};return e[r].call(a.exports,a,a.exports,n),a.loaded=!0,a.exports}n.amdD=function(){throw new Error("define cannot be used indirect")},n.amdO={},n.n=e=>{var t=e&&e.__esModule?()=>e.default:()=>e;return n.d(t,{a:t}),t},n.d=(e,t)=>{for(var r in t)n.o(t,r)&&!n.o(e,r)&&Object.defineProperty(e,r,{enumerable:!0,get:t[r]})},n.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(e){if("object"==typeof window)return window}}(),n.o=(e,t)=>Object.prototype.hasOwnProperty.call(e,t),n.r=e=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},n.nmd=e=>(e.paths=[],e.children||(e.children=[]),e),(()=>{const{io:e}=n(46),{Camera:t}=n(282),{PoseDetector:r}=n(782),s=document.getElementsByTagName("canvas")[0],a=document.getElementById("lbl-state"),o=(document.getElementById("btn-start"),document.getElementById("btn-stop"),document.getElementById("cbx-autostart")),i=document.getElementById("camera-select"),u=document.getElementById("btn-camref"),l=document.getElementsByTagName("video")[0],c=document.getElementById("txt-ip"),h=(document.getElementById("ip-select"),document.getElementById("btn-apply")),d=document.getElementById("btn-cancel"),p=document.getElementById("btn-reset"),f=document.getElementById("lbl-put-state");var m;const g=l.clientWidth;console.log(g),a.innerHTML="<i>Loading Camera...</i>";const y=new t,x=new r(!0,g);a.innerHTML="<i>Loading Socket...</i>";const b=e();a.innerHTML="<i>Loading...</i>";const v={id:-1,url:"",cameraName:"",autostart:!1,confidenceThreshold:.3,closeOnDisconnect:!0};let w=v,k={};var S,C,I=!0;async function T(e,t){return await fetch(e,{method:"PUT",headers:{"Content-type":"application/json"},body:JSON.stringify(t)})}function $(){f.classList.add("d-none")}function N(e,t){f.innerHTML=e,m&&clearTimeout(m),f.classList.remove("d-none"),m=setTimeout($,t)}function E(){let e=!1;"autostart"in k&&(e=!0,w.autostart=k.autostart,o.checked=w.autostart),"cameraName"in k&&(e=!0,w.cameraName=k.cameraName,""!=k.cameraName?(i.value=k.cameraID,I&&y.getCameraStream(i.value).then((e=>{l.srcObject=e,R()}))):l.srcObject=void 0),"url"in k&&(e=!0,w.url=k.url,c.value=w.url)}function R(){let e=l.getBoundingClientRect();s.width=e.width,s.height=e.height,x.width=e.width}function _(e){return new Promise((t=>setTimeout(t,e)))}async function A(){!async function(e){let t=s.getContext("2d");t.clearRect(0,0,s.width,s.height),Object.keys(e).forEach((n=>{let r=n.split("_");"right"==r[0]?t.fillStyle="red":"left"==r[0]?t.fillStyle="green":t.fillStyle="blue";let s=e[n];t.beginPath(),t.arc(s.x,s.y,5,0,2*Math.PI),t.fill()}))}(await x.getFilteredPose(l,w.confidenceThreshold)),async function(e){}()}h.onclick=()=>{try{E(),T("config.json",w).then((e=>{200===e.status?N("Successfully Applied Settings",1e3):(console.log(e),N("Failed to Apply Settings",5e3))}))}catch(e){console.error(e),N("Failed to Apply Settings",5e3)}},p.onclick=()=>{try{k=v,E()&&T("config.json",w).then((e=>{200===e.status?N("Successfully Reset Settings",1e3):(console.log(e),N("Failed to Reset Settings",5e3))}))}catch(e){console.error(e),N("Failed to Reset Settings",5e3)}},d.onclick=()=>{k={},o.checked=w.autostart,y.getCameraIDByName(w.cameraName).then((e=>{i.value=e})),c.value=w.url},y.updateCameraSelector(i),u.onclick=()=>{u.disabled=!0;let e=i.value;y.updateCameraSelector(i).then((()=>{i.value=e,u.disabled=!1}))},i.onchange=()=>{y.getCameraNameByID(i.value).then((e=>{""===e?(y.updateCameraSelector(i),i.value="",console.log("Invalid Camera Selected")):(k.cameraName=e,k.cameraID=i.value)}))},o.onchange=()=>{k.autostart=o.checked},c.onchange=()=>{k.url=c.value},b.on("disconnect",(()=>{console.log("disconnected")})),R(),window.addEventListener("resize",(S=R,250,!1,function(){var e=this,t=arguments;clearTimeout(C),C=setTimeout((function(){C=null,S.apply(e,t)}),250)})),a.innerHTML="<i>Getting Config...</i>",async function(){var e;try{e=await fetch("config.json")}catch(e){return console.error(e),void b.emit("initialized","no-config-404")}let t=await e.json(),n=t.status;if("ok"!=n)console.log(`Error: ${n}`),a.innerHTML=`Loaded Error/Status:<br>${n}`;else{a.innerHTML="Loaded Config, reading...",w=t;let e=await y.getCameraIDByName(t.cameraName);i.value=e,c.value=t.url,o.checked=t.autostart,t.autostart&&(a.innerHTML="Autostarting...",l.srcObject=await y.getCameraStream(e),await x.createDetector(),async function(){let e,t,n;for(I=!0,R(),s.classList.remove("d-none");I;)e=startInferenceTime=(performance||Date).now(),A(),t=startInferenceTime=(performance||Date).now(),n=t-e,n<16.66&&await _(16.66-n)}()),a.innerHTML="Loaded!"}switch(N("Connected To Server",1e3),n){case"ok":b.emit("initialized","successful");break;case"no-config":b.emit("initialized","no-config")}}()})()})();